/*
 * TODO ( 2018-06-19 )
 *  1) CLOB 컬럼에 REPlace() 시 오류.
 *  2) BLOB 은 RAWTOHEX( UTL_RAW.cast_to_raw( ) ) 로 내리가 64K 테스트 해볼것, 아마 32000까지 가능할듯
 *  3) LONG / LONG RAW는 하지말자. 
 *
 */

SET SERVEROUTPUT on;
SET TIMING off;
SET FEEDBACK off;
SET VERIFY off;
SET LINESIZE 32767;
SET LONG 32000;
SET LONGCHUNKSIZE 32000;
SET ARRAYSIZE 1000;
SET TRIMSPOOL ON;
SET TIMING OFF;

--undefine TABLE_NAME;
define TABLE_NAME=&&1

spool &&TABLE_NAME..sql
EXEC DBMS_OUTPUT.ENABLE(32768);

EXEC DBMS_OUTPUT.PUT_LINE('SET NEWPAGE 0;');
EXEC DBMS_OUTPUT.PUT_LINE('SET SPACE 0;');
EXEC DBMS_OUTPUT.PUT_LINE('SET LINESIZE 32767;');
EXEC DBMS_OUTPUT.PUT_LINE('SET LONG 32000;');
EXEC DBMS_OUTPUT.PUT_LINE('SET LONGCHUNKSIZE 32000;');
EXEC DBMS_OUTPUT.PUT_LINE('SET ARRAYSIZE 1000;');
EXEC DBMS_OUTPUT.PUT_LINE('SET PAGESIZE 0;');
EXEC DBMS_OUTPUT.PUT_LINE('SET ECHO OFF;');
EXEC DBMS_OUTPUT.PUT_LINE('SET FEEDBACK OFF;');
EXEC DBMS_OUTPUT.PUT_LINE('SET HEADING OFF;');
EXEC DBMS_OUTPUT.PUT_LINE('SET TERM OFF;');
EXEC DBMS_OUTPUT.PUT_LINE('SET TRIMSPOOL ON;');
EXEC DBMS_OUTPUT.PUT_LINE('SET TIMING OFF;');
EXEC DBMS_OUTPUT.PUT_LINE('SET RECSEP OFF;');
EXEC DBMS_OUTPUT.PUT_LINE('--SET RECSEPCHAR @;');
EXEC DBMS_OUTPUT.PUT_LINE('ALTER SESSION SET NLS_DATE_FORMAT=''YYYY-MM-DD HH24:MI:SS'';');
EXEC DBMS_OUTPUT.PUT_LINE('ALTER SESSION SET NLS_TIMESTAMP_FORMAT=''YYYY-MM-DD HH24:MI:SS.FF6'';');
EXEC DBMS_OUTPUT.PUT_LINE('ALTER SESSION SET NLS_TIMESTAMP_TZ_FORMAT=''YYYY-MM-DD HH24:MI:SS.FF6'';');
EXEC DBMS_OUTPUT.PUT_LINE('spool '||'&&TABLE_NAME..dat' );

DECLARE
column_name   varchar2(80);
last_column   varchar2(80);
first_column  varchar2(80);
sqltext       varchar2(1024);

CURSOR C1( last_column VARCHAR2, first_column VARCHAR2 )
IS
SELECT
       DECODE( COLUMN_NAME
   , last_column, '|| ''","'' || REPlace( ' || COLUMN_NAME || ' ,''"'',''""'')' || '||''"
'''
   , DECODE( COLUMN_NAME
   , first_column, ' ''"'' || REPlace( ' || COLUMN_NAME || ' ,''"'',''""'')'
   , ' || ''","'' || REPlace(' || COLUMN_NAME || ' ,''"'',''""'')'
   )
)
  FROM ALL_TAB_COLUMNS
WHERE OWNER = 'TEST' AND TABLE_NAME = UPPER('&&TABLE_NAME')
ORDER BY COLUMN_ID;

BEGIN

SELECT COLUMN_NAME INTO last_column
  FROM ALL_TAB_COLUMNS
WHERE OWNER = 'TEST' AND TABLE_NAME = UPPER('&&TABLE_NAME')
   AND COLUMN_ID = ( SELECT MAX( COLUMN_ID ) FROM ALL_TAB_COLUMNS WHERE OWNER = 'TEST' AND TABLE_NAME = UPPER('&&TABLE_NAME') );

SELECT COLUMN_NAME INTO first_column
  FROM ALL_TAB_COLUMNS
WHERE OWNER = 'TEST' AND TABLE_NAME = UPPER('&&TABLE_NAME')
   AND COLUMN_ID = ( SELECT MIN( COLUMN_ID ) FROM ALL_TAB_COLUMNS WHERE OWNER = 'TEST' AND TABLE_NAME = UPPER('&&TABLE_NAME') );

dbms_output.put_line( 'SELECT /*+ PARALLEL(2) */ ' );

OPEN C1( last_column, first_column ) ;
LOOP
    FETCH C1 INTO column_name;
    EXIT WHEN C1%NOTFOUND;
    dbms_output.put_line( column_name );
END LOOP;
CLOSE C1;

dbms_output.put_line( ' FROM &&TABLE_NAME; ') ;

END;
/
EXEC DBMS_OUTPUT.PUT_LINE('spool off;');
EXEC DBMS_OUTPUT.PUT_LINE('exit ;');
spool off;
start &&TABLE_NAME..sql
