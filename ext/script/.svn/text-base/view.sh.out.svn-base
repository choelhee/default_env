--##################################################################################################################
--#
--# build viewed tables or base tables of DICTIONARY_SCHEMA
--#
--##################################################################################################################

--##############################################################
--# SYS AUTHORIZATION
--##############################################################

SET SESSION AUTHORIZATION SYS;

Session set.

Elapsed time: 0.16300 ms 


--#####################
--# dual public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS DUAL;

Synonym dropped.

Elapsed time: 0.50800 ms 

CREATE PUBLIC SYNONYM DUAL FOR FIXED_TABLE_SCHEMA.DUAL;

Synonym created.

Elapsed time: 0.41900 ms 

COMMIT;

Commit complete.

Elapsed time: 0.14400 ms 


--##################################################################################################################
--#
--# views for internal use only
--#
--##################################################################################################################

--##############################################################
--# DICTIONARY_SCHEMA.WHOLE_TABLES
--# internal use only
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.WHOLE_TABLES;

View dropped.

Elapsed time: 10.85200 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.WHOLE_TABLES
(
       OWNER_ID
     , SCHEMA_ID
     , TABLE_ID
     , TABLESPACE_ID
     , PHYSICAL_ID
     , TABLE_NAME
     , TABLE_TYPE
     , TABLE_TYPE_ID
     , SYSTEM_VERSION_START_COLUMN_NAME
     , SYSTEM_VERSION_END_COLUMN_NAME
     , SYSTEM_VERSION_RETENTION_PERIOD
     , SELF_REFERENCING_COLUMN_NAME
     , REFERENCE_GENERATION
     , USER_DEFINED_TYPE_OWNER_ID
     , USER_DEFINED_TYPE_SCHEMA_ID
     , USER_DEFINED_TYPE_ID
     , IS_INSERTABLE_INTO
     , IS_TYPED
     , COMMIT_ACTION
     , IS_SET_SUPPLOG_PK
     , CREATED_TIME
     , MODIFIED_TIME
     , COMMENTS
)
AS
SELECT 
       OWNER_ID
     , SCHEMA_ID
     , TABLE_ID
     , TABLESPACE_ID
     , PHYSICAL_ID
     , TABLE_NAME
     , TABLE_TYPE
     , TABLE_TYPE_ID
     , SYSTEM_VERSION_START_COLUMN_NAME
     , SYSTEM_VERSION_END_COLUMN_NAME
     , SYSTEM_VERSION_RETENTION_PERIOD
     , SELF_REFERENCING_COLUMN_NAME
     , REFERENCE_GENERATION
     , USER_DEFINED_TYPE_OWNER_ID
     , USER_DEFINED_TYPE_SCHEMA_ID
     , USER_DEFINED_TYPE_ID
     , IS_INSERTABLE_INTO
     , IS_TYPED
     , COMMIT_ACTION
     , IS_SET_SUPPLOG_PK
     , CREATED_TIME
     , MODIFIED_TIME
     , COMMENTS
  FROM DEFINITION_SCHEMA.TABLES
 WHERE TABLE_TYPE <> 'SEQUENCE' AND TABLE_TYPE <> 'SYNONYM'
 UNION ALL
SELECT 
       ( SELECT OWNER_ID FROM DEFINITION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = 'FIXED_TABLE_SCHEMA' ) -- OWNER_ID
     , ( SELECT SCHEMA_ID FROM DEFINITION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = 'FIXED_TABLE_SCHEMA' ) -- SCHEMA_ID
     , TABLE_ID
     , NULL -- TABLESPACE_ID
     , NULL -- PHYSICAL_ID
     , TABLE_NAME
     , USAGE_TYPE -- TABLE_TYPE
     , DECODE( USAGE_TYPE, 'FIXED TABLE', 7, 8 )  -- TABLE_TYPE_ID  
     , NULL -- SYSTEM_VERSION_START_COLUMN_NAME
     , NULL -- SYSTEM_VERSION_END_COLUMN_NAME
     , NULL -- SYSTEM_VERSION_RETENTION_PERIOD
     , NULL -- SELF_REFERENCING_COLUMN_NAME
     , NULL -- REFERENCE_GENERATION
     , NULL -- USER_DEFINED_TYPE_OWNER_ID
     , NULL -- USER_DEFINED_TYPE_SCHEMA_ID
     , NULL -- USER_DEFINED_TYPE_ID
     , FALSE -- IS_INSERTABLE_INTO
     , FALSE -- IS_TYPED 
     , NULL -- IS_TYPED
     , FALSE -- IS_SET_SUPPLOG_PK
     , NULL -- CREATED_TIME
     , NULL -- MODIFIED_TIME
     , COMMENTS
  FROM FIXED_TABLE_SCHEMA.X$TABLES;

View created.

Elapsed time: 6.94500 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.WHOLE_TABLES
        IS 'internal use only';

Comment created.

Elapsed time: 0.26100 ms 


--#####################
--# comment column
--#####################


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.WHOLE_TABLES TO PUBLIC;

Grant succeeded.

Elapsed time: 0.29500 ms 


COMMIT;

Commit complete.

Elapsed time: 0.47700 ms 


--##############################################################
--# DICTIONARY_SCHEMA.WHOLE_COLUMNS
--# internal use only
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.WHOLE_COLUMNS;

View dropped.

Elapsed time: 6.87000 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.WHOLE_COLUMNS
(
       OWNER_ID
     , SCHEMA_ID
     , TABLE_ID
     , COLUMN_ID
     , COLUMN_NAME
     , PHYSICAL_ORDINAL_POSITION
     , LOGICAL_ORDINAL_POSITION
     , DTD_IDENTIFIER
     , DOMAIN_OWNER_ID
     , DOMAIN_SCHEMA_ID 
     , DOMAIN_ID   
     , COLUMN_DEFAULT  
     , IS_NULLABLE     
     , IS_SELF_REFERENCING 
     , IS_IDENTITY         
     , IDENTITY_GENERATION 
     , IDENTITY_GENERATION_ID 
     , IDENTITY_START     
     , IDENTITY_INCREMENT 
     , IDENTITY_MAXIMUM   
     , IDENTITY_MINIMUM   
     , IDENTITY_CYCLE     
     , IDENTITY_PHYSICAL_ID   
     , IDENTITY_CACHE_SIZE    
     , IS_GENERATED           
     , IS_SYSTEM_VERSION_START  
     , IS_SYSTEM_VERSION_END    
     , SYSTEM_VERSION_TIMESTAMP_GENERATION 
     , IS_UPDATABLE                        
     , IS_UNUSED                           
     , COMMENTS        
)
AS
SELECT 
       OWNER_ID
     , SCHEMA_ID
     , TABLE_ID
     , COLUMN_ID
     , COLUMN_NAME
     , PHYSICAL_ORDINAL_POSITION
     , LOGICAL_ORDINAL_POSITION
     , DTD_IDENTIFIER
     , DOMAIN_OWNER_ID
     , DOMAIN_SCHEMA_ID 
     , DOMAIN_ID   
     , COLUMN_DEFAULT  
     , IS_NULLABLE     
     , IS_SELF_REFERENCING 
     , IS_IDENTITY         
     , IDENTITY_GENERATION 
     , IDENTITY_GENERATION_ID 
     , IDENTITY_START     
     , IDENTITY_INCREMENT 
     , IDENTITY_MAXIMUM   
     , IDENTITY_MINIMUM   
     , IDENTITY_CYCLE     
     , IDENTITY_PHYSICAL_ID   
     , IDENTITY_CACHE_SIZE    
     , IS_GENERATED           
     , IS_SYSTEM_VERSION_START  
     , IS_SYSTEM_VERSION_END    
     , SYSTEM_VERSION_TIMESTAMP_GENERATION 
     , IS_UPDATABLE                        
     , IS_UNUSED      
     , COMMENTS        
  FROM DEFINITION_SCHEMA.COLUMNS
 UNION ALL
SELECT 
       ( SELECT OWNER_ID FROM DEFINITION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = 'FIXED_TABLE_SCHEMA' ) -- OWNER_ID
     , ( SELECT SCHEMA_ID FROM DEFINITION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = 'FIXED_TABLE_SCHEMA' ) -- SCHEMA_ID
     , TABLE_ID
     , COLUMN_ID
     , COLUMN_NAME
     , ORDINAL_POSITION
     , ORDINAL_POSITION
     , COLUMN_ID -- DTD_IDENTIFIER
     , NULL -- DOMAIN_OWNER_ID
     , NULL -- DOMAIN_SCHEMA_ID 
     , NULL -- DOMAIN_ID   
     , NULL -- COLUMN_DEFAULT  
     , FALSE -- IS_NULLABLE     
     , FALSE -- IS_SELF_REFERENCING 
     , FALSE -- IS_IDENTITY         
     , NULL -- IDENTITY_GENERATION 
     , NULL -- IDENTITY_GENERATION_ID 
     , NULL -- IDENTITY_START     
     , NULL -- IDENTITY_INCREMENT 
     , NULL -- IDENTITY_MAXIMUM   
     , NULL -- IDENTITY_MINIMUM   
     , NULL -- IDENTITY_CYCLE     
     , NULL -- IDENTITY_PHYSICAL_ID   
     , NULL -- IDENTITY_CACHE_SIZE    
     , FALSE -- IS_GENERATED           
     , FALSE -- IS_SYSTEM_VERSION_START  
     , FALSE -- IS_SYSTEM_VERSION_END    
     , NULL -- SYSTEM_VERSION_TIMESTAMP_GENERATION 
     , FALSE -- IS_UPDATABLE                        
     , FALSE -- IS_UNUSED                           
     , COMMENTS        
  FROM FIXED_TABLE_SCHEMA.X$COLUMNS
;

View created.

Elapsed time: 6.78500 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.WHOLE_COLUMNS
        IS 'internal use only';

Comment created.

Elapsed time: 0.27000 ms 


--#####################
--# comment column
--#####################


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.WHOLE_COLUMNS TO PUBLIC;

Grant succeeded.

Elapsed time: 0.23900 ms 


COMMIT;

Commit complete.

Elapsed time: 0.52900 ms 


--##############################################################
--# DICTIONARY_SCHEMA.WHOLE_DTDS
--# internal use only
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.WHOLE_DTDS;

View dropped.

Elapsed time: 6.69600 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.WHOLE_DTDS
(
       OBJECT_OWNER_ID
     , OBJECT_SCHEMA_ID
     , OBJECT_ID
     , DTD_IDENTIFIER
     , DATA_TYPE 
     , DATA_TYPE_ID
     , CHARACTER_SET_OWNER_ID
     , CHARACTER_SET_SCHEMA_ID
     , CHARACTER_SET_ID
     , STRING_LENGTH_UNIT
     , STRING_LENGTH_UNIT_ID
     , CHARACTER_MAXIMUM_LENGTH
     , CHARACTER_OCTET_LENGTH
     , COLLATION_OWNER_ID
     , COLLATION_SCHEMA_ID 
     , COLLATION_ID 
     , NUMERIC_PRECISION 
     , NUMERIC_PRECISION_RADIX
     , NUMERIC_SCALE 
     , DECLARED_DATA_TYPE
     , DECLARED_NUMERIC_PRECISION
     , DECLARED_NUMERIC_SCALE
     , DATETIME_PRECISION
     , INTERVAL_TYPE
     , INTERVAL_TYPE_ID
     , INTERVAL_PRECISION
     , USER_DEFINED_TYPE_SCHEMA_NAME
     , USER_DEFINED_TYPE_MODULE_NAME
     , USER_DEFINED_TYPE_NAME
     , SCOPE_OWNER_ID
     , SCOPE_SCHEMA_ID
     , SCOPE_ID
     , ATTR_TYPE_SCHEMA_NAME
     , ATTR_TYPE_TABLE_NAME
     , ATTR_TYPE_COLUMN_NAME
     , MAXIMUM_CARDINALITY
     , PHYSICAL_MAXIMUM_LENGTH
)
AS
SELECT
       OBJECT_OWNER_ID
     , OBJECT_SCHEMA_ID
     , OBJECT_ID
     , DTD_IDENTIFIER
     , CAST( CASE WHEN DATA_TYPE IN ( 'INTERVAL YEAR TO MONTH', 'INTERVAL DAY TO SECOND' )
                       THEN 'INTERVAL ' || INTERVAL_TYPE 
                  WHEN ( DATA_TYPE = 'NUMBER' AND NUMERIC_PRECISION_RADIX = 2 )
                       THEN 'FLOAT'
                  ELSE DATA_TYPE
                  END
             AS VARCHAR(128 OCTETS) ) -- DATA_TYPE
     , DATA_TYPE_ID
     , CHARACTER_SET_OWNER_ID
     , CHARACTER_SET_SCHEMA_ID
     , CHARACTER_SET_ID
     , STRING_LENGTH_UNIT
     , STRING_LENGTH_UNIT_ID
     , CHARACTER_MAXIMUM_LENGTH
     , CHARACTER_OCTET_LENGTH
     , COLLATION_OWNER_ID
     , COLLATION_SCHEMA_ID 
     , COLLATION_ID 
     , NUMERIC_PRECISION 
     , NUMERIC_PRECISION_RADIX
     , CAST( CASE WHEN NUMERIC_SCALE BETWEEN -256 AND 256
                  THEN NUMERIC_SCALE
                  ELSE NULL
                  END 
             AS NUMBER ) 
     , DECLARED_DATA_TYPE
     , DECLARED_NUMERIC_PRECISION
     , DECLARED_NUMERIC_SCALE
     , DATETIME_PRECISION
     , INTERVAL_TYPE
     , INTERVAL_TYPE_ID
     , INTERVAL_PRECISION
     , USER_DEFINED_TYPE_SCHEMA_NAME
     , USER_DEFINED_TYPE_MODULE_NAME
     , USER_DEFINED_TYPE_NAME
     , SCOPE_OWNER_ID
     , SCOPE_SCHEMA_ID
     , SCOPE_ID
     , ATTR_TYPE_SCHEMA_NAME
     , ATTR_TYPE_TABLE_NAME
     , ATTR_TYPE_COLUMN_NAME
     , MAXIMUM_CARDINALITY
     , PHYSICAL_MAXIMUM_LENGTH
  FROM DEFINITION_SCHEMA.DATA_TYPE_DESCRIPTOR
 UNION ALL
SELECT
       ( SELECT OWNER_ID FROM DEFINITION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = 'FIXED_TABLE_SCHEMA' ) -- OBJECT_OWNER_ID
     , ( SELECT SCHEMA_ID FROM DEFINITION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = 'FIXED_TABLE_SCHEMA' ) -- OBJECT_SCHEMA_ID
     , TABLE_ID  -- OBJECT_ID
     , COLUMN_ID -- DTD_IDENTIFIER
     , DATA_TYPE 
     , DATA_TYPE_ID
     , NULL -- CHARACTER_SET_OWNER_ID
     , NULL -- CHARACTER_SET_SCHEMA_ID
     , NULL -- CHARACTER_SET_ID
     , DECODE( DATA_TYPE, 'CHARACTER VARYING', 'OCTETS', NULL ) -- STRING_LENGTH_UNIT
     , DECODE( DATA_TYPE, 'CHARACTER VARYING', 2, NULL ) -- STRING_LENGTH_UNIT_ID
     , DECODE( DATA_TYPE, 'CHARACTER VARYING', 128, NULL ) -- CHARACTER_MAXIMUM_LENGTH
     , DECODE( DATA_TYPE, 'CHARACTER VARYING', 128, NULL ) -- CHARACTER_OCTET_LENGTH
     , NULL -- COLLATION_OWNER_ID
     , NULL -- COLLATION_SCHEMA_ID 
     , NULL -- COLLATION_ID 
     , DECODE( DATA_TYPE, 'NATIVE_SMALLINT', 16, 'NATIVE_INTEGER', 32, 'NATIVE_BIGINT', 64, 'NATIVE_REAL', 24, 'NATIVE_DOUBLE', 53, NULL ) -- NUMERIC_PRECISION 
     , DECODE( DATA_TYPE, 'NATIVE_SMALLINT', 2, 'NATIVE_INTEGER', 2, 'NATIVE_BIGINT', 2, 'NATIVE_REAL', 2, 'NATIVE_DOUBLE', 2, NULL ) -- NUMERIC_PRECISION_RADIX
     , DECODE( DATA_TYPE, 'NATIVE_SMALLINT', 0, 'NATIVE_INTEGER', 0, 'NATIVE_BIGINT', 0, 'NATIVE_REAL', NULL, 'NATIVE_DOUBLE', NULL, NULL ) -- NUMERIC_SCALE 
     , DATA_TYPE -- DECLARED_DATA_TYPE
     , DECODE( DATA_TYPE, 'CHARACTER VARYING', COLUMN_LENGTH, NULL ) -- DECLARED_NUMERIC_PRECISION
     , NULL -- DECLARED_NUMERIC_SCALE
     , DECODE( DATA_TYPE, 'TIMESTAMP WITHOUT TIME ZONE', 6, NULL ) -- DATETIME_PRECISION
     , NULL -- INTERVAL_TYPE
     , NULL -- INTERVAL_TYPE_ID
     , NULL -- INTERVAL_PRECISION
     , NULL -- USER_DEFINED_TYPE_SCHEMA_NAME
     , NULL -- USER_DEFINED_TYPE_MODULE_NAME
     , NULL -- USER_DEFINED_TYPE_NAME
     , NULL -- SCOPE_OWNER_ID
     , NULL -- SCOPE_SCHEMA_ID
     , NULL -- SCOPE_ID
     , NULL -- ATTR_TYPE_SCHEMA_NAME
     , NULL -- ATTR_TYPE_TABLE_NAME
     , NULL -- ATTR_TYPE_COLUMN_NAME
     , NULL -- MAXIMUM_CARDINALITY
     , COLUMN_LENGTH  -- PHYSICAL_MAXIMUM_LENGTH
  FROM FIXED_TABLE_SCHEMA.X$COLUMNS
;

View created.

Elapsed time: 7.14000 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.WHOLE_DTDS
        IS 'internal use only';

Comment created.

Elapsed time: 0.21400 ms 


--#####################
--# comment column
--#####################


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.WHOLE_DTDS TO PUBLIC;

Grant succeeded.

Elapsed time: 0.24200 ms 


COMMIT;

Commit complete.

Elapsed time: 0.54700 ms 


--##################################################################################################################
--#
--# dictionary views for all objects
--#
--##################################################################################################################

--##############################################################
--# DICTIONARY_SCHEMA.DBA_ALL_TABLES
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.DBA_ALL_TABLES;

View dropped.

Elapsed time: 8.42900 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.DBA_ALL_TABLES
(
       OWNER
     , TABLE_SCHEMA 
     , TABLE_NAME 
     , TABLESPACE_NAME
     , CLUSTER_NAME
     , IOT_NAME
     , STATUS
     , PCT_FREE
     , PCT_USED
     , INI_TRANS
     , MAX_TRANS
     , INITIAL_EXTENT
     , NEXT_EXTENT
     , MIN_EXTENTS
     , MAX_EXTENTS
     , PCT_INCREASE
     , FREELISTS
     , FREELIST_GROUPS
     , LOGGING
     , BACKED_UP
     , NUM_ROWS
     , BLOCKS
     , EMPTY_BLOCKS
     , AVG_SPACE
     , CHAIN_CNT
     , AVG_ROW_LEN
     , AVG_SPACE_FREELIST_BLOCKS
     , NUM_FREELIST_BLOCKS
     , DEGREE
     , INSTANCES
     , CACHE
     , TABLE_LOCK
     , SAMPLE_SIZE
     , LAST_ANALYZED
     , PARTITIONED
     , IOT_TYPE
     , OBJECT_ID_TYPE
     , TABLE_TYPE_OWNER
     , TABLE_TYPE
     , TEMPORARY
     , SECONDARY
     , NESTED
     , BUFFER_POOL
     , FLASH_CACHE
     , CELL_FLASH_CACHE
     , ROW_MOVEMENT
     , GLOBAL_STATS
     , USER_STATS
     , DURATION
     , SKIP_CORRUPT
     , MONITORING
     , CLUSTER_OWNER
     , DEPENDENCIES
     , COMPRESSION
     , COMPRESS_FOR
     , DROPPED
     , SEGMENT_CREATED
)
AS
SELECT
       auth.AUTHORIZATION_NAME                -- OWNER
     , sch.SCHEMA_NAME                        -- TABLE_SCHEMA 
     , tab.TABLE_NAME                         -- TABLE_NAME 
     , spc.TABLESPACE_NAME                    -- TABLESPACE_NAME
     , CAST( NULL AS VARCHAR(128 OCTETS) )    -- CLUSTER_NAME
     , CAST( NULL AS VARCHAR(128 OCTETS) )    -- IOT_NAME
     , CAST( NULL AS VARCHAR(32 OCTETS) )     -- STATUS
     , CAST( xtcac.PCTFREE AS NUMBER )        -- PCT_FREE
     , CAST( xtcac.PCTUSED AS NUMBER )        -- PCT_USED
     , CAST( xtcac.INITRANS AS NUMBER )       -- INI_TRANS
     , CAST( xtcac.MAXTRANS AS NUMBER )       -- MAX_TRANS
     , CAST( xseg.INITIAL_EXTENTS AS NUMBER ) -- INITIAL_EXTENT
     , CAST( xseg.NEXT_EXTENTS AS NUMBER )    -- NEXT_EXTENT
     , CAST( xseg.MIN_EXTENTS AS NUMBER )     -- MIN_EXTENTS
     , CAST( xseg.MAX_EXTENTS AS NUMBER )     -- MAX_EXTENTS
     , CAST( NULL AS NUMBER )                 -- PCT_INCREASE
     , CAST( NULL AS NUMBER )                 -- FREELISTS
     , CAST( NULL AS NUMBER )                 -- FREELIST_GROUPS
     , CAST( CASE WHEN xtcac.LOGGING = TRUE 
                  THEN 'YES' 
                  ELSE 'NO' 
                  END 
             AS VARCHAR(3 OCTETS) )           -- LOGGING
     , CAST( NULL AS VARCHAR(1 OCTETS) )      -- BACKED_UP
     , CAST( stat.NUM_ROWS AS NUMBER )         -- NUM_ROWS
     , CAST( xseg.ALLOC_PAGE_COUNT AS NUMBER )-- BLOCKS
     , CAST( NULL AS NUMBER )                 -- EMPTY_BLOCKS
     , CAST( NULL AS NUMBER )                 -- AVG_SPACE
     , CAST( NULL AS NUMBER )                 -- CHAIN_CNT
     , CAST( NULL AS NUMBER )                 -- AVG_ROW_LEN
     , CAST( NULL AS NUMBER )                 -- AVG_SPACE_FREELIST_BLOCKS
     , CAST( NULL AS NUMBER )                 -- NUM_FREELIST_BLOCKS
     , CAST( NULL AS VARCHAR(32 OCTETS) )     -- DEGREE
     , CAST( NULL AS VARCHAR(32 OCTETS) )     -- INSTANCES
     , CAST( NULL AS VARCHAR(1 OCTETS) )      -- CACHE
     , CAST( CASE WHEN tab.TABLE_TYPE IN ('BASE TABLE', 'SYSTEM VERSIONED' )
                  THEN 'ENABLED'
                  ELSE 'DISABLED'
                  END
             AS VARCHAR(32 OCTETS) )          -- TABLE_LOCK
     , CAST( NULL AS NUMBER )                 -- SAMPLE_SIZE
     , CAST( stat.ANALYZED_TIME AS TIMESTAMP ) -- LAST_ANALYZED
     , CAST( 'NO' AS VARCHAR(3 OCTETS) )      -- PARTITIONED
     , CAST( NULL AS VARCHAR(32 OCTETS) )     -- IOT_TYPE
     , CAST( NULL AS VARCHAR(32 OCTETS) )     -- OBJECT_ID_TYPE
     , CAST( NULL AS VARCHAR(128 OCTETS) )    -- TABLE_TYPE_OWNER
     , CAST( NULL AS VARCHAR(128 OCTETS) )    -- TABLE_TYPE
     , CAST( CASE WHEN tab.TABLE_TYPE IN ( 'GLOBAL TEMPORARY', 'LOCAL TEMPORARY' )
                  THEN 'Y'
                  ELSE 'N'
                  END
             AS VARCHAR(1 OCTETS) )           -- TEMPORARY
     , CAST( 'N' AS VARCHAR(1 OCTETS) )       -- SECONDARY
     , CAST( 'NO' AS VARCHAR(3 OCTETS) )      -- NESTED
     , CAST( NULL AS VARCHAR(32 OCTETS) )     -- BUFFER_POOL
     , CAST( 'NONE' AS VARCHAR(32 OCTETS) )   -- FLASH_CACHE
     , CAST( 'NONE' AS VARCHAR(32 OCTETS) )   -- CELL_FLASH_CACHE
     , CAST( NULL AS VARCHAR(32 OCTETS) )     -- ROW_MOVEMENT
     , CAST( NULL AS VARCHAR(3 OCTETS) )      -- GLOBAL_STATS
     , CAST( NULL AS VARCHAR(3 OCTETS) )      -- USER_STATS
     , CAST( NULL AS VARCHAR(32 OCTETS) )     -- DURATION
     , CAST( NULL AS VARCHAR(32 OCTETS) )     -- SKIP_CORRUPT
     , CAST( 'NO' AS VARCHAR(3 OCTETS) )      -- MONITORING
     , CAST( NULL AS VARCHAR(128 OCTETS) )    -- CLUSTER_OWNER
     , CAST( NULL AS VARCHAR(32 OCTETS) )     -- DEPENDENCIES
     , CAST( 'DISABLED' AS VARCHAR(32 OCTETS) )  -- COMPRESSION
     , CAST( NULL AS VARCHAR(32 OCTETS) )     -- COMPRESS_FOR
     , CAST( 'NO' AS VARCHAR(3 OCTETS) )      -- DROPPED
     , CAST( CASE WHEN tab.TABLE_TYPE = 'BASE TABLE'
                  THEN 'YES'
                  ELSE 'NO'
                  END
             AS VARCHAR(3 OCTETS) )           -- SEGMENT_CREATED
  FROM
       DEFINITION_SCHEMA.TABLES           AS tab 
       LEFT OUTER JOIN
       DEFINITION_SCHEMA.STAT_TABLE       AS stat
       ON tab.TABLE_ID = stat.TABLE_ID
     , DEFINITION_SCHEMA.TABLESPACES      AS spc  
     , FIXED_TABLE_SCHEMA.X$TABLE_CACHE   AS xtcac
     , FIXED_TABLE_SCHEMA.X$SEGMENT       AS xseg
     , DEFINITION_SCHEMA.SCHEMATA         AS sch 
     , DEFINITION_SCHEMA.AUTHORIZATIONS   AS auth 
 WHERE
       tab.TABLE_TYPE IN ( 'BASE TABLE', 'GLOBAL TEMPORARY', 'LOCAL TEMPORARY', 'SYSTEM VERSIONED' )
   AND tab.TABLESPACE_ID = spc.TABLESPACE_ID
   AND tab.PHYSICAL_ID   = xtcac.PHYSICAL_ID
   AND tab.PHYSICAL_ID   = xseg.PHYSICAL_ID
   AND tab.SCHEMA_ID     = sch.SCHEMA_ID
   AND tab.OWNER_ID      = auth.AUTH_ID
   AND EXISTS ( SELECT GRANTEE_ID  
                  FROM DEFINITION_SCHEMA.DATABASE_PRIVILEGES pvdba 
                 WHERE pvdba.PRIVILEGE_TYPE IN ( 'ACCESS CONTROL' ) 
                   AND ( pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                 FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS audba 
                                                WHERE audba.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                             ) 
                      -- OR  
                      -- pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                      --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                       )  
               ) 
 ORDER BY 
       tab.SCHEMA_ID
     , tab.TABLE_ID
;

View created.

Elapsed time: 9.74900 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.DBA_ALL_TABLES
        IS 'DBA_ALL_TABLES describes all object tables and relational tables in the database.';

Comment created.

Elapsed time: 0.19800 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_ALL_TABLES.OWNER
        IS 'Owner of the table';

Comment created.

Elapsed time: 0.23200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_ALL_TABLES.TABLE_SCHEMA 
        IS 'Schema of the table';

Comment created.

Elapsed time: 0.23300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_ALL_TABLES.TABLE_NAME 
        IS 'Name of the table';

Comment created.

Elapsed time: 0.21900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_ALL_TABLES.TABLESPACE_NAME
        IS 'Name of the tablespace containing the table';

Comment created.

Elapsed time: 0.21600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_ALL_TABLES.CLUSTER_NAME
        IS 'Name of the cluster';

Comment created.

Elapsed time: 0.29500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_ALL_TABLES.IOT_NAME
        IS 'Name of the index-organized table';

Comment created.

Elapsed time: 0.21500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_ALL_TABLES.STATUS
        IS 'If a previous DROP TABLE operation failed, indicates whether the table is unusable (UNUSABLE) or valid (VALID)';

Comment created.

Elapsed time: 0.21100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_ALL_TABLES.PCT_FREE
        IS 'Minimum percentage of free space in a block';

Comment created.

Elapsed time: 0.21500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_ALL_TABLES.PCT_USED
        IS 'Minimum percentage of used space in a block';

Comment created.

Elapsed time: 0.20900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_ALL_TABLES.INI_TRANS
        IS 'Initial number of transactions';

Comment created.

Elapsed time: 0.20600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_ALL_TABLES.MAX_TRANS
        IS 'Maximum number of transactions';

Comment created.

Elapsed time: 0.20400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_ALL_TABLES.INITIAL_EXTENT
        IS 'Size of the initial extent (in bytes)';

Comment created.

Elapsed time: 0.23500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_ALL_TABLES.NEXT_EXTENT
        IS 'Size of secondary extents (in bytes)';

Comment created.

Elapsed time: 0.20500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_ALL_TABLES.MIN_EXTENTS
        IS 'Minimum number of extents allowed in the segment';

Comment created.

Elapsed time: 0.21100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_ALL_TABLES.MAX_EXTENTS
        IS 'Maximum number of extents allowed in the segment';

Comment created.

Elapsed time: 0.21500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_ALL_TABLES.PCT_INCREASE
        IS 'Percentage increase in extent size';

Comment created.

Elapsed time: 0.20600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_ALL_TABLES.FREELISTS
        IS 'Number of process freelists allocated to the segment';

Comment created.

Elapsed time: 0.20300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_ALL_TABLES.FREELIST_GROUPS
        IS 'Number of freelist groups allocated to the segment';

Comment created.

Elapsed time: 0.20500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_ALL_TABLES.LOGGING
        IS 'Indicates whether or not changes to the table are logged';

Comment created.

Elapsed time: 0.21400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_ALL_TABLES.BACKED_UP
        IS 'Indicates whether the table has been backed up since the last modification (Y) or not (N)';

Comment created.

Elapsed time: 0.20400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_ALL_TABLES.NUM_ROWS
        IS 'Number of rows in the table';

Comment created.

Elapsed time: 0.20300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_ALL_TABLES.BLOCKS
        IS 'Number of used blocks in the table';

Comment created.

Elapsed time: 0.25000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_ALL_TABLES.EMPTY_BLOCKS
        IS 'Number of empty (never used) blocks in the table';

Comment created.

Elapsed time: 0.21200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_ALL_TABLES.AVG_SPACE
        IS 'Average available free space in the table';

Comment created.

Elapsed time: 0.21900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_ALL_TABLES.CHAIN_CNT
        IS 'Number of rows in the table that are chained from one data block to another or that have migrated to a new block, requiring a link to preserve the old rowid';

Comment created.

Elapsed time: 0.20800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_ALL_TABLES.AVG_ROW_LEN
        IS 'Average row length, including row overhead';

Comment created.

Elapsed time: 0.26600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_ALL_TABLES.AVG_SPACE_FREELIST_BLOCKS
        IS 'Average freespace of all blocks on a freelist';

Comment created.

Elapsed time: 0.21000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_ALL_TABLES.NUM_FREELIST_BLOCKS
        IS 'Number of blocks on the freelist';

Comment created.

Elapsed time: 0.21000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_ALL_TABLES.DEGREE
        IS 'Number of threads per instance for scanning the table, or DEFAULT';

Comment created.

Elapsed time: 0.21900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_ALL_TABLES.INSTANCES
        IS 'Number of instances across which the table is to be scanned, or DEFAULT';

Comment created.

Elapsed time: 0.21200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_ALL_TABLES.CACHE
        IS 'Indicates whether the table is to be cached in the buffer cache (Y) or not (N)';

Comment created.

Elapsed time: 0.20700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_ALL_TABLES.TABLE_LOCK
        IS 'Indicates whether table locking is enabled (ENABLED) or disabled (DISABLED)';

Comment created.

Elapsed time: 0.20600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_ALL_TABLES.SAMPLE_SIZE
        IS 'Sample size used in analyzing the table';

Comment created.

Elapsed time: 0.20900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_ALL_TABLES.LAST_ANALYZED
        IS 'Date on which the table was most recently analyzed';

Comment created.

Elapsed time: 0.20500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_ALL_TABLES.PARTITIONED
        IS 'Indicates whether the table is partitioned (YES) or not (NO)';

Comment created.

Elapsed time: 0.20300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_ALL_TABLES.IOT_TYPE
        IS 'If the table is an index-organized table, then IOT_TYPE is IOT, IOT_OVERFLOW, or IOT_MAPPING.';

Comment created.

Elapsed time: 0.22200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_ALL_TABLES.OBJECT_ID_TYPE
        IS 'Indicates whether the object ID (OID) is USER-DEFINED or SYSTEM GENERATED';

Comment created.

Elapsed time: 0.20300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_ALL_TABLES.TABLE_TYPE_OWNER
        IS 'If an object table, owner of the type from which the table is created';

Comment created.

Elapsed time: 0.27700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_ALL_TABLES.TABLE_TYPE
        IS 'If an object table, type of the table';

Comment created.

Elapsed time: 0.21600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_ALL_TABLES.TEMPORARY
        IS 'Indicates whether the table is temporary (Y) or not (N)';

Comment created.

Elapsed time: 0.21200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_ALL_TABLES.SECONDARY
        IS 'Indicates whether the table is a secondary object created by cartridge';

Comment created.

Elapsed time: 0.20800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_ALL_TABLES.NESTED
        IS 'Indicates whether the table is a nested table (YES) or not (NO)';

Comment created.

Elapsed time: 0.20100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_ALL_TABLES.BUFFER_POOL
        IS 'Buffer pool to be used for table blocks';

Comment created.

Elapsed time: 0.22200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_ALL_TABLES.FLASH_CACHE
        IS 'Database Smart Flash Cache hint to be used for table blocks';

Comment created.

Elapsed time: 0.24400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_ALL_TABLES.CELL_FLASH_CACHE
        IS 'Cell flash cache hint to be used for table blocks';

Comment created.

Elapsed time: 0.19700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_ALL_TABLES.ROW_MOVEMENT
        IS 'If a partitioned table, indicates whether row movement is enabled (ENABLED) or disabled (DISABLED)';

Comment created.

Elapsed time: 0.23700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_ALL_TABLES.GLOBAL_STATS
        IS 'For partitioned tables, indicates whether statistics for the table as a whole (global statistics) are accurate (YES)';

Comment created.

Elapsed time: 0.20100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_ALL_TABLES.USER_STATS
        IS 'Indicates whether statistics were entered directly by the user (YES) or not (NO)';

Comment created.

Elapsed time: 0.20000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_ALL_TABLES.DURATION
        IS 'Indicates the duration of a temporary table';

Comment created.

Elapsed time: 0.19400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_ALL_TABLES.SKIP_CORRUPT
        IS 'Indicates whether Database ignores blocks marked corrupt during table and index scans (ENABLED) or raises an error (DISABLED)';

Comment created.

Elapsed time: 0.20500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_ALL_TABLES.MONITORING
        IS 'Indicates whether the table has the MONITORING attribute set (YES) or not (NO)';

Comment created.

Elapsed time: 0.19700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_ALL_TABLES.CLUSTER_OWNER
        IS 'Owner of the cluster, if any';

Comment created.

Elapsed time: 0.19400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_ALL_TABLES.DEPENDENCIES
        IS 'Indicates whether row-level dependency tracking is enabled (ENABLED) or disabled (DISABLED)';

Comment created.

Elapsed time: 0.20600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_ALL_TABLES.COMPRESSION
        IS 'Indicates whether table compression is enabled (ENABLED) or not (DISABLED)';

Comment created.

Elapsed time: 0.19900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_ALL_TABLES.COMPRESS_FOR
        IS 'Default compression for what kind of operations';

Comment created.

Elapsed time: 0.19400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_ALL_TABLES.DROPPED
        IS 'Indicates whether the table has been dropped and is in the recycle bin (YES) or not (NO)';

Comment created.

Elapsed time: 0.19400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_ALL_TABLES.SEGMENT_CREATED
        IS 'Indicates whether the table segment has been created (YES) or not (NO)';

Comment created.

Elapsed time: 0.62600 ms 


--#####################
--# grant view
--#####################

--GRANT SELECT ON TABLE DICTIONARY_SCHEMA.DBA_ALL_TABLES TO DBA;
GRANT SELECT ON TABLE DICTIONARY_SCHEMA.DBA_ALL_TABLES TO PUBLIC;

Grant succeeded.

Elapsed time: 0.17600 ms 


COMMIT;

Commit complete.

Elapsed time: 0.67900 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS DBA_ALL_TABLES;

Synonym dropped.

Elapsed time: 0.11500 ms 

CREATE PUBLIC SYNONYM DBA_ALL_TABLES FOR DICTIONARY_SCHEMA.DBA_ALL_TABLES;

Synonym created.

Elapsed time: 0.12400 ms 

COMMIT;

Commit complete.

Elapsed time: 0.06000 ms 


--##############################################################
--# DICTIONARY_SCHEMA.ALL_ALL_TABLES
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.ALL_ALL_TABLES;

View dropped.

Elapsed time: 6.86900 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.ALL_ALL_TABLES
(
       OWNER
     , TABLE_SCHEMA 
     , TABLE_NAME 
     , TABLESPACE_NAME
     , CLUSTER_NAME
     , IOT_NAME
     , STATUS
     , PCT_FREE
     , PCT_USED
     , INI_TRANS
     , MAX_TRANS
     , INITIAL_EXTENT
     , NEXT_EXTENT
     , MIN_EXTENTS
     , MAX_EXTENTS
     , PCT_INCREASE
     , FREELISTS
     , FREELIST_GROUPS
     , LOGGING
     , BACKED_UP
     , NUM_ROWS
     , BLOCKS
     , EMPTY_BLOCKS
     , AVG_SPACE
     , CHAIN_CNT
     , AVG_ROW_LEN
     , AVG_SPACE_FREELIST_BLOCKS
     , NUM_FREELIST_BLOCKS
     , DEGREE
     , INSTANCES
     , CACHE
     , TABLE_LOCK
     , SAMPLE_SIZE
     , LAST_ANALYZED
     , PARTITIONED
     , IOT_TYPE
     , OBJECT_ID_TYPE
     , TABLE_TYPE_OWNER
     , TABLE_TYPE
     , TEMPORARY
     , SECONDARY
     , NESTED
     , BUFFER_POOL
     , FLASH_CACHE
     , CELL_FLASH_CACHE
     , ROW_MOVEMENT
     , GLOBAL_STATS
     , USER_STATS
     , DURATION
     , SKIP_CORRUPT
     , MONITORING
     , CLUSTER_OWNER
     , DEPENDENCIES
     , COMPRESSION
     , COMPRESS_FOR
     , DROPPED
     , SEGMENT_CREATED
)
AS
SELECT
       auth.AUTHORIZATION_NAME                -- OWNER
     , sch.SCHEMA_NAME                        -- TABLE_SCHEMA 
     , tab.TABLE_NAME                         -- TABLE_NAME 
     , spc.TABLESPACE_NAME                    -- TABLESPACE_NAME
     , CAST( NULL AS VARCHAR(128 OCTETS) )    -- CLUSTER_NAME
     , CAST( NULL AS VARCHAR(128 OCTETS) )    -- IOT_NAME
     , CAST( NULL AS VARCHAR(32 OCTETS) )     -- STATUS
     , CAST( xtcac.PCTFREE AS NUMBER )        -- PCT_FREE
     , CAST( xtcac.PCTUSED AS NUMBER )        -- PCT_USED
     , CAST( xtcac.INITRANS AS NUMBER )       -- INI_TRANS
     , CAST( xtcac.MAXTRANS AS NUMBER )       -- MAX_TRANS
     , CAST( xseg.INITIAL_EXTENTS AS NUMBER ) -- INITIAL_EXTENT
     , CAST( xseg.NEXT_EXTENTS AS NUMBER )    -- NEXT_EXTENT
     , CAST( xseg.MIN_EXTENTS AS NUMBER )     -- MIN_EXTENTS
     , CAST( xseg.MAX_EXTENTS AS NUMBER )     -- MAX_EXTENTS
     , CAST( NULL AS NUMBER )                 -- PCT_INCREASE
     , CAST( NULL AS NUMBER )                 -- FREELISTS
     , CAST( NULL AS NUMBER )                 -- FREELIST_GROUPS
     , CAST( CASE WHEN xtcac.LOGGING = TRUE 
                  THEN 'YES' 
                  ELSE 'NO' 
                  END 
             AS VARCHAR(3 OCTETS) )           -- LOGGING
     , CAST( NULL AS VARCHAR(1 OCTETS) )      -- BACKED_UP
     , CAST( stat.NUM_ROWS AS NUMBER )        -- NUM_ROWS
     , CAST( xseg.ALLOC_PAGE_COUNT AS NUMBER )-- BLOCKS
     , CAST( NULL AS NUMBER )                 -- EMPTY_BLOCKS
     , CAST( NULL AS NUMBER )                 -- AVG_SPACE
     , CAST( NULL AS NUMBER )                 -- CHAIN_CNT
     , CAST( NULL AS NUMBER )                 -- AVG_ROW_LEN
     , CAST( NULL AS NUMBER )                 -- AVG_SPACE_FREELIST_BLOCKS
     , CAST( NULL AS NUMBER )                 -- NUM_FREELIST_BLOCKS
     , CAST( NULL AS VARCHAR(32 OCTETS) )     -- DEGREE
     , CAST( NULL AS VARCHAR(32 OCTETS) )     -- INSTANCES
     , CAST( NULL AS VARCHAR(1 OCTETS) )      -- CACHE
     , CAST( CASE WHEN tab.TABLE_TYPE IN ('BASE TABLE', 'SYSTEM VERSIONED' )
                  THEN 'ENABLED'
                  ELSE 'DISABLED'
                  END
             AS VARCHAR(32 OCTETS) )          -- TABLE_LOCK
     , CAST( NULL AS NUMBER )                 -- SAMPLE_SIZE
     , CAST( stat.ANALYZED_TIME AS TIMESTAMP )  -- LAST_ANALYZED
     , CAST( 'NO' AS VARCHAR(3 OCTETS) )      -- PARTITIONED
     , CAST( NULL AS VARCHAR(32 OCTETS) )     -- IOT_TYPE
     , CAST( NULL AS VARCHAR(32 OCTETS) )     -- OBJECT_ID_TYPE
     , CAST( NULL AS VARCHAR(128 OCTETS) )    -- TABLE_TYPE_OWNER
     , CAST( NULL AS VARCHAR(128 OCTETS) )    -- TABLE_TYPE
     , CAST( CASE WHEN tab.TABLE_TYPE IN ( 'GLOBAL TEMPORARY', 'LOCAL TEMPORARY' )
                  THEN 'Y'
                  ELSE 'N'
                  END
             AS VARCHAR(1 OCTETS) )           -- TEMPORARY
     , CAST( 'N' AS VARCHAR(1 OCTETS) )       -- SECONDARY
     , CAST( 'NO' AS VARCHAR(3 OCTETS) )      -- NESTED
     , CAST( NULL AS VARCHAR(32 OCTETS) )     -- BUFFER_POOL
     , CAST( 'NONE' AS VARCHAR(32 OCTETS) )   -- FLASH_CACHE
     , CAST( 'NONE' AS VARCHAR(32 OCTETS) )   -- CELL_FLASH_CACHE
     , CAST( NULL AS VARCHAR(32 OCTETS) )     -- ROW_MOVEMENT
     , CAST( NULL AS VARCHAR(3 OCTETS) )      -- GLOBAL_STATS
     , CAST( NULL AS VARCHAR(3 OCTETS) )      -- USER_STATS
     , CAST( NULL AS VARCHAR(32 OCTETS) )     -- DURATION
     , CAST( NULL AS VARCHAR(32 OCTETS) )     -- SKIP_CORRUPT
     , CAST( 'NO' AS VARCHAR(3 OCTETS) )      -- MONITORING
     , CAST( NULL AS VARCHAR(128 OCTETS) )    -- CLUSTER_OWNER
     , CAST( NULL AS VARCHAR(32 OCTETS) )     -- DEPENDENCIES
     , CAST( 'DISABLED' AS VARCHAR(32 OCTETS) )  -- COMPRESSION
     , CAST( NULL AS VARCHAR(32 OCTETS) )     -- COMPRESS_FOR
     , CAST( 'NO' AS VARCHAR(3 OCTETS) )      -- DROPPED
     , CAST( CASE WHEN tab.TABLE_TYPE = 'BASE TABLE'
                  THEN 'YES'
                  ELSE 'NO'
                  END
             AS VARCHAR(3 OCTETS) )           -- SEGMENT_CREATED
  FROM
       DEFINITION_SCHEMA.TABLES           AS tab 
       LEFT OUTER JOIN
       DEFINITION_SCHEMA.STAT_TABLE       AS stat
       ON tab.TABLE_ID = stat.TABLE_ID
     , DEFINITION_SCHEMA.TABLESPACES      AS spc  
     , FIXED_TABLE_SCHEMA.X$TABLE_CACHE   AS xtcac
     , FIXED_TABLE_SCHEMA.X$SEGMENT       AS xseg
     , DEFINITION_SCHEMA.SCHEMATA         AS sch 
     , DEFINITION_SCHEMA.AUTHORIZATIONS   AS auth 
 WHERE
       tab.TABLE_TYPE IN ( 'BASE TABLE', 'GLOBAL TEMPORARY', 'LOCAL TEMPORARY', 'SYSTEM VERSIONED' )
   AND tab.TABLESPACE_ID = spc.TABLESPACE_ID
   AND tab.PHYSICAL_ID   = xtcac.PHYSICAL_ID
   AND tab.PHYSICAL_ID   = xseg.PHYSICAL_ID
   AND tab.SCHEMA_ID     = sch.SCHEMA_ID
   AND tab.OWNER_ID      = auth.AUTH_ID
   AND ( tab.TABLE_ID IN ( SELECT pvcol.TABLE_ID 
                              FROM DEFINITION_SCHEMA.COLUMN_PRIVILEGES AS pvcol 
                             WHERE ( pvcol.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                             FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS aucol 
                                                            WHERE aucol.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                         ) 
                                  -- OR  
                                  -- pvcol.GRANTEE_ID IN ( SELECT AUTH_ID 
                                  --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                   )
                          ) 
         OR 
         tab.TABLE_ID IN ( SELECT pvtab.TABLE_ID 
                             FROM DEFINITION_SCHEMA.TABLE_PRIVILEGES AS pvtab 
                            WHERE ( pvtab.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                            FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS autab 
                                                           WHERE autab.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                        ) 
                                 -- OR  
                                 -- pvtab.GRANTEE_ID IN ( SELECT AUTH_ID 
                                 --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                  )
                          ) 
         OR 
         tab.SCHEMA_ID IN ( SELECT pvsch.SCHEMA_ID 
                              FROM DEFINITION_SCHEMA.SCHEMA_PRIVILEGES AS pvsch 
                             WHERE pvsch.PRIVILEGE_TYPE IN ( 'CONTROL SCHEMA', 'ALTER TABLE', 'DROP TABLE', 
                                                             'SELECT TABLE', 'INSERT TABLE', 'DELETE TABLE', 'UPDATE TABLE', 'LOCK TABLE' ) 
                               AND ( pvsch.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                             FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS ausch 
                                                            WHERE ausch.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                         ) 
                                  -- OR  
                                  -- pvsch.GRANTEE_ID IN ( SELECT AUTH_ID 
                                  --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                   )
                          ) 
         OR 
         EXISTS ( SELECT GRANTEE_ID  
                    FROM DEFINITION_SCHEMA.DATABASE_PRIVILEGES pvdba 
                   WHERE pvdba.PRIVILEGE_TYPE IN ( 'ALTER ANY TABLE', 'DROP ANY TABLE', 
                                                   'SELECT ANY TABLE', 'INSERT ANY TABLE', 'DELETE ANY TABLE', 'UPDATE ANY TABLE', 'LOCK ANY TABLE' ) 
                     AND ( pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                   FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS audba 
                                                  WHERE audba.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                ) 
                        -- OR  
                        -- pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                        --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                         )  
                ) 
       ) 
 ORDER BY 
       tab.SCHEMA_ID
     , tab.TABLE_ID
;

View created.

Elapsed time: 8.19600 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.ALL_ALL_TABLES
        IS 'ALL_ALL_TABLES describes the object tables and relational tables accessible to the current user.';

Comment created.

Elapsed time: 0.18300 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_ALL_TABLES.OWNER
        IS 'Owner of the table';

Comment created.

Elapsed time: 0.20200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_ALL_TABLES.TABLE_SCHEMA 
        IS 'Schema of the table';

Comment created.

Elapsed time: 0.19400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_ALL_TABLES.TABLE_NAME 
        IS 'Name of the table';

Comment created.

Elapsed time: 0.18900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_ALL_TABLES.TABLESPACE_NAME
        IS 'Name of the tablespace containing the table';

Comment created.

Elapsed time: 0.20000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_ALL_TABLES.CLUSTER_NAME
        IS 'Name of the cluster';

Comment created.

Elapsed time: 0.18400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_ALL_TABLES.IOT_NAME
        IS 'Name of the index-organized table';

Comment created.

Elapsed time: 0.19000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_ALL_TABLES.STATUS
        IS 'If a previous DROP TABLE operation failed, indicates whether the table is unusable (UNUSABLE) or valid (VALID)';

Comment created.

Elapsed time: 0.19000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_ALL_TABLES.PCT_FREE
        IS 'Minimum percentage of free space in a block';

Comment created.

Elapsed time: 0.19600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_ALL_TABLES.PCT_USED
        IS 'Minimum percentage of used space in a block';

Comment created.

Elapsed time: 0.18200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_ALL_TABLES.INI_TRANS
        IS 'Initial number of transactions';

Comment created.

Elapsed time: 0.18400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_ALL_TABLES.MAX_TRANS
        IS 'Maximum number of transactions';

Comment created.

Elapsed time: 0.18300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_ALL_TABLES.INITIAL_EXTENT
        IS 'Size of the initial extent (in bytes)';

Comment created.

Elapsed time: 0.19800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_ALL_TABLES.NEXT_EXTENT
        IS 'Size of secondary extents (in bytes)';

Comment created.

Elapsed time: 0.18800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_ALL_TABLES.MIN_EXTENTS
        IS 'Minimum number of extents allowed in the segment';

Comment created.

Elapsed time: 0.23700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_ALL_TABLES.MAX_EXTENTS
        IS 'Maximum number of extents allowed in the segment';

Comment created.

Elapsed time: 0.18900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_ALL_TABLES.PCT_INCREASE
        IS 'Percentage increase in extent size';

Comment created.

Elapsed time: 0.19700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_ALL_TABLES.FREELISTS
        IS 'Number of process freelists allocated to the segment';

Comment created.

Elapsed time: 0.19100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_ALL_TABLES.FREELIST_GROUPS
        IS 'Number of freelist groups allocated to the segment';

Comment created.

Elapsed time: 0.18600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_ALL_TABLES.LOGGING
        IS 'Indicates whether or not changes to the table are logged';

Comment created.

Elapsed time: 0.18500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_ALL_TABLES.BACKED_UP
        IS 'Indicates whether the table has been backed up since the last modification (Y) or not (N)';

Comment created.

Elapsed time: 0.19200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_ALL_TABLES.NUM_ROWS
        IS 'Number of rows in the table';

Comment created.

Elapsed time: 0.18500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_ALL_TABLES.BLOCKS
        IS 'Number of used blocks in the table';

Comment created.

Elapsed time: 0.18400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_ALL_TABLES.EMPTY_BLOCKS
        IS 'Number of empty (never used) blocks in the table';

Comment created.

Elapsed time: 0.18500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_ALL_TABLES.AVG_SPACE
        IS 'Average available free space in the table';

Comment created.

Elapsed time: 0.18900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_ALL_TABLES.CHAIN_CNT
        IS 'Number of rows in the table that are chained from one data block to another or that have migrated to a new block, requiring a link to preserve the old rowid';

Comment created.

Elapsed time: 0.18900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_ALL_TABLES.AVG_ROW_LEN
        IS 'Average row length, including row overhead';

Comment created.

Elapsed time: 0.18200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_ALL_TABLES.AVG_SPACE_FREELIST_BLOCKS
        IS 'Average freespace of all blocks on a freelist';

Comment created.

Elapsed time: 0.18600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_ALL_TABLES.NUM_FREELIST_BLOCKS
        IS 'Number of blocks on the freelist';

Comment created.

Elapsed time: 0.18200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_ALL_TABLES.DEGREE
        IS 'Number of threads per instance for scanning the table, or DEFAULT';

Comment created.

Elapsed time: 0.18500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_ALL_TABLES.INSTANCES
        IS 'Number of instances across which the table is to be scanned, or DEFAULT';

Comment created.

Elapsed time: 0.29500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_ALL_TABLES.CACHE
        IS 'Indicates whether the table is to be cached in the buffer cache (Y) or not (N)';

Comment created.

Elapsed time: 0.19500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_ALL_TABLES.TABLE_LOCK
        IS 'Indicates whether table locking is enabled (ENABLED) or disabled (DISABLED)';

Comment created.

Elapsed time: 0.24200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_ALL_TABLES.SAMPLE_SIZE
        IS 'Sample size used in analyzing the table';

Comment created.

Elapsed time: 0.21100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_ALL_TABLES.LAST_ANALYZED
        IS 'Date on which the table was most recently analyzed';

Comment created.

Elapsed time: 0.18400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_ALL_TABLES.PARTITIONED
        IS 'Indicates whether the table is partitioned (YES) or not (NO)';

Comment created.

Elapsed time: 0.18800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_ALL_TABLES.IOT_TYPE
        IS 'If the table is an index-organized table, then IOT_TYPE is IOT, IOT_OVERFLOW, or IOT_MAPPING.';

Comment created.

Elapsed time: 0.18800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_ALL_TABLES.OBJECT_ID_TYPE
        IS 'Indicates whether the object ID (OID) is USER-DEFINED or SYSTEM GENERATED';

Comment created.

Elapsed time: 0.24700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_ALL_TABLES.TABLE_TYPE_OWNER
        IS 'If an object table, owner of the type from which the table is created';

Comment created.

Elapsed time: 0.20300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_ALL_TABLES.TABLE_TYPE
        IS 'If an object table, type of the table';

Comment created.

Elapsed time: 0.19200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_ALL_TABLES.TEMPORARY
        IS 'Indicates whether the table is temporary (Y) or not (N)';

Comment created.

Elapsed time: 0.18900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_ALL_TABLES.SECONDARY
        IS 'Indicates whether the table is a secondary object created by cartridge';

Comment created.

Elapsed time: 0.18900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_ALL_TABLES.NESTED
        IS 'Indicates whether the table is a nested table (YES) or not (NO)';

Comment created.

Elapsed time: 0.19800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_ALL_TABLES.BUFFER_POOL
        IS 'Buffer pool to be used for table blocks';

Comment created.

Elapsed time: 0.18700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_ALL_TABLES.FLASH_CACHE
        IS 'Database Smart Flash Cache hint to be used for table blocks';

Comment created.

Elapsed time: 0.18900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_ALL_TABLES.CELL_FLASH_CACHE
        IS 'Cell flash cache hint to be used for table blocks';

Comment created.

Elapsed time: 0.18400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_ALL_TABLES.ROW_MOVEMENT
        IS 'If a partitioned table, indicates whether row movement is enabled (ENABLED) or disabled (DISABLED)';

Comment created.

Elapsed time: 0.19100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_ALL_TABLES.GLOBAL_STATS
        IS 'For partitioned tables, indicates whether statistics for the table as a whole (global statistics) are accurate (YES)';

Comment created.

Elapsed time: 0.18500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_ALL_TABLES.USER_STATS
        IS 'Indicates whether statistics were entered directly by the user (YES) or not (NO)';

Comment created.

Elapsed time: 0.19600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_ALL_TABLES.DURATION
        IS 'Indicates the duration of a temporary table';

Comment created.

Elapsed time: 0.19500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_ALL_TABLES.SKIP_CORRUPT
        IS 'Indicates whether Database ignores blocks marked corrupt during table and index scans (ENABLED) or raises an error (DISABLED)';

Comment created.

Elapsed time: 0.19000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_ALL_TABLES.MONITORING
        IS 'Indicates whether the table has the MONITORING attribute set (YES) or not (NO)';

Comment created.

Elapsed time: 0.18900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_ALL_TABLES.CLUSTER_OWNER
        IS 'Owner of the cluster, if any';

Comment created.

Elapsed time: 0.18400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_ALL_TABLES.DEPENDENCIES
        IS 'Indicates whether row-level dependency tracking is enabled (ENABLED) or disabled (DISABLED)';

Comment created.

Elapsed time: 0.21900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_ALL_TABLES.COMPRESSION
        IS 'Indicates whether table compression is enabled (ENABLED) or not (DISABLED)';

Comment created.

Elapsed time: 0.18600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_ALL_TABLES.COMPRESS_FOR
        IS 'Default compression for what kind of operations';

Comment created.

Elapsed time: 0.18700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_ALL_TABLES.DROPPED
        IS 'Indicates whether the table has been dropped and is in the recycle bin (YES) or not (NO)';

Comment created.

Elapsed time: 0.21100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_ALL_TABLES.SEGMENT_CREATED
        IS 'Indicates whether the table segment has been created (YES) or not (NO)';

Comment created.

Elapsed time: 0.25700 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.ALL_ALL_TABLES TO PUBLIC;

Grant succeeded.

Elapsed time: 0.19500 ms 


COMMIT;

Commit complete.

Elapsed time: 0.65500 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS ALL_ALL_TABLES;

Synonym dropped.

Elapsed time: 0.10200 ms 

CREATE PUBLIC SYNONYM ALL_ALL_TABLES FOR DICTIONARY_SCHEMA.ALL_ALL_TABLES;

Synonym created.

Elapsed time: 0.11800 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05100 ms 


--##############################################################
--# DICTIONARY_SCHEMA.USER_ALL_TABLES
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.USER_ALL_TABLES;

View dropped.

Elapsed time: 6.28900 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.USER_ALL_TABLES
(
       TABLE_SCHEMA 
     , TABLE_NAME 
     , TABLESPACE_NAME
     , CLUSTER_NAME
     , IOT_NAME
     , STATUS
     , PCT_FREE
     , PCT_USED
     , INI_TRANS
     , MAX_TRANS
     , INITIAL_EXTENT
     , NEXT_EXTENT
     , MIN_EXTENTS
     , MAX_EXTENTS
     , PCT_INCREASE
     , FREELISTS
     , FREELIST_GROUPS
     , LOGGING
     , BACKED_UP
     , NUM_ROWS
     , BLOCKS
     , EMPTY_BLOCKS
     , AVG_SPACE
     , CHAIN_CNT
     , AVG_ROW_LEN
     , AVG_SPACE_FREELIST_BLOCKS
     , NUM_FREELIST_BLOCKS
     , DEGREE
     , INSTANCES
     , CACHE
     , TABLE_LOCK
     , SAMPLE_SIZE
     , LAST_ANALYZED
     , PARTITIONED
     , IOT_TYPE
     , OBJECT_ID_TYPE
     , TABLE_TYPE_OWNER
     , TABLE_TYPE
     , TEMPORARY
     , SECONDARY
     , NESTED
     , BUFFER_POOL
     , FLASH_CACHE
     , CELL_FLASH_CACHE
     , ROW_MOVEMENT
     , GLOBAL_STATS
     , USER_STATS
     , DURATION
     , SKIP_CORRUPT
     , MONITORING
     , CLUSTER_OWNER
     , DEPENDENCIES
     , COMPRESSION
     , COMPRESS_FOR
     , DROPPED
     , SEGMENT_CREATED
)
AS
SELECT
       tab.TABLE_SCHEMA 
     , tab.TABLE_NAME 
     , tab.TABLESPACE_NAME
     , tab.CLUSTER_NAME
     , tab.IOT_NAME
     , tab.STATUS
     , tab.PCT_FREE
     , tab.PCT_USED
     , tab.INI_TRANS
     , tab.MAX_TRANS
     , tab.INITIAL_EXTENT
     , tab.NEXT_EXTENT
     , tab.MIN_EXTENTS
     , tab.MAX_EXTENTS
     , tab.PCT_INCREASE
     , tab.FREELISTS
     , tab.FREELIST_GROUPS
     , tab.LOGGING
     , tab.BACKED_UP
     , tab.NUM_ROWS
     , tab.BLOCKS
     , tab.EMPTY_BLOCKS
     , tab.AVG_SPACE
     , tab.CHAIN_CNT
     , tab.AVG_ROW_LEN
     , tab.AVG_SPACE_FREELIST_BLOCKS
     , tab.NUM_FREELIST_BLOCKS
     , tab.DEGREE
     , tab.INSTANCES
     , tab.CACHE
     , tab.TABLE_LOCK
     , tab.SAMPLE_SIZE
     , tab.LAST_ANALYZED
     , tab.PARTITIONED
     , tab.IOT_TYPE
     , tab.OBJECT_ID_TYPE
     , tab.TABLE_TYPE_OWNER
     , tab.TABLE_TYPE
     , tab.TEMPORARY
     , tab.SECONDARY
     , tab.NESTED
     , tab.BUFFER_POOL
     , tab.FLASH_CACHE
     , tab.CELL_FLASH_CACHE
     , tab.ROW_MOVEMENT
     , tab.GLOBAL_STATS
     , tab.USER_STATS
     , tab.DURATION
     , tab.SKIP_CORRUPT
     , tab.MONITORING
     , tab.CLUSTER_OWNER
     , tab.DEPENDENCIES
     , tab.COMPRESSION
     , tab.COMPRESS_FOR
     , tab.DROPPED
     , tab.SEGMENT_CREATED
  FROM
       DICTIONARY_SCHEMA.ALL_ALL_TABLES   AS tab 
 WHERE
       tab.OWNER = CURRENT_USER 
;

View created.

Elapsed time: 8.41100 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.USER_ALL_TABLES
        IS 'USER_ALL_TABLES describes the object tables and relational tables owned by the current user.';

Comment created.

Elapsed time: 0.20800 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_ALL_TABLES.TABLE_SCHEMA 
        IS 'Schema of the table';

Comment created.

Elapsed time: 0.21000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_ALL_TABLES.TABLE_NAME 
        IS 'Name of the table';

Comment created.

Elapsed time: 0.19400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_ALL_TABLES.TABLESPACE_NAME
        IS 'Name of the tablespace containing the table';

Comment created.

Elapsed time: 0.20200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_ALL_TABLES.CLUSTER_NAME
        IS 'Name of the cluster';

Comment created.

Elapsed time: 0.18700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_ALL_TABLES.IOT_NAME
        IS 'Name of the index-organized table';

Comment created.

Elapsed time: 0.19600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_ALL_TABLES.STATUS
        IS 'If a previous DROP TABLE operation failed, indicates whether the table is unusable (UNUSABLE) or valid (VALID)';

Comment created.

Elapsed time: 0.21000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_ALL_TABLES.PCT_FREE
        IS 'Minimum percentage of free space in a block';

Comment created.

Elapsed time: 0.18700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_ALL_TABLES.PCT_USED
        IS 'Minimum percentage of used space in a block';

Comment created.

Elapsed time: 0.19900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_ALL_TABLES.INI_TRANS
        IS 'Initial number of transactions';

Comment created.

Elapsed time: 0.18600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_ALL_TABLES.MAX_TRANS
        IS 'Maximum number of transactions';

Comment created.

Elapsed time: 0.18400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_ALL_TABLES.INITIAL_EXTENT
        IS 'Size of the initial extent (in bytes)';

Comment created.

Elapsed time: 0.21000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_ALL_TABLES.NEXT_EXTENT
        IS 'Size of secondary extents (in bytes)';

Comment created.

Elapsed time: 0.20400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_ALL_TABLES.MIN_EXTENTS
        IS 'Minimum number of extents allowed in the segment';

Comment created.

Elapsed time: 0.18600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_ALL_TABLES.MAX_EXTENTS
        IS 'Maximum number of extents allowed in the segment';

Comment created.

Elapsed time: 0.18600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_ALL_TABLES.PCT_INCREASE
        IS 'Percentage increase in extent size';

Comment created.

Elapsed time: 0.18400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_ALL_TABLES.FREELISTS
        IS 'Number of process freelists allocated to the segment';

Comment created.

Elapsed time: 0.19400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_ALL_TABLES.FREELIST_GROUPS
        IS 'Number of freelist groups allocated to the segment';

Comment created.

Elapsed time: 0.18600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_ALL_TABLES.LOGGING
        IS 'Indicates whether or not changes to the table are logged';

Comment created.

Elapsed time: 0.21400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_ALL_TABLES.BACKED_UP
        IS 'Indicates whether the table has been backed up since the last modification (Y) or not (N)';

Comment created.

Elapsed time: 0.18800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_ALL_TABLES.NUM_ROWS
        IS 'Number of rows in the table';

Comment created.

Elapsed time: 0.19300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_ALL_TABLES.BLOCKS
        IS 'Number of used blocks in the table';

Comment created.

Elapsed time: 0.18400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_ALL_TABLES.EMPTY_BLOCKS
        IS 'Number of empty (never used) blocks in the table';

Comment created.

Elapsed time: 0.18600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_ALL_TABLES.AVG_SPACE
        IS 'Average available free space in the table';

Comment created.

Elapsed time: 0.18700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_ALL_TABLES.CHAIN_CNT
        IS 'Number of rows in the table that are chained from one data block to another or that have migrated to a new block, requiring a link to preserve the old rowid';

Comment created.

Elapsed time: 0.20000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_ALL_TABLES.AVG_ROW_LEN
        IS 'Average row length, including row overhead';

Comment created.

Elapsed time: 0.19200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_ALL_TABLES.AVG_SPACE_FREELIST_BLOCKS
        IS 'Average freespace of all blocks on a freelist';

Comment created.

Elapsed time: 0.18600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_ALL_TABLES.NUM_FREELIST_BLOCKS
        IS 'Number of blocks on the freelist';

Comment created.

Elapsed time: 0.18600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_ALL_TABLES.DEGREE
        IS 'Number of threads per instance for scanning the table, or DEFAULT';

Comment created.

Elapsed time: 0.20100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_ALL_TABLES.INSTANCES
        IS 'Number of instances across which the table is to be scanned, or DEFAULT';

Comment created.

Elapsed time: 0.19600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_ALL_TABLES.CACHE
        IS 'Indicates whether the table is to be cached in the buffer cache (Y) or not (N)';

Comment created.

Elapsed time: 0.18500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_ALL_TABLES.TABLE_LOCK
        IS 'Indicates whether table locking is enabled (ENABLED) or disabled (DISABLED)';

Comment created.

Elapsed time: 0.40300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_ALL_TABLES.SAMPLE_SIZE
        IS 'Sample size used in analyzing the table';

Comment created.

Elapsed time: 0.18900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_ALL_TABLES.LAST_ANALYZED
        IS 'Date on which the table was most recently analyzed';

Comment created.

Elapsed time: 0.18600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_ALL_TABLES.PARTITIONED
        IS 'Indicates whether the table is partitioned (YES) or not (NO)';

Comment created.

Elapsed time: 0.20800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_ALL_TABLES.IOT_TYPE
        IS 'If the table is an index-organized table, then IOT_TYPE is IOT, IOT_OVERFLOW, or IOT_MAPPING.';

Comment created.

Elapsed time: 0.18700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_ALL_TABLES.OBJECT_ID_TYPE
        IS 'Indicates whether the object ID (OID) is USER-DEFINED or SYSTEM GENERATED';

Comment created.

Elapsed time: 0.26100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_ALL_TABLES.TABLE_TYPE_OWNER
        IS 'If an object table, owner of the type from which the table is created';

Comment created.

Elapsed time: 0.20100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_ALL_TABLES.TABLE_TYPE
        IS 'If an object table, type of the table';

Comment created.

Elapsed time: 0.24800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_ALL_TABLES.TEMPORARY
        IS 'Indicates whether the table is temporary (Y) or not (N)';

Comment created.

Elapsed time: 0.19000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_ALL_TABLES.SECONDARY
        IS 'Indicates whether the table is a secondary object created by cartridge';

Comment created.

Elapsed time: 0.18900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_ALL_TABLES.NESTED
        IS 'Indicates whether the table is a nested table (YES) or not (NO)';

Comment created.

Elapsed time: 0.19200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_ALL_TABLES.BUFFER_POOL
        IS 'Buffer pool to be used for table blocks';

Comment created.

Elapsed time: 0.18800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_ALL_TABLES.FLASH_CACHE
        IS 'Database Smart Flash Cache hint to be used for table blocks';

Comment created.

Elapsed time: 0.18800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_ALL_TABLES.CELL_FLASH_CACHE
        IS 'Cell flash cache hint to be used for table blocks';

Comment created.

Elapsed time: 0.18500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_ALL_TABLES.ROW_MOVEMENT
        IS 'If a partitioned table, indicates whether row movement is enabled (ENABLED) or disabled (DISABLED)';

Comment created.

Elapsed time: 0.19300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_ALL_TABLES.GLOBAL_STATS
        IS 'For partitioned tables, indicates whether statistics for the table as a whole (global statistics) are accurate (YES)';

Comment created.

Elapsed time: 0.20500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_ALL_TABLES.USER_STATS
        IS 'Indicates whether statistics were entered directly by the user (YES) or not (NO)';

Comment created.

Elapsed time: 0.19500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_ALL_TABLES.DURATION
        IS 'Indicates the duration of a temporary table';

Comment created.

Elapsed time: 0.20000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_ALL_TABLES.SKIP_CORRUPT
        IS 'Indicates whether Database ignores blocks marked corrupt during table and index scans (ENABLED) or raises an error (DISABLED)';

Comment created.

Elapsed time: 0.19700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_ALL_TABLES.MONITORING
        IS 'Indicates whether the table has the MONITORING attribute set (YES) or not (NO)';

Comment created.

Elapsed time: 0.18500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_ALL_TABLES.CLUSTER_OWNER
        IS 'Owner of the cluster, if any';

Comment created.

Elapsed time: 0.18300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_ALL_TABLES.DEPENDENCIES
        IS 'Indicates whether row-level dependency tracking is enabled (ENABLED) or disabled (DISABLED)';

Comment created.

Elapsed time: 0.20000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_ALL_TABLES.COMPRESSION
        IS 'Indicates whether table compression is enabled (ENABLED) or not (DISABLED)';

Comment created.

Elapsed time: 0.19200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_ALL_TABLES.COMPRESS_FOR
        IS 'Default compression for what kind of operations';

Comment created.

Elapsed time: 0.18400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_ALL_TABLES.DROPPED
        IS 'Indicates whether the table has been dropped and is in the recycle bin (YES) or not (NO)';

Comment created.

Elapsed time: 0.24500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_ALL_TABLES.SEGMENT_CREATED
        IS 'Indicates whether the table segment has been created (YES) or not (NO)';

Comment created.

Elapsed time: 0.20000 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.USER_ALL_TABLES TO PUBLIC;

Grant succeeded.

Elapsed time: 0.15800 ms 


COMMIT;

Commit complete.

Elapsed time: 0.63400 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS USER_ALL_TABLES;

Synonym dropped.

Elapsed time: 0.10100 ms 

CREATE PUBLIC SYNONYM USER_ALL_TABLES FOR DICTIONARY_SCHEMA.USER_ALL_TABLES;

Synonym created.

Elapsed time: 0.11400 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05000 ms 


--##############################################################
--# DICTIONARY_SCHEMA.DBA_COL_COMMENTS
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.DBA_COL_COMMENTS;

View dropped.

Elapsed time: 1.21800 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.DBA_COL_COMMENTS
(
       OWNER
     , TABLE_SCHEMA
     , TABLE_NAME
     , COLUMN_NAME
     , COMMENTS
)
AS
SELECT
       auth.AUTHORIZATION_NAME
     , sch.SCHEMA_NAME
     , tab.TABLE_NAME
     , col.COLUMN_NAME
     , col.COMMENTS
  FROM  
       DICTIONARY_SCHEMA.WHOLE_COLUMNS AS col
     , DICTIONARY_SCHEMA.WHOLE_TABLES  AS tab 
     , DEFINITION_SCHEMA.SCHEMATA           AS sch 
     , DEFINITION_SCHEMA.AUTHORIZATIONS     AS auth 
 WHERE 
       col.IS_UNUSED = FALSE
   AND col.TABLE_ID  = tab.TABLE_ID
   AND col.SCHEMA_ID = sch.SCHEMA_ID 
   AND col.OWNER_ID  = auth.AUTH_ID 
   AND EXISTS ( SELECT GRANTEE_ID  
                  FROM DEFINITION_SCHEMA.DATABASE_PRIVILEGES pvdba 
                 WHERE pvdba.PRIVILEGE_TYPE IN ( 'ACCESS CONTROL' ) 
                   AND ( pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                 FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS audba 
                                                WHERE audba.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                             ) 
                      -- OR  
                      -- pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                      --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                       )  
               ) 
ORDER BY 
      col.SCHEMA_ID 
    , col.TABLE_ID 
    , col.PHYSICAL_ORDINAL_POSITION
;

View created.

Elapsed time: 2.23700 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.DBA_COL_COMMENTS
        IS 'DBA_COL_COMMENTS displays comments on the columns of all tables and views in the database.';

Comment created.

Elapsed time: 0.17000 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_COL_COMMENTS.OWNER
        IS 'Owner of the object';

Comment created.

Elapsed time: 0.21300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_COL_COMMENTS.TABLE_SCHEMA
        IS 'Schema of the object';

Comment created.

Elapsed time: 0.19300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_COL_COMMENTS.TABLE_NAME
        IS 'Name of the object';

Comment created.

Elapsed time: 0.18300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_COL_COMMENTS.COLUMN_NAME
        IS 'Name of the column';

Comment created.

Elapsed time: 0.18000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_COL_COMMENTS.COMMENTS
        IS 'Comment on the column';

Comment created.

Elapsed time: 0.18800 ms 


--#####################
--# grant view
--#####################

--GRANT SELECT ON TABLE DICTIONARY_SCHEMA.DBA_COL_COMMENTS TO DBA;
GRANT SELECT ON TABLE DICTIONARY_SCHEMA.DBA_COL_COMMENTS TO PUBLIC;

Grant succeeded.

Elapsed time: 0.19900 ms 


COMMIT;

Commit complete.

Elapsed time: 0.13100 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS DBA_COL_COMMENTS;

Synonym dropped.

Elapsed time: 0.09700 ms 

CREATE PUBLIC SYNONYM DBA_COL_COMMENTS FOR DICTIONARY_SCHEMA.DBA_COL_COMMENTS;

Synonym created.

Elapsed time: 0.11000 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05800 ms 


--##############################################################
--# DICTIONARY_SCHEMA.ALL_COL_COMMENTS
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.ALL_COL_COMMENTS;

View dropped.

Elapsed time: 1.33000 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.ALL_COL_COMMENTS
(
       OWNER
     , TABLE_SCHEMA
     , TABLE_NAME
     , COLUMN_NAME
     , COMMENTS
)
AS
SELECT
       auth.AUTHORIZATION_NAME
     , sch.SCHEMA_NAME
     , tab.TABLE_NAME
     , col.COLUMN_NAME
     , col.COMMENTS
  FROM  
       DICTIONARY_SCHEMA.WHOLE_COLUMNS AS col
     , DICTIONARY_SCHEMA.WHOLE_TABLES  AS tab 
     , DEFINITION_SCHEMA.SCHEMATA           AS sch 
     , DEFINITION_SCHEMA.AUTHORIZATIONS     AS auth 
 WHERE 
       col.IS_UNUSED = FALSE
   AND col.TABLE_ID  = tab.TABLE_ID
   AND col.SCHEMA_ID = sch.SCHEMA_ID 
   AND col.OWNER_ID  = auth.AUTH_ID 
   AND ( col.COLUMN_ID IN ( SELECT pvcol.COLUMN_ID 
                              FROM DEFINITION_SCHEMA.COLUMN_PRIVILEGES AS pvcol 
                             WHERE ( pvcol.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                             FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS aucol 
                                                            WHERE aucol.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                         ) 
                                  -- OR  
                                  -- pvcol.GRANTEE_ID IN ( SELECT AUTH_ID 
                                  --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                   )
                          ) 
         OR 
         tab.TABLE_ID IN ( SELECT pvtab.TABLE_ID 
                             FROM DEFINITION_SCHEMA.TABLE_PRIVILEGES AS pvtab 
                            WHERE ( pvtab.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                            FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS autab 
                                                           WHERE autab.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                        ) 
                                 -- OR  
                                 -- pvtab.GRANTEE_ID IN ( SELECT AUTH_ID 
                                 --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                  )
                          ) 
         OR 
         sch.SCHEMA_ID IN ( SELECT pvsch.SCHEMA_ID 
                              FROM DEFINITION_SCHEMA.SCHEMA_PRIVILEGES AS pvsch 
                             WHERE pvsch.PRIVILEGE_TYPE IN ( 'CONTROL SCHEMA', 'ALTER TABLE', 'DROP TABLE', 
                                                             'SELECT TABLE', 'INSERT TABLE', 'DELETE TABLE', 'UPDATE TABLE', 'LOCK TABLE' ) 
                               AND ( pvsch.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                             FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS ausch 
                                                            WHERE ausch.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                         ) 
                                  -- OR  
                                  -- pvsch.GRANTEE_ID IN ( SELECT AUTH_ID 
                                  --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                   )
                          ) 
         OR 
         EXISTS ( SELECT GRANTEE_ID  
                    FROM DEFINITION_SCHEMA.DATABASE_PRIVILEGES pvdba 
                   WHERE pvdba.PRIVILEGE_TYPE IN ( 'ALTER ANY TABLE', 'DROP ANY TABLE', 
                                                   'SELECT ANY TABLE', 'INSERT ANY TABLE', 'DELETE ANY TABLE', 'UPDATE ANY TABLE', 'LOCK ANY TABLE' ) 
                     AND ( pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                   FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS audba 
                                                  WHERE audba.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                ) 
                        -- OR  
                        -- pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                        --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                         )  
                ) 
       ) 
ORDER BY 
      col.SCHEMA_ID 
    , col.TABLE_ID 
    , col.PHYSICAL_ORDINAL_POSITION
;

View created.

Elapsed time: 2.29300 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.ALL_COL_COMMENTS
        IS 'ALL_COL_COMMENTS displays comments on the columns of the tables and views accessible to the current user.';

Comment created.

Elapsed time: 0.16500 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_COL_COMMENTS.OWNER
        IS 'Owner of the object';

Comment created.

Elapsed time: 0.18800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_COL_COMMENTS.TABLE_SCHEMA
        IS 'Schema of the object';

Comment created.

Elapsed time: 0.19000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_COL_COMMENTS.TABLE_NAME
        IS 'Name of the object';

Comment created.

Elapsed time: 0.18200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_COL_COMMENTS.COLUMN_NAME
        IS 'Name of the column';

Comment created.

Elapsed time: 0.18100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_COL_COMMENTS.COMMENTS
        IS 'Comment on the column';

Comment created.

Elapsed time: 0.17600 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.ALL_COL_COMMENTS TO PUBLIC;

Grant succeeded.

Elapsed time: 0.16600 ms 


COMMIT;

Commit complete.

Elapsed time: 0.12800 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS ALL_COL_COMMENTS;

Synonym dropped.

Elapsed time: 0.09100 ms 

CREATE PUBLIC SYNONYM ALL_COL_COMMENTS FOR DICTIONARY_SCHEMA.ALL_COL_COMMENTS;

Synonym created.

Elapsed time: 0.11400 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05000 ms 


--##############################################################
--# DICTIONARY_SCHEMA.USER_COL_COMMENTS
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.USER_COL_COMMENTS;

View dropped.

Elapsed time: 1.25100 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.USER_COL_COMMENTS
(
       TABLE_SCHEMA
     , TABLE_NAME
     , COLUMN_NAME
     , COMMENTS
)
AS
SELECT
       acc.TABLE_SCHEMA
     , acc.TABLE_NAME
     , acc.COLUMN_NAME
     , acc.COMMENTS
  FROM  
       DICTIONARY_SCHEMA.ALL_COL_COMMENTS AS acc
 WHERE 
       acc.OWNER = CURRENT_USER
;

View created.

Elapsed time: 2.42900 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.USER_COL_COMMENTS
        IS 'USER_COL_COMMENTS displays comments on the columns of the tables and views owned by the current user.';

Comment created.

Elapsed time: 0.16900 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_COL_COMMENTS.TABLE_SCHEMA
        IS 'Schema of the object';

Comment created.

Elapsed time: 0.20400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_COL_COMMENTS.TABLE_NAME
        IS 'Name of the object';

Comment created.

Elapsed time: 0.18800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_COL_COMMENTS.COLUMN_NAME
        IS 'Name of the column';

Comment created.

Elapsed time: 0.18200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_COL_COMMENTS.COMMENTS
        IS 'Comment on the column';

Comment created.

Elapsed time: 0.18700 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.USER_COL_COMMENTS TO PUBLIC;

Grant succeeded.

Elapsed time: 0.15400 ms 


COMMIT;

Commit complete.

Elapsed time: 0.12000 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS USER_COL_COMMENTS;

Synonym dropped.

Elapsed time: 0.09800 ms 

CREATE PUBLIC SYNONYM USER_COL_COMMENTS FOR DICTIONARY_SCHEMA.USER_COL_COMMENTS;

Synonym created.

Elapsed time: 0.11000 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05000 ms 



--##############################################################
--# DICTIONARY_SCHEMA.DBA_COL_PRIVS
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.DBA_COL_PRIVS;

View dropped.

Elapsed time: 1.45800 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.DBA_COL_PRIVS
(
       GRANTOR
     , GRANTEE
     , OWNER 
     , TABLE_SCHEMA 
     , TABLE_NAME 
     , COLUMN_NAME 
     , PRIVILEGE
     , GRANTABLE
)
AS
SELECT
       grantor.AUTHORIZATION_NAME
     , grantee.AUTHORIZATION_NAME
     , owner.AUTHORIZATION_NAME
     , sch.SCHEMA_NAME
     , tab.TABLE_NAME
     , col.COLUMN_NAME
     , pvcol.PRIVILEGE_TYPE
     , CAST( CASE WHEN pvcol.IS_GRANTABLE = TRUE THEN 'YES' ELSE 'NO' END AS VARCHAR(3 OCTETS) )
  FROM
       DEFINITION_SCHEMA.COLUMN_PRIVILEGES  AS pvcol
     , DEFINITION_SCHEMA.COLUMNS            AS col
     , DEFINITION_SCHEMA.TABLES             AS tab 
     , DEFINITION_SCHEMA.SCHEMATA           AS sch 
     , DEFINITION_SCHEMA.AUTHORIZATIONS     AS grantor
     , DEFINITION_SCHEMA.AUTHORIZATIONS     AS grantee
     , DEFINITION_SCHEMA.AUTHORIZATIONS     AS owner
 WHERE
       pvcol.COLUMN_ID  = col.COLUMN_ID
   AND col.TABLE_ID   = tab.TABLE_ID
   AND col.SCHEMA_ID  = sch.SCHEMA_ID
   AND pvcol.GRANTOR_ID = grantor.AUTH_ID
   AND pvcol.GRANTEE_ID = grantee.AUTH_ID
   AND tab.OWNER_ID     = owner.AUTH_ID
   AND EXISTS ( SELECT GRANTEE_ID  
                  FROM DEFINITION_SCHEMA.DATABASE_PRIVILEGES pvdba 
                 WHERE pvdba.PRIVILEGE_TYPE IN ( 'ACCESS CONTROL' ) 
                   AND ( pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                 FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS audba 
                                                WHERE audba.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                             ) 
                      -- OR  
                      -- pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                      --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                       )  
               ) 
 ORDER BY 
       pvcol.SCHEMA_ID
     , pvcol.TABLE_ID
     , pvcol.COLUMN_ID
     , pvcol.GRANTOR_ID
     , pvcol.GRANTEE_ID
     , pvcol.PRIVILEGE_TYPE_ID   
;

View created.

Elapsed time: 1.92600 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.DBA_COL_PRIVS
        IS 'DBA_COL_PRIVS describes all column object grants in the database.';

Comment created.

Elapsed time: 0.16400 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_COL_PRIVS.GRANTOR
        IS 'Name of the user who performed the grant';

Comment created.

Elapsed time: 0.19200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_COL_PRIVS.GRANTEE
        IS 'Name of the user or role to whom access was granted';

Comment created.

Elapsed time: 0.18600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_COL_PRIVS.OWNER 
        IS 'Owner of the object';

Comment created.

Elapsed time: 0.18200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_COL_PRIVS.TABLE_SCHEMA 
        IS 'Schema of the object';

Comment created.

Elapsed time: 0.18200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_COL_PRIVS.TABLE_NAME 
        IS 'Name of the object';

Comment created.

Elapsed time: 0.18400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_COL_PRIVS.COLUMN_NAME 
        IS 'Name of the column';

Comment created.

Elapsed time: 0.18100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_COL_PRIVS.PRIVILEGE
        IS 'Privilege on the column';

Comment created.

Elapsed time: 0.18700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_COL_PRIVS.GRANTABLE
        IS 'Indicates whether the privilege was granted with the GRANT OPTION (YES) or not (NO)';

Comment created.

Elapsed time: 0.17800 ms 


--#####################
--# grant view
--#####################

--GRANT SELECT ON TABLE DICTIONARY_SCHEMA.DBA_COL_PRIVS TO DBA;
GRANT SELECT ON TABLE DICTIONARY_SCHEMA.DBA_COL_PRIVS TO PUBLIC;

Grant succeeded.

Elapsed time: 0.15500 ms 


COMMIT;

Commit complete.

Elapsed time: 0.15500 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS DBA_COL_PRIVS;

Synonym dropped.

Elapsed time: 0.10400 ms 

CREATE PUBLIC SYNONYM DBA_COL_PRIVS FOR DICTIONARY_SCHEMA.DBA_COL_PRIVS;

Synonym created.

Elapsed time: 0.12500 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05500 ms 


--##############################################################
--# DICTIONARY_SCHEMA.ALL_COL_PRIVS
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.ALL_COL_PRIVS;

View dropped.

Elapsed time: 1.66900 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.ALL_COL_PRIVS
(
       GRANTOR
     , GRANTEE
     , OWNER 
     , TABLE_SCHEMA 
     , TABLE_NAME 
     , COLUMN_NAME 
     , PRIVILEGE
     , GRANTABLE
)
AS
SELECT
       grantor.AUTHORIZATION_NAME
     , grantee.AUTHORIZATION_NAME
     , owner.AUTHORIZATION_NAME
     , sch.SCHEMA_NAME
     , tab.TABLE_NAME
     , col.COLUMN_NAME
     , pvcol.PRIVILEGE_TYPE
     , CAST( CASE WHEN pvcol.IS_GRANTABLE = TRUE THEN 'YES' ELSE 'NO' END AS VARCHAR(3 OCTETS) )
  FROM
       DEFINITION_SCHEMA.COLUMN_PRIVILEGES  AS pvcol
     , DEFINITION_SCHEMA.COLUMNS            AS col
     , DEFINITION_SCHEMA.TABLES             AS tab 
     , DEFINITION_SCHEMA.SCHEMATA           AS sch 
     , DEFINITION_SCHEMA.AUTHORIZATIONS     AS grantor
     , DEFINITION_SCHEMA.AUTHORIZATIONS     AS grantee
     , DEFINITION_SCHEMA.AUTHORIZATIONS     AS owner
 WHERE
       grantor.AUTHORIZATION_NAME <> '_SYSTEM'
   AND pvcol.COLUMN_ID  = col.COLUMN_ID
   AND pvcol.TABLE_ID   = tab.TABLE_ID
   AND pvcol.SCHEMA_ID  = sch.SCHEMA_ID
   AND pvcol.GRANTOR_ID = grantor.AUTH_ID
   AND pvcol.GRANTEE_ID = grantee.AUTH_ID
   AND tab.OWNER_ID     = owner.AUTH_ID
   AND ( grantee.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )
      -- OR  
      -- pvcol.GRANTEE_ID IN ( SELECT AUTH_ID 
      --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
         OR
         grantor.AUTHORIZATION_NAME = CURRENT_USER
         OR
         owner.AUTHORIZATION_NAME = CURRENT_USER
       )
 ORDER BY 
       pvcol.SCHEMA_ID
     , pvcol.TABLE_ID
     , pvcol.COLUMN_ID
     , pvcol.GRANTOR_ID
     , pvcol.GRANTEE_ID
     , pvcol.PRIVILEGE_TYPE_ID   
;

View created.

Elapsed time: 1.90000 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.ALL_COL_PRIVS
        IS 'ALL_COL_PRIVS describes the object grants, for which the current user is the object owner, grantor, or grantee, or for which an enabled role or PUBLIC is the grantee.';

Comment created.

Elapsed time: 0.16600 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_COL_PRIVS.GRANTOR
        IS 'Name of the user who performed the grant';

Comment created.

Elapsed time: 0.19400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_COL_PRIVS.GRANTEE
        IS 'Name of the user or role to whom access was granted';

Comment created.

Elapsed time: 0.18200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_COL_PRIVS.OWNER 
        IS 'Owner of the object';

Comment created.

Elapsed time: 0.18100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_COL_PRIVS.TABLE_SCHEMA 
        IS 'Schema of the object';

Comment created.

Elapsed time: 0.18800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_COL_PRIVS.TABLE_NAME 
        IS 'Name of the object';

Comment created.

Elapsed time: 0.18000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_COL_PRIVS.COLUMN_NAME 
        IS 'Name of the column';

Comment created.

Elapsed time: 0.17900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_COL_PRIVS.PRIVILEGE
        IS 'Privilege on the column';

Comment created.

Elapsed time: 0.17700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_COL_PRIVS.GRANTABLE
        IS 'Indicates whether the privilege was granted with the GRANT OPTION (YES) or not (NO)';

Comment created.

Elapsed time: 0.17700 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.ALL_COL_PRIVS TO PUBLIC;

Grant succeeded.

Elapsed time: 0.15400 ms 


COMMIT;

Commit complete.

Elapsed time: 0.16100 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS ALL_COL_PRIVS;

Synonym dropped.

Elapsed time: 0.09100 ms 

CREATE PUBLIC SYNONYM ALL_COL_PRIVS FOR DICTIONARY_SCHEMA.ALL_COL_PRIVS;

Synonym created.

Elapsed time: 0.11000 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05300 ms 


--##############################################################
--# DICTIONARY_SCHEMA.USER_COL_PRIVS
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.USER_COL_PRIVS;

View dropped.

Elapsed time: 1.42100 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.USER_COL_PRIVS
(
       GRANTEE
     , OWNER 
     , TABLE_SCHEMA 
     , TABLE_NAME 
     , COLUMN_NAME 
     , GRANTOR
     , PRIVILEGE
     , GRANTABLE
)
AS
SELECT
       pvcol.GRANTEE
     , pvcol.OWNER 
     , pvcol.TABLE_SCHEMA 
     , pvcol.TABLE_NAME 
     , pvcol.COLUMN_NAME 
     , pvcol.GRANTOR
     , pvcol.PRIVILEGE
     , pvcol.GRANTABLE
  FROM
       DICTIONARY_SCHEMA.ALL_COL_PRIVS pvcol
 WHERE 
       pvcol.OWNER   = CURRENT_USER
    OR pvcol.GRANTOR = CURRENT_USER
    OR pvcol.GRANTEE = CURRENT_USER
;

View created.

Elapsed time: 2.09400 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.USER_COL_PRIVS
        IS 'USER_COL_PRIVS describes the column object grants for which the current user is the object owner, grantor, or grantee.';

Comment created.

Elapsed time: 0.17200 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_COL_PRIVS.GRANTEE
        IS 'Name of the user or role to whom access was granted';

Comment created.

Elapsed time: 0.19100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_COL_PRIVS.OWNER 
        IS 'Owner of the object';

Comment created.

Elapsed time: 0.18500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_COL_PRIVS.TABLE_SCHEMA 
        IS 'Schema of the object';

Comment created.

Elapsed time: 0.18100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_COL_PRIVS.TABLE_NAME 
        IS 'Name of the object';

Comment created.

Elapsed time: 0.18900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_COL_PRIVS.COLUMN_NAME 
        IS 'Name of the column';

Comment created.

Elapsed time: 0.18200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_COL_PRIVS.GRANTOR
        IS 'Name of the user who performed the grant';

Comment created.

Elapsed time: 0.17800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_COL_PRIVS.PRIVILEGE
        IS 'Privilege on the column';

Comment created.

Elapsed time: 0.17900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_COL_PRIVS.GRANTABLE
        IS 'Indicates whether the privilege was granted with the GRANT OPTION (YES) or not (NO)';

Comment created.

Elapsed time: 0.18600 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.USER_COL_PRIVS TO PUBLIC;

Grant succeeded.

Elapsed time: 0.15500 ms 


COMMIT;

Commit complete.

Elapsed time: 0.15800 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS USER_COL_PRIVS;

Synonym dropped.

Elapsed time: 0.09200 ms 

CREATE PUBLIC SYNONYM USER_COL_PRIVS FOR DICTIONARY_SCHEMA.USER_COL_PRIVS;

Synonym created.

Elapsed time: 0.11000 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05000 ms 


--##############################################################
--# DICTIONARY_SCHEMA.ALL_COL_PRIVS_MADE
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.ALL_COL_PRIVS_MADE;

View dropped.

Elapsed time: 1.41000 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.ALL_COL_PRIVS_MADE
(
       GRANTEE
     , OWNER 
     , TABLE_SCHEMA 
     , TABLE_NAME 
     , COLUMN_NAME 
     , GRANTOR
     , PRIVILEGE
     , GRANTABLE
)
AS
SELECT
       pvcol.GRANTEE
     , pvcol.OWNER 
     , pvcol.TABLE_SCHEMA 
     , pvcol.TABLE_NAME 
     , pvcol.COLUMN_NAME 
     , pvcol.GRANTOR
     , pvcol.PRIVILEGE
     , pvcol.GRANTABLE
  FROM
       DICTIONARY_SCHEMA.ALL_COL_PRIVS  AS pvcol
 WHERE
       pvcol.OWNER   = CURRENT_USER
    OR pvcol.GRANTOR = CURRENT_USER
;

View created.

Elapsed time: 2.18400 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.ALL_COL_PRIVS_MADE
        IS 'ALL_COL_PRIVS_MADE describes the column object grants for which the current user is the object owner or grantor.';

Comment created.

Elapsed time: 0.20000 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_COL_PRIVS_MADE.GRANTEE
        IS 'Name of the user or role to whom access was granted';

Comment created.

Elapsed time: 0.19600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_COL_PRIVS_MADE.OWNER 
        IS 'Owner of the object';

Comment created.

Elapsed time: 0.18400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_COL_PRIVS_MADE.TABLE_SCHEMA 
        IS 'Schema of the object';

Comment created.

Elapsed time: 0.19000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_COL_PRIVS_MADE.TABLE_NAME 
        IS 'Name of the object';

Comment created.

Elapsed time: 0.18600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_COL_PRIVS_MADE.COLUMN_NAME 
        IS 'Name of the column';

Comment created.

Elapsed time: 0.20200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_COL_PRIVS_MADE.GRANTOR
        IS 'Name of the user who performed the grant';

Comment created.

Elapsed time: 0.18000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_COL_PRIVS_MADE.PRIVILEGE
        IS 'Privilege on the column';

Comment created.

Elapsed time: 0.17900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_COL_PRIVS_MADE.GRANTABLE
        IS 'Indicates whether the privilege was granted with the GRANT OPTION (YES) or not (NO)';

Comment created.

Elapsed time: 0.18100 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.ALL_COL_PRIVS_MADE TO PUBLIC;

Grant succeeded.

Elapsed time: 0.18700 ms 


COMMIT;

Commit complete.

Elapsed time: 0.24000 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS ALL_COL_PRIVS_MADE;

Synonym dropped.

Elapsed time: 0.09900 ms 

CREATE PUBLIC SYNONYM ALL_COL_PRIVS_MADE FOR DICTIONARY_SCHEMA.ALL_COL_PRIVS_MADE;

Synonym created.

Elapsed time: 0.11900 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05100 ms 


--##############################################################
--# DICTIONARY_SCHEMA.USER_COL_PRIVS_MADE
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.USER_COL_PRIVS_MADE;

View dropped.

Elapsed time: 1.31700 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.USER_COL_PRIVS_MADE
(
       GRANTEE
     , TABLE_SCHEMA 
     , TABLE_NAME 
     , COLUMN_NAME 
     , GRANTOR
     , PRIVILEGE
     , GRANTABLE
)
AS
SELECT
       pvcol.GRANTEE
     , pvcol.TABLE_SCHEMA 
     , pvcol.TABLE_NAME 
     , pvcol.COLUMN_NAME 
     , pvcol.GRANTOR
     , pvcol.PRIVILEGE
     , pvcol.GRANTABLE
  FROM
       DICTIONARY_SCHEMA.ALL_COL_PRIVS pvcol
 WHERE 
       pvcol.OWNER   = CURRENT_USER
;

View created.

Elapsed time: 1.95000 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.USER_COL_PRIVS_MADE
        IS 'USER_COL_PRIVS_MADE describes the column object grants for which the current user is the object owner.';

Comment created.

Elapsed time: 0.18400 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_COL_PRIVS_MADE.GRANTEE
        IS 'Name of the user or role to whom access was granted';

Comment created.

Elapsed time: 0.19300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_COL_PRIVS_MADE.TABLE_SCHEMA 
        IS 'Schema of the object';

Comment created.

Elapsed time: 0.18600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_COL_PRIVS_MADE.TABLE_NAME 
        IS 'Name of the object';

Comment created.

Elapsed time: 0.18200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_COL_PRIVS_MADE.COLUMN_NAME 
        IS 'Name of the column';

Comment created.

Elapsed time: 0.18400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_COL_PRIVS_MADE.GRANTOR
        IS 'Name of the user who performed the grant';

Comment created.

Elapsed time: 0.17900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_COL_PRIVS_MADE.PRIVILEGE
        IS 'Privilege on the column';

Comment created.

Elapsed time: 0.18000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_COL_PRIVS_MADE.GRANTABLE
        IS 'Indicates whether the privilege was granted with the GRANT OPTION (YES) or not (NO)';

Comment created.

Elapsed time: 0.18500 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.USER_COL_PRIVS_MADE TO PUBLIC;

Grant succeeded.

Elapsed time: 0.15700 ms 


COMMIT;

Commit complete.

Elapsed time: 0.14800 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS USER_COL_PRIVS_MADE;

Synonym dropped.

Elapsed time: 0.10100 ms 

CREATE PUBLIC SYNONYM USER_COL_PRIVS_MADE FOR DICTIONARY_SCHEMA.USER_COL_PRIVS_MADE;

Synonym created.

Elapsed time: 0.11000 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05100 ms 



--##############################################################
--# DICTIONARY_SCHEMA.ALL_COL_PRIVS_RECD
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.ALL_COL_PRIVS_RECD;

View dropped.

Elapsed time: 1.39000 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.ALL_COL_PRIVS_RECD
(
       GRANTEE
     , OWNER 
     , TABLE_SCHEMA 
     , TABLE_NAME 
     , COLUMN_NAME 
     , GRANTOR
     , PRIVILEGE
     , GRANTABLE
)
AS
SELECT
       pvcol.GRANTEE
     , pvcol.OWNER 
     , pvcol.TABLE_SCHEMA 
     , pvcol.TABLE_NAME 
     , pvcol.COLUMN_NAME 
     , pvcol.GRANTOR
     , pvcol.PRIVILEGE
     , pvcol.GRANTABLE
  FROM
       DICTIONARY_SCHEMA.ALL_COL_PRIVS  AS pvcol
 WHERE
       ( 
         pvcol.GRANTEE IN ( CURRENT_USER, 'PUBLIC' )
      -- OR  
      -- pvcol.GRANTEE IN ( SELECT AUTH_NAME 
      --                      FROM INORMATION_SCHEMA.ENABLED_ROLES )  
       )
;

View created.

Elapsed time: 2.28900 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.ALL_COL_PRIVS_RECD
        IS 'ALL_COL_PRIVS_RECD describes the column object grants, for which the current user is the grantee, or for which an enabled role or PUBLIC is the grantee.';

Comment created.

Elapsed time: 0.16700 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_COL_PRIVS_RECD.GRANTEE
        IS 'Name of the user or role to whom access was granted';

Comment created.

Elapsed time: 0.20400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_COL_PRIVS_RECD.OWNER 
        IS 'Owner of the object';

Comment created.

Elapsed time: 0.19900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_COL_PRIVS_RECD.TABLE_SCHEMA 
        IS 'Schema of the object';

Comment created.

Elapsed time: 0.19400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_COL_PRIVS_RECD.TABLE_NAME 
        IS 'Name of the object';

Comment created.

Elapsed time: 0.18100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_COL_PRIVS_RECD.COLUMN_NAME 
        IS 'Name of the column';

Comment created.

Elapsed time: 0.17700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_COL_PRIVS_RECD.GRANTOR
        IS 'Name of the user who performed the grant';

Comment created.

Elapsed time: 0.17900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_COL_PRIVS_RECD.PRIVILEGE
        IS 'Privilege on the column';

Comment created.

Elapsed time: 0.18600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_COL_PRIVS_RECD.GRANTABLE
        IS 'Indicates whether the privilege was granted with the GRANT OPTION (YES) or not (NO)';

Comment created.

Elapsed time: 0.29600 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.ALL_COL_PRIVS_RECD TO PUBLIC;

Grant succeeded.

Elapsed time: 0.15700 ms 


COMMIT;

Commit complete.

Elapsed time: 0.16000 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS ALL_COL_PRIVS_RECD;

Synonym dropped.

Elapsed time: 0.09300 ms 

CREATE PUBLIC SYNONYM ALL_COL_PRIVS_RECD FOR DICTIONARY_SCHEMA.ALL_COL_PRIVS_RECD;

Synonym created.

Elapsed time: 0.11200 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05000 ms 


--##############################################################
--# DICTIONARY_SCHEMA.USER_COL_PRIVS_RECD
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.USER_COL_PRIVS_RECD;

View dropped.

Elapsed time: 1.34600 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.USER_COL_PRIVS_RECD
(
       OWNER 
     , TABLE_SCHEMA 
     , TABLE_NAME 
     , COLUMN_NAME 
     , GRANTOR
     , PRIVILEGE
     , GRANTABLE
)
AS
SELECT
       pvcol.OWNER 
     , pvcol.TABLE_SCHEMA 
     , pvcol.TABLE_NAME 
     , pvcol.COLUMN_NAME 
     , pvcol.GRANTOR
     , pvcol.PRIVILEGE
     , pvcol.GRANTABLE
  FROM
       DICTIONARY_SCHEMA.ALL_COL_PRIVS pvcol
 WHERE 
       pvcol.GRANTEE = CURRENT_USER
;

View created.

Elapsed time: 1.85000 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.USER_COL_PRIVS_RECD
        IS 'USER_COL_PRIVS_RECD describes the column object grants for which the current user is the grantee.';

Comment created.

Elapsed time: 0.17400 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_COL_PRIVS_RECD.OWNER 
        IS 'Owner of the object';

Comment created.

Elapsed time: 0.19300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_COL_PRIVS_RECD.TABLE_SCHEMA 
        IS 'Schema of the object';

Comment created.

Elapsed time: 0.18400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_COL_PRIVS_RECD.TABLE_NAME 
        IS 'Name of the object';

Comment created.

Elapsed time: 0.18700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_COL_PRIVS_RECD.COLUMN_NAME 
        IS 'Name of the column';

Comment created.

Elapsed time: 0.19200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_COL_PRIVS_RECD.GRANTOR
        IS 'Name of the user who performed the grant';

Comment created.

Elapsed time: 0.18100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_COL_PRIVS_RECD.PRIVILEGE
        IS 'Privilege on the column';

Comment created.

Elapsed time: 0.17900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_COL_PRIVS_RECD.GRANTABLE
        IS 'Indicates whether the privilege was granted with the GRANT OPTION (YES) or not (NO)';

Comment created.

Elapsed time: 0.18000 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.USER_COL_PRIVS_RECD TO PUBLIC;

Grant succeeded.

Elapsed time: 0.16200 ms 


COMMIT;

Commit complete.

Elapsed time: 0.14700 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS USER_COL_PRIVS_RECD;

Synonym dropped.

Elapsed time: 0.11200 ms 

CREATE PUBLIC SYNONYM USER_COL_PRIVS_RECD FOR DICTIONARY_SCHEMA.USER_COL_PRIVS_RECD;

Synonym created.

Elapsed time: 0.11100 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05100 ms 



--##############################################################
--# DICTIONARY_SCHEMA.DBA_CONSTRAINTS
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.DBA_CONSTRAINTS;

View dropped.

Elapsed time: 3.32000 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.DBA_CONSTRAINTS 
(
       OWNER
     , CONSTRAINT_SCHEMA
     , CONSTRAINT_NAME
     , CONSTRAINT_TYPE
     , TABLE_OWNER 
     , TABLE_SCHEMA 
     , TABLE_NAME 
     , SEARCH_CONDITION
     , R_OWNER
     , R_SCHEMA
     , R_CONSTRAINT_NAME
     , DELETE_RULE
     , UPDATE_RULE
     , STATUS
     , DEFERRABLE
     , DEFERRED
     , VALIDATED
     , GENERATED
     , BAD
     , RELY
     , LAST_CHANGE
     , INDEX_OWNER
     , INDEX_SCHEMA
     , INDEX_NAME
     , INVALID
     , VIEW_RELATED
     , COMMENTS
)
AS
SELECT 
       auth1.AUTHORIZATION_NAME                 -- OWNER
     , sch1.SCHEMA_NAME                         -- CONSTRAINT_SCHEMA
     , const.CONSTRAINT_NAME                    -- CONSTRAINT_NAME
     , CAST( CASE const.CONSTRAINT_TYPE 
                  WHEN 'PRIMARY KEY' THEN 'P'
                  WHEN 'UNIQUE'      THEN 'U'
                  WHEN 'FOREIGN KEY' THEN 'R'
                  WHEN 'NOT NULL'    THEN 'C'
                  WHEN 'CHECK'       THEN 'C'
                  ELSE NULL
              END
             AS VARCHAR(1 OCTETS) )             -- CONSTRAINT_TYPE
     , auth2.AUTHORIZATION_NAME                 -- TABLE_OWNER 
     , sch2.SCHEMA_NAME                         -- TABLE_SCHEMA 
     , tab.TABLE_NAME                           -- TABLE_NAME 
     , chkcn.CHECK_CLAUSE                       -- SEARCH_CONDITION
     , refuk.UNIQUE_OWNER                       -- R_OWNER
     , refuk.UNIQUE_SCHEMA                      -- R_SCHEMA
     , refuk.UNIQUE_NAME                        -- R_CONSTRAINT_NAME
     , refuk.DELETE_RULE                        -- DELETE_RULE
     , refuk.UPDATE_RULE                        -- UPDATE_RULE
     , CAST( CASE WHEN const.ENFORCED = TRUE 
                  THEN 'ENABLED'
                  ELSE 'DISABLED'
                  END
             AS VARCHAR(32 OCTETS) )            -- STATUS
     , CAST( CASE WHEN const.IS_DEFERRABLE = TRUE
                  THEN 'DEFERRABLE'
                  ELSE 'NOT DEFERRABLE'
                  END
             AS VARCHAR(32 OCTETS) )            -- DEFERRABLE
     , CAST( CASE WHEN const.INITIALLY_DEFERRED = TRUE
                  THEN 'DEFERRED'
                  ELSE 'IMMEDIATE'
                  END
             AS VARCHAR(32 OCTETS) )            -- DEFERRED
     , CAST( CASE WHEN (const.VALIDATE = TRUE) AND (const.ENFORCED = TRUE)
                  THEN 'VALIDATED'
                  ELSE 'NOT VALIDATED'
                  END
             AS VARCHAR(32 OCTETS) )                   -- VALIDATED
     , CAST( 'USER NAME' AS VARCHAR(32 OCTETS) )       -- GENERATED
     , CAST( NULL AS VARCHAR(32 OCTETS) )              -- BAD
     , CAST( NULL AS VARCHAR(32 OCTETS) )              -- RELY
     , const.MODIFIED_TIME                             -- LAST_CHANGE
     , keyix.INDEX_OWNER                               -- INDEX_OWNER
     , keyix.INDEX_SCHEMA                              -- INDEX_SCHEMA
     , keyix.INDEX_NAME                                -- INDEX_NAME
     , CAST( NULL AS VARCHAR(32 OCTETS) )              -- INVALID
     , CAST( NULL AS VARCHAR(32 OCTETS) )              -- VIEW_RELATED
     , const.COMMENTS                                  -- COMMENTS
  FROM 
       ( ( DEFINITION_SCHEMA.TABLE_CONSTRAINTS  AS const
           LEFT OUTER JOIN
           DEFINITION_SCHEMA.CHECK_CONSTRAINTS  AS chkcn
           ON const.CONSTRAINT_ID = chkcn.CONSTRAINT_ID )
         LEFT OUTER JOIN
         ( SELECT
                  refcn.CONSTRAINT_ID,
                  refcn.DELETE_RULE,
                  refcn.UPDATE_RULE,
                  ukath.AUTHORIZATION_NAME,
                  uksch.SCHEMA_NAME,
                  ukcon.CONSTRAINT_NAME
             FROM 
                  DEFINITION_SCHEMA.REFERENTIAL_CONSTRAINTS AS refcn
                , DEFINITION_SCHEMA.TABLE_CONSTRAINTS       AS ukcon
                , DEFINITION_SCHEMA.SCHEMATA                AS uksch 
                , DEFINITION_SCHEMA.AUTHORIZATIONS          AS ukath
            WHERE refcn.UNIQUE_CONSTRAINT_ID        = ukcon.CONSTRAINT_ID
              AND refcn.UNIQUE_CONSTRAINT_SCHEMA_ID = uksch.SCHEMA_ID
              AND refcn.UNIQUE_CONSTRAINT_OWNER_ID  = ukath.AUTH_ID
         ) AS refuk ( CONSTRAINT_ID,
                      DELETE_RULE,
                      UPDATE_RULE,
                      UNIQUE_OWNER,
                      UNIQUE_SCHEMA,
                      UNIQUE_NAME )
         ON const.CONSTRAINT_ID = refuk.CONSTRAINT_ID )
       LEFT OUTER JOIN
       ( SELECT 
                idx.INDEX_ID
              , ixath.AUTHORIZATION_NAME
              , ixsch.SCHEMA_NAME
              , idx.INDEX_NAME
           FROM 
                DEFINITION_SCHEMA.INDEXES        AS idx
              , DEFINITION_SCHEMA.SCHEMATA       AS ixsch 
              , DEFINITION_SCHEMA.AUTHORIZATIONS AS ixath
          WHERE idx.SCHEMA_ID = ixsch.SCHEMA_ID
            AND idx.OWNER_ID  = ixath.AUTH_ID
       ) AS keyix ( INDEX_ID,
                    INDEX_OWNER,
                    INDEX_SCHEMA,
                    INDEX_NAME )
       ON const.ASSOCIATED_INDEX_ID = keyix.INDEX_ID  
     , DEFINITION_SCHEMA.TABLES             AS tab 
     , DEFINITION_SCHEMA.SCHEMATA           AS sch1 
     , DEFINITION_SCHEMA.SCHEMATA           AS sch2 
     , DEFINITION_SCHEMA.AUTHORIZATIONS     AS auth1 
     , DEFINITION_SCHEMA.AUTHORIZATIONS     AS auth2 
 WHERE 
       const.TABLE_ID             = tab.TABLE_ID
   AND const.CONSTRAINT_SCHEMA_ID = sch1.SCHEMA_ID
   AND const.CONSTRAINT_OWNER_ID  = auth1.AUTH_ID
   AND const.TABLE_SCHEMA_ID      = sch2.SCHEMA_ID
   AND const.TABLE_OWNER_ID       = auth2.AUTH_ID
   AND EXISTS ( SELECT GRANTEE_ID  
                  FROM DEFINITION_SCHEMA.DATABASE_PRIVILEGES pvdba 
                 WHERE pvdba.PRIVILEGE_TYPE IN ( 'ACCESS CONTROL' ) 
                   AND ( pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                 FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS audba 
                                                WHERE audba.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                             ) 
                      -- OR  
                      -- pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                      --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                       )  
               ) 
ORDER BY 
      const.TABLE_SCHEMA_ID 
    , const.TABLE_ID 
    , const.CONSTRAINT_ID
;

View created.

Elapsed time: 4.84400 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.DBA_CONSTRAINTS 
        IS 'DBA_CONSTRAINTS describes all constraint definitions on all tables in the database.';

Comment created.

Elapsed time: 0.16800 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_CONSTRAINTS.OWNER
        IS 'Owner of the constraint definition';

Comment created.

Elapsed time: 0.20600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_CONSTRAINTS.CONSTRAINT_SCHEMA
        IS 'Schema of the constraint definition';

Comment created.

Elapsed time: 0.18800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_CONSTRAINTS.CONSTRAINT_NAME
        IS 'Name of the constraint definition';

Comment created.

Elapsed time: 0.18600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_CONSTRAINTS.CONSTRAINT_TYPE
        IS 'Type of the constraint definition: the value in ( C: check constraint, P: Primary key, U: Unique Key, R: Referential intgrity )';

Comment created.

Elapsed time: 0.18600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_CONSTRAINTS.TABLE_OWNER 
        IS 'Owner of the table (or view) associated with the constraint definition';

Comment created.

Elapsed time: 0.19200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_CONSTRAINTS.TABLE_SCHEMA 
        IS 'Schema of the table (or view) associated with the constraint definition';

Comment created.

Elapsed time: 0.18400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_CONSTRAINTS.TABLE_NAME 
        IS 'Name of the table (or view) associated with the constraint definition';

Comment created.

Elapsed time: 0.18900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_CONSTRAINTS.SEARCH_CONDITION
        IS 'Text of search condition for a check constraint';

Comment created.

Elapsed time: 0.18300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_CONSTRAINTS.R_OWNER
        IS 'Owner of the unique constraint definition for the referenced table';

Comment created.

Elapsed time: 0.25900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_CONSTRAINTS.R_SCHEMA
        IS 'Schema of the unique constraint definition for the referenced table';

Comment created.

Elapsed time: 0.18300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_CONSTRAINTS.R_CONSTRAINT_NAME
        IS 'Name of the unique constraint definition for the referenced table';

Comment created.

Elapsed time: 0.20600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_CONSTRAINTS.DELETE_RULE
        IS 'Delete rule for a referential constraint: the value in ( NO ACTION, RESTRICT, CASCADE, SET NULL, SET DEFAULT )';

Comment created.

Elapsed time: 0.19400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_CONSTRAINTS.UPDATE_RULE
        IS 'Update rule for a referential constraint: the value in ( NO ACTION, RESTRICT, CASCADE, SET NULL, SET DEFAULT )';

Comment created.

Elapsed time: 0.19200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_CONSTRAINTS.STATUS
        IS 'Enforcement status of the constraint: the value in ( ENABLED, DISABLE )';

Comment created.

Elapsed time: 0.18300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_CONSTRAINTS.DEFERRABLE
        IS 'Indicates whether the constraint is deferrable (DEFERRABLE) or not (NOT DEFERRABLE)';

Comment created.

Elapsed time: 0.18300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_CONSTRAINTS.DEFERRED
        IS 'Indicates whether the constraint was initially deferred (DEFERRED) or not (IMMEDIATE)';

Comment created.

Elapsed time: 0.19600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_CONSTRAINTS.VALIDATED
        IS 'Indicates whether all data may obey the constraint or not: the value in ( VALIDATED, NOT VALIDATED )';

Comment created.

Elapsed time: 0.19800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_CONSTRAINTS.GENERATED
        IS 'Indicates whether the name of the constraint is user-generated (USER NAME) or system-generated (GENERATED NAME)';

Comment created.

Elapsed time: 0.18500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_CONSTRAINTS.BAD
        IS 'Indicates whether this constraint specifies a century in an ambiguous manner (BAD) or not (NULL)';

Comment created.

Elapsed time: 0.18300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_CONSTRAINTS.RELY
        IS 'When NOT VALIDATED, indicates whether the constraint is to be taken into account for query rewrite (RELY) or not (NULL)';

Comment created.

Elapsed time: 0.18700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_CONSTRAINTS.LAST_CHANGE
        IS 'When the constraint was last enabled or disabled';

Comment created.

Elapsed time: 0.19200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_CONSTRAINTS.INDEX_OWNER
        IS 'Owner of the index associated with the key constraint';

Comment created.

Elapsed time: 0.20100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_CONSTRAINTS.INDEX_SCHEMA
        IS 'Schema of the index associated with the key constraint';

Comment created.

Elapsed time: 0.19200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_CONSTRAINTS.INDEX_NAME
        IS 'Name of the index associated with the key constraint';

Comment created.

Elapsed time: 0.18500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_CONSTRAINTS.INVALID
        IS 'Indicates whether the constraint is invalid (INVALID) or not (NULL)';

Comment created.

Elapsed time: 0.18300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_CONSTRAINTS.VIEW_RELATED
        IS 'Indicates whether the constraint depends on a view (DEPEND ON VIEW) or not (NULL)';

Comment created.

Elapsed time: 0.18300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_CONSTRAINTS.COMMENTS
        IS 'Comments of the constraint definition';

Comment created.

Elapsed time: 0.19300 ms 


--#####################
--# grant view
--#####################

--GRANT SELECT ON TABLE DICTIONARY_SCHEMA.DBA_CONSTRAINTS TO DBA;
GRANT SELECT ON TABLE DICTIONARY_SCHEMA.DBA_CONSTRAINTS TO PUBLIC;

Grant succeeded.

Elapsed time: 0.15500 ms 


COMMIT;

Commit complete.

Elapsed time: 0.38300 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS DBA_CONSTRAINTS;

Synonym dropped.

Elapsed time: 0.09800 ms 

CREATE PUBLIC SYNONYM DBA_CONSTRAINTS FOR DICTIONARY_SCHEMA.DBA_CONSTRAINTS;

Synonym created.

Elapsed time: 0.12200 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05000 ms 



--##############################################################
--# DICTIONARY_SCHEMA.ALL_CONSTRAINTS
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.ALL_CONSTRAINTS;

View dropped.

Elapsed time: 3.53400 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.ALL_CONSTRAINTS 
(
       OWNER
     , CONSTRAINT_SCHEMA
     , CONSTRAINT_NAME
     , CONSTRAINT_TYPE
     , TABLE_OWNER 
     , TABLE_SCHEMA 
     , TABLE_NAME 
     , SEARCH_CONDITION
     , R_OWNER
     , R_SCHEMA
     , R_CONSTRAINT_NAME
     , DELETE_RULE
     , UPDATE_RULE
     , STATUS
     , DEFERRABLE
     , DEFERRED
     , VALIDATED
     , GENERATED
     , BAD
     , RELY
     , LAST_CHANGE
     , INDEX_OWNER
     , INDEX_SCHEMA
     , INDEX_NAME
     , INVALID
     , VIEW_RELATED
     , COMMENTS
)
AS
SELECT 
       auth1.AUTHORIZATION_NAME                 -- OWNER
     , sch1.SCHEMA_NAME                         -- CONSTRAINT_SCHEMA
     , const.CONSTRAINT_NAME                    -- CONSTRAINT_NAME
     , CAST( CASE const.CONSTRAINT_TYPE 
                  WHEN 'PRIMARY KEY' THEN 'P'
                  WHEN 'UNIQUE'      THEN 'U'
                  WHEN 'FOREIGN KEY' THEN 'R'
                  WHEN 'NOT NULL'    THEN 'C'
                  WHEN 'CHECK'       THEN 'C'
                  ELSE NULL
              END
             AS VARCHAR(1 OCTETS) )             -- CONSTRAINT_TYPE
     , auth2.AUTHORIZATION_NAME                 -- TABLE_OWNER 
     , sch2.SCHEMA_NAME                         -- TABLE_SCHEMA 
     , tab.TABLE_NAME                           -- TABLE_NAME 
     , chkcn.CHECK_CLAUSE                       -- SEARCH_CONDITION
     , refuk.UNIQUE_OWNER                       -- R_OWNER
     , refuk.UNIQUE_SCHEMA                      -- R_SCHEMA
     , refuk.UNIQUE_NAME                        -- R_CONSTRAINT_NAME
     , refuk.DELETE_RULE                        -- DELETE_RULE
     , refuk.UPDATE_RULE                        -- UPDATE_RULE
     , CAST( CASE WHEN const.ENFORCED = TRUE 
                  THEN 'ENABLED'
                  ELSE 'DISABLED'
                  END
             AS VARCHAR(32 OCTETS) )            -- STATUS
     , CAST( CASE WHEN const.IS_DEFERRABLE = TRUE
                  THEN 'DEFERRABLE'
                  ELSE 'NOT DEFERRABLE'
                  END
             AS VARCHAR(32 OCTETS) )            -- DEFERRABLE
     , CAST( CASE WHEN const.INITIALLY_DEFERRED = TRUE
                  THEN 'DEFERRED'
                  ELSE 'IMMEDIATE'
                  END
             AS VARCHAR(32 OCTETS) )            -- DEFERRED
     , CAST( CASE WHEN (const.VALIDATE = TRUE) AND (const.ENFORCED = TRUE)
                  THEN 'VALIDATED'
                  ELSE 'NOT VALIDATED'
                  END
             AS VARCHAR(32 OCTETS) )             -- VALIDATED
     , CAST( 'USER NAME' AS VARCHAR(32 OCTETS) ) -- GENERATED
     , CAST( NULL AS VARCHAR(32 OCTETS) )        -- BAD
     , CAST( NULL AS VARCHAR(32 OCTETS) )        -- RELY
     , const.MODIFIED_TIME                       -- LAST_CHANGE
     , keyix.INDEX_OWNER                         -- INDEX_OWNER
     , keyix.INDEX_SCHEMA                        -- INDEX_SCHEMA
     , keyix.INDEX_NAME                          -- INDEX_NAME
     , CAST( NULL AS VARCHAR(32 OCTETS) )        -- INVALID
     , CAST( NULL AS VARCHAR(32 OCTETS) )        -- VIEW_RELATED
     , const.COMMENTS                            -- COMMENTS
  FROM 
       ( ( DEFINITION_SCHEMA.TABLE_CONSTRAINTS  AS const
           LEFT OUTER JOIN
           DEFINITION_SCHEMA.CHECK_CONSTRAINTS  AS chkcn
           ON const.CONSTRAINT_ID = chkcn.CONSTRAINT_ID )
         LEFT OUTER JOIN
         ( SELECT
                  refcn.CONSTRAINT_ID,
                  refcn.DELETE_RULE,
                  refcn.UPDATE_RULE,
                  ukath.AUTHORIZATION_NAME,
                  uksch.SCHEMA_NAME,
                  ukcon.CONSTRAINT_NAME
             FROM 
                  DEFINITION_SCHEMA.REFERENTIAL_CONSTRAINTS AS refcn
                , DEFINITION_SCHEMA.TABLE_CONSTRAINTS       AS ukcon
                , DEFINITION_SCHEMA.SCHEMATA                AS uksch 
                , DEFINITION_SCHEMA.AUTHORIZATIONS          AS ukath
            WHERE refcn.UNIQUE_CONSTRAINT_ID        = ukcon.CONSTRAINT_ID
              AND refcn.UNIQUE_CONSTRAINT_SCHEMA_ID = uksch.SCHEMA_ID
              AND refcn.UNIQUE_CONSTRAINT_OWNER_ID  = ukath.AUTH_ID
         ) AS refuk ( CONSTRAINT_ID,
                      DELETE_RULE,
                      UPDATE_RULE,
                      UNIQUE_OWNER,
                      UNIQUE_SCHEMA,
                      UNIQUE_NAME )
         ON const.CONSTRAINT_ID = refuk.CONSTRAINT_ID )
       LEFT OUTER JOIN
       ( SELECT 
                idx.INDEX_ID
              , ixath.AUTHORIZATION_NAME
              , ixsch.SCHEMA_NAME
              , idx.INDEX_NAME
           FROM 
                DEFINITION_SCHEMA.INDEXES        AS idx
              , DEFINITION_SCHEMA.SCHEMATA       AS ixsch 
              , DEFINITION_SCHEMA.AUTHORIZATIONS AS ixath
          WHERE idx.SCHEMA_ID = ixsch.SCHEMA_ID
            AND idx.OWNER_ID  = ixath.AUTH_ID
       ) AS keyix ( INDEX_ID,
                    INDEX_OWNER,
                    INDEX_SCHEMA,
                    INDEX_NAME )
       ON const.ASSOCIATED_INDEX_ID = keyix.INDEX_ID  
     , DEFINITION_SCHEMA.TABLES             AS tab 
     , DEFINITION_SCHEMA.SCHEMATA           AS sch1 
     , DEFINITION_SCHEMA.SCHEMATA           AS sch2 
     , DEFINITION_SCHEMA.AUTHORIZATIONS     AS auth1 
     , DEFINITION_SCHEMA.AUTHORIZATIONS     AS auth2 
 WHERE 
       const.TABLE_ID             = tab.TABLE_ID
   AND const.CONSTRAINT_SCHEMA_ID = sch1.SCHEMA_ID
   AND const.CONSTRAINT_OWNER_ID  = auth1.AUTH_ID
   AND const.TABLE_SCHEMA_ID      = sch2.SCHEMA_ID
   AND const.TABLE_OWNER_ID       = auth2.AUTH_ID
   AND ( tab.TABLE_ID IN ( SELECT pvcol.TABLE_ID 
                             FROM DEFINITION_SCHEMA.COLUMN_PRIVILEGES AS pvcol 
                            WHERE ( pvcol.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                            FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS aucol 
                                                           WHERE aucol.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                        ) 
                                 -- OR  
                                 -- pvcol.GRANTEE_ID IN ( SELECT AUTH_ID 
                                 --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                  )
                         ) 
         OR 
         tab.TABLE_ID IN ( SELECT pvtab.TABLE_ID 
                             FROM DEFINITION_SCHEMA.TABLE_PRIVILEGES AS pvtab 
                            WHERE ( pvtab.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                            FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS autab 
                                                           WHERE autab.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                        ) 
                                 -- OR  
                                 -- pvtab.GRANTEE_ID IN ( SELECT AUTH_ID 
                                 --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                  )
                          ) 
         OR 
         tab.SCHEMA_ID IN ( SELECT pvsch.SCHEMA_ID 
                              FROM DEFINITION_SCHEMA.SCHEMA_PRIVILEGES AS pvsch 
                             WHERE pvsch.PRIVILEGE_TYPE IN ( 'CONTROL SCHEMA', 'ALTER TABLE', 'DROP TABLE', 
                                                             'SELECT TABLE', 'INSERT TABLE', 'DELETE TABLE', 'UPDATE TABLE', 'LOCK TABLE' ) 
                               AND ( pvsch.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                             FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS ausch 
                                                            WHERE ausch.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                         ) 
                                  -- OR  
                                  -- pvsch.GRANTEE_ID IN ( SELECT AUTH_ID 
                                  --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                   )
                          ) 
         OR 
         EXISTS ( SELECT GRANTEE_ID  
                    FROM DEFINITION_SCHEMA.DATABASE_PRIVILEGES pvdba 
                   WHERE pvdba.PRIVILEGE_TYPE IN ( 'ALTER ANY TABLE', 'DROP ANY TABLE', 
                                                   'SELECT ANY TABLE', 'INSERT ANY TABLE', 'DELETE ANY TABLE', 'UPDATE ANY TABLE', 'LOCK ANY TABLE' ) 
                     AND ( pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                   FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS audba 
                                                  WHERE audba.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                ) 
                        -- OR  
                        -- pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                        --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                         )  
                ) 
       ) 
ORDER BY 
      const.TABLE_SCHEMA_ID 
    , const.TABLE_ID 
    , const.CONSTRAINT_ID
;

View created.

Elapsed time: 5.16400 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.ALL_CONSTRAINTS 
        IS 'ALL_CONSTRAINTS describes constraint definitions on tables accessible to the current user.';

Comment created.

Elapsed time: 0.16600 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_CONSTRAINTS.OWNER
        IS 'Owner of the constraint definition';

Comment created.

Elapsed time: 0.19800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_CONSTRAINTS.CONSTRAINT_SCHEMA
        IS 'Schema of the constraint definition';

Comment created.

Elapsed time: 0.19000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_CONSTRAINTS.CONSTRAINT_NAME
        IS 'Name of the constraint definition';

Comment created.

Elapsed time: 0.18500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_CONSTRAINTS.CONSTRAINT_TYPE
        IS 'Type of the constraint definition: the value in ( C: check constraint, P: Primary key, U: Unique Key, R: Referential intgrity )';

Comment created.

Elapsed time: 0.18900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_CONSTRAINTS.TABLE_OWNER 
        IS 'Owner of the table (or view) associated with the constraint definition';

Comment created.

Elapsed time: 0.19100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_CONSTRAINTS.TABLE_SCHEMA 
        IS 'Schema of the table (or view) associated with the constraint definition';

Comment created.

Elapsed time: 0.18400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_CONSTRAINTS.TABLE_NAME 
        IS 'Name of the table (or view) associated with the constraint definition';

Comment created.

Elapsed time: 0.18200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_CONSTRAINTS.SEARCH_CONDITION
        IS 'Text of search condition for a check constraint';

Comment created.

Elapsed time: 0.18500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_CONSTRAINTS.R_OWNER
        IS 'Owner of the unique constraint definition for the referenced table';

Comment created.

Elapsed time: 0.19600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_CONSTRAINTS.R_SCHEMA
        IS 'Schema of the unique constraint definition for the referenced table';

Comment created.

Elapsed time: 0.18500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_CONSTRAINTS.R_CONSTRAINT_NAME
        IS 'Name of the unique constraint definition for the referenced table';

Comment created.

Elapsed time: 0.18400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_CONSTRAINTS.DELETE_RULE
        IS 'Delete rule for a referential constraint: the value in ( NO ACTION, RESTRICT, CASCADE, SET NULL, SET DEFAULT )';

Comment created.

Elapsed time: 0.18800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_CONSTRAINTS.UPDATE_RULE
        IS 'Update rule for a referential constraint: the value in ( NO ACTION, RESTRICT, CASCADE, SET NULL, SET DEFAULT )';

Comment created.

Elapsed time: 0.19200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_CONSTRAINTS.STATUS
        IS 'Enforcement status of the constraint: the value in ( ENABLED, DISABLE )';

Comment created.

Elapsed time: 0.26600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_CONSTRAINTS.DEFERRABLE
        IS 'Indicates whether the constraint is deferrable (DEFERRABLE) or not (NOT DEFERRABLE)';

Comment created.

Elapsed time: 0.18900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_CONSTRAINTS.DEFERRED
        IS 'Indicates whether the constraint was initially deferred (DEFERRED) or not (IMMEDIATE)';

Comment created.

Elapsed time: 0.20000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_CONSTRAINTS.VALIDATED
        IS 'Indicates whether all data may obey the constraint or not: the value in ( VALIDATED, NOT VALIDATED )';

Comment created.

Elapsed time: 0.19000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_CONSTRAINTS.GENERATED
        IS 'Indicates whether the name of the constraint is user-generated (USER NAME) or system-generated (GENERATED NAME)';

Comment created.

Elapsed time: 0.18300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_CONSTRAINTS.BAD
        IS 'Indicates whether this constraint specifies a century in an ambiguous manner (BAD) or not (NULL)';

Comment created.

Elapsed time: 0.18300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_CONSTRAINTS.RELY
        IS 'When NOT VALIDATED, indicates whether the constraint is to be taken into account for query rewrite (RELY) or not (NULL)';

Comment created.

Elapsed time: 0.19500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_CONSTRAINTS.LAST_CHANGE
        IS 'When the constraint was last enabled or disabled';

Comment created.

Elapsed time: 0.18400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_CONSTRAINTS.INDEX_OWNER
        IS 'Owner of the index associated with the key constraint';

Comment created.

Elapsed time: 0.20300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_CONSTRAINTS.INDEX_SCHEMA
        IS 'Schema of the index associated with the key constraint';

Comment created.

Elapsed time: 0.18200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_CONSTRAINTS.INDEX_NAME
        IS 'Name of the index associated with the key constraint';

Comment created.

Elapsed time: 0.19000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_CONSTRAINTS.INVALID
        IS 'Indicates whether the constraint is invalid (INVALID) or not (NULL)';

Comment created.

Elapsed time: 0.18200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_CONSTRAINTS.VIEW_RELATED
        IS 'Indicates whether the constraint depends on a view (DEPEND ON VIEW) or not (NULL)';

Comment created.

Elapsed time: 0.20200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_CONSTRAINTS.COMMENTS
        IS 'Comments of the constraint definition';

Comment created.

Elapsed time: 0.18600 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.ALL_CONSTRAINTS TO PUBLIC;

Grant succeeded.

Elapsed time: 0.16300 ms 


COMMIT;

Commit complete.

Elapsed time: 0.34800 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS ALL_CONSTRAINTS;

Synonym dropped.

Elapsed time: 0.09400 ms 

CREATE PUBLIC SYNONYM ALL_CONSTRAINTS FOR DICTIONARY_SCHEMA.ALL_CONSTRAINTS;

Synonym created.

Elapsed time: 0.11400 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05000 ms 


--##############################################################
--# DICTIONARY_SCHEMA.USER_CONSTRAINTS
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.USER_CONSTRAINTS;

View dropped.

Elapsed time: 3.37000 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.USER_CONSTRAINTS 
(
       OWNER
     , CONSTRAINT_SCHEMA
     , CONSTRAINT_NAME
     , CONSTRAINT_TYPE
     , TABLE_OWNER 
     , TABLE_SCHEMA 
     , TABLE_NAME 
     , SEARCH_CONDITION
     , R_OWNER
     , R_SCHEMA
     , R_CONSTRAINT_NAME
     , DELETE_RULE
     , UPDATE_RULE
     , STATUS
     , DEFERRABLE
     , DEFERRED
     , VALIDATED
     , GENERATED
     , BAD
     , RELY
     , LAST_CHANGE
     , INDEX_OWNER
     , INDEX_SCHEMA
     , INDEX_NAME
     , INVALID
     , VIEW_RELATED
     , COMMENTS
)
AS
SELECT 
       acon.OWNER
     , acon.CONSTRAINT_SCHEMA
     , acon.CONSTRAINT_NAME
     , acon.CONSTRAINT_TYPE
     , acon.TABLE_OWNER 
     , acon.TABLE_SCHEMA 
     , acon.TABLE_NAME 
     , acon.SEARCH_CONDITION
     , acon.R_OWNER
     , acon.R_SCHEMA
     , acon.R_CONSTRAINT_NAME
     , acon.DELETE_RULE
     , acon.UPDATE_RULE
     , acon.STATUS
     , acon.DEFERRABLE
     , acon.DEFERRED
     , acon.VALIDATED
     , acon.GENERATED
     , acon.BAD
     , acon.RELY
     , acon.LAST_CHANGE
     , acon.INDEX_OWNER
     , acon.INDEX_SCHEMA
     , acon.INDEX_NAME
     , acon.INVALID
     , acon.VIEW_RELATED
     , acon.COMMENTS
  FROM 
       DICTIONARY_SCHEMA.ALL_CONSTRAINTS AS acon
 WHERE 
       acon.TABLE_OWNER = CURRENT_USER
;

View created.

Elapsed time: 5.11600 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.USER_CONSTRAINTS 
        IS 'USER_CONSTRAINTS describes all constraint definitions on tables owned by the current user.';

Comment created.

Elapsed time: 0.16600 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_CONSTRAINTS.OWNER
        IS 'Owner of the constraint definition';

Comment created.

Elapsed time: 0.19700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_CONSTRAINTS.CONSTRAINT_SCHEMA
        IS 'Schema of the constraint definition';

Comment created.

Elapsed time: 0.27100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_CONSTRAINTS.CONSTRAINT_NAME
        IS 'Name of the constraint definition';

Comment created.

Elapsed time: 0.19100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_CONSTRAINTS.CONSTRAINT_TYPE
        IS 'Type of the constraint definition: the value in ( C: check constraint, P: Primary key, U: Unique Key, R: Referential intgrity )';

Comment created.

Elapsed time: 0.18800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_CONSTRAINTS.TABLE_OWNER 
        IS 'Owner of the table (or view) associated with the constraint definition';

Comment created.

Elapsed time: 0.18400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_CONSTRAINTS.TABLE_SCHEMA 
        IS 'Schema of the table (or view) associated with the constraint definition';

Comment created.

Elapsed time: 0.19900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_CONSTRAINTS.TABLE_NAME 
        IS 'Name of the table (or view) associated with the constraint definition';

Comment created.

Elapsed time: 0.18200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_CONSTRAINTS.SEARCH_CONDITION
        IS 'Text of search condition for a check constraint';

Comment created.

Elapsed time: 0.26400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_CONSTRAINTS.R_OWNER
        IS 'Owner of the unique constraint definition for the referenced table';

Comment created.

Elapsed time: 0.19500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_CONSTRAINTS.R_SCHEMA
        IS 'Schema of the unique constraint definition for the referenced table';

Comment created.

Elapsed time: 0.18400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_CONSTRAINTS.R_CONSTRAINT_NAME
        IS 'Name of the unique constraint definition for the referenced table';

Comment created.

Elapsed time: 0.18500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_CONSTRAINTS.DELETE_RULE
        IS 'Delete rule for a referential constraint: the value in ( NO ACTION, RESTRICT, CASCADE, SET NULL, SET DEFAULT )';

Comment created.

Elapsed time: 0.18400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_CONSTRAINTS.UPDATE_RULE
        IS 'Update rule for a referential constraint: the value in ( NO ACTION, RESTRICT, CASCADE, SET NULL, SET DEFAULT )';

Comment created.

Elapsed time: 0.19200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_CONSTRAINTS.STATUS
        IS 'Enforcement status of the constraint: the value in ( ENABLED, DISABLE )';

Comment created.

Elapsed time: 0.20800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_CONSTRAINTS.DEFERRABLE
        IS 'Indicates whether the constraint is deferrable (DEFERRABLE) or not (NOT DEFERRABLE)';

Comment created.

Elapsed time: 0.18600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_CONSTRAINTS.DEFERRED
        IS 'Indicates whether the constraint was initially deferred (DEFERRED) or not (IMMEDIATE)';

Comment created.

Elapsed time: 0.18200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_CONSTRAINTS.VALIDATED
        IS 'Indicates whether all data may obey the constraint or not: the value in ( VALIDATED, NOT VALIDATED )';

Comment created.

Elapsed time: 0.19200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_CONSTRAINTS.GENERATED
        IS 'Indicates whether the name of the constraint is user-generated (USER NAME) or system-generated (GENERATED NAME)';

Comment created.

Elapsed time: 0.18100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_CONSTRAINTS.BAD
        IS 'Indicates whether this constraint specifies a century in an ambiguous manner (BAD) or not (NULL)';

Comment created.

Elapsed time: 0.18200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_CONSTRAINTS.RELY
        IS 'When NOT VALIDATED, indicates whether the constraint is to be taken into account for query rewrite (RELY) or not (NULL)';

Comment created.

Elapsed time: 0.18800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_CONSTRAINTS.LAST_CHANGE
        IS 'When the constraint was last enabled or disabled';

Comment created.

Elapsed time: 0.19600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_CONSTRAINTS.INDEX_OWNER
        IS 'Owner of the index associated with the key constraint';

Comment created.

Elapsed time: 0.23200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_CONSTRAINTS.INDEX_SCHEMA
        IS 'Schema of the index associated with the key constraint';

Comment created.

Elapsed time: 0.18800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_CONSTRAINTS.INDEX_NAME
        IS 'Name of the index associated with the key constraint';

Comment created.

Elapsed time: 0.19000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_CONSTRAINTS.INVALID
        IS 'Indicates whether the constraint is invalid (INVALID) or not (NULL)';

Comment created.

Elapsed time: 0.18500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_CONSTRAINTS.VIEW_RELATED
        IS 'Indicates whether the constraint depends on a view (DEPEND ON VIEW) or not (NULL)';

Comment created.

Elapsed time: 0.18400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_CONSTRAINTS.COMMENTS
        IS 'Comments of the constraint definition';

Comment created.

Elapsed time: 0.20000 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.USER_CONSTRAINTS TO PUBLIC;

Grant succeeded.

Elapsed time: 0.16500 ms 


COMMIT;

Commit complete.

Elapsed time: 0.34900 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS USER_CONSTRAINTS;

Synonym dropped.

Elapsed time: 0.09700 ms 

CREATE PUBLIC SYNONYM USER_CONSTRAINTS FOR DICTIONARY_SCHEMA.USER_CONSTRAINTS;

Synonym created.

Elapsed time: 0.12900 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05100 ms 


--##############################################################
--# DICTIONARY_SCHEMA.DBA_CONS_COLUMNS
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.DBA_CONS_COLUMNS;

View dropped.

Elapsed time: 1.48100 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.DBA_CONS_COLUMNS
(
       OWNER
     , CONSTRAINT_SCHEMA
     , CONSTRAINT_NAME    
     , TABLE_OWNER
     , TABLE_SCHEMA
     , TABLE_NAME
     , COLUMN_NAME
     , POSITION
)
AS
SELECT
       auth1.AUTHORIZATION_NAME
     , sch1.SCHEMA_NAME
     , tcon.CONSTRAINT_NAME
     , auth2.AUTHORIZATION_NAME
     , sch2.SCHEMA_NAME
     , tab.TABLE_NAME
     , col.COLUMN_NAME
     , CAST( vwccu.ORDINAL_POSITION AS NUMBER )
  FROM
       ( ( 
           SELECT 
                  CONSTRAINT_OWNER_ID
                , CONSTRAINT_SCHEMA_ID
                , CONSTRAINT_ID
                , TABLE_OWNER_ID
                , TABLE_SCHEMA_ID
                , TABLE_ID
                , COLUMN_ID
                , CAST( NULL AS NUMBER )
             FROM DEFINITION_SCHEMA.CHECK_COLUMN_USAGE ccu 
         )
         UNION ALL
         (
           SELECT
                  rfc.CONSTRAINT_OWNER_ID
                , rfc.CONSTRAINT_SCHEMA_ID
                , rfc.CONSTRAINT_ID
                , kcu.TABLE_OWNER_ID
                , kcu.TABLE_SCHEMA_ID
                , kcu.TABLE_ID
                , kcu.COLUMN_ID
                , kcu.ORDINAL_POSITION
             FROM DEFINITION_SCHEMA.REFERENTIAL_CONSTRAINTS AS rfc
                , DEFINITION_SCHEMA.KEY_COLUMN_USAGE        AS kcu 
            WHERE
                  rfc.CONSTRAINT_ID = kcu.CONSTRAINT_ID
         ) 
         UNION ALL
         (
           SELECT
                  tcn.CONSTRAINT_OWNER_ID
                , tcn.CONSTRAINT_SCHEMA_ID
                , tcn.CONSTRAINT_ID
                , kcu.TABLE_OWNER_ID
                , kcu.TABLE_SCHEMA_ID
                , kcu.TABLE_ID
                , kcu.COLUMN_ID
                , kcu.ORDINAL_POSITION
             FROM DEFINITION_SCHEMA.TABLE_CONSTRAINTS       AS tcn
                , DEFINITION_SCHEMA.KEY_COLUMN_USAGE        AS kcu 
            WHERE
                  tcn.CONSTRAINT_ID = kcu.CONSTRAINT_ID
              AND tcn.CONSTRAINT_TYPE IN ( 'UNIQUE', 'PRIMARY KEY' )
         ) 
       ) AS vwccu ( CONSTRAINT_OWNER_ID
                  , CONSTRAINT_SCHEMA_ID
                  , CONSTRAINT_ID
                  , TABLE_OWNER_ID
                  , TABLE_SCHEMA_ID
                  , TABLE_ID
                  , COLUMN_ID
                  , ORDINAL_POSITION )
     , DEFINITION_SCHEMA.COLUMNS            AS col
     , DEFINITION_SCHEMA.TABLES             AS tab
     , DEFINITION_SCHEMA.TABLE_CONSTRAINTS  AS tcon
     , DEFINITION_SCHEMA.SCHEMATA           AS sch1
     , DEFINITION_SCHEMA.SCHEMATA           AS sch2
     , DEFINITION_SCHEMA.AUTHORIZATIONS     AS auth1
     , DEFINITION_SCHEMA.AUTHORIZATIONS     AS auth2
 WHERE
       vwccu.COLUMN_ID            = col.COLUMN_ID
   AND vwccu.CONSTRAINT_ID        = tcon.CONSTRAINT_ID
   AND vwccu.CONSTRAINT_SCHEMA_ID = sch1.SCHEMA_ID
   AND vwccu.CONSTRAINT_OWNER_ID  = auth1.AUTH_ID
   AND vwccu.TABLE_ID             = tab.TABLE_ID
   AND vwccu.TABLE_SCHEMA_ID      = sch2.SCHEMA_ID
   AND vwccu.TABLE_OWNER_ID       = auth2.AUTH_ID
   AND EXISTS ( SELECT GRANTEE_ID  
                  FROM DEFINITION_SCHEMA.DATABASE_PRIVILEGES pvdba 
                 WHERE pvdba.PRIVILEGE_TYPE IN ( 'ACCESS CONTROL' ) 
                   AND ( pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                 FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS audba 
                                                WHERE audba.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                             ) 
                      -- OR  
                      -- pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                      --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                       )  
               ) 
 ORDER BY
       vwccu.CONSTRAINT_SCHEMA_ID
     , vwccu.CONSTRAINT_ID
     , vwccu.ORDINAL_POSITION
;

View created.

Elapsed time: 2.91700 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.DBA_CONS_COLUMNS
        IS 'DBA_CONS_COLUMNS describes all columns in the database that are specified in constraints.';

Comment created.

Elapsed time: 0.17000 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_CONS_COLUMNS.OWNER
        IS 'Owner of the constraint definition';

Comment created.

Elapsed time: 0.19900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_CONS_COLUMNS.CONSTRAINT_SCHEMA
        IS 'Schema of the constraint definition';

Comment created.

Elapsed time: 0.19200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_CONS_COLUMNS.CONSTRAINT_NAME    
        IS 'Name of the constraint definition';

Comment created.

Elapsed time: 0.19700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_CONS_COLUMNS.TABLE_OWNER
        IS 'Owner of the table with the constraint definition';

Comment created.

Elapsed time: 0.20300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_CONS_COLUMNS.TABLE_SCHEMA
        IS 'Schema of the table with the constraint definition';

Comment created.

Elapsed time: 0.18800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_CONS_COLUMNS.TABLE_NAME
        IS 'Name of the table with the constraint definition';

Comment created.

Elapsed time: 0.18300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_CONS_COLUMNS.COLUMN_NAME
        IS 'Name of the column or attribute of the object type column specified in the constraint definition';

Comment created.

Elapsed time: 0.19200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_CONS_COLUMNS.POSITION
        IS 'Original position of the column or attribute in the definition of the object';

Comment created.

Elapsed time: 0.18000 ms 


--#####################
--# grant view
--#####################

--GRANT SELECT ON TABLE DICTIONARY_SCHEMA.DBA_CONS_COLUMNS TO DBA;
GRANT SELECT ON TABLE DICTIONARY_SCHEMA.DBA_CONS_COLUMNS TO PUBLIC;

Grant succeeded.

Elapsed time: 0.15800 ms 


COMMIT;

Commit complete.

Elapsed time: 0.16300 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS DBA_CONS_COLUMNS;

Synonym dropped.

Elapsed time: 0.09200 ms 

CREATE PUBLIC SYNONYM DBA_CONS_COLUMNS FOR DICTIONARY_SCHEMA.DBA_CONS_COLUMNS;

Synonym created.

Elapsed time: 0.12000 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05100 ms 



--##############################################################
--# DICTIONARY_SCHEMA.ALL_CONS_COLUMNS
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.ALL_CONS_COLUMNS;

View dropped.

Elapsed time: 1.60000 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.ALL_CONS_COLUMNS
(
       OWNER
     , CONSTRAINT_SCHEMA
     , CONSTRAINT_NAME    
     , TABLE_OWNER
     , TABLE_SCHEMA
     , TABLE_NAME
     , COLUMN_NAME
     , POSITION
)
AS
SELECT
       auth1.AUTHORIZATION_NAME
     , sch1.SCHEMA_NAME
     , tcon.CONSTRAINT_NAME
     , auth2.AUTHORIZATION_NAME
     , sch2.SCHEMA_NAME
     , tab.TABLE_NAME
     , col.COLUMN_NAME
     , CAST( vwccu.ORDINAL_POSITION AS NUMBER )
  FROM
       ( ( 
           SELECT 
                  CONSTRAINT_OWNER_ID
                , CONSTRAINT_SCHEMA_ID
                , CONSTRAINT_ID
                , TABLE_OWNER_ID
                , TABLE_SCHEMA_ID
                , TABLE_ID
                , COLUMN_ID
                , CAST( NULL AS NUMBER )
             FROM DEFINITION_SCHEMA.CHECK_COLUMN_USAGE ccu 
         )
         UNION ALL
         (
           SELECT
                  rfc.CONSTRAINT_OWNER_ID
                , rfc.CONSTRAINT_SCHEMA_ID
                , rfc.CONSTRAINT_ID
                , kcu.TABLE_OWNER_ID
                , kcu.TABLE_SCHEMA_ID
                , kcu.TABLE_ID
                , kcu.COLUMN_ID
                , kcu.ORDINAL_POSITION
             FROM DEFINITION_SCHEMA.REFERENTIAL_CONSTRAINTS AS rfc
                , DEFINITION_SCHEMA.KEY_COLUMN_USAGE        AS kcu 
            WHERE
                  rfc.CONSTRAINT_ID = kcu.CONSTRAINT_ID
         ) 
         UNION ALL
         (
           SELECT
                  tcn.CONSTRAINT_OWNER_ID
                , tcn.CONSTRAINT_SCHEMA_ID
                , tcn.CONSTRAINT_ID
                , kcu.TABLE_OWNER_ID
                , kcu.TABLE_SCHEMA_ID
                , kcu.TABLE_ID
                , kcu.COLUMN_ID
                , kcu.ORDINAL_POSITION
             FROM DEFINITION_SCHEMA.TABLE_CONSTRAINTS       AS tcn
                , DEFINITION_SCHEMA.KEY_COLUMN_USAGE        AS kcu 
            WHERE
                  tcn.CONSTRAINT_ID = kcu.CONSTRAINT_ID
              AND tcn.CONSTRAINT_TYPE IN ( 'UNIQUE', 'PRIMARY KEY' )
         ) 
       ) AS vwccu ( CONSTRAINT_OWNER_ID
                  , CONSTRAINT_SCHEMA_ID
                  , CONSTRAINT_ID
                  , TABLE_OWNER_ID
                  , TABLE_SCHEMA_ID
                  , TABLE_ID
                  , COLUMN_ID
                  , ORDINAL_POSITION )
     , DEFINITION_SCHEMA.COLUMNS            AS col
     , DEFINITION_SCHEMA.TABLES             AS tab
     , DEFINITION_SCHEMA.TABLE_CONSTRAINTS  AS tcon
     , DEFINITION_SCHEMA.SCHEMATA           AS sch1
     , DEFINITION_SCHEMA.SCHEMATA           AS sch2
     , DEFINITION_SCHEMA.AUTHORIZATIONS     AS auth1
     , DEFINITION_SCHEMA.AUTHORIZATIONS     AS auth2
 WHERE
       vwccu.COLUMN_ID            = col.COLUMN_ID
   AND vwccu.CONSTRAINT_ID        = tcon.CONSTRAINT_ID
   AND vwccu.CONSTRAINT_SCHEMA_ID = sch1.SCHEMA_ID
   AND vwccu.CONSTRAINT_OWNER_ID  = auth1.AUTH_ID
   AND vwccu.TABLE_ID             = tab.TABLE_ID
   AND vwccu.TABLE_SCHEMA_ID      = sch2.SCHEMA_ID
   AND vwccu.TABLE_OWNER_ID       = auth2.AUTH_ID
   AND ( col.COLUMN_ID IN ( SELECT pvcol.COLUMN_ID 
                             FROM DEFINITION_SCHEMA.COLUMN_PRIVILEGES AS pvcol 
                            WHERE ( pvcol.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                            FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS aucol 
                                                           WHERE aucol.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                        ) 
                                 -- OR  
                                 -- pvcol.GRANTEE_ID IN ( SELECT AUTH_ID 
                                 --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                  )
                         ) 
         OR 
         tab.TABLE_ID IN ( SELECT pvtab.TABLE_ID 
                             FROM DEFINITION_SCHEMA.TABLE_PRIVILEGES AS pvtab 
                            WHERE ( pvtab.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                            FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS autab 
                                                           WHERE autab.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                        ) 
                                 -- OR  
                                 -- pvtab.GRANTEE_ID IN ( SELECT AUTH_ID 
                                 --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                  )
                          ) 
         OR 
         tab.SCHEMA_ID IN ( SELECT pvsch.SCHEMA_ID 
                              FROM DEFINITION_SCHEMA.SCHEMA_PRIVILEGES AS pvsch 
                             WHERE pvsch.PRIVILEGE_TYPE IN ( 'CONTROL SCHEMA', 'ALTER TABLE', 'DROP TABLE', 
                                                             'SELECT TABLE', 'INSERT TABLE', 'DELETE TABLE', 'UPDATE TABLE', 'LOCK TABLE' ) 
                               AND ( pvsch.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                             FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS ausch 
                                                            WHERE ausch.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                         ) 
                                  -- OR  
                                  -- pvsch.GRANTEE_ID IN ( SELECT AUTH_ID 
                                  --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                   )
                          ) 
         OR 
         EXISTS ( SELECT GRANTEE_ID  
                    FROM DEFINITION_SCHEMA.DATABASE_PRIVILEGES pvdba 
                   WHERE pvdba.PRIVILEGE_TYPE IN ( 'ALTER ANY TABLE', 'DROP ANY TABLE', 
                                                   'SELECT ANY TABLE', 'INSERT ANY TABLE', 'DELETE ANY TABLE', 'UPDATE ANY TABLE', 'LOCK ANY TABLE' ) 
                     AND ( pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                   FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS audba 
                                                  WHERE audba.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                ) 
                        -- OR  
                        -- pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                        --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                         )  
                ) 
       ) 
 ORDER BY
       vwccu.CONSTRAINT_SCHEMA_ID
     , vwccu.CONSTRAINT_ID
     , vwccu.ORDINAL_POSITION
;

View created.

Elapsed time: 2.55600 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.ALL_CONS_COLUMNS
        IS 'ALL_CONS_COLUMNS describes columns that are accessible to the current user and that are specified in constraints.';

Comment created.

Elapsed time: 0.18600 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_CONS_COLUMNS.OWNER
        IS 'Owner of the constraint definition';

Comment created.

Elapsed time: 0.19200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_CONS_COLUMNS.CONSTRAINT_SCHEMA
        IS 'Schema of the constraint definition';

Comment created.

Elapsed time: 0.18600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_CONS_COLUMNS.CONSTRAINT_NAME    
        IS 'Name of the constraint definition';

Comment created.

Elapsed time: 0.19700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_CONS_COLUMNS.TABLE_OWNER
        IS 'Owner of the table with the constraint definition';

Comment created.

Elapsed time: 0.19900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_CONS_COLUMNS.TABLE_SCHEMA
        IS 'Schema of the table with the constraint definition';

Comment created.

Elapsed time: 0.19100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_CONS_COLUMNS.TABLE_NAME
        IS 'Name of the table with the constraint definition';

Comment created.

Elapsed time: 0.18600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_CONS_COLUMNS.COLUMN_NAME
        IS 'Name of the column or attribute of the object type column specified in the constraint definition';

Comment created.

Elapsed time: 0.19300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_CONS_COLUMNS.POSITION
        IS 'Original position of the column or attribute in the definition of the object';

Comment created.

Elapsed time: 0.18000 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.ALL_CONS_COLUMNS TO PUBLIC;

Grant succeeded.

Elapsed time: 0.15800 ms 


COMMIT;

Commit complete.

Elapsed time: 0.16100 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS ALL_CONS_COLUMNS;

Synonym dropped.

Elapsed time: 0.09900 ms 

CREATE PUBLIC SYNONYM ALL_CONS_COLUMNS FOR DICTIONARY_SCHEMA.ALL_CONS_COLUMNS;

Synonym created.

Elapsed time: 0.11400 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05100 ms 


--##############################################################
--# DICTIONARY_SCHEMA.USER_CONS_COLUMNS
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.USER_CONS_COLUMNS;

View dropped.

Elapsed time: 1.56800 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.USER_CONS_COLUMNS
(
       OWNER
     , CONSTRAINT_SCHEMA
     , CONSTRAINT_NAME    
     , TABLE_OWNER
     , TABLE_SCHEMA
     , TABLE_NAME
     , COLUMN_NAME
     , POSITION
)
AS
SELECT
       acc.OWNER
     , acc.CONSTRAINT_SCHEMA
     , acc.CONSTRAINT_NAME    
     , acc.TABLE_OWNER
     , acc.TABLE_SCHEMA
     , acc.TABLE_NAME
     , acc.COLUMN_NAME
     , acc.POSITION
  FROM
       DICTIONARY_SCHEMA.ALL_CONS_COLUMNS  AS acc
 WHERE
       ( 
         acc.OWNER = CURRENT_USER
         OR
         acc.TABLE_OWNER = CURRENT_USER 
       )
;

View created.

Elapsed time: 2.49700 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.USER_CONS_COLUMNS
        IS 'USER_CONS_COLUMNS describes columns that are owned by the current user and that are specified in constraint definitions. ';

Comment created.

Elapsed time: 0.17700 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_CONS_COLUMNS.OWNER
        IS 'Owner of the constraint definition';

Comment created.

Elapsed time: 0.19100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_CONS_COLUMNS.CONSTRAINT_SCHEMA
        IS 'Schema of the constraint definition';

Comment created.

Elapsed time: 0.18800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_CONS_COLUMNS.CONSTRAINT_NAME    
        IS 'Name of the constraint definition';

Comment created.

Elapsed time: 0.18500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_CONS_COLUMNS.TABLE_OWNER
        IS 'Owner of the table with the constraint definition';

Comment created.

Elapsed time: 0.19400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_CONS_COLUMNS.TABLE_SCHEMA
        IS 'Schema of the table with the constraint definition';

Comment created.

Elapsed time: 0.18100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_CONS_COLUMNS.TABLE_NAME
        IS 'Name of the table with the constraint definition';

Comment created.

Elapsed time: 0.18200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_CONS_COLUMNS.COLUMN_NAME
        IS 'Name of the column or attribute of the object type column specified in the constraint definition';

Comment created.

Elapsed time: 0.23600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_CONS_COLUMNS.POSITION
        IS 'Original position of the column or attribute in the definition of the object';

Comment created.

Elapsed time: 0.19100 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.USER_CONS_COLUMNS TO PUBLIC;

Grant succeeded.

Elapsed time: 0.15500 ms 


COMMIT;

Commit complete.

Elapsed time: 0.15700 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS USER_CONS_COLUMNS;

Synonym dropped.

Elapsed time: 0.09300 ms 

CREATE PUBLIC SYNONYM USER_CONS_COLUMNS FOR DICTIONARY_SCHEMA.USER_CONS_COLUMNS;

Synonym created.

Elapsed time: 0.11000 ms 

COMMIT;

Commit complete.

Elapsed time: 0.04900 ms 


--##############################################################
--# DICTIONARY_SCHEMA.DBA_DB_PRIVS
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.DBA_DB_PRIVS;

View dropped.

Elapsed time: 1.00500 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.DBA_DB_PRIVS
(
       GRANTOR
     , GRANTEE
     , PRIVILEGE
     , GRANTABLE
)
AS
SELECT
       grantor.AUTHORIZATION_NAME
     , grantee.AUTHORIZATION_NAME
     , pvdba.PRIVILEGE_TYPE
     , CAST( CASE WHEN pvdba.IS_GRANTABLE = TRUE THEN 'YES' ELSE 'NO' END AS VARCHAR(3 OCTETS) )
  FROM
       DEFINITION_SCHEMA.DATABASE_PRIVILEGES  AS pvdba
     , DEFINITION_SCHEMA.AUTHORIZATIONS       AS grantor
     , DEFINITION_SCHEMA.AUTHORIZATIONS       AS grantee
 WHERE
       pvdba.GRANTOR_ID = grantor.AUTH_ID
   AND pvdba.GRANTEE_ID = grantee.AUTH_ID
   AND EXISTS ( SELECT GRANTEE_ID  
                  FROM DEFINITION_SCHEMA.DATABASE_PRIVILEGES pvdba 
                 WHERE pvdba.PRIVILEGE_TYPE IN ( 'ACCESS CONTROL' ) 
                   AND ( pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                 FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS audba 
                                                WHERE audba.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                             ) 
                      -- OR  
                      -- pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                      --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                       )  
               ) 
 ORDER BY 
       pvdba.GRANTOR_ID
     , pvdba.GRANTEE_ID
     , pvdba.PRIVILEGE_TYPE_ID   
;

View created.

Elapsed time: 1.26400 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.DBA_DB_PRIVS
        IS 'DBA_DB_PRIVS describes all database grants in the database.';

Comment created.

Elapsed time: 0.16500 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_DB_PRIVS.GRANTOR
        IS 'Name of the user who performed the grant';

Comment created.

Elapsed time: 0.20300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_DB_PRIVS.GRANTEE
        IS 'Name of the user or role to whom access was granted';

Comment created.

Elapsed time: 0.18400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_DB_PRIVS.PRIVILEGE
        IS 'Privilege on the database';

Comment created.

Elapsed time: 0.19000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_DB_PRIVS.GRANTABLE
        IS 'Indicates whether the privilege was granted with the GRANT OPTION (YES) or not (NO)';

Comment created.

Elapsed time: 0.18100 ms 


--#####################
--# grant view
--#####################

--GRANT SELECT ON TABLE DICTIONARY_SCHEMA.DBA_DB_PRIVS TO DBA;
GRANT SELECT ON TABLE DICTIONARY_SCHEMA.DBA_DB_PRIVS TO PUBLIC;

Grant succeeded.

Elapsed time: 0.15200 ms 


COMMIT;

Commit complete.

Elapsed time: 0.11900 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS DBA_DB_PRIVS;

Synonym dropped.

Elapsed time: 0.09300 ms 

CREATE PUBLIC SYNONYM DBA_DB_PRIVS FOR DICTIONARY_SCHEMA.DBA_DB_PRIVS;

Synonym created.

Elapsed time: 0.12200 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05000 ms 


--##############################################################
--# DICTIONARY_SCHEMA.ALL_DB_PRIVS
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.ALL_DB_PRIVS;

View dropped.

Elapsed time: 1.23900 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.ALL_DB_PRIVS
(
       GRANTOR
     , GRANTEE
     , PRIVILEGE
     , GRANTABLE
)
AS
SELECT
       grantor.AUTHORIZATION_NAME
     , grantee.AUTHORIZATION_NAME
     , pvdba.PRIVILEGE_TYPE
     , CAST( CASE WHEN pvdba.IS_GRANTABLE = TRUE THEN 'YES' ELSE 'NO' END AS VARCHAR(3 OCTETS) )
  FROM
       DEFINITION_SCHEMA.DATABASE_PRIVILEGES  AS pvdba
     , DEFINITION_SCHEMA.AUTHORIZATIONS       AS grantor
     , DEFINITION_SCHEMA.AUTHORIZATIONS       AS grantee
 WHERE
       grantor.AUTHORIZATION_NAME <> '_SYSTEM'
   AND pvdba.GRANTOR_ID = grantor.AUTH_ID
   AND pvdba.GRANTEE_ID = grantee.AUTH_ID
   AND ( grantee.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )
      -- OR  
      -- pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
      --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
         OR
         grantor.AUTHORIZATION_NAME = CURRENT_USER
       )
 ORDER BY 
       pvdba.GRANTOR_ID
     , pvdba.GRANTEE_ID
     , pvdba.PRIVILEGE_TYPE_ID   
;

View created.

Elapsed time: 1.42000 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.ALL_DB_PRIVS
        IS 'ALL_DB_PRIVS describes the database grants, for which the current user is the grantor, or grantee, or for which an enabled role or PUBLIC is the grantee.';

Comment created.

Elapsed time: 0.16600 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_DB_PRIVS.GRANTOR
        IS 'Name of the user who performed the grant';

Comment created.

Elapsed time: 0.19000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_DB_PRIVS.GRANTEE
        IS 'Name of the user or role to whom access was granted';

Comment created.

Elapsed time: 0.19200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_DB_PRIVS.PRIVILEGE
        IS 'Privilege on the database';

Comment created.

Elapsed time: 0.18200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_DB_PRIVS.GRANTABLE
        IS 'Indicates whether the privilege was granted with the GRANT OPTION (YES) or not (NO)';

Comment created.

Elapsed time: 0.18000 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.ALL_DB_PRIVS TO PUBLIC;

Grant succeeded.

Elapsed time: 0.15500 ms 


COMMIT;

Commit complete.

Elapsed time: 0.12800 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS ALL_DB_PRIVS;

Synonym dropped.

Elapsed time: 0.09300 ms 

CREATE PUBLIC SYNONYM ALL_DB_PRIVS FOR DICTIONARY_SCHEMA.ALL_DB_PRIVS;

Synonym created.

Elapsed time: 0.11000 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05000 ms 



--##############################################################
--# DICTIONARY_SCHEMA.ALL_DB_PRIVS_MADE
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.ALL_DB_PRIVS_MADE;

View dropped.

Elapsed time: 0.99600 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.ALL_DB_PRIVS_MADE
(
       GRANTEE
     , GRANTOR
     , PRIVILEGE
     , GRANTABLE
)
AS
SELECT
       pvdba.GRANTEE
     , pvdba.GRANTOR
     , pvdba.PRIVILEGE
     , pvdba.GRANTABLE
  FROM
       DICTIONARY_SCHEMA.ALL_DB_PRIVS pvdba
 WHERE 
       pvdba.GRANTOR = CURRENT_USER
;

View created.

Elapsed time: 1.38100 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.ALL_DB_PRIVS_MADE
        IS 'ALL_DB_PRIVS_MADE describes the database grants for which the current user is the grantor.';

Comment created.

Elapsed time: 0.16400 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_DB_PRIVS_MADE.GRANTEE
        IS 'Name of the user or role to whom access was granted';

Comment created.

Elapsed time: 0.19000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_DB_PRIVS_MADE.GRANTOR
        IS 'Name of the user who performed the grant';

Comment created.

Elapsed time: 0.18400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_DB_PRIVS_MADE.PRIVILEGE
        IS 'Privilege on the database';

Comment created.

Elapsed time: 0.18400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_DB_PRIVS_MADE.GRANTABLE
        IS 'Indicates whether the privilege was granted with the GRANT OPTION (YES) or not (NO)';

Comment created.

Elapsed time: 0.18700 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.ALL_DB_PRIVS_MADE TO PUBLIC;

Grant succeeded.

Elapsed time: 0.15300 ms 


COMMIT;

Commit complete.

Elapsed time: 0.12200 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS ALL_DB_PRIVS_MADE;

Synonym dropped.

Elapsed time: 0.09800 ms 

CREATE PUBLIC SYNONYM ALL_DB_PRIVS_MADE FOR DICTIONARY_SCHEMA.ALL_DB_PRIVS_MADE;

Synonym created.

Elapsed time: 0.11200 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05100 ms 


--##############################################################
--# DICTIONARY_SCHEMA.ALL_DB_PRIVS_RECD
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.ALL_DB_PRIVS_RECD;

View dropped.

Elapsed time: 0.97100 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.ALL_DB_PRIVS_RECD
(
       GRANTEE
     , GRANTOR
     , PRIVILEGE
     , GRANTABLE
)
AS
SELECT
       pvdba.GRANTEE
     , pvdba.GRANTOR
     , pvdba.PRIVILEGE
     , pvdba.GRANTABLE
  FROM
       DICTIONARY_SCHEMA.ALL_DB_PRIVS pvdba
 WHERE 
       ( 
         pvdba.GRANTEE IN ( CURRENT_USER, 'PUBLIC' )
      -- OR  
      -- pvdba.GRANTEE IN ( SELECT AUTH_NAME 
      --                      FROM INORMATION_SCHEMA.ENABLED_ROLES )  
       )
;

View created.

Elapsed time: 1.30700 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.ALL_DB_PRIVS_RECD
        IS 'ALL_DB_PRIVS_RECD describes the database grants, for which the current user is the grantee, or for which an enabled role or PUBLIC is the grantee.';

Comment created.

Elapsed time: 0.16600 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_DB_PRIVS_RECD.GRANTEE
        IS 'Name of the user or role to whom access was granted';

Comment created.

Elapsed time: 0.18900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_DB_PRIVS_RECD.GRANTOR
        IS 'Name of the user who performed the grant';

Comment created.

Elapsed time: 0.18600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_DB_PRIVS_RECD.PRIVILEGE
        IS 'Privilege on the database';

Comment created.

Elapsed time: 0.19700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_DB_PRIVS_RECD.GRANTABLE
        IS 'Indicates whether the privilege was granted with the GRANT OPTION (YES) or not (NO)';

Comment created.

Elapsed time: 0.21000 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.ALL_DB_PRIVS_RECD TO PUBLIC;

Grant succeeded.

Elapsed time: 0.15400 ms 


COMMIT;

Commit complete.

Elapsed time: 0.11700 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS ALL_DB_PRIVS_RECD;

Synonym dropped.

Elapsed time: 0.09800 ms 

CREATE PUBLIC SYNONYM ALL_DB_PRIVS_RECD FOR DICTIONARY_SCHEMA.ALL_DB_PRIVS_RECD;

Synonym created.

Elapsed time: 0.12300 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05000 ms 





--##############################################################
--# DICTIONARY_SCHEMA.DBA_EXTENTS
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.DBA_EXTENTS;

View dropped.

Elapsed time: 1.80200 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.DBA_EXTENTS
(
       OWNER 
     , SEGMENT_SCHEMA
     , SEGMENT_NAME
     , PARTITION_NAME
     , SEGMENT_TYPE
     , TABLESPACE_NAME
     , EXTENT_ID
     , FILE_ID
     , BLOCK_ID
     , BYTES
     , BLOCKS
     , RELATIVE_FNO
)
AS
SELECT
       auth.AUTHORIZATION_NAME                         -- OWNER 
     , sch.SCHEMA_NAME                                 -- SEGMENT_SCHEMA
     , sobj.OBJECT_NAME                                -- SEGMENT_NAME
     , CAST( NULL AS VARCHAR(128 OCTETS) )             -- PARTITION_NAME
     , CAST( sobj.OBJECT_TYPE AS VARCHAR(32 OCTETS) )  -- SEGMENT_TYPE
     , spc.TABLESPACE_NAME                             -- TABLESPACE_NAME
     , CAST( NULL AS NUMBER )                          -- EXTENT_ID
     , CAST( NULL AS NUMBER )                          -- FILE_ID
     , CAST( NULL AS NUMBER )                          -- BLOCK_ID
     , CAST( xspc.EXTSIZE AS NUMBER )                  -- BYTES
     , CAST( xspc.EXTSIZE / xspc.PAGE_SIZE AS NUMBER ) -- BLOCKS
     , CAST( NULL AS NUMBER )                          -- RELATIVE_FNO
  FROM
       ( SELECT 
                tab.TABLESPACE_ID
              , tab.OWNER_ID
              , tab.SCHEMA_ID
              , tab.TABLE_ID
              , tab.TABLE_NAME
              , CAST( 'TABLE' AS VARCHAR(32 OCTETS) )
           FROM 
                DEFINITION_SCHEMA.TABLES AS tab 
          WHERE tab.TABLE_TYPE = 'BASE TABLE'
          UNION ALL
         SELECT 
                idx.TABLESPACE_ID
              , idx.OWNER_ID
              , idx.SCHEMA_ID
              , idx.INDEX_ID
              , idx.INDEX_NAME
              , CAST( 'INDEX' AS VARCHAR(32 OCTETS) )
           FROM 
                DEFINITION_SCHEMA.INDEXES AS idx
       ) AS sobj (   SPACE_ID
                   , OWNER_ID
                   , SCHEMA_ID
                   , OBJECT_ID
                   , OBJECT_NAME
                   , OBJECT_TYPE )
     , DEFINITION_SCHEMA.TABLESPACES     AS spc
     , FIXED_TABLE_SCHEMA.X$TABLESPACE   AS xspc
     , DEFINITION_SCHEMA.SCHEMATA        AS sch 
     , DEFINITION_SCHEMA.AUTHORIZATIONS  AS auth
 WHERE
       sobj.SPACE_ID    = spc.TABLESPACE_ID
   AND sobj.SPACE_ID    = xspc.ID
   AND sobj.SCHEMA_ID   = sch.SCHEMA_ID
   AND sobj.OWNER_ID    = auth.AUTH_ID
   AND EXISTS ( SELECT GRANTEE_ID  
                  FROM DEFINITION_SCHEMA.DATABASE_PRIVILEGES pvdba 
                 WHERE pvdba.PRIVILEGE_TYPE IN ( 'ACCESS CONTROL' ) 
                   AND ( pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                 FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS audba 
                                                WHERE audba.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                             ) 
                      -- OR  
                      -- pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                      --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                       )  
               ) 
 ORDER BY 
       sobj.SCHEMA_ID
     , sobj.OBJECT_TYPE DESC
     , sobj.OBJECT_ID
;

View created.

Elapsed time: 2.50100 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.DBA_EXTENTS
        IS 'DBA_EXTENTS describes the extents comprising the segments in all tablespaces in the database.';

Comment created.

Elapsed time: 0.17500 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_EXTENTS.OWNER 
        IS 'Owner of the segment associated with the extent';

Comment created.

Elapsed time: 0.23400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_EXTENTS.SEGMENT_SCHEMA
        IS 'Schema of the segment associated with the extent';

Comment created.

Elapsed time: 0.18700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_EXTENTS.SEGMENT_NAME
        IS 'Name of the segment associated with the extent';

Comment created.

Elapsed time: 0.19400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_EXTENTS.PARTITION_NAME
        IS 'Object Partition Name (Set to NULL for non-partitioned objects)';

Comment created.

Elapsed time: 0.18400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_EXTENTS.SEGMENT_TYPE
        IS 'Type of the segment: TABLE, INDEX';

Comment created.

Elapsed time: 0.18100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_EXTENTS.TABLESPACE_NAME
        IS 'Name of the tablespace containing the extent';

Comment created.

Elapsed time: 0.18100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_EXTENTS.EXTENT_ID
        IS 'Extent number in the segment';

Comment created.

Elapsed time: 0.17800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_EXTENTS.FILE_ID
        IS 'File identifier number of the file containing the extent';

Comment created.

Elapsed time: 0.18300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_EXTENTS.BLOCK_ID
        IS 'Starting block number of the extent';

Comment created.

Elapsed time: 0.18100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_EXTENTS.BYTES
        IS 'Size of the extent in bytes';

Comment created.

Elapsed time: 0.17600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_EXTENTS.BLOCKS
        IS 'Size of the extent in Oracle blocks';

Comment created.

Elapsed time: 0.17900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_EXTENTS.RELATIVE_FNO
        IS 'Relative file number of the first extent block';

Comment created.

Elapsed time: 0.19000 ms 


--#####################
--# grant view
--#####################

--GRANT SELECT ON TABLE DICTIONARY_SCHEMA.DBA_EXTENTS TO DBA;
GRANT SELECT ON TABLE DICTIONARY_SCHEMA.DBA_EXTENTS TO PUBLIC;

Grant succeeded.

Elapsed time: 0.15200 ms 


COMMIT;

Commit complete.

Elapsed time: 0.19900 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS DBA_EXTENTS;

Synonym dropped.

Elapsed time: 0.09500 ms 

CREATE PUBLIC SYNONYM DBA_EXTENTS FOR DICTIONARY_SCHEMA.DBA_EXTENTS;

Synonym created.

Elapsed time: 0.10900 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05800 ms 


--##############################################################
--# DICTIONARY_SCHEMA.USER_EXTENTS
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.USER_EXTENTS;

View dropped.

Elapsed time: 1.41000 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.USER_EXTENTS
(
       SEGMENT_SCHEMA
     , SEGMENT_NAME
     , PARTITION_NAME
     , SEGMENT_TYPE
     , TABLESPACE_NAME
     , EXTENT_ID
     , BYTES
     , BLOCKS
)
AS
SELECT
       sch.SCHEMA_NAME                          -- SEGMENT_SCHEMA
     , sobj.OBJECT_NAME                         -- SEGMENT_NAME
     , CAST( NULL AS VARCHAR(128 OCTETS) )             -- PARTITION_NAME
     , CAST( sobj.OBJECT_TYPE AS VARCHAR(32 OCTETS) )  -- SEGMENT_TYPE
     , spc.TABLESPACE_NAME                      -- TABLESPACE_NAME
     , CAST( NULL AS NUMBER )                   -- EXTENT_ID
     , CAST( xspc.EXTSIZE AS NUMBER )           -- BYTES
     , CAST( xspc.EXTSIZE / 8192 AS NUMBER )    -- BLOCKS
  FROM
       ( SELECT 
                tab.TABLESPACE_ID
              , tab.OWNER_ID
              , tab.SCHEMA_ID
              , tab.TABLE_ID
              , tab.TABLE_NAME
              , CAST( 'TABLE' AS VARCHAR(32 OCTETS) )
           FROM 
                DEFINITION_SCHEMA.TABLES AS tab 
          WHERE tab.TABLE_TYPE = 'BASE TABLE'
          UNION ALL
         SELECT 
                idx.TABLESPACE_ID
              , idx.OWNER_ID
              , idx.SCHEMA_ID
              , idx.INDEX_ID
              , idx.INDEX_NAME
              , CAST( 'INDEX' AS VARCHAR(32 OCTETS) )
           FROM 
                DEFINITION_SCHEMA.INDEXES AS idx
       ) AS sobj (   SPACE_ID
                   , OWNER_ID
                   , SCHEMA_ID
                   , OBJECT_ID
                   , OBJECT_NAME
                   , OBJECT_TYPE )
     , DEFINITION_SCHEMA.TABLESPACES     AS spc
     , FIXED_TABLE_SCHEMA.X$TABLESPACE   AS xspc
     , DEFINITION_SCHEMA.SCHEMATA        AS sch 
     , DEFINITION_SCHEMA.AUTHORIZATIONS  AS auth
 WHERE
       sobj.SPACE_ID    = spc.TABLESPACE_ID
   AND sobj.SPACE_ID    = xspc.ID
   AND sobj.SCHEMA_ID   = sch.SCHEMA_ID
   AND sobj.OWNER_ID    = auth.AUTH_ID
   AND auth.AUTHORIZATION_NAME = CURRENT_USER
 ORDER BY 
       sobj.SCHEMA_ID
     , sobj.OBJECT_TYPE DESC
     , sobj.OBJECT_ID
;

View created.

Elapsed time: 1.99300 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.USER_EXTENTS
        IS 'USER_EXTENTS describes the extents comprising the segments owned by the current user''s objects.';

Comment created.

Elapsed time: 0.16500 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_EXTENTS.SEGMENT_SCHEMA
        IS 'Schema of the segment associated with the extent';

Comment created.

Elapsed time: 0.20200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_EXTENTS.SEGMENT_NAME
        IS 'Name of the segment associated with the extent';

Comment created.

Elapsed time: 0.18600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_EXTENTS.PARTITION_NAME
        IS 'Object Partition Name (Set to NULL for non-partitioned objects)';

Comment created.

Elapsed time: 0.18200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_EXTENTS.SEGMENT_TYPE
        IS 'Type of the segment: TABLE, INDEX';

Comment created.

Elapsed time: 0.18200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_EXTENTS.TABLESPACE_NAME
        IS 'Name of the tablespace containing the extent';

Comment created.

Elapsed time: 0.18900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_EXTENTS.EXTENT_ID
        IS 'Extent number in the segment';

Comment created.

Elapsed time: 0.18100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_EXTENTS.BYTES
        IS 'Size of the extent in bytes';

Comment created.

Elapsed time: 0.18000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_EXTENTS.BLOCKS
        IS 'Size of the extent in Oracle blocks';

Comment created.

Elapsed time: 0.17900 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.USER_EXTENTS TO PUBLIC;

Grant succeeded.

Elapsed time: 0.15300 ms 


COMMIT;

Commit complete.

Elapsed time: 0.16000 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS USER_EXTENTS;

Synonym dropped.

Elapsed time: 0.09600 ms 

CREATE PUBLIC SYNONYM USER_EXTENTS FOR DICTIONARY_SCHEMA.USER_EXTENTS;

Synonym created.

Elapsed time: 0.11100 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05700 ms 


--##############################################################
--# DICTIONARY_SCHEMA.DBA_INDEXES
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.DBA_INDEXES;

View dropped.

Elapsed time: 7.09400 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.DBA_INDEXES
(
       OWNER
     , INDEX_SCHEMA
     , INDEX_NAME
     , INDEX_TYPE
     , TABLE_OWNER
     , TABLE_SCHEMA
     , TABLE_NAME
     , TABLE_TYPE
     , UNIQUENESS
     , COMPRESSION
     , PREFIX_LENGTH
     , TABLESPACE_NAME
     , INI_TRANS
     , MAX_TRANS
     , INITIAL_EXTENT
     , NEXT_EXTENT
     , MIN_EXTENTS
     , MAX_EXTENTS
     , PCT_INCREASE
     , PCT_THRESHOLD
     , INCLUDE_COLUMN
     , FREELISTS
     , FREELIST_GROUPS
     , PCT_FREE
     , LOGGING
     , BLOCKS
     , BLEVEL
     , LEAF_BLOCKS
     , DISTINCT_KEYS
     , AVG_LEAF_BLOCKS_PER_KEY
     , AVG_DATA_BLOCKS_PER_KEY
     , CLUSTERING_FACTOR
     , STATUS
     , NUM_ROWS
     , SAMPLE_SIZE
     , LAST_ANALYZED
     , DEGREE
     , INSTANCES
     , PARTITIONED
     , TEMPORARY
     , GENERATED
     , SECONDARY
     , BUFFER_POOL
     , FLASH_CACHE
     , CELL_FLASH_CACHE
     , USER_STATS
     , DURATION
     , PCT_DIRECT_ACCESS
     , ITYP_OWNER
     , ITYP_NAME
     , PARAMETERS
     , GLOBAL_STATS
     , DOMIDX_STATUS
     , DOMIDX_OPSTATUS
     , FUNCIDX_STATUS
     , JOIN_INDEX
     , IOT_REDUNDANT_PKEY_ELIM
     , DROPPED
     , VISIBILITY
     , DOMIDX_MANAGEMENT
     , SEGMENT_CREATED
     , COMMENTS
)
AS
SELECT
       auth1.AUTHORIZATION_NAME                -- OWNER
     , sch1.SCHEMA_NAME                        -- INDEX_SCHEMA
     , idx.INDEX_NAME                          -- INDEX_NAME
     , CAST( 'NORMAL' AS VARCHAR(32 OCTETS) )  -- INDEX_TYPE
     , auth2.AUTHORIZATION_NAME                -- TABLE_OWNER
     , sch2.SCHEMA_NAME                        -- TABLE_SCHEMA
     , tab.TABLE_NAME                          -- TABLE_NAME
     , CAST( 'TABLE' AS VARCHAR(32 OCTETS) )   -- TABLE_TYPE
     , CAST( CASE WHEN idx.IS_UNIQUE = TRUE 
                  THEN 'UNIQUE'
                  ELSE 'NONUNIQUE'
                  END
             AS VARCHAR(32 OCTETS) )             -- UNIQUENESS
     , CAST( 'DISABLED' AS VARCHAR(32 OCTETS) )  -- COMPRESSION
     , CAST( NULL AS NUMBER )                    -- PREFIX_LENGTH
     , spc.TABLESPACE_NAME                       -- TABLESPACE_NAME
     , CAST( xidx.INITRANS AS NUMBER )           -- INI_TRANS
     , CAST( xidx.MAXTRANS AS NUMBER )           -- MAX_TRANS
     , CAST( xseg.INITIAL_EXTENTS AS NUMBER )    -- INITIAL_EXTENT
     , CAST( xseg.NEXT_EXTENTS AS NUMBER )       -- NEXT_EXTENT
     , CAST( xseg.MIN_EXTENTS AS NUMBER )        -- MIN_EXTENTS
     , CAST( xseg.MAX_EXTENTS AS NUMBER )        -- MAX_EXTENTS
     , CAST( NULL AS NUMBER )                    -- PCT_INCREASE
     , CAST( NULL AS NUMBER )                    -- PCT_THRESHOLD
     , CAST( NULL AS NUMBER )                    -- INCLUDE_COLUMN
     , CAST( NULL AS NUMBER )                    -- FREELISTS
     , CAST( NULL AS NUMBER )                    -- FREELIST_GROUPS
     , CAST( xidx.PCTFREE AS NUMBER )            -- PCT_FREE
     , CAST( CASE WHEN xidx.IS_LOGGING = TRUE
                  THEN 'YES'
                  ELSE 'NO'
                  END
             AS VARCHAR(3 OCTETS) )         -- LOGGING
     , CAST( xseg.ALLOC_PAGE_COUNT AS NUMBER )-- BLOCKS
     , CAST( NULL AS NUMBER )               -- BLEVEL
     , CAST( NULL AS NUMBER )               -- LEAF_BLOCKS
     , CAST( istat.NUM_DISTINCT AS NUMBER ) -- DISTINCT_KEYS
     , CAST( NULL AS NUMBER )               -- AVG_LEAF_BLOCKS_PER_KEY
     , CAST( NULL AS NUMBER )               -- AVG_DATA_BLOCKS_PER_KEY
     , CAST( NULL AS NUMBER )               -- CLUSTERING_FACTOR
     , CAST( CASE WHEN idx.INVALID = TRUE
                  THEN 'UNUSABLE'
                  ELSE 'VALID'
                  END
             AS VARCHAR(32 OCTETS) )        -- STATUS
     , CAST( NULL AS NUMBER )               -- NUM_ROWS
     , CAST( istat.NUM_SAMPLE AS NUMBER )   -- SAMPLE_SIZE
     , CAST( istat.ANALYZED_TIME AS TIMESTAMP ) -- LAST_ANALYZED
     , CAST( NULL AS VARCHAR(32 OCTETS) )   -- DEGREE
     , CAST( NULL AS VARCHAR(32 OCTETS) )   -- INSTANCES
     , CAST( 'NO' AS VARCHAR(3 OCTETS) )    -- PARTITIONED
     , CAST( CASE WHEN tab.TABLE_TYPE IN ( 'GLOBAL TEMPORARY', 'LOCAL TEMPORARY' )
                  THEN 'Y'
                  ELSE 'N'
                  END
             AS VARCHAR(1 OCTETS) )                -- TEMPORARY
     , CAST( CASE WHEN idx.BY_CONSTRAINT = TRUE 
                  THEN 'Y'
                  ELSE 'N'
                  END
             AS VARCHAR(1 OCTETS) )                -- GENERATED
     , CAST( 'N' AS VARCHAR(1 OCTETS) )            -- SECONDARY
     , CAST( NULL AS VARCHAR(32 OCTETS) )          -- BUFFER_POOL
     , CAST( 'NONE' AS VARCHAR(32 OCTETS) )        -- FLASH_CACHE
     , CAST( 'NONE' AS VARCHAR(32 OCTETS) )        -- CELL_FLASH_CACHE
     , CAST( NULL AS VARCHAR(3 OCTETS) )           -- USER_STATS
     , CAST( NULL AS VARCHAR(32 OCTETS) )          -- DURATION
     , CAST( NULL AS NUMBER )                      -- PCT_DIRECT_ACCESS
     , CAST( NULL AS VARCHAR(128 OCTETS) )         -- ITYP_OWNER
     , CAST( NULL AS VARCHAR(128 OCTETS) )         -- ITYP_NAME
     , CAST( NULL AS VARCHAR(1024 OCTETS) )        -- PARAMETERS
     , CAST( NULL AS VARCHAR(3 OCTETS) )           -- GLOBAL_STATS
     , CAST( NULL AS VARCHAR(32 OCTETS) )          -- DOMIDX_STATUS
     , CAST( NULL AS VARCHAR(32 OCTETS) )          -- DOMIDX_OPSTATUS
     , CAST( NULL AS VARCHAR(32 OCTETS) )          -- FUNCIDX_STATUS
     , CAST( 'NO' AS VARCHAR(3 OCTETS) )           -- JOIN_INDEX
     , CAST( NULL AS VARCHAR(3 OCTETS) )           -- IOT_REDUNDANT_PKEY_ELIM
     , CAST( 'NO' AS VARCHAR(3 OCTETS) )           -- DROPPED
     , CAST( 'YES' AS VARCHAR(3 OCTETS) )          -- VISIBILITY
     , CAST( NULL AS VARCHAR(32 OCTETS) )          -- DOMIDX_MANAGEMENT
     , CAST( 'YES' AS VARCHAR(3 OCTETS) )          -- SEGMENT_CREATED
     , idx.COMMENTS                                -- COMMENTS
  FROM
       DEFINITION_SCHEMA.INDEXES               AS idx
       LEFT OUTER JOIN
       DEFINITION_SCHEMA.STAT_INDEX            AS istat
       ON idx.INDEX_ID = istat.INDEX_ID
     , DEFINITION_SCHEMA.TABLES                AS tab 
     , DEFINITION_SCHEMA.TABLESPACES           AS spc  
     , FIXED_TABLE_SCHEMA.X$INDEX_HEADER       AS xidx
     , FIXED_TABLE_SCHEMA.X$SEGMENT            AS xseg
     , DEFINITION_SCHEMA.SCHEMATA              AS sch1 
     , DEFINITION_SCHEMA.AUTHORIZATIONS        AS auth1 
     , DEFINITION_SCHEMA.SCHEMATA              AS sch2 
     , DEFINITION_SCHEMA.AUTHORIZATIONS        AS auth2 
 WHERE
       idx.TABLE_ID          = tab.TABLE_ID
   AND idx.TABLESPACE_ID     = spc.TABLESPACE_ID
   AND idx.PHYSICAL_ID       = xidx.PHYSICAL_ID
   AND idx.PHYSICAL_ID       = xseg.PHYSICAL_ID
   AND idx.SCHEMA_ID         = sch1.SCHEMA_ID
   AND idx.OWNER_ID          = auth1.AUTH_ID
   AND idx.TABLE_SCHEMA_ID   = sch2.SCHEMA_ID
   AND idx.TABLE_OWNER_ID    = auth2.AUTH_ID
   AND EXISTS ( SELECT GRANTEE_ID  
                  FROM DEFINITION_SCHEMA.DATABASE_PRIVILEGES pvdba 
                 WHERE pvdba.PRIVILEGE_TYPE IN ( 'ACCESS CONTROL' ) 
                   AND ( pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                 FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS audba 
                                                WHERE audba.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                             ) 
                      -- OR  
                      -- pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                      --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                       )  
               ) 
 ORDER BY 
       idx.SCHEMA_ID
     , idx.INDEX_ID
;

View created.

Elapsed time: 8.97800 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.DBA_INDEXES
        IS 'DBA_INDEXES describes all indexes in the database.';

Comment created.

Elapsed time: 0.18600 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_INDEXES.OWNER
        IS 'Owner of the index';

Comment created.

Elapsed time: 0.20200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_INDEXES.INDEX_SCHEMA
        IS 'Schema of the index';

Comment created.

Elapsed time: 0.19000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_INDEXES.INDEX_NAME
        IS 'Name of the index';

Comment created.

Elapsed time: 0.18900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_INDEXES.INDEX_TYPE
        IS 'Type of the index: the value in ( NORMAL, NORMAL/REV, BITMAP, FUNCTION-BASED NORMAL, FUNCTION-BASED NORMAL/REV, FUNCTION-BASED BITMAP, IOT - TOP, DOMAIN )';

Comment created.

Elapsed time: 0.19900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_INDEXES.TABLE_OWNER
        IS 'Owner of the indexed object';

Comment created.

Elapsed time: 0.19200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_INDEXES.TABLE_SCHEMA
        IS 'Schema of the indexed object';

Comment created.

Elapsed time: 0.18700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_INDEXES.TABLE_NAME
        IS 'Name of the indexed object';

Comment created.

Elapsed time: 0.18900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_INDEXES.TABLE_TYPE
        IS 'Type of the indexed object: the value in ( NEXT OBJECT, INDEX, TABLE, VIEW, SYNONYM, SEQUENCE )';

Comment created.

Elapsed time: 0.19700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_INDEXES.UNIQUENESS
        IS 'Indicates whether the index is unique (UNIQUE) or nonunique (NONUNIQUE)';

Comment created.

Elapsed time: 0.18600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_INDEXES.COMPRESSION
        IS 'Indicates whether index compression is enabled (ENABLED) or not (DISABLED)';

Comment created.

Elapsed time: 0.18600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_INDEXES.PREFIX_LENGTH
        IS 'Number of columns in the prefix of the compression key';

Comment created.

Elapsed time: 0.18600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_INDEXES.TABLESPACE_NAME
        IS 'Name of the tablespace containing the index';

Comment created.

Elapsed time: 0.19700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_INDEXES.INI_TRANS
        IS 'Initial number of transactions';

Comment created.

Elapsed time: 0.18600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_INDEXES.MAX_TRANS
        IS 'Maximum number of transactions';

Comment created.

Elapsed time: 0.18700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_INDEXES.INITIAL_EXTENT
        IS 'Size of the initial extent';

Comment created.

Elapsed time: 0.18600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_INDEXES.NEXT_EXTENT
        IS 'Size of secondary extents';

Comment created.

Elapsed time: 0.19600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_INDEXES.MIN_EXTENTS
        IS 'Minimum number of extents allowed in the segment';

Comment created.

Elapsed time: 0.20600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_INDEXES.MAX_EXTENTS
        IS 'Maximum number of extents allowed in the segment';

Comment created.

Elapsed time: 0.18300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_INDEXES.PCT_INCREASE
        IS 'Percentage increase in extent size';

Comment created.

Elapsed time: 0.18700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_INDEXES.PCT_THRESHOLD
        IS 'Threshold percentage of block space allowed per index entry';

Comment created.

Elapsed time: 0.20000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_INDEXES.INCLUDE_COLUMN
        IS 'Column ID of the last column to be included in index-organized table primary key (non-overflow) index';

Comment created.

Elapsed time: 0.18700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_INDEXES.FREELISTS
        IS 'Number of process freelists allocated to this segment';

Comment created.

Elapsed time: 0.18900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_INDEXES.FREELIST_GROUPS
        IS 'Number of freelist groups allocated to this segment';

Comment created.

Elapsed time: 0.18600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_INDEXES.PCT_FREE
        IS 'Minimum percentage of free space in a block';

Comment created.

Elapsed time: 0.20900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_INDEXES.LOGGING
        IS 'ndicates whether or not changes to the index are logged: (YES) or (NO)';

Comment created.

Elapsed time: 0.18600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_INDEXES.BLOCKS
        IS 'Number of used blocks in the index';

Comment created.

Elapsed time: 0.18700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_INDEXES.BLEVEL
        IS 'B-Tree level (depth of the index from its root block to its leaf blocks)';

Comment created.

Elapsed time: 0.18600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_INDEXES.LEAF_BLOCKS
        IS 'Number of leaf blocks in the index';

Comment created.

Elapsed time: 0.18500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_INDEXES.DISTINCT_KEYS
        IS 'Number of distinct indexed values. ';

Comment created.

Elapsed time: 0.18600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_INDEXES.AVG_LEAF_BLOCKS_PER_KEY
        IS 'Average number of leaf blocks in which each distinct value in the index appears, rounded to the nearest integer';

Comment created.

Elapsed time: 0.18800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_INDEXES.AVG_DATA_BLOCKS_PER_KEY
        IS 'Average number of data blocks in the table that are pointed to by a distinct value in the index rounded to the nearest integer';

Comment created.

Elapsed time: 0.19500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_INDEXES.CLUSTERING_FACTOR
        IS 'Indicates the amount of order of the rows in the table based on the values of the index';

Comment created.

Elapsed time: 0.19000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_INDEXES.STATUS
        IS 'Indicates whether a nonpartitioned index is VALID or UNUSABLE';

Comment created.

Elapsed time: 0.23800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_INDEXES.NUM_ROWS
        IS 'Number of rows in the index';

Comment created.

Elapsed time: 0.19000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_INDEXES.SAMPLE_SIZE
        IS 'Size of the sample used to analyze the index';

Comment created.

Elapsed time: 0.19800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_INDEXES.LAST_ANALYZED
        IS 'Date on which this index was most recently analyzed';

Comment created.

Elapsed time: 0.18700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_INDEXES.DEGREE
        IS 'Number of threads per instance for scanning the index, or DEFAULT';

Comment created.

Elapsed time: 0.18400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_INDEXES.INSTANCES
        IS 'Number of instances across which the indexes to be scanned, or DEFAULT';

Comment created.

Elapsed time: 0.23600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_INDEXES.PARTITIONED
        IS 'Indicates whether the index is partitioned (YES) or not (NO)';

Comment created.

Elapsed time: 0.20100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_INDEXES.TEMPORARY
        IS 'Indicates whether the index is on a temporary table (Y) or not (N)';

Comment created.

Elapsed time: 0.18600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_INDEXES.GENERATED
        IS 'Indicates whether the name of the index is system-generated (Y) or not (N)';

Comment created.

Elapsed time: 0.18600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_INDEXES.SECONDARY
        IS 'Indicates whether the index is a secondary object created by the method of the Data Cartridge (Y) or not (N)';

Comment created.

Elapsed time: 0.18800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_INDEXES.BUFFER_POOL
        IS 'Buffer pool to be used for index blocks';

Comment created.

Elapsed time: 0.18600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_INDEXES.FLASH_CACHE
        IS 'Database Smart Flash Cache hint to be used for index blocks';

Comment created.

Elapsed time: 0.18300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_INDEXES.CELL_FLASH_CACHE
        IS 'Cell flash cache hint to be used for index blocks';

Comment created.

Elapsed time: 0.21100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_INDEXES.USER_STATS
        IS 'Indicates whether statistics were entered directly by the user (YES) or not (NO)';

Comment created.

Elapsed time: 0.20000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_INDEXES.DURATION
        IS 'Indicates the duration of a temporary table';

Comment created.

Elapsed time: 0.18600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_INDEXES.PCT_DIRECT_ACCESS
        IS 'For a secondary index on an index-organized table, the percentage of rows with VALID guess';

Comment created.

Elapsed time: 0.18600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_INDEXES.ITYP_OWNER
        IS 'For a domain index, the owner of the indextype';

Comment created.

Elapsed time: 0.19100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_INDEXES.ITYP_NAME
        IS 'For a domain index, the name of the indextype';

Comment created.

Elapsed time: 0.19700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_INDEXES.PARAMETERS
        IS 'For a domain index, the parameter string';

Comment created.

Elapsed time: 0.18500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_INDEXES.GLOBAL_STATS
        IS 'For partitioned indexes, indicates whether statistics were collected by analyzing the index as a whole (YES) or were estimated from statistics on underlying index partitions and subpartitions (NO)';

Comment created.

Elapsed time: 0.19800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_INDEXES.DOMIDX_STATUS
        IS 'Status of a domain index';

Comment created.

Elapsed time: 0.18700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_INDEXES.DOMIDX_OPSTATUS
        IS 'Status of the operation on a domain index';

Comment created.

Elapsed time: 0.42300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_INDEXES.FUNCIDX_STATUS
        IS 'Status of a function-based index';

Comment created.

Elapsed time: 0.19300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_INDEXES.JOIN_INDEX
        IS 'Indicates whether the index is a join index (YES) or not (NO)';

Comment created.

Elapsed time: 0.18800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_INDEXES.IOT_REDUNDANT_PKEY_ELIM
        IS 'Indicates whether redundant primary key columns are eliminated from secondary indexes on index-organized tables (YES) or not (NO)';

Comment created.

Elapsed time: 0.19800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_INDEXES.DROPPED
        IS 'Indicates whether the index has been dropped and is in the recycle bin (YES) or not (NO);';

Comment created.

Elapsed time: 0.18700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_INDEXES.VISIBILITY
        IS 'Indicates whether the index is VISIBLE or INVISIBLE to the optimizer';

Comment created.

Elapsed time: 0.19800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_INDEXES.DOMIDX_MANAGEMENT
        IS 'If this is a domain index, indicates whether the domain index is system-managed (SYSTEM_MANAGED) or user-managed (USER_MANAGED)';

Comment created.

Elapsed time: 0.18900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_INDEXES.SEGMENT_CREATED
        IS 'Indicates whether the index segment has been created (YES) or not (NO)';

Comment created.

Elapsed time: 0.18700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_INDEXES.COMMENTS
        IS 'Comments of the index';

Comment created.

Elapsed time: 0.18500 ms 


--#####################
--# grant view
--#####################

--GRANT SELECT ON TABLE DICTIONARY_SCHEMA.DBA_INDEXES TO DBA;
GRANT SELECT ON TABLE DICTIONARY_SCHEMA.DBA_INDEXES TO PUBLIC;

Grant succeeded.

Elapsed time: 0.16200 ms 


COMMIT;

Commit complete.

Elapsed time: 0.70200 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS DBA_INDEXES;

Synonym dropped.

Elapsed time: 0.09900 ms 

CREATE PUBLIC SYNONYM DBA_INDEXES FOR DICTIONARY_SCHEMA.DBA_INDEXES;

Synonym created.

Elapsed time: 0.11900 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05200 ms 


--##############################################################
--# DICTIONARY_SCHEMA.ALL_INDEXES
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.ALL_INDEXES;

View dropped.

Elapsed time: 6.69000 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.ALL_INDEXES
(
       OWNER
     , INDEX_SCHEMA
     , INDEX_NAME
     , INDEX_TYPE
     , TABLE_OWNER
     , TABLE_SCHEMA
     , TABLE_NAME
     , TABLE_TYPE
     , UNIQUENESS
     , COMPRESSION
     , PREFIX_LENGTH
     , TABLESPACE_NAME
     , INI_TRANS
     , MAX_TRANS
     , INITIAL_EXTENT
     , NEXT_EXTENT
     , MIN_EXTENTS
     , MAX_EXTENTS
     , PCT_INCREASE
     , PCT_THRESHOLD
     , INCLUDE_COLUMN
     , FREELISTS
     , FREELIST_GROUPS
     , PCT_FREE
     , LOGGING
     , BLOCKS
     , BLEVEL
     , LEAF_BLOCKS
     , DISTINCT_KEYS
     , AVG_LEAF_BLOCKS_PER_KEY
     , AVG_DATA_BLOCKS_PER_KEY
     , CLUSTERING_FACTOR
     , STATUS
     , NUM_ROWS
     , SAMPLE_SIZE
     , LAST_ANALYZED
     , DEGREE
     , INSTANCES
     , PARTITIONED
     , TEMPORARY
     , GENERATED
     , SECONDARY
     , BUFFER_POOL
     , FLASH_CACHE
     , CELL_FLASH_CACHE
     , USER_STATS
     , DURATION
     , PCT_DIRECT_ACCESS
     , ITYP_OWNER
     , ITYP_NAME
     , PARAMETERS
     , GLOBAL_STATS
     , DOMIDX_STATUS
     , DOMIDX_OPSTATUS
     , FUNCIDX_STATUS
     , JOIN_INDEX
     , IOT_REDUNDANT_PKEY_ELIM
     , DROPPED
     , VISIBILITY
     , DOMIDX_MANAGEMENT
     , SEGMENT_CREATED
     , COMMENTS
)
AS
SELECT
       auth1.AUTHORIZATION_NAME                -- OWNER
     , sch1.SCHEMA_NAME                        -- INDEX_SCHEMA
     , idx.INDEX_NAME                          -- INDEX_NAME
     , CAST( 'NORMAL' AS VARCHAR(32 OCTETS) )  -- INDEX_TYPE
     , auth2.AUTHORIZATION_NAME                -- TABLE_OWNER
     , sch2.SCHEMA_NAME                        -- TABLE_SCHEMA
     , tab.TABLE_NAME                          -- TABLE_NAME
     , CAST( 'TABLE' AS VARCHAR(32 OCTETS) )   -- TABLE_TYPE
     , CAST( CASE WHEN idx.IS_UNIQUE = TRUE 
                  THEN 'UNIQUE'
                  ELSE 'NONUNIQUE'
                  END
             AS VARCHAR(32 OCTETS) )             -- UNIQUENESS
     , CAST( 'DISABLED' AS VARCHAR(32 OCTETS) )  -- COMPRESSION
     , CAST( NULL AS NUMBER )                    -- PREFIX_LENGTH
     , spc.TABLESPACE_NAME                       -- TABLESPACE_NAME
     , CAST( xidx.INITRANS AS NUMBER )           -- INI_TRANS
     , CAST( xidx.MAXTRANS AS NUMBER )           -- MAX_TRANS
     , CAST( xseg.INITIAL_EXTENTS AS NUMBER )    -- INITIAL_EXTENT
     , CAST( xseg.NEXT_EXTENTS AS NUMBER )       -- NEXT_EXTENT
     , CAST( xseg.MIN_EXTENTS AS NUMBER )        -- MIN_EXTENTS
     , CAST( xseg.MAX_EXTENTS AS NUMBER )        -- MAX_EXTENTS
     , CAST( NULL AS NUMBER )                    -- PCT_INCREASE
     , CAST( NULL AS NUMBER )                    -- PCT_THRESHOLD
     , CAST( NULL AS NUMBER )                    -- INCLUDE_COLUMN
     , CAST( NULL AS NUMBER )                    -- FREELISTS
     , CAST( NULL AS NUMBER )                    -- FREELIST_GROUPS
     , CAST( xidx.PCTFREE AS NUMBER )            -- PCT_FREE
     , CAST( CASE WHEN xidx.IS_LOGGING = TRUE
                  THEN 'YES'
                  ELSE 'NO'
                  END
             AS VARCHAR(3 OCTETS) )         -- LOGGING
     , CAST( xseg.ALLOC_PAGE_COUNT AS NUMBER )-- BLOCKS
     , CAST( NULL AS NUMBER )               -- BLEVEL
     , CAST( NULL AS NUMBER )               -- LEAF_BLOCKS
     , CAST( istat.NUM_DISTINCT AS NUMBER ) -- DISTINCT_KEYS
     , CAST( NULL AS NUMBER )               -- AVG_LEAF_BLOCKS_PER_KEY
     , CAST( NULL AS NUMBER )               -- AVG_DATA_BLOCKS_PER_KEY
     , CAST( NULL AS NUMBER )               -- CLUSTERING_FACTOR
     , CAST( CASE WHEN idx.INVALID = TRUE
                  THEN 'UNUSABLE'
                  ELSE 'VALID'
                  END
             AS VARCHAR(32 OCTETS) )        -- STATUS
     , CAST( NULL AS NUMBER )               -- NUM_ROWS
     , CAST( istat.NUM_SAMPLE AS NUMBER )   -- SAMPLE_SIZE
     , CAST( istat.ANALYZED_TIME AS TIMESTAMP ) -- LAST_ANALYZED
     , CAST( NULL AS VARCHAR(32 OCTETS) )   -- DEGREE
     , CAST( NULL AS VARCHAR(32 OCTETS) )   -- INSTANCES
     , CAST( 'NO' AS VARCHAR(3 OCTETS) )    -- PARTITIONED
     , CAST( CASE WHEN tab.TABLE_TYPE IN ( 'GLOBAL TEMPORARY', 'LOCAL TEMPORARY' )
                  THEN 'Y'
                  ELSE 'N'
                  END
             AS VARCHAR(1 OCTETS) )                -- TEMPORARY
     , CAST( CASE WHEN idx.BY_CONSTRAINT = TRUE 
                  THEN 'Y'
                  ELSE 'N'
                  END
             AS VARCHAR(1 OCTETS) )                -- GENERATED
     , CAST( 'N' AS VARCHAR(1 OCTETS) )            -- SECONDARY
     , CAST( NULL AS VARCHAR(32 OCTETS) )          -- BUFFER_POOL
     , CAST( 'NONE' AS VARCHAR(32 OCTETS) )        -- FLASH_CACHE
     , CAST( 'NONE' AS VARCHAR(32 OCTETS) )        -- CELL_FLASH_CACHE
     , CAST( NULL AS VARCHAR(3 OCTETS) )           -- USER_STATS
     , CAST( NULL AS VARCHAR(32 OCTETS) )          -- DURATION
     , CAST( NULL AS NUMBER )                      -- PCT_DIRECT_ACCESS
     , CAST( NULL AS VARCHAR(128 OCTETS) )         -- ITYP_OWNER
     , CAST( NULL AS VARCHAR(128 OCTETS) )         -- ITYP_NAME
     , CAST( NULL AS VARCHAR(1024 OCTETS) )        -- PARAMETERS
     , CAST( NULL AS VARCHAR(3 OCTETS) )           -- GLOBAL_STATS
     , CAST( NULL AS VARCHAR(32 OCTETS) )          -- DOMIDX_STATUS
     , CAST( NULL AS VARCHAR(32 OCTETS) )          -- DOMIDX_OPSTATUS
     , CAST( NULL AS VARCHAR(32 OCTETS) )          -- FUNCIDX_STATUS
     , CAST( 'NO' AS VARCHAR(3 OCTETS) )           -- JOIN_INDEX
     , CAST( NULL AS VARCHAR(3 OCTETS) )           -- IOT_REDUNDANT_PKEY_ELIM
     , CAST( 'NO' AS VARCHAR(3 OCTETS) )           -- DROPPED
     , CAST( 'YES' AS VARCHAR(3 OCTETS) )          -- VISIBILITY
     , CAST( NULL AS VARCHAR(32 OCTETS) )          -- DOMIDX_MANAGEMENT
     , CAST( 'YES' AS VARCHAR(3 OCTETS) )          -- SEGMENT_CREATED
     , idx.COMMENTS                                -- COMMENTS
  FROM
       DEFINITION_SCHEMA.INDEXES               AS idx
       LEFT OUTER JOIN
       DEFINITION_SCHEMA.STAT_INDEX            AS istat
       ON idx.INDEX_ID = istat.INDEX_ID
     , DEFINITION_SCHEMA.TABLES                AS tab 
     , DEFINITION_SCHEMA.TABLESPACES           AS spc  
     , FIXED_TABLE_SCHEMA.X$INDEX_HEADER       AS xidx
     , FIXED_TABLE_SCHEMA.X$SEGMENT            AS xseg
     , DEFINITION_SCHEMA.SCHEMATA              AS sch1 
     , DEFINITION_SCHEMA.AUTHORIZATIONS        AS auth1 
     , DEFINITION_SCHEMA.SCHEMATA              AS sch2 
     , DEFINITION_SCHEMA.AUTHORIZATIONS        AS auth2 
 WHERE
       idx.TABLE_ID          = tab.TABLE_ID
   AND idx.TABLESPACE_ID     = spc.TABLESPACE_ID
   AND idx.PHYSICAL_ID       = xidx.PHYSICAL_ID
   AND idx.PHYSICAL_ID       = xseg.PHYSICAL_ID
   AND idx.SCHEMA_ID         = sch1.SCHEMA_ID
   AND idx.OWNER_ID          = auth1.AUTH_ID
   AND idx.TABLE_SCHEMA_ID   = sch2.SCHEMA_ID
   AND idx.TABLE_OWNER_ID    = auth2.AUTH_ID
   AND ( tab.TABLE_ID IN ( SELECT pvcol.TABLE_ID 
                              FROM DEFINITION_SCHEMA.COLUMN_PRIVILEGES AS pvcol 
                             WHERE ( pvcol.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                             FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS aucol 
                                                            WHERE aucol.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                         ) 
                                  -- OR  
                                  -- pvcol.GRANTEE_ID IN ( SELECT AUTH_ID 
                                  --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                   )
                          ) 
         OR 
         tab.TABLE_ID IN ( SELECT pvtab.TABLE_ID 
                             FROM DEFINITION_SCHEMA.TABLE_PRIVILEGES AS pvtab 
                            WHERE ( pvtab.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                            FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS autab 
                                                           WHERE autab.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                        ) 
                                 -- OR  
                                 -- pvtab.GRANTEE_ID IN ( SELECT AUTH_ID 
                                 --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                  )
                          ) 
         OR 
         tab.SCHEMA_ID IN ( SELECT pvsch.SCHEMA_ID 
                              FROM DEFINITION_SCHEMA.SCHEMA_PRIVILEGES AS pvsch 
                             WHERE pvsch.PRIVILEGE_TYPE IN ( 'CONTROL SCHEMA', 'ALTER TABLE', 'DROP TABLE', 
                                                             'SELECT TABLE', 'INSERT TABLE', 'DELETE TABLE', 'UPDATE TABLE', 'LOCK TABLE' ) 
                               AND ( pvsch.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                             FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS ausch 
                                                            WHERE ausch.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                         ) 
                                  -- OR  
                                  -- pvsch.GRANTEE_ID IN ( SELECT AUTH_ID 
                                  --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                   )
                          ) 
         OR 
         EXISTS ( SELECT GRANTEE_ID  
                    FROM DEFINITION_SCHEMA.DATABASE_PRIVILEGES pvdba 
                   WHERE pvdba.PRIVILEGE_TYPE IN ( 'ALTER ANY TABLE', 'DROP ANY TABLE', 
                                                   'SELECT ANY TABLE', 'INSERT ANY TABLE', 'DELETE ANY TABLE', 'UPDATE ANY TABLE', 'LOCK ANY TABLE' ) 
                     AND ( pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                   FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS audba 
                                                  WHERE audba.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                ) 
                        -- OR  
                        -- pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                        --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                         )  
                ) 
       ) 
 ORDER BY 
       idx.SCHEMA_ID
     , idx.INDEX_ID
;

View created.

Elapsed time: 9.17700 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.ALL_INDEXES
        IS 'ALL_INDEXES describes the indexes on the tables accessible to the current user.';

Comment created.

Elapsed time: 0.17300 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_INDEXES.OWNER
        IS 'Owner of the index';

Comment created.

Elapsed time: 0.20200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_INDEXES.INDEX_SCHEMA
        IS 'Schema of the index';

Comment created.

Elapsed time: 0.19100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_INDEXES.INDEX_NAME
        IS 'Name of the index';

Comment created.

Elapsed time: 0.18800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_INDEXES.INDEX_TYPE
        IS 'Type of the index: the value in ( NORMAL, NORMAL/REV, BITMAP, FUNCTION-BASED NORMAL, FUNCTION-BASED NORMAL/REV, FUNCTION-BASED BITMAP, IOT - TOP, DOMAIN )';

Comment created.

Elapsed time: 0.20300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_INDEXES.TABLE_OWNER
        IS 'Owner of the indexed object';

Comment created.

Elapsed time: 0.18700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_INDEXES.TABLE_SCHEMA
        IS 'Schema of the indexed object';

Comment created.

Elapsed time: 0.18500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_INDEXES.TABLE_NAME
        IS 'Name of the indexed object';

Comment created.

Elapsed time: 0.20200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_INDEXES.TABLE_TYPE
        IS 'Type of the indexed object: the value in ( NEXT OBJECT, INDEX, TABLE, VIEW, SYNONYM, SEQUENCE )';

Comment created.

Elapsed time: 0.19800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_INDEXES.UNIQUENESS
        IS 'Indicates whether the index is unique (UNIQUE) or nonunique (NONUNIQUE)';

Comment created.

Elapsed time: 0.24700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_INDEXES.COMPRESSION
        IS 'Indicates whether index compression is enabled (ENABLED) or not (DISABLED)';

Comment created.

Elapsed time: 0.19000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_INDEXES.PREFIX_LENGTH
        IS 'Number of columns in the prefix of the compression key';

Comment created.

Elapsed time: 0.19100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_INDEXES.TABLESPACE_NAME
        IS 'Name of the tablespace containing the index';

Comment created.

Elapsed time: 0.18900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_INDEXES.INI_TRANS
        IS 'Initial number of transactions';

Comment created.

Elapsed time: 0.18800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_INDEXES.MAX_TRANS
        IS 'Maximum number of transactions';

Comment created.

Elapsed time: 0.18400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_INDEXES.INITIAL_EXTENT
        IS 'Size of the initial extent';

Comment created.

Elapsed time: 0.18900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_INDEXES.NEXT_EXTENT
        IS 'Size of secondary extents';

Comment created.

Elapsed time: 0.18700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_INDEXES.MIN_EXTENTS
        IS 'Minimum number of extents allowed in the segment';

Comment created.

Elapsed time: 0.18400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_INDEXES.MAX_EXTENTS
        IS 'Maximum number of extents allowed in the segment';

Comment created.

Elapsed time: 0.18300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_INDEXES.PCT_INCREASE
        IS 'Percentage increase in extent size';

Comment created.

Elapsed time: 0.20200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_INDEXES.PCT_THRESHOLD
        IS 'Threshold percentage of block space allowed per index entry';

Comment created.

Elapsed time: 0.18800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_INDEXES.INCLUDE_COLUMN
        IS 'Column ID of the last column to be included in index-organized table primary key (non-overflow) index';

Comment created.

Elapsed time: 0.18800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_INDEXES.FREELISTS
        IS 'Number of process freelists allocated to this segment';

Comment created.

Elapsed time: 0.18300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_INDEXES.FREELIST_GROUPS
        IS 'Number of freelist groups allocated to this segment';

Comment created.

Elapsed time: 0.19500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_INDEXES.PCT_FREE
        IS 'Minimum percentage of free space in a block';

Comment created.

Elapsed time: 0.19300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_INDEXES.LOGGING
        IS 'ndicates whether or not changes to the index are logged: (YES) or (NO)';

Comment created.

Elapsed time: 0.20900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_INDEXES.BLOCKS
        IS 'Number of used blocks in the index';

Comment created.

Elapsed time: 0.18600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_INDEXES.BLEVEL
        IS 'B-Tree level (depth of the index from its root block to its leaf blocks)';

Comment created.

Elapsed time: 0.19800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_INDEXES.LEAF_BLOCKS
        IS 'Number of leaf blocks in the index';

Comment created.

Elapsed time: 0.21500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_INDEXES.DISTINCT_KEYS
        IS 'Number of distinct indexed values. ';

Comment created.

Elapsed time: 0.18500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_INDEXES.AVG_LEAF_BLOCKS_PER_KEY
        IS 'Average number of leaf blocks in which each distinct value in the index appears, rounded to the nearest integer';

Comment created.

Elapsed time: 0.18700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_INDEXES.AVG_DATA_BLOCKS_PER_KEY
        IS 'Average number of data blocks in the table that are pointed to by a distinct value in the index rounded to the nearest integer';

Comment created.

Elapsed time: 0.21000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_INDEXES.CLUSTERING_FACTOR
        IS 'Indicates the amount of order of the rows in the table based on the values of the index';

Comment created.

Elapsed time: 0.23700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_INDEXES.STATUS
        IS 'Indicates whether a nonpartitioned index is VALID or UNUSABLE';

Comment created.

Elapsed time: 0.19000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_INDEXES.NUM_ROWS
        IS 'Number of rows in the index';

Comment created.

Elapsed time: 0.19500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_INDEXES.SAMPLE_SIZE
        IS 'Size of the sample used to analyze the index';

Comment created.

Elapsed time: 0.18900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_INDEXES.LAST_ANALYZED
        IS 'Date on which this index was most recently analyzed';

Comment created.

Elapsed time: 0.18700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_INDEXES.DEGREE
        IS 'Number of threads per instance for scanning the index, or DEFAULT';

Comment created.

Elapsed time: 0.19000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_INDEXES.INSTANCES
        IS 'Number of instances across which the indexes to be scanned, or DEFAULT';

Comment created.

Elapsed time: 0.19600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_INDEXES.PARTITIONED
        IS 'Indicates whether the index is partitioned (YES) or not (NO)';

Comment created.

Elapsed time: 0.18600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_INDEXES.TEMPORARY
        IS 'Indicates whether the index is on a temporary table (Y) or not (N)';

Comment created.

Elapsed time: 0.18600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_INDEXES.GENERATED
        IS 'Indicates whether the name of the index is system-generated (Y) or not (N)';

Comment created.

Elapsed time: 0.18600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_INDEXES.SECONDARY
        IS 'Indicates whether the index is a secondary object created by the method of the Data Cartridge (Y) or not (N)';

Comment created.

Elapsed time: 0.19800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_INDEXES.BUFFER_POOL
        IS 'Buffer pool to be used for index blocks';

Comment created.

Elapsed time: 0.20200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_INDEXES.FLASH_CACHE
        IS 'Database Smart Flash Cache hint to be used for index blocks';

Comment created.

Elapsed time: 0.23800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_INDEXES.CELL_FLASH_CACHE
        IS 'Cell flash cache hint to be used for index blocks';

Comment created.

Elapsed time: 0.19000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_INDEXES.USER_STATS
        IS 'Indicates whether statistics were entered directly by the user (YES) or not (NO)';

Comment created.

Elapsed time: 0.19700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_INDEXES.DURATION
        IS 'Indicates the duration of a temporary table';

Comment created.

Elapsed time: 0.19200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_INDEXES.PCT_DIRECT_ACCESS
        IS 'For a secondary index on an index-organized table, the percentage of rows with VALID guess';

Comment created.

Elapsed time: 0.18600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_INDEXES.ITYP_OWNER
        IS 'For a domain index, the owner of the indextype';

Comment created.

Elapsed time: 0.18400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_INDEXES.ITYP_NAME
        IS 'For a domain index, the name of the indextype';

Comment created.

Elapsed time: 0.18700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_INDEXES.PARAMETERS
        IS 'For a domain index, the parameter string';

Comment created.

Elapsed time: 0.18300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_INDEXES.GLOBAL_STATS
        IS 'For partitioned indexes, indicates whether statistics were collected by analyzing the index as a whole (YES) or were estimated from statistics on underlying index partitions and subpartitions (NO)';

Comment created.

Elapsed time: 0.18900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_INDEXES.DOMIDX_STATUS
        IS 'Status of a domain index';

Comment created.

Elapsed time: 0.18400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_INDEXES.DOMIDX_OPSTATUS
        IS 'Status of the operation on a domain index';

Comment created.

Elapsed time: 0.18600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_INDEXES.FUNCIDX_STATUS
        IS 'Status of a function-based index';

Comment created.

Elapsed time: 0.18300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_INDEXES.JOIN_INDEX
        IS 'Indicates whether the index is a join index (YES) or not (NO)';

Comment created.

Elapsed time: 0.18700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_INDEXES.IOT_REDUNDANT_PKEY_ELIM
        IS 'Indicates whether redundant primary key columns are eliminated from secondary indexes on index-organized tables (YES) or not (NO)';

Comment created.

Elapsed time: 0.19500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_INDEXES.DROPPED
        IS 'Indicates whether the index has been dropped and is in the recycle bin (YES) or not (NO);';

Comment created.

Elapsed time: 0.19000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_INDEXES.VISIBILITY
        IS 'Indicates whether the index is VISIBLE or INVISIBLE to the optimizer';

Comment created.

Elapsed time: 0.18500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_INDEXES.DOMIDX_MANAGEMENT
        IS 'If this is a domain index, indicates whether the domain index is system-managed (SYSTEM_MANAGED) or user-managed (USER_MANAGED)';

Comment created.

Elapsed time: 0.18700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_INDEXES.SEGMENT_CREATED
        IS 'Indicates whether the index segment has been created (YES) or not (NO)';

Comment created.

Elapsed time: 0.19400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_INDEXES.COMMENTS
        IS 'Comments of the index';

Comment created.

Elapsed time: 0.18900 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.ALL_INDEXES TO PUBLIC;

Grant succeeded.

Elapsed time: 0.16100 ms 


COMMIT;

Commit complete.

Elapsed time: 0.70100 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS ALL_INDEXES;

Synonym dropped.

Elapsed time: 0.09500 ms 

CREATE PUBLIC SYNONYM ALL_INDEXES FOR DICTIONARY_SCHEMA.ALL_INDEXES;

Synonym created.

Elapsed time: 0.10900 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05000 ms 


--##############################################################
--# DICTIONARY_SCHEMA.USER_INDEXES
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.USER_INDEXES;

View dropped.

Elapsed time: 6.65700 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.USER_INDEXES
(
       INDEX_SCHEMA
     , INDEX_NAME
     , INDEX_TYPE
     , TABLE_OWNER
     , TABLE_SCHEMA
     , TABLE_NAME
     , TABLE_TYPE
     , UNIQUENESS
     , COMPRESSION
     , PREFIX_LENGTH
     , TABLESPACE_NAME
     , INI_TRANS
     , MAX_TRANS
     , INITIAL_EXTENT
     , NEXT_EXTENT
     , MIN_EXTENTS
     , MAX_EXTENTS
     , PCT_INCREASE
     , PCT_THRESHOLD
     , INCLUDE_COLUMN
     , FREELISTS
     , FREELIST_GROUPS
     , PCT_FREE
     , LOGGING
     , BLOCKS
     , BLEVEL
     , LEAF_BLOCKS
     , DISTINCT_KEYS
     , AVG_LEAF_BLOCKS_PER_KEY
     , AVG_DATA_BLOCKS_PER_KEY
     , CLUSTERING_FACTOR
     , STATUS
     , NUM_ROWS
     , SAMPLE_SIZE
     , LAST_ANALYZED
     , DEGREE
     , INSTANCES
     , PARTITIONED
     , TEMPORARY
     , GENERATED
     , SECONDARY
     , BUFFER_POOL
     , FLASH_CACHE
     , CELL_FLASH_CACHE
     , USER_STATS
     , DURATION
     , PCT_DIRECT_ACCESS
     , ITYP_OWNER
     , ITYP_NAME
     , PARAMETERS
     , GLOBAL_STATS
     , DOMIDX_STATUS
     , DOMIDX_OPSTATUS
     , FUNCIDX_STATUS
     , JOIN_INDEX
     , IOT_REDUNDANT_PKEY_ELIM
     , DROPPED
     , VISIBILITY
     , DOMIDX_MANAGEMENT
     , SEGMENT_CREATED
     , COMMENTS
)
AS
SELECT
       aidx.INDEX_SCHEMA
     , aidx.INDEX_NAME
     , aidx.INDEX_TYPE
     , aidx.TABLE_OWNER
     , aidx.TABLE_SCHEMA
     , aidx.TABLE_NAME
     , aidx.TABLE_TYPE
     , aidx.UNIQUENESS
     , aidx.COMPRESSION
     , aidx.PREFIX_LENGTH
     , aidx.TABLESPACE_NAME
     , aidx.INI_TRANS
     , aidx.MAX_TRANS
     , aidx.INITIAL_EXTENT
     , aidx.NEXT_EXTENT
     , aidx.MIN_EXTENTS
     , aidx.MAX_EXTENTS
     , aidx.PCT_INCREASE
     , aidx.PCT_THRESHOLD
     , aidx.INCLUDE_COLUMN
     , aidx.FREELISTS
     , aidx.FREELIST_GROUPS
     , aidx.PCT_FREE
     , aidx.LOGGING
     , aidx.BLOCKS
     , aidx.BLEVEL
     , aidx.LEAF_BLOCKS
     , aidx.DISTINCT_KEYS
     , aidx.AVG_LEAF_BLOCKS_PER_KEY
     , aidx.AVG_DATA_BLOCKS_PER_KEY
     , aidx.CLUSTERING_FACTOR
     , aidx.STATUS
     , aidx.NUM_ROWS
     , aidx.SAMPLE_SIZE
     , aidx.LAST_ANALYZED
     , aidx.DEGREE
     , aidx.INSTANCES
     , aidx.PARTITIONED
     , aidx.TEMPORARY
     , aidx.GENERATED
     , aidx.SECONDARY
     , aidx.BUFFER_POOL
     , aidx.FLASH_CACHE
     , aidx.CELL_FLASH_CACHE
     , aidx.USER_STATS
     , aidx.DURATION
     , aidx.PCT_DIRECT_ACCESS
     , aidx.ITYP_OWNER
     , aidx.ITYP_NAME
     , aidx.PARAMETERS
     , aidx.GLOBAL_STATS
     , aidx.DOMIDX_STATUS
     , aidx.DOMIDX_OPSTATUS
     , aidx.FUNCIDX_STATUS
     , aidx.JOIN_INDEX
     , aidx.IOT_REDUNDANT_PKEY_ELIM
     , aidx.DROPPED
     , aidx.VISIBILITY
     , aidx.DOMIDX_MANAGEMENT
     , aidx.SEGMENT_CREATED
     , aidx.COMMENTS
  FROM
       DICTIONARY_SCHEMA.ALL_INDEXES    AS aidx
 WHERE
       aidx.OWNER = CURRENT_USER
;

View created.

Elapsed time: 8.96600 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.USER_INDEXES
        IS 'USER_INDEXES describes indexes owned by the current user.';

Comment created.

Elapsed time: 0.20400 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_INDEXES.INDEX_SCHEMA
        IS 'Schema of the index';

Comment created.

Elapsed time: 0.22300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_INDEXES.INDEX_NAME
        IS 'Name of the index';

Comment created.

Elapsed time: 0.18600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_INDEXES.INDEX_TYPE
        IS 'Type of the index: the value in ( NORMAL, NORMAL/REV, BITMAP, FUNCTION-BASED NORMAL, FUNCTION-BASED NORMAL/REV, FUNCTION-BASED BITMAP, IOT - TOP, DOMAIN )';

Comment created.

Elapsed time: 0.19300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_INDEXES.TABLE_OWNER
        IS 'Owner of the indexed object';

Comment created.

Elapsed time: 0.20600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_INDEXES.TABLE_SCHEMA
        IS 'Schema of the indexed object';

Comment created.

Elapsed time: 0.18900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_INDEXES.TABLE_NAME
        IS 'Name of the indexed object';

Comment created.

Elapsed time: 0.18400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_INDEXES.TABLE_TYPE
        IS 'Type of the indexed object: the value in ( NEXT OBJECT, INDEX, TABLE, VIEW, SYNONYM, SEQUENCE )';

Comment created.

Elapsed time: 0.18600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_INDEXES.UNIQUENESS
        IS 'Indicates whether the index is unique (UNIQUE) or nonunique (NONUNIQUE)';

Comment created.

Elapsed time: 0.19600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_INDEXES.COMPRESSION
        IS 'Indicates whether index compression is enabled (ENABLED) or not (DISABLED)';

Comment created.

Elapsed time: 0.18500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_INDEXES.PREFIX_LENGTH
        IS 'Number of columns in the prefix of the compression key';

Comment created.

Elapsed time: 0.18400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_INDEXES.TABLESPACE_NAME
        IS 'Name of the tablespace containing the index';

Comment created.

Elapsed time: 0.20100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_INDEXES.INI_TRANS
        IS 'Initial number of transactions';

Comment created.

Elapsed time: 0.19900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_INDEXES.MAX_TRANS
        IS 'Maximum number of transactions';

Comment created.

Elapsed time: 0.18100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_INDEXES.INITIAL_EXTENT
        IS 'Size of the initial extent';

Comment created.

Elapsed time: 0.18600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_INDEXES.NEXT_EXTENT
        IS 'Size of secondary extents';

Comment created.

Elapsed time: 0.18400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_INDEXES.MIN_EXTENTS
        IS 'Minimum number of extents allowed in the segment';

Comment created.

Elapsed time: 0.20100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_INDEXES.MAX_EXTENTS
        IS 'Maximum number of extents allowed in the segment';

Comment created.

Elapsed time: 0.18700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_INDEXES.PCT_INCREASE
        IS 'Percentage increase in extent size';

Comment created.

Elapsed time: 0.18300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_INDEXES.PCT_THRESHOLD
        IS 'Threshold percentage of block space allowed per index entry';

Comment created.

Elapsed time: 0.18300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_INDEXES.INCLUDE_COLUMN
        IS 'Column ID of the last column to be included in index-organized table primary key (non-overflow) index';

Comment created.

Elapsed time: 0.18600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_INDEXES.FREELISTS
        IS 'Number of process freelists allocated to this segment';

Comment created.

Elapsed time: 0.18400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_INDEXES.FREELIST_GROUPS
        IS 'Number of freelist groups allocated to this segment';

Comment created.

Elapsed time: 0.18100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_INDEXES.PCT_FREE
        IS 'Minimum percentage of free space in a block';

Comment created.

Elapsed time: 0.18700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_INDEXES.LOGGING
        IS 'ndicates whether or not changes to the index are logged: (YES) or (NO)';

Comment created.

Elapsed time: 0.18600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_INDEXES.BLOCKS
        IS 'Number of used blocks in the index';

Comment created.

Elapsed time: 0.23700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_INDEXES.BLEVEL
        IS 'B-Tree level (depth of the index from its root block to its leaf blocks)';

Comment created.

Elapsed time: 0.21400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_INDEXES.LEAF_BLOCKS
        IS 'Number of leaf blocks in the index';

Comment created.

Elapsed time: 0.22900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_INDEXES.DISTINCT_KEYS
        IS 'Number of distinct indexed values. ';

Comment created.

Elapsed time: 0.20000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_INDEXES.AVG_LEAF_BLOCKS_PER_KEY
        IS 'Average number of leaf blocks in which each distinct value in the index appears, rounded to the nearest integer';

Comment created.

Elapsed time: 0.18700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_INDEXES.AVG_DATA_BLOCKS_PER_KEY
        IS 'Average number of data blocks in the table that are pointed to by a distinct value in the index rounded to the nearest integer';

Comment created.

Elapsed time: 0.19400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_INDEXES.CLUSTERING_FACTOR
        IS 'Indicates the amount of order of the rows in the table based on the values of the index';

Comment created.

Elapsed time: 0.20900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_INDEXES.STATUS
        IS 'Indicates whether a nonpartitioned index is VALID or UNUSABLE';

Comment created.

Elapsed time: 0.23400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_INDEXES.NUM_ROWS
        IS 'Number of rows in the index';

Comment created.

Elapsed time: 0.19100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_INDEXES.SAMPLE_SIZE
        IS 'Size of the sample used to analyze the index';

Comment created.

Elapsed time: 0.20500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_INDEXES.LAST_ANALYZED
        IS 'Date on which this index was most recently analyzed';

Comment created.

Elapsed time: 0.18600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_INDEXES.DEGREE
        IS 'Number of threads per instance for scanning the index, or DEFAULT';

Comment created.

Elapsed time: 0.18700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_INDEXES.INSTANCES
        IS 'Number of instances across which the indexes to be scanned, or DEFAULT';

Comment created.

Elapsed time: 0.18300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_INDEXES.PARTITIONED
        IS 'Indicates whether the index is partitioned (YES) or not (NO)';

Comment created.

Elapsed time: 0.19500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_INDEXES.TEMPORARY
        IS 'Indicates whether the index is on a temporary table (Y) or not (N)';

Comment created.

Elapsed time: 0.18600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_INDEXES.GENERATED
        IS 'Indicates whether the name of the index is system-generated (Y) or not (N)';

Comment created.

Elapsed time: 0.19100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_INDEXES.SECONDARY
        IS 'Indicates whether the index is a secondary object created by the method of the Data Cartridge (Y) or not (N)';

Comment created.

Elapsed time: 0.18100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_INDEXES.BUFFER_POOL
        IS 'Buffer pool to be used for index blocks';

Comment created.

Elapsed time: 0.19200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_INDEXES.FLASH_CACHE
        IS 'Database Smart Flash Cache hint to be used for index blocks';

Comment created.

Elapsed time: 0.18100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_INDEXES.CELL_FLASH_CACHE
        IS 'Cell flash cache hint to be used for index blocks';

Comment created.

Elapsed time: 0.18300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_INDEXES.USER_STATS
        IS 'Indicates whether statistics were entered directly by the user (YES) or not (NO)';

Comment created.

Elapsed time: 0.18100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_INDEXES.DURATION
        IS 'Indicates the duration of a temporary table';

Comment created.

Elapsed time: 0.18900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_INDEXES.PCT_DIRECT_ACCESS
        IS 'For a secondary index on an index-organized table, the percentage of rows with VALID guess';

Comment created.

Elapsed time: 0.18500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_INDEXES.ITYP_OWNER
        IS 'For a domain index, the owner of the indextype';

Comment created.

Elapsed time: 0.18500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_INDEXES.ITYP_NAME
        IS 'For a domain index, the name of the indextype';

Comment created.

Elapsed time: 0.18900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_INDEXES.PARAMETERS
        IS 'For a domain index, the parameter string';

Comment created.

Elapsed time: 0.19100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_INDEXES.GLOBAL_STATS
        IS 'For partitioned indexes, indicates whether statistics were collected by analyzing the index as a whole (YES) or were estimated from statistics on underlying index partitions and subpartitions (NO)';

Comment created.

Elapsed time: 0.18600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_INDEXES.DOMIDX_STATUS
        IS 'Status of a domain index';

Comment created.

Elapsed time: 0.18000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_INDEXES.DOMIDX_OPSTATUS
        IS 'Status of the operation on a domain index';

Comment created.

Elapsed time: 0.17800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_INDEXES.FUNCIDX_STATUS
        IS 'Status of a function-based index';

Comment created.

Elapsed time: 0.18700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_INDEXES.JOIN_INDEX
        IS 'Indicates whether the index is a join index (YES) or not (NO)';

Comment created.

Elapsed time: 0.18300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_INDEXES.IOT_REDUNDANT_PKEY_ELIM
        IS 'Indicates whether redundant primary key columns are eliminated from secondary indexes on index-organized tables (YES) or not (NO)';

Comment created.

Elapsed time: 0.21900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_INDEXES.DROPPED
        IS 'Indicates whether the index has been dropped and is in the recycle bin (YES) or not (NO);';

Comment created.

Elapsed time: 0.19300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_INDEXES.VISIBILITY
        IS 'Indicates whether the index is VISIBLE or INVISIBLE to the optimizer';

Comment created.

Elapsed time: 0.18400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_INDEXES.DOMIDX_MANAGEMENT
        IS 'If this is a domain index, indicates whether the domain index is system-managed (SYSTEM_MANAGED) or user-managed (USER_MANAGED)';

Comment created.

Elapsed time: 0.18500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_INDEXES.SEGMENT_CREATED
        IS 'Indicates whether the index segment has been created (YES) or not (NO)';

Comment created.

Elapsed time: 0.18400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_INDEXES.COMMENTS
        IS 'Comments of the index';

Comment created.

Elapsed time: 0.19400 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.USER_INDEXES TO PUBLIC;

Grant succeeded.

Elapsed time: 0.15800 ms 


COMMIT;

Commit complete.

Elapsed time: 0.68700 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS USER_INDEXES;

Synonym dropped.

Elapsed time: 0.10900 ms 

CREATE PUBLIC SYNONYM USER_INDEXES FOR DICTIONARY_SCHEMA.USER_INDEXES;

Synonym created.

Elapsed time: 0.11700 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05100 ms 


DROP PUBLIC SYNONYM IF EXISTS IND;

Synonym dropped.

Elapsed time: 0.09500 ms 

CREATE PUBLIC SYNONYM IND FOR DICTIONARY_SCHEMA.USER_INDEXES;

Synonym created.

Elapsed time: 0.10700 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05000 ms 


--##############################################################
--# DICTIONARY_SCHEMA.DBA_IND_COLUMNS
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.DBA_IND_COLUMNS;

View dropped.

Elapsed time: 1.83000 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.DBA_IND_COLUMNS
(
       INDEX_OWNER
     , INDEX_SCHEMA
     , INDEX_NAME
     , TABLE_OWNER
     , TABLE_SCHEMA
     , TABLE_NAME
     , COLUMN_NAME
     , COLUMN_POSITION
     , COLUMN_LENGTH
     , CHAR_LENGTH
     , DESCEND
     , NULL_ORDER
)
AS
SELECT
       auth1.AUTHORIZATION_NAME
     , sch1.SCHEMA_NAME
     , idx.INDEX_NAME
     , auth2.AUTHORIZATION_NAME
     , sch2.SCHEMA_NAME
     , tab.TABLE_NAME
     , col.COLUMN_NAME
     , CAST( ikey.ORDINAL_POSITION AS NUMBER )
     , CAST( dtd.PHYSICAL_MAXIMUM_LENGTH AS NUMBER )   -- COLUMN_LENGTH
     , CAST( NULL AS NUMBER )                          -- CHAR_LENGTH
     , CAST( CASE WHEN ikey.IS_ASCENDING_ORDER = TRUE
                  THEN 'ASC'
                  ELSE 'DESC'
                  END
               AS VARCHAR(32 OCTETS) )      -- DESCEND
     , CAST( CASE WHEN ikey.IS_NULLS_FIRST = TRUE
                  THEN 'NULLS FIRST'
                  ELSE 'NULLS LAST'
                  END
               AS VARCHAR(32 OCTETS) )      -- NULL_ORDER
  FROM
       DEFINITION_SCHEMA.INDEX_KEY_COLUMN_USAGE AS ikey
     , DEFINITION_SCHEMA.INDEXES                AS idx
     , DEFINITION_SCHEMA.COLUMNS                AS col
     , DEFINITION_SCHEMA.DATA_TYPE_DESCRIPTOR   AS dtd
     , DEFINITION_SCHEMA.TABLES                 AS tab 
     , DEFINITION_SCHEMA.SCHEMATA               AS sch1 
     , DEFINITION_SCHEMA.AUTHORIZATIONS         AS auth1 
     , DEFINITION_SCHEMA.SCHEMATA               AS sch2 
     , DEFINITION_SCHEMA.AUTHORIZATIONS         AS auth2 
 WHERE
       ikey.INDEX_ID          = idx.INDEX_ID
   AND ikey.COLUMN_ID         = col.COLUMN_ID
   AND col.DTD_IDENTIFIER     = dtd.DTD_IDENTIFIER
   AND ikey.TABLE_ID          = tab.TABLE_ID
   AND ikey.INDEX_SCHEMA_ID   = sch1.SCHEMA_ID
   AND ikey.INDEX_OWNER_ID    = auth1.AUTH_ID
   AND ikey.TABLE_SCHEMA_ID   = sch2.SCHEMA_ID
   AND ikey.TABLE_OWNER_ID    = auth2.AUTH_ID
   AND EXISTS ( SELECT GRANTEE_ID  
                  FROM DEFINITION_SCHEMA.DATABASE_PRIVILEGES pvdba 
                 WHERE pvdba.PRIVILEGE_TYPE IN ( 'ACCESS CONTROL' ) 
                   AND ( pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                 FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS audba 
                                                WHERE audba.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                             ) 
                      -- OR  
                      -- pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                      --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                       )  
               ) 
 ORDER BY 
       ikey.INDEX_SCHEMA_ID
     , ikey.INDEX_ID
     , ikey.ORDINAL_POSITION
;

View created.

Elapsed time: 2.58300 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.DBA_IND_COLUMNS
        IS 'DBA_IND_COLUMNS describes the columns of all the indexes on all tables and clusters in the database.';

Comment created.

Elapsed time: 0.16700 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_IND_COLUMNS.INDEX_OWNER
        IS 'Owner of the index';

Comment created.

Elapsed time: 0.20400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_IND_COLUMNS.INDEX_SCHEMA
        IS 'Schema of the index';

Comment created.

Elapsed time: 0.18500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_IND_COLUMNS.INDEX_NAME
        IS 'Name of the index';

Comment created.

Elapsed time: 0.22300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_IND_COLUMNS.TABLE_OWNER
        IS 'Owner of the table or cluster';

Comment created.

Elapsed time: 0.18100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_IND_COLUMNS.TABLE_SCHEMA
        IS 'Schema of the table or cluster';

Comment created.

Elapsed time: 0.28200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_IND_COLUMNS.TABLE_NAME
        IS 'Name of the table or cluster';

Comment created.

Elapsed time: 0.18100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_IND_COLUMNS.COLUMN_NAME
        IS 'Column name or attribute of the object type column';

Comment created.

Elapsed time: 0.17900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_IND_COLUMNS.COLUMN_POSITION
        IS 'Position of the column or attribute within the index';

Comment created.

Elapsed time: 0.17800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_IND_COLUMNS.COLUMN_LENGTH
        IS 'Indexed length of the column';

Comment created.

Elapsed time: 0.20500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_IND_COLUMNS.CHAR_LENGTH
        IS 'Maximum codepoint length of the column';

Comment created.

Elapsed time: 0.17700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_IND_COLUMNS.DESCEND
        IS 'Indicates whether the column is sorted in descending order (DESC) or ascending order (ASC)';

Comment created.

Elapsed time: 0.17900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_IND_COLUMNS.NULL_ORDER
        IS 'Indicates whether the null value of the column is sorted in nulls first order (NULLS FIRST) or nulls last order (NULLS LAST)';

Comment created.

Elapsed time: 0.17600 ms 


--#####################
--# grant view
--#####################

--GRANT SELECT ON TABLE DICTIONARY_SCHEMA.DBA_IND_COLUMNS TO DBA;
GRANT SELECT ON TABLE DICTIONARY_SCHEMA.DBA_IND_COLUMNS TO PUBLIC;

Grant succeeded.

Elapsed time: 0.16000 ms 


COMMIT;

Commit complete.

Elapsed time: 0.20000 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS DBA_IND_COLUMNS;

Synonym dropped.

Elapsed time: 0.09200 ms 

CREATE PUBLIC SYNONYM DBA_IND_COLUMNS FOR DICTIONARY_SCHEMA.DBA_IND_COLUMNS;

Synonym created.

Elapsed time: 0.11100 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05000 ms 



--##############################################################
--# DICTIONARY_SCHEMA.ALL_IND_COLUMNS
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.ALL_IND_COLUMNS;

View dropped.

Elapsed time: 2.01000 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.ALL_IND_COLUMNS
(
       INDEX_OWNER
     , INDEX_SCHEMA
     , INDEX_NAME
     , TABLE_OWNER
     , TABLE_SCHEMA
     , TABLE_NAME
     , COLUMN_NAME
     , COLUMN_POSITION
     , COLUMN_LENGTH
     , CHAR_LENGTH
     , DESCEND
     , NULL_ORDER
)
AS
SELECT
       auth1.AUTHORIZATION_NAME
     , sch1.SCHEMA_NAME
     , idx.INDEX_NAME
     , auth2.AUTHORIZATION_NAME
     , sch2.SCHEMA_NAME
     , tab.TABLE_NAME
     , col.COLUMN_NAME
     , CAST( ikey.ORDINAL_POSITION AS NUMBER )
     , CAST( dtd.PHYSICAL_MAXIMUM_LENGTH AS NUMBER )   -- COLUMN_LENGTH
     , CAST( NULL AS NUMBER )                          -- CHAR_LENGTH
     , CAST( CASE WHEN ikey.IS_ASCENDING_ORDER = TRUE
                  THEN 'ASC'
                  ELSE 'DESC'
                  END
               AS VARCHAR(32 OCTETS) )      -- DESCEND
     , CAST( CASE WHEN ikey.IS_NULLS_FIRST = TRUE
                  THEN 'NULLS FIRST'
                  ELSE 'NULLS LAST'
                  END
               AS VARCHAR(32 OCTETS) )      -- NULL_ORDER
  FROM
       DEFINITION_SCHEMA.INDEX_KEY_COLUMN_USAGE AS ikey
     , DEFINITION_SCHEMA.INDEXES                AS idx
     , DEFINITION_SCHEMA.COLUMNS                AS col
     , DEFINITION_SCHEMA.DATA_TYPE_DESCRIPTOR   AS dtd
     , DEFINITION_SCHEMA.TABLES                 AS tab 
     , DEFINITION_SCHEMA.SCHEMATA               AS sch1 
     , DEFINITION_SCHEMA.AUTHORIZATIONS         AS auth1 
     , DEFINITION_SCHEMA.SCHEMATA               AS sch2 
     , DEFINITION_SCHEMA.AUTHORIZATIONS         AS auth2 
 WHERE
       ikey.INDEX_ID          = idx.INDEX_ID
   AND ikey.COLUMN_ID         = col.COLUMN_ID
   AND col.DTD_IDENTIFIER     = dtd.DTD_IDENTIFIER
   AND ikey.TABLE_ID          = tab.TABLE_ID
   AND ikey.INDEX_SCHEMA_ID   = sch1.SCHEMA_ID
   AND ikey.INDEX_OWNER_ID    = auth1.AUTH_ID
   AND ikey.TABLE_SCHEMA_ID   = sch2.SCHEMA_ID
   AND ikey.TABLE_OWNER_ID    = auth2.AUTH_ID
   AND ( col.COLUMN_ID IN ( SELECT pvcol.COLUMN_ID 
                              FROM DEFINITION_SCHEMA.COLUMN_PRIVILEGES AS pvcol 
                             WHERE ( pvcol.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                             FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS aucol 
                                                            WHERE aucol.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                         ) 
                                  -- OR  
                                  -- pvcol.GRANTEE_ID IN ( SELECT AUTH_ID 
                                  --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                   )
                          ) 
         OR 
         tab.TABLE_ID IN ( SELECT pvtab.TABLE_ID 
                             FROM DEFINITION_SCHEMA.TABLE_PRIVILEGES AS pvtab 
                            WHERE ( pvtab.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                            FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS autab 
                                                           WHERE autab.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                        ) 
                                 -- OR  
                                 -- pvtab.GRANTEE_ID IN ( SELECT AUTH_ID 
                                 --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                  )
                          ) 
         OR 
         tab.SCHEMA_ID IN ( SELECT pvsch.SCHEMA_ID 
                              FROM DEFINITION_SCHEMA.SCHEMA_PRIVILEGES AS pvsch 
                             WHERE pvsch.PRIVILEGE_TYPE IN ( 'CONTROL SCHEMA', 'ALTER TABLE', 'DROP TABLE', 
                                                             'SELECT TABLE', 'INSERT TABLE', 'DELETE TABLE', 'UPDATE TABLE', 'LOCK TABLE' ) 
                               AND ( pvsch.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                             FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS ausch 
                                                            WHERE ausch.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                         ) 
                                  -- OR  
                                  -- pvsch.GRANTEE_ID IN ( SELECT AUTH_ID 
                                  --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                   )
                          ) 
         OR 
         EXISTS ( SELECT GRANTEE_ID  
                    FROM DEFINITION_SCHEMA.DATABASE_PRIVILEGES pvdba 
                   WHERE pvdba.PRIVILEGE_TYPE IN ( 'ALTER ANY TABLE', 'DROP ANY TABLE', 
                                                   'SELECT ANY TABLE', 'INSERT ANY TABLE', 'DELETE ANY TABLE', 'UPDATE ANY TABLE', 'LOCK ANY TABLE' ) 
                     AND ( pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                   FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS audba 
                                                  WHERE audba.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                ) 
                        -- OR  
                        -- pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                        --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                         )  
                ) 
       )
 ORDER BY 
       ikey.INDEX_SCHEMA_ID
     , ikey.INDEX_ID
     , ikey.ORDINAL_POSITION
;

View created.

Elapsed time: 2.99300 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.ALL_IND_COLUMNS
        IS 'ALL_IND_COLUMNS describes the columns of indexes on all tables accessible to the current user.';

Comment created.

Elapsed time: 0.16500 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_IND_COLUMNS.INDEX_OWNER
        IS 'Owner of the index';

Comment created.

Elapsed time: 0.18700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_IND_COLUMNS.INDEX_SCHEMA
        IS 'Schema of the index';

Comment created.

Elapsed time: 0.17800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_IND_COLUMNS.INDEX_NAME
        IS 'Name of the index';

Comment created.

Elapsed time: 0.19400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_IND_COLUMNS.TABLE_OWNER
        IS 'Owner of the table or cluster';

Comment created.

Elapsed time: 0.18000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_IND_COLUMNS.TABLE_SCHEMA
        IS 'Schema of the table or cluster';

Comment created.

Elapsed time: 0.17900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_IND_COLUMNS.TABLE_NAME
        IS 'Name of the table or cluster';

Comment created.

Elapsed time: 0.17800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_IND_COLUMNS.COLUMN_NAME
        IS 'Column name or attribute of the object type column';

Comment created.

Elapsed time: 0.17700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_IND_COLUMNS.COLUMN_POSITION
        IS 'Position of the column or attribute within the index';

Comment created.

Elapsed time: 0.17700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_IND_COLUMNS.COLUMN_LENGTH
        IS 'Indexed length of the column';

Comment created.

Elapsed time: 0.17500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_IND_COLUMNS.CHAR_LENGTH
        IS 'Maximum codepoint length of the column';

Comment created.

Elapsed time: 0.17600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_IND_COLUMNS.DESCEND
        IS 'Indicates whether the column is sorted in descending order (DESC) or ascending order (ASC)';

Comment created.

Elapsed time: 0.18400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_IND_COLUMNS.NULL_ORDER
        IS 'Indicates whether the null value of the column is sorted in nulls first order (NULLS FIRST) or nulls last order (NULLS LAST)';

Comment created.

Elapsed time: 0.18100 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.ALL_IND_COLUMNS TO PUBLIC;

Grant succeeded.

Elapsed time: 0.15700 ms 


COMMIT;

Commit complete.

Elapsed time: 0.19900 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS ALL_IND_COLUMNS;

Synonym dropped.

Elapsed time: 0.10000 ms 

CREATE PUBLIC SYNONYM ALL_IND_COLUMNS FOR DICTIONARY_SCHEMA.ALL_IND_COLUMNS;

Synonym created.

Elapsed time: 0.12100 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05000 ms 


--##############################################################
--# DICTIONARY_SCHEMA.USER_IND_COLUMNS
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.USER_IND_COLUMNS;

View dropped.

Elapsed time: 1.68500 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.USER_IND_COLUMNS
(
       INDEX_SCHEMA
     , INDEX_NAME
     , TABLE_SCHEMA
     , TABLE_NAME
     , COLUMN_NAME
     , COLUMN_POSITION
     , COLUMN_LENGTH
     , CHAR_LENGTH
     , DESCEND
     , NULL_ORDER
)
AS
SELECT
       aicol.INDEX_SCHEMA
     , aicol.INDEX_NAME
     , aicol.TABLE_SCHEMA
     , aicol.TABLE_NAME
     , aicol.COLUMN_NAME
     , aicol.COLUMN_POSITION
     , aicol.COLUMN_LENGTH
     , aicol.CHAR_LENGTH
     , aicol.DESCEND
     , aicol.NULL_ORDER
  FROM
       DICTIONARY_SCHEMA.ALL_IND_COLUMNS AS aicol
 WHERE
       ( 
         aicol.INDEX_OWNER = CURRENT_USER
         OR
         aicol.TABLE_OWNER = CURRENT_USER
       )
;

View created.

Elapsed time: 2.55800 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.USER_IND_COLUMNS
        IS 'USER_IND_COLUMNS describes the columns of the indexes owned by the current user and columns of indexes on tables owned by the current user.';

Comment created.

Elapsed time: 0.17900 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_IND_COLUMNS.INDEX_SCHEMA
        IS 'Schema of the index';

Comment created.

Elapsed time: 0.19100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_IND_COLUMNS.INDEX_NAME
        IS 'Name of the index';

Comment created.

Elapsed time: 0.18900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_IND_COLUMNS.TABLE_SCHEMA
        IS 'Schema of the table or cluster';

Comment created.

Elapsed time: 0.18500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_IND_COLUMNS.TABLE_NAME
        IS 'Name of the table or cluster';

Comment created.

Elapsed time: 0.18200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_IND_COLUMNS.COLUMN_NAME
        IS 'Column name or attribute of the object type column';

Comment created.

Elapsed time: 0.17700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_IND_COLUMNS.COLUMN_POSITION
        IS 'Position of the column or attribute within the index';

Comment created.

Elapsed time: 0.19200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_IND_COLUMNS.COLUMN_LENGTH
        IS 'Indexed length of the column';

Comment created.

Elapsed time: 0.18900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_IND_COLUMNS.CHAR_LENGTH
        IS 'Maximum codepoint length of the column';

Comment created.

Elapsed time: 0.18800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_IND_COLUMNS.DESCEND
        IS 'Indicates whether the column is sorted in descending order (DESC) or ascending order (ASC)';

Comment created.

Elapsed time: 0.18300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_IND_COLUMNS.NULL_ORDER
        IS 'Indicates whether the null value of the column is sorted in nulls first order (NULLS FIRST) or nulls last order (NULLS LAST)';

Comment created.

Elapsed time: 0.18000 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.USER_IND_COLUMNS TO PUBLIC;

Grant succeeded.

Elapsed time: 0.15900 ms 


COMMIT;

Commit complete.

Elapsed time: 0.18400 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS USER_IND_COLUMNS;

Synonym dropped.

Elapsed time: 0.09500 ms 

CREATE PUBLIC SYNONYM USER_IND_COLUMNS FOR DICTIONARY_SCHEMA.USER_IND_COLUMNS;

Synonym created.

Elapsed time: 0.11100 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05100 ms 


--##############################################################
--# DICTIONARY_SCHEMA.DBA_NONSCHEMA_COMMENTS
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.DBA_NONSCHEMA_COMMENTS;

View dropped.

Elapsed time: 0.90200 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.DBA_NONSCHEMA_COMMENTS
(
       OBJECT_NAME
     , OBJECT_TYPE
     , COMMENTS
)
AS
SELECT 
       OBJECT_NAME
     , OBJECT_TYPE
     , COMMENTS
  FROM 
     ( 
       (
         SELECT
                cata.CATALOG_NAME                              -- OBJECT_NAME
              , CAST( 'DATABASE' AS VARCHAR(32 OCTETS) )       -- OBJECT_TYPE
              , cata.COMMENTS                                  -- COMMENTS
           FROM 
                DEFINITION_SCHEMA.CATALOG_NAME AS cata 
       )
       UNION ALL
       (
         SELECT
                prof.PROFILE_NAME                              -- OBJECT_NAME
              , CAST( 'PROFILE' AS VARCHAR(32 OCTETS) )        -- OBJECT_TYPE
              , prof.COMMENTS                                  -- COMMENTS
           FROM 
                DEFINITION_SCHEMA.PROFILES AS prof
          ORDER BY prof.PROFILE_ID
       )
       UNION ALL
       (
         SELECT
                auth.AUTHORIZATION_NAME                        -- OBJECT_NAME
              , CAST( 'AUTHORIZATION' AS VARCHAR(32 OCTETS) )  -- OBJECT_TYPE
              , auth.COMMENTS                                  -- COMMENTS
           FROM 
                DEFINITION_SCHEMA.AUTHORIZATIONS AS auth 
          ORDER BY auth.AUTH_ID
       )
       UNION ALL
       (
         SELECT
                sch.SCHEMA_NAME                                -- OBJECT_NAME
              , CAST( 'SCHEMA' AS VARCHAR(32 OCTETS) )         -- OBJECT_TYPE
              , sch.COMMENTS                                   -- COMMENTS
           FROM 
                DEFINITION_SCHEMA.SCHEMATA AS sch 
          ORDER BY sch.SCHEMA_ID
       )
       UNION ALL
       (
         SELECT
                spc.TABLESPACE_NAME                            -- OBJECT_NAME
              , CAST( 'TABLESPACE' AS VARCHAR(32 OCTETS) )     -- OBJECT_TYPE
              , spc.COMMENTS                                   -- COMMENTS
           FROM 
                DEFINITION_SCHEMA.TABLESPACES AS spc 
          ORDER BY spc.TABLESPACE_ID
       ) 
     ) AS nonschema( OBJECT_NAME, OBJECT_TYPE, COMMENTS )
 WHERE
       EXISTS ( SELECT GRANTEE_ID  
                  FROM DEFINITION_SCHEMA.DATABASE_PRIVILEGES pvdba 
                 WHERE pvdba.PRIVILEGE_TYPE IN ( 'ACCESS CONTROL' ) 
                   AND ( pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                 FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS audba 
                                                WHERE audba.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                             ) 
                      -- OR  
                      -- pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                      --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                       )  
              ) 
;

View created.

Elapsed time: 1.52400 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.DBA_NONSCHEMA_COMMENTS
        IS 'DBA_NONSCHEMA_COMMENTS displays comments on all non-schema objects( database, authorizations, schemas, tablespaces ).';

Comment created.

Elapsed time: 0.16100 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_NONSCHEMA_COMMENTS.OBJECT_NAME
        IS 'Name of the non-schema object';

Comment created.

Elapsed time: 0.18700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_NONSCHEMA_COMMENTS.OBJECT_TYPE
        IS 'Type of the non-schema object: DATABASE, PROFILE, AUTHORIZATION, SCHEMA, TABLESPACE';

Comment created.

Elapsed time: 0.19300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_NONSCHEMA_COMMENTS.COMMENTS
        IS 'Comments of the non-schema object';

Comment created.

Elapsed time: 0.18200 ms 



--#####################
--# grant view
--#####################

--GRANT SELECT ON TABLE DBA_NONSCHEMA_COMMENTS TO DBA;
GRANT SELECT ON TABLE DICTIONARY_SCHEMA.DBA_NONSCHEMA_COMMENTS TO PUBLIC;

Grant succeeded.

Elapsed time: 0.15500 ms 


COMMIT;

Commit complete.

Elapsed time: 0.10600 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS DBA_NONSCHEMA_COMMENTS;

Synonym dropped.

Elapsed time: 0.09200 ms 

CREATE PUBLIC SYNONYM DBA_NONSCHEMA_COMMENTS FOR DICTIONARY_SCHEMA.DBA_NONSCHEMA_COMMENTS;

Synonym created.

Elapsed time: 0.12100 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05000 ms 



--##############################################################
--# DICTIONARY_SCHEMA.ALL_NONSCHEMA_COMMENTS
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.ALL_NONSCHEMA_COMMENTS;

View dropped.

Elapsed time: 0.95600 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.ALL_NONSCHEMA_COMMENTS
(
       OBJECT_NAME
     , OBJECT_TYPE
     , COMMENTS
)
AS
SELECT 
       OBJECT_NAME
     , OBJECT_TYPE
     , COMMENTS
  FROM 
     ( 
       (
         SELECT
                cata.CATALOG_NAME                              -- OBJECT_NAME
              , CAST( 'DATABASE' AS VARCHAR(32 OCTETS) )       -- OBJECT_TYPE
              , cata.COMMENTS                                  -- COMMENTS
           FROM 
                DEFINITION_SCHEMA.CATALOG_NAME AS cata 
          WHERE 
                EXISTS ( SELECT *
                           FROM DEFINITION_SCHEMA.DATABASE_PRIVILEGES pvdba 
                          WHERE pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                        FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS audba 
                                                       WHERE audba.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                    ) 
                                -- OR  
                                -- pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                                --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                       )  
       )
       UNION ALL
       (
         SELECT
                auth.AUTHORIZATION_NAME                        -- OBJECT_NAME
              , CAST( 'AUTHORIZATION' AS VARCHAR(32 OCTETS) )  -- OBJECT_TYPE
              , auth.COMMENTS                                  -- COMMENTS
           FROM 
                DEFINITION_SCHEMA.AUTHORIZATIONS AS auth 
          WHERE auth.AUTH_ID IN ( SELECT AUTH_ID 
                                    FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS audba 
                                   WHERE audba.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                 ) 
            -- OR  
            -- auth.AUTH_ID IN ( SELECT AUTH_ID 
            --                     FROM INORMATION_SCHEMA.ENABLED_ROLES )  
          ORDER BY auth.AUTH_ID
       )
       UNION ALL
       (
         SELECT
                sch.SCHEMA_NAME                                -- OBJECT_NAME
              , CAST( 'SCHEMA' AS VARCHAR(32 OCTETS) )         -- OBJECT_TYPE
              , sch.COMMENTS                                   -- COMMENTS
           FROM 
                DEFINITION_SCHEMA.SCHEMATA AS sch 
          WHERE sch.SCHEMA_ID IN ( SELECT pvsch.SCHEMA_ID
                                     FROM DEFINITION_SCHEMA.SCHEMA_PRIVILEGES pvsch 
                                    WHERE pvsch.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                                  FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS audba 
                                                                 WHERE audba.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                              ) 
                                       -- OR  
                                       -- pvsch.GRANTEE_ID IN ( SELECT AUTH_ID 
                                       --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                 )  
          ORDER BY sch.SCHEMA_ID
       )
       UNION ALL
       (
         SELECT
                spc.TABLESPACE_NAME                            -- OBJECT_NAME
              , CAST( 'TABLESPACE' AS VARCHAR(32 OCTETS) )     -- OBJECT_TYPE
              , spc.COMMENTS                                   -- COMMENTS
           FROM 
                DEFINITION_SCHEMA.TABLESPACES AS spc 
          WHERE spc.TABLESPACE_ID IN ( SELECT pvspc.TABLESPACE_ID
                                         FROM DEFINITION_SCHEMA.TABLESPACE_PRIVILEGES pvspc 
                                        WHERE pvspc.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                                      FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS audba 
                                                                     WHERE audba.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                                  ) 
                                           -- OR  
                                           -- pvspc.GRANTEE_ID IN ( SELECT AUTH_ID 
                                           --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                     )  
          ORDER BY spc.TABLESPACE_ID
       )
     ) AS nonschema( OBJECT_NAME, OBJECT_TYPE, COMMENTS )
;

View created.

Elapsed time: 1.56800 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.ALL_NONSCHEMA_COMMENTS
        IS 'ALL_NONSCHEMA_COMMENTS displays comments on all non-schema objects( database, authorizations, schemas, tablespaces ) accessible to the current user.';

Comment created.

Elapsed time: 0.16400 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_NONSCHEMA_COMMENTS.OBJECT_NAME
        IS 'Name of the non-schema object';

Comment created.

Elapsed time: 0.26700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_NONSCHEMA_COMMENTS.OBJECT_TYPE
        IS 'Type of the non-schema object: DATABASE, AUTHORIZATION, SCHEMA, TABLESPACE';

Comment created.

Elapsed time: 0.19000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_NONSCHEMA_COMMENTS.COMMENTS
        IS 'Comments of the non-schema object';

Comment created.

Elapsed time: 0.18000 ms 



--#####################
--# grant view
--#####################

--GRANT SELECT ON TABLE ALL_NONSCHEMA_COMMENTS TO DBA;
GRANT SELECT ON TABLE DICTIONARY_SCHEMA.ALL_NONSCHEMA_COMMENTS TO PUBLIC;

Grant succeeded.

Elapsed time: 0.15300 ms 


COMMIT;

Commit complete.

Elapsed time: 0.11800 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS ALL_NONSCHEMA_COMMENTS;

Synonym dropped.

Elapsed time: 0.09500 ms 

CREATE PUBLIC SYNONYM ALL_NONSCHEMA_COMMENTS FOR DICTIONARY_SCHEMA.ALL_NONSCHEMA_COMMENTS;

Synonym created.

Elapsed time: 0.10900 ms 

COMMIT;

Commit complete.

Elapsed time: 0.04900 ms 



--##############################################################
--# DICTIONARY_SCHEMA.DBA_OBJECTS
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.DBA_OBJECTS;

View dropped.

Elapsed time: 2.35200 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.DBA_OBJECTS
(
       OWNER
     , SCHEMA_NAME
     , OBJECT_NAME
     , SUBOBJECT_NAME
     , OBJECT_ID
     , DATA_OBJECT_ID
     , OBJECT_TYPE
     , CREATED
     , LAST_DDL_TIME
     , TIMESTAMP
     , STATUS
     , TEMPORARY
     , GENERATED
     , SECONDARY
     , NAMESPACE
     , EDITION_NAME
)
AS
( 
SELECT
       auth.AUTHORIZATION_NAME               -- OWNER
     , sch.SCHEMA_NAME                       -- SCHEMA_NAME
     , tab.TABLE_NAME                        -- OBJECT_NAME
     , CAST( NULL AS VARCHAR(128 OCTETS) )   -- SUBOBJECT_NAME
     , CAST( tab.TABLE_ID AS NUMBER )        -- OBJECT_ID
     , CAST( CASE tab.TABLE_TYPE 
                  WHEN 'BASE TABLE'       THEN tab.TABLE_ID 
                  WHEN 'VIEW'             THEN NULL
                  WHEN 'GLOBAL TEMPORARY' THEN NULL
                  WHEN 'LOCAL TEMPORARY'  THEN NULL
                  WHEN 'SYSTEM VERSIONED' THEN tab.TABLE_ID 
                  WHEN 'FIXED TABLE'      THEN NULL
                  WHEN 'DUMP TABLE'       THEN NULL
                  ELSE NULL 
                  END
               AS NUMBER )                    -- DATA_OBJECT_ID
     , CAST( CASE tab.TABLE_TYPE 
                  WHEN 'BASE TABLE'       THEN 'TABLE'
                  WHEN 'VIEW'             THEN 'VIEW'
                  WHEN 'GLOBAL TEMPORARY' THEN 'GLOBAL TEMPORARY TABLE'
                  WHEN 'LOCAL TEMPORARY'  THEN 'LOCAL TEMPORARY TABLE'
                  WHEN 'SYSTEM VERSIONED' THEN 'SYSTEM VERSIONED TABLE'
                  WHEN 'FIXED TABLE'      THEN 'FIXED TABLE'
                  WHEN 'DUMP TABLE'       THEN 'DUMP TABLE'
                  ELSE NULL 
                  END
               AS VARCHAR(32 OCTETS) )        -- OBJECT_TYPE
     , tab.CREATED_TIME                       -- CREATED
     , tab.MODIFIED_TIME                      -- LAST_DDL_TIME
     , CAST( TO_CHAR( tab.MODIFIED_TIME, 
                      'YYYY-MM-DD HH24:MI:SS.FF2' ) 
             AS VARCHAR(32 OCTETS) )          -- TIMESTAMP
     , CAST( CASE tab.TABLE_TYPE 
                  WHEN 'BASE TABLE'       THEN 'VALID'
                  WHEN 'VIEW'             THEN ( SELECT CASE WHEN (viw.IS_COMPILED = FALSE) OR (viw.IS_AFFECTED = TRUE) 
                                                             THEN 'INVALID'
                                                             ELSE 'VALID'
                                                             END
                                                   FROM DEFINITION_SCHEMA.VIEWS AS viw
                                                  WHERE viw.TABLE_ID = tab.TABLE_ID )
                  WHEN 'GLOBAL TEMPORARY' THEN 'VALID'
                  WHEN 'LOCAL TEMPORARY'  THEN 'VALID'
                  WHEN 'SYSTEM VERSIONED' THEN 'VALID'
                  WHEN 'FIXED TABLE'      THEN 'VALID'
                  WHEN 'DUMP TABLE'       THEN 'VALID'
                  ELSE NULL 
                  END
               AS VARCHAR(32 OCTETS) )        -- STATUS
     , CAST( CASE tab.TABLE_TYPE 
                  WHEN 'BASE TABLE'       THEN 'N'
                  WHEN 'VIEW'             THEN 'N'
                  WHEN 'GLOBAL TEMPORARY' THEN 'Y'
                  WHEN 'LOCAL TEMPORARY'  THEN 'Y'
                  WHEN 'SYSTEM VERSIONED' THEN 'N'
                  WHEN 'FIXED TABLE'      THEN 'N'
                  WHEN 'DUMP TABLE'       THEN 'N'
                  ELSE NULL 
                  END
               AS VARCHAR(1 OCTETS) )         -- TEMPORARY
     , CAST( 'N' AS VARCHAR(1 OCTETS) )       -- GENERATED
     , CAST( 'N' AS VARCHAR(1 OCTETS) )       -- SECONDARY
     , CAST( sch.SCHEMA_ID AS NUMBER )        -- NAMESPACE
     , CAST( NULL AS VARCHAR(128 OCTETS) )    -- EDITION_NAME
  FROM
       DICTIONARY_SCHEMA.WHOLE_TABLES  AS tab 
     , DEFINITION_SCHEMA.SCHEMATA           AS sch 
     , DEFINITION_SCHEMA.AUTHORIZATIONS     AS auth 
 WHERE
       tab.SCHEMA_ID = sch.SCHEMA_ID
   AND tab.OWNER_ID  = auth.AUTH_ID
   AND EXISTS ( SELECT GRANTEE_ID  
                  FROM DEFINITION_SCHEMA.DATABASE_PRIVILEGES pvdba 
                 WHERE pvdba.PRIVILEGE_TYPE IN ( 'ACCESS CONTROL' ) 
                   AND ( pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                 FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS audba 
                                                WHERE audba.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                             ) 
                      -- OR  
                      -- pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                      --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                       )  
               ) 
 ORDER BY 
       tab.SCHEMA_ID
     , tab.TABLE_ID   
)
UNION ALL
(
SELECT
       auth.AUTHORIZATION_NAME               -- OWNER
     , sch.SCHEMA_NAME                       -- SCHEMA_NAME
     , idx.INDEX_NAME                        -- OBJECT_NAME
     , CAST( NULL AS VARCHAR(128 OCTETS) )   -- SUBOBJECT_NAME
     , CAST( idx.INDEX_ID AS NUMBER )        -- OBJECT_ID
     , CAST( idx.INDEX_ID AS NUMBER )        -- DATA_OBJECT_ID
     , CAST( 'INDEX' AS VARCHAR(32 OCTETS) ) -- OBJECT_TYPE
     , idx.CREATED_TIME                      -- CREATED
     , idx.MODIFIED_TIME                     -- LAST_DDL_TIME
     , CAST( TO_CHAR( idx.MODIFIED_TIME, 
                      'YYYY-MM-DD HH24:MI:SS.FF2' ) 
             AS VARCHAR(32 OCTETS) )         -- TIMESTAMP
     , CAST( CASE WHEN idx.INVALID = TRUE 
                  THEN 'INVALID'
                  ELSE 'VALID'
                  END
               AS VARCHAR(32 OCTETS) )        -- STATUS
     , CAST( 'N' AS VARCHAR(1 OCTETS) )       -- TEMPORARY
     , CAST( 'N' AS VARCHAR(1 OCTETS) )       -- GENERATED
     , CAST( 'N' AS VARCHAR(1 OCTETS) )       -- SECONDARY
     , CAST( sch.SCHEMA_ID AS NUMBER )        -- NAMESPACE
     , CAST( NULL AS VARCHAR(128 OCTETS) )    -- EDITION_NAME
  FROM
       DEFINITION_SCHEMA.INDEXES               AS idx
     , DEFINITION_SCHEMA.TABLES                AS tab
     , DEFINITION_SCHEMA.SCHEMATA              AS sch 
     , DEFINITION_SCHEMA.AUTHORIZATIONS        AS auth
 WHERE
       idx.TABLE_ID   = tab.TABLE_ID
   AND idx.SCHEMA_ID  = sch.SCHEMA_ID
   AND idx.OWNER_ID   = auth.AUTH_ID
   AND EXISTS ( SELECT GRANTEE_ID  
                  FROM DEFINITION_SCHEMA.DATABASE_PRIVILEGES pvdba 
                 WHERE pvdba.PRIVILEGE_TYPE IN ( 'ACCESS CONTROL' ) 
                   AND ( pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                 FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS audba 
                                                WHERE audba.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                             ) 
                      -- OR  
                      -- pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                      --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                       )  
               ) 
 ORDER BY 
       idx.SCHEMA_ID
     , idx.INDEX_ID   
)
UNION ALL
(
SELECT
       auth.AUTHORIZATION_NAME                   -- OWNER
     , sch.SCHEMA_NAME                           -- SCHEMA_NAME
     , sqc.SEQUENCE_NAME                         -- OBJECT_NAME
     , CAST( NULL AS VARCHAR(128 OCTETS) )       -- SUBOBJECT_NAME
     , CAST( sqc.SEQUENCE_ID AS NUMBER )         -- OBJECT_ID
     , CAST( NULL AS NUMBER )                    -- DATA_OBJECT_ID
     , CAST( 'SEQUENCE' AS VARCHAR(32 OCTETS) )  -- OBJECT_TYPE
     , sqc.CREATED_TIME                          -- CREATED
     , sqc.MODIFIED_TIME                         -- LAST_DDL_TIME
     , CAST( TO_CHAR( sqc.MODIFIED_TIME, 
                      'YYYY-MM-DD HH24:MI:SS.FF2' ) 
             AS VARCHAR(32 OCTETS) )             -- TIMESTAMP
     , CAST( 'VALID' AS VARCHAR(32 OCTETS) )     -- STATUS
     , CAST( 'N' AS VARCHAR(1 OCTETS) )          -- TEMPORARY
     , CAST( 'N' AS VARCHAR(1 OCTETS) )          -- GENERATED
     , CAST( 'N' AS VARCHAR(1 OCTETS) )          -- SECONDARY
     , CAST( sch.SCHEMA_ID AS NUMBER )           -- NAMESPACE
     , CAST( NULL AS VARCHAR(128 OCTETS) )       -- EDITION_NAME
  FROM
       DEFINITION_SCHEMA.SEQUENCES         AS sqc
     , DEFINITION_SCHEMA.SCHEMATA          AS sch 
     , DEFINITION_SCHEMA.AUTHORIZATIONS    AS auth
 WHERE
       sqc.SCHEMA_ID   = sch.SCHEMA_ID
   AND sqc.OWNER_ID    = auth.AUTH_ID
   AND EXISTS ( SELECT GRANTEE_ID  
                  FROM DEFINITION_SCHEMA.DATABASE_PRIVILEGES pvdba 
                 WHERE pvdba.PRIVILEGE_TYPE IN ( 'ACCESS CONTROL' ) 
                   AND ( pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                 FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS audba 
                                                WHERE audba.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                             ) 
                      -- OR  
                      -- pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                      --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                       )  
               ) 
 ORDER BY 
       sqc.SCHEMA_ID
     , sqc.SEQUENCE_ID
)
UNION ALL
(
SELECT
       auth.AUTHORIZATION_NAME                   -- OWNER
     , sch.SCHEMA_NAME                           -- SCHEMA_NAME
     , syn.SYNONYM_NAME                          -- OBJECT_NAME
     , CAST( NULL AS VARCHAR(128 OCTETS) )       -- SUBOBJECT_NAME
     , CAST( syn.SYNONYM_ID AS NUMBER )          -- OBJECT_ID
     , CAST( NULL AS NUMBER )                    -- DATA_OBJECT_ID
     , CAST( 'SYNONYM' AS VARCHAR(32 OCTETS) )   -- OBJECT_TYPE
     , syn.CREATED_TIME                          -- CREATED
     , syn.MODIFIED_TIME                         -- LAST_DDL_TIME
     , CAST( TO_CHAR( syn.MODIFIED_TIME, 
                      'YYYY-MM-DD HH24:MI:SS.FF2' ) 
             AS VARCHAR(32 OCTETS) )             -- TIMESTAMP
     , CAST( 'VALID' AS VARCHAR(32 OCTETS) )     -- STATUS
     , CAST( 'N' AS VARCHAR(1 OCTETS) )          -- TEMPORARY
     , CAST( 'N' AS VARCHAR(1 OCTETS) )          -- GENERATED
     , CAST( 'N' AS VARCHAR(1 OCTETS) )          -- SECONDARY
     , CAST( sch.SCHEMA_ID AS NUMBER )           -- NAMESPACE
     , CAST( NULL AS VARCHAR(128 OCTETS) )       -- EDITION_NAME
  FROM
       DEFINITION_SCHEMA.SYNONYMS          AS syn
     , DEFINITION_SCHEMA.SCHEMATA          AS sch 
     , DEFINITION_SCHEMA.AUTHORIZATIONS    AS auth
 WHERE
       syn.SCHEMA_ID   = sch.SCHEMA_ID
   AND syn.OWNER_ID    = auth.AUTH_ID
   AND EXISTS ( SELECT GRANTEE_ID  
                  FROM DEFINITION_SCHEMA.DATABASE_PRIVILEGES pvdba 
                 WHERE pvdba.PRIVILEGE_TYPE IN ( 'ACCESS CONTROL' ) 
                   AND ( pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                 FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS audba 
                                                WHERE audba.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                             ) 
                      -- OR  
                      -- pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                      --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                       )  
               ) 
 ORDER BY 
       syn.SCHEMA_ID
     , syn.SYNONYM_ID
)
UNION ALL
(
SELECT
       CAST( 'PUBLIC' AS VARCHAR(128 OCTETS) )   -- OWNER
     , CAST( NULL AS VARCHAR(128 OCTETS) )       -- SCHEMA_NAME
     , psyn.SYNONYM_NAME                         -- OBJECT_NAME
     , CAST( NULL AS VARCHAR(128 OCTETS) )       -- SUBOBJECT_NAME
     , CAST( psyn.SYNONYM_ID AS NUMBER )         -- OBJECT_ID
     , CAST( NULL AS NUMBER )                    -- DATA_OBJECT_ID
     , CAST( 'SYNONYM' AS VARCHAR(32 OCTETS) )   -- OBJECT_TYPE
     , psyn.CREATED_TIME                         -- CREATED
     , psyn.MODIFIED_TIME                        -- LAST_DDL_TIME
     , CAST( TO_CHAR( psyn.MODIFIED_TIME, 
                      'YYYY-MM-DD HH24:MI:SS.FF2' ) 
             AS VARCHAR(32 OCTETS) )             -- TIMESTAMP
     , CAST( 'VALID' AS VARCHAR(32 OCTETS) )     -- STATUS
     , CAST( 'N' AS VARCHAR(1 OCTETS) )          -- TEMPORARY
     , CAST( 'N' AS VARCHAR(1 OCTETS) )          -- GENERATED
     , CAST( 'N' AS VARCHAR(1 OCTETS) )          -- SECONDARY
     , CAST( 1 AS NUMBER )                       -- NAMESPACE
     , CAST( NULL AS VARCHAR(128 OCTETS) )       -- EDITION_NAME
  FROM
       DEFINITION_SCHEMA.PUBLIC_SYNONYMS   AS psyn
 WHERE 
       EXISTS ( SELECT GRANTEE_ID  
                  FROM DEFINITION_SCHEMA.DATABASE_PRIVILEGES pvdba 
                 WHERE pvdba.PRIVILEGE_TYPE IN ( 'ACCESS CONTROL' ) 
                   AND ( pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                 FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS audba 
                                                WHERE audba.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                             ) 
                      -- OR  
                      -- pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                      --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                       )  
               )  
 ORDER BY 
       psyn.SYNONYM_ID
)
UNION ALL
(
SELECT
       auth.AUTHORIZATION_NAME                   -- OWNER
     , sch.SCHEMA_NAME                           -- SCHEMA_NAME
     , rtn.SPECIFIC_NAME                         -- OBJECT_NAME
     , CAST( NULL AS VARCHAR(128 OCTETS) )       -- SUBOBJECT_NAME
     , CAST( rtn.SPECIFIC_ID AS NUMBER )         -- OBJECT_ID
     , CAST( NULL AS NUMBER )                    -- DATA_OBJECT_ID
     , CAST( rtn.ROUTINE_TYPE AS VARCHAR(32 OCTETS) )  -- OBJECT_TYPE
     , rtn.CREATED_TIME                          -- CREATED
     , rtn.MODIFIED_TIME                         -- LAST_DDL_TIME
     , CAST( TO_CHAR( rtn.MODIFIED_TIME, 
                      'YYYY-MM-DD HH24:MI:SS.FF2' ) 
             AS VARCHAR(32 OCTETS) )             -- TIMESTAMP
     , CAST( CASE  WHEN (rtn.IS_COMPILED = TRUE) AND (rtn.IS_AFFECTED = FALSE)
                       THEN 'VALID'
                   ELSE 'INVALID'
                   END AS VARCHAR(32 OCTETS) )     -- STATUS
     , CAST( 'N' AS VARCHAR(1 OCTETS) )          -- TEMPORARY
     , CAST( 'N' AS VARCHAR(1 OCTETS) )          -- GENERATED
     , CAST( 'N' AS VARCHAR(1 OCTETS) )          -- SECONDARY
     , CAST( sch.SCHEMA_ID AS NUMBER )           -- NAMESPACE
     , CAST( NULL AS VARCHAR(128 OCTETS) )       -- EDITION_NAME
  FROM
       DEFINITION_SCHEMA.ROUTINES          AS rtn
     , DEFINITION_SCHEMA.SCHEMATA          AS sch 
     , DEFINITION_SCHEMA.AUTHORIZATIONS    AS auth
 WHERE
       rtn.SPECIFIC_SCHEMA_ID   = sch.SCHEMA_ID
   AND rtn.SPECIFIC_OWNER_ID    = auth.AUTH_ID
   AND EXISTS ( SELECT GRANTEE_ID  
                  FROM DEFINITION_SCHEMA.DATABASE_PRIVILEGES pvdba 
                 WHERE pvdba.PRIVILEGE_TYPE IN ( 'ACCESS CONTROL' ) 
                   AND ( pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                 FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS audba 
                                                WHERE audba.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                             ) 
                      -- OR  
                      -- pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                      --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                       )  
               ) 
 ORDER BY 
       rtn.SPECIFIC_SCHEMA_ID
     , rtn.SPECIFIC_ID
)
;

View created.

Elapsed time: 4.43000 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.DBA_OBJECTS
        IS 'DBA_OBJECTS describes all objects in the database.';

Comment created.

Elapsed time: 0.16400 ms 


--#####################
--# comment column
--#####################


COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_OBJECTS.OWNER
        IS 'Owner of the object';

Comment created.

Elapsed time: 0.19100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_OBJECTS.SCHEMA_NAME
        IS 'Schema of the object';

Comment created.

Elapsed time: 0.19900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_OBJECTS.OBJECT_NAME
        IS 'Name of the object';

Comment created.

Elapsed time: 0.19000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_OBJECTS.SUBOBJECT_NAME
        IS 'Name of the subobject (for example, partition)';

Comment created.

Elapsed time: 0.18300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_OBJECTS.OBJECT_ID
        IS 'Dictionary object number of the object';

Comment created.

Elapsed time: 0.20100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_OBJECTS.DATA_OBJECT_ID
        IS 'Dictionary object number of the segment that contains the object';

Comment created.

Elapsed time: 0.18000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_OBJECTS.OBJECT_TYPE
        IS 'Type of the object (such as TABLE, INDEX)';

Comment created.

Elapsed time: 0.18500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_OBJECTS.CREATED
        IS 'Timestamp for the creation of the object';

Comment created.

Elapsed time: 0.23100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_OBJECTS.LAST_DDL_TIME
        IS 'Timestamp for the last modification of the object resulting from a DDL statement';

Comment created.

Elapsed time: 0.17700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_OBJECTS.TIMESTAMP
        IS 'Timestamp for the specification of the object (character data)';

Comment created.

Elapsed time: 0.17800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_OBJECTS.STATUS
        IS 'Status of the object: the value in ( VALID, INVALID, N/A )';

Comment created.

Elapsed time: 0.18800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_OBJECTS.TEMPORARY
        IS 'Indicates whether the object is temporary (the current session can see only data that it placed in this object itself) (Y) or not (N)';

Comment created.

Elapsed time: 0.18200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_OBJECTS.GENERATED
        IS 'Indicates whether the name of this object was system-generated (Y) or not (N)';

Comment created.

Elapsed time: 0.17600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_OBJECTS.SECONDARY
        IS 'Indicates whether this is a secondary object created by the ODCIIndexCreate method of the Oracle Data Cartridge (Y) or not (N)';

Comment created.

Elapsed time: 0.18700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_OBJECTS.NAMESPACE
        IS 'Namespace for the object';

Comment created.

Elapsed time: 0.17400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_OBJECTS.EDITION_NAME
        IS 'Name of the edition in which the object is actual';

Comment created.

Elapsed time: 0.17700 ms 


--#####################
--# grant view
--#####################

--GRANT SELECT ON TABLE DICTIONARY_SCHEMA.DBA_OBJECTS TO DBA;
GRANT SELECT ON TABLE DICTIONARY_SCHEMA.DBA_OBJECTS TO PUBLIC;

Grant succeeded.

Elapsed time: 0.15500 ms 


COMMIT;

Commit complete.

Elapsed time: 0.25200 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS DBA_OBJECTS;

Synonym dropped.

Elapsed time: 0.09800 ms 

CREATE PUBLIC SYNONYM DBA_OBJECTS FOR DICTIONARY_SCHEMA.DBA_OBJECTS;

Synonym created.

Elapsed time: 0.11000 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05000 ms 



--##############################################################
--# DICTIONARY_SCHEMA.ALL_OBJECTS
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.ALL_OBJECTS;

View dropped.

Elapsed time: 2.56100 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.ALL_OBJECTS
(
       OWNER
     , SCHEMA_NAME
     , OBJECT_NAME
     , SUBOBJECT_NAME
     , OBJECT_ID
     , DATA_OBJECT_ID
     , OBJECT_TYPE
     , CREATED
     , LAST_DDL_TIME
     , TIMESTAMP
     , STATUS
     , TEMPORARY
     , GENERATED
     , SECONDARY
     , NAMESPACE
     , EDITION_NAME
)
AS
( 
SELECT
       auth.AUTHORIZATION_NAME             -- OWNER
     , sch.SCHEMA_NAME                     -- SCHEMA_NAME
     , tab.TABLE_NAME                      -- OBJECT_NAME
     , CAST( NULL AS VARCHAR(128 OCTETS) ) -- SUBOBJECT_NAME
     , CAST( tab.TABLE_ID AS NUMBER )      -- OBJECT_ID
     , CAST( CASE tab.TABLE_TYPE 
                  WHEN 'BASE TABLE'       THEN tab.TABLE_ID 
                  WHEN 'VIEW'             THEN NULL
                  WHEN 'GLOBAL TEMPORARY' THEN NULL
                  WHEN 'LOCAL TEMPORARY'  THEN NULL
                  WHEN 'SYSTEM VERSIONED' THEN tab.TABLE_ID 
                  WHEN 'FIXED TABLE'      THEN NULL
                  WHEN 'DUMP TABLE'       THEN NULL
                  ELSE NULL 
                  END
               AS NUMBER )                 -- DATA_OBJECT_ID
     , CAST( CASE tab.TABLE_TYPE 
                  WHEN 'BASE TABLE'       THEN 'TABLE'
                  WHEN 'VIEW'             THEN 'VIEW'
                  WHEN 'GLOBAL TEMPORARY' THEN 'GLOBAL TEMPORARY TABLE'
                  WHEN 'LOCAL TEMPORARY'  THEN 'LOCAL TEMPORARY TABLE'
                  WHEN 'SYSTEM VERSIONED' THEN 'SYSTEM VERSIONED TABLE'
                  WHEN 'FIXED TABLE'      THEN 'FIXED TABLE'
                  WHEN 'DUMP TABLE'       THEN 'DUMP TABLE'
                  ELSE NULL 
                  END
               AS VARCHAR(32 OCTETS) )     -- OBJECT_TYPE
     , tab.CREATED_TIME                    -- CREATED
     , tab.MODIFIED_TIME                   -- LAST_DDL_TIME
     , CAST( TO_CHAR( tab.MODIFIED_TIME, 
                      'YYYY-MM-DD HH24:MI:SS.FF2' ) 
             AS VARCHAR(32 OCTETS) )       -- TIMESTAMP
     , CAST( CASE tab.TABLE_TYPE 
                  WHEN 'BASE TABLE'       THEN 'VALID'
                  WHEN 'VIEW'             THEN ( SELECT CASE WHEN (viw.IS_COMPILED = FALSE) OR (viw.IS_AFFECTED = TRUE) 
                                                             THEN 'INVALID'
                                                             ELSE 'VALID'
                                                             END
                                                   FROM DEFINITION_SCHEMA.VIEWS AS viw
                                                  WHERE viw.TABLE_ID = tab.TABLE_ID )
                  WHEN 'GLOBAL TEMPORARY' THEN 'VALID'
                  WHEN 'LOCAL TEMPORARY'  THEN 'VALID'
                  WHEN 'SYSTEM VERSIONED' THEN 'VALID'
                  WHEN 'FIXED TABLE'      THEN 'VALID'
                  WHEN 'DUMP TABLE'       THEN 'VALID'
                  ELSE NULL 
                  END
               AS VARCHAR(32 OCTETS) )     -- STATUS
     , CAST( CASE tab.TABLE_TYPE 
                  WHEN 'BASE TABLE'       THEN 'N'
                  WHEN 'VIEW'             THEN 'N'
                  WHEN 'GLOBAL TEMPORARY' THEN 'Y'
                  WHEN 'LOCAL TEMPORARY'  THEN 'Y'
                  WHEN 'SYSTEM VERSIONED' THEN 'N'
                  WHEN 'FIXED TABLE'      THEN 'N'
                  WHEN 'DUMP TABLE'       THEN 'N'
                  ELSE NULL 
                  END
               AS VARCHAR(1 OCTETS) )         -- TEMPORARY
     , CAST( 'N' AS VARCHAR(1 OCTETS) )       -- GENERATED
     , CAST( 'N' AS VARCHAR(1 OCTETS) )       -- SECONDARY
     , CAST( sch.SCHEMA_ID AS NUMBER )        -- NAMESPACE
     , CAST( NULL AS VARCHAR(128 OCTETS) )    -- EDITION_NAME
  FROM
       DICTIONARY_SCHEMA.WHOLE_TABLES       AS tab 
     , DEFINITION_SCHEMA.SCHEMATA           AS sch 
     , DEFINITION_SCHEMA.AUTHORIZATIONS     AS auth 
 WHERE
       tab.SCHEMA_ID = sch.SCHEMA_ID
   AND tab.OWNER_ID  = auth.AUTH_ID
   AND ( tab.TABLE_ID IN ( SELECT pvcol.TABLE_ID 
                              FROM DEFINITION_SCHEMA.COLUMN_PRIVILEGES AS pvcol 
                             WHERE ( pvcol.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                             FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS aucol 
                                                            WHERE aucol.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                         ) 
                                  -- OR  
                                  -- pvcol.GRANTEE_ID IN ( SELECT AUTH_ID 
                                  --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                   )
                          ) 
         OR 
         tab.TABLE_ID IN ( SELECT pvtab.TABLE_ID 
                             FROM DEFINITION_SCHEMA.TABLE_PRIVILEGES AS pvtab 
                            WHERE ( pvtab.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                            FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS autab 
                                                           WHERE autab.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                        ) 
                                 -- OR  
                                 -- pvtab.GRANTEE_ID IN ( SELECT AUTH_ID 
                                 --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                  )
                          ) 
         OR 
         tab.SCHEMA_ID IN ( SELECT pvsch.SCHEMA_ID 
                              FROM DEFINITION_SCHEMA.SCHEMA_PRIVILEGES AS pvsch 
                             WHERE pvsch.PRIVILEGE_TYPE IN ( 'CONTROL SCHEMA', 'ALTER TABLE', 'DROP TABLE', 
                                                             'SELECT TABLE', 'INSERT TABLE', 'DELETE TABLE', 'UPDATE TABLE', 'LOCK TABLE' ) 
                               AND ( pvsch.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                             FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS ausch 
                                                            WHERE ausch.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                         ) 
                                  -- OR  
                                  -- pvsch.GRANTEE_ID IN ( SELECT AUTH_ID 
                                  --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                   )
                          ) 
         OR 
         EXISTS ( SELECT GRANTEE_ID  
                    FROM DEFINITION_SCHEMA.DATABASE_PRIVILEGES pvdba 
                   WHERE pvdba.PRIVILEGE_TYPE IN ( 'ALTER ANY TABLE', 'DROP ANY TABLE', 
                                                   'SELECT ANY TABLE', 'INSERT ANY TABLE', 'DELETE ANY TABLE', 'UPDATE ANY TABLE', 'LOCK ANY TABLE' ) 
                     AND ( pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                   FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS audba 
                                                  WHERE audba.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                ) 
                      -- OR  
                      -- pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                      --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                         )  
                ) 
       ) 
 ORDER BY 
       tab.SCHEMA_ID
     , tab.TABLE_ID   
)
UNION ALL
(
SELECT
       auth.AUTHORIZATION_NAME               -- OWNER
     , sch.SCHEMA_NAME                       -- SCHEMA_NAME
     , idx.INDEX_NAME                        -- OBJECT_NAME
     , CAST( NULL AS VARCHAR(128 OCTETS) )   -- SUBOBJECT_NAME
     , CAST( idx.INDEX_ID AS NUMBER )        -- OBJECT_ID
     , CAST( idx.INDEX_ID AS NUMBER )        -- DATA_OBJECT_ID
     , CAST( 'INDEX' AS VARCHAR(32 OCTETS) ) -- OBJECT_TYPE
     , idx.CREATED_TIME                      -- CREATED
     , idx.MODIFIED_TIME                     -- LAST_DDL_TIME
     , CAST( TO_CHAR( idx.MODIFIED_TIME, 
                      'YYYY-MM-DD HH24:MI:SS.FF2' ) 
             AS VARCHAR(32 OCTETS) )         -- TIMESTAMP
     , CAST( CASE WHEN idx.INVALID = TRUE 
                  THEN 'INVALID'
                  ELSE 'VALID'
                  END
               AS VARCHAR(32 OCTETS) )        -- STATUS
     , CAST( 'N' AS VARCHAR(1 OCTETS) )       -- TEMPORARY
     , CAST( 'N' AS VARCHAR(1 OCTETS) )       -- GENERATED
     , CAST( 'N' AS VARCHAR(1 OCTETS) )       -- SECONDARY
     , CAST( sch.SCHEMA_ID AS NUMBER )        -- NAMESPACE
     , CAST( NULL AS VARCHAR(128 OCTETS) )    -- EDITION_NAME
  FROM
       DEFINITION_SCHEMA.INDEXES               AS idx
     , DEFINITION_SCHEMA.TABLES                AS tab
     , DEFINITION_SCHEMA.SCHEMATA              AS sch 
     , DEFINITION_SCHEMA.AUTHORIZATIONS        AS auth
 WHERE
       idx.TABLE_ID   = tab.TABLE_ID
   AND idx.SCHEMA_ID  = sch.SCHEMA_ID
   AND idx.OWNER_ID   = auth.AUTH_ID
   AND ( tab.TABLE_ID IN ( SELECT pvcol.TABLE_ID 
                             FROM DEFINITION_SCHEMA.COLUMN_PRIVILEGES AS pvcol 
                            WHERE ( pvcol.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                            FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS aucol 
                                                           WHERE aucol.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                        ) 
                                  -- OR  
                                  -- pvcol.GRANTEE_ID IN ( SELECT AUTH_ID 
                                  --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                  )
                         ) 
         OR 
         tab.TABLE_ID IN ( SELECT pvtab.TABLE_ID 
                             FROM DEFINITION_SCHEMA.TABLE_PRIVILEGES AS pvtab 
                            WHERE ( pvtab.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                            FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS autab 
                                                           WHERE autab.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                        ) 
                                 -- OR  
                                 -- pvtab.GRANTEE_ID IN ( SELECT AUTH_ID 
                                 --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                  )
                         ) 
         OR 
         tab.SCHEMA_ID IN ( SELECT pvsch.SCHEMA_ID 
                              FROM DEFINITION_SCHEMA.SCHEMA_PRIVILEGES AS pvsch 
                             WHERE pvsch.PRIVILEGE_TYPE IN ( 'CONTROL SCHEMA', 'ALTER TABLE', 'DROP TABLE', 
                                                             'SELECT TABLE', 'INSERT TABLE', 'DELETE TABLE', 'UPDATE TABLE', 'LOCK TABLE' ) 
                               AND ( pvsch.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                             FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS ausch 
                                                            WHERE ausch.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                         ) 
                                  -- OR  
                                  -- pvsch.GRANTEE_ID IN ( SELECT AUTH_ID 
                                  --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                   )
                          ) 
         OR 
         EXISTS ( SELECT GRANTEE_ID  
                    FROM DEFINITION_SCHEMA.DATABASE_PRIVILEGES pvdba 
                   WHERE pvdba.PRIVILEGE_TYPE IN ( 'ALTER ANY TABLE', 'DROP ANY TABLE', 
                                                   'SELECT ANY TABLE', 'INSERT ANY TABLE', 'DELETE ANY TABLE', 'UPDATE ANY TABLE', 'LOCK ANY TABLE' ) 
                     AND ( pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                   FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS audba 
                                                  WHERE audba.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                ) 
                        -- OR  
                        -- pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                        --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                         )  
                ) 
       ) 
 ORDER BY 
       idx.SCHEMA_ID
     , idx.INDEX_ID   
)
UNION ALL
(
SELECT
       auth.AUTHORIZATION_NAME                   -- OWNER
     , sch.SCHEMA_NAME                           -- SCHEMA_NAME
     , sqc.SEQUENCE_NAME                         -- OBJECT_NAME
     , CAST( NULL AS VARCHAR(128 OCTETS) )       -- SUBOBJECT_NAME
     , CAST( sqc.SEQUENCE_ID AS NUMBER )         -- OBJECT_ID
     , CAST( NULL AS NUMBER )                    -- DATA_OBJECT_ID
     , CAST( 'SEQUENCE' AS VARCHAR(32 OCTETS) )  -- OBJECT_TYPE
     , sqc.CREATED_TIME                          -- CREATED
     , sqc.MODIFIED_TIME                         -- LAST_DDL_TIME
     , CAST( TO_CHAR( sqc.MODIFIED_TIME, 
                      'YYYY-MM-DD HH24:MI:SS.FF2' ) 
             AS VARCHAR(32 OCTETS) )             -- TIMESTAMP
     , CAST( 'VALID' AS VARCHAR(32 OCTETS) )     -- STATUS
     , CAST( 'N' AS VARCHAR(1 OCTETS) )          -- TEMPORARY
     , CAST( 'N' AS VARCHAR(1 OCTETS) )          -- GENERATED
     , CAST( 'N' AS VARCHAR(1 OCTETS) )          -- SECONDARY
     , CAST( sch.SCHEMA_ID AS NUMBER )           -- NAMESPACE
     , CAST( NULL AS VARCHAR(128 OCTETS) )       -- EDITION_NAME
  FROM
       DEFINITION_SCHEMA.SEQUENCES         AS sqc
     , DEFINITION_SCHEMA.SCHEMATA          AS sch 
     , DEFINITION_SCHEMA.AUTHORIZATIONS    AS auth
 WHERE
       sqc.SCHEMA_ID   = sch.SCHEMA_ID
   AND sqc.OWNER_ID    = auth.AUTH_ID
   AND ( sqc.SEQUENCE_ID IN ( SELECT pvusg.OBJECT_ID 
                                FROM DEFINITION_SCHEMA.USAGE_PRIVILEGES AS pvusg
                               WHERE pvusg.OBJECT_TYPE = 'SEQUENCE'
                                 AND ( pvusg.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                               FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS auusg 
                                                              WHERE auusg.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                           ) 
                                    -- OR  
                                    -- pvusg.GRANTEE_ID IN ( SELECT AUTH_ID 
                                    --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                     )  
                            ) 
         OR
         sqc.SCHEMA_ID IN ( SELECT pvsch.SCHEMA_ID 
                              FROM DEFINITION_SCHEMA.SCHEMA_PRIVILEGES AS pvsch 
                             WHERE pvsch.PRIVILEGE_TYPE IN ( 'CONTROL SCHEMA', 'ALTER SEQUENCE', 'DROP SEQUENCE', 'USAGE SEQUENCE' )
                               AND ( pvsch.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                             FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS ausch 
                                                            WHERE ausch.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                          ) 
                                  -- OR  
                                  -- pvsch.GRANTEE_ID IN ( SELECT AUTH_ID 
                                  --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                   )  
                           ) 
         OR 
         EXISTS ( SELECT GRANTEE_ID  
                    FROM DEFINITION_SCHEMA.DATABASE_PRIVILEGES pvdba 
                   WHERE pvdba.PRIVILEGE_TYPE IN ( 'ALTER ANY SEQUENCE', 'DROP ANY SEQUENCE', 'USAGE ANY SEQUENCE' ) 
                     AND ( pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                   FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS audba 
                                                  WHERE audba.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                ) 
                        -- OR  
                        -- pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                        --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                         )  
                ) 
       ) 
 ORDER BY 
       sqc.SCHEMA_ID
     , sqc.SEQUENCE_ID
)
UNION ALL
(
SELECT
       auth.AUTHORIZATION_NAME                   -- OWNER
     , sch.SCHEMA_NAME                           -- SCHEMA_NAME
     , syn.SYNONYM_NAME                          -- OBJECT_NAME
     , CAST( NULL AS VARCHAR(128 OCTETS) )       -- SUBOBJECT_NAME
     , CAST( syn.SYNONYM_ID AS NUMBER )          -- OBJECT_ID
     , CAST( NULL AS NUMBER )                    -- DATA_OBJECT_ID
     , CAST( 'SYNONYM' AS VARCHAR(32 OCTETS) )   -- OBJECT_TYPE
     , syn.CREATED_TIME                          -- CREATED
     , syn.MODIFIED_TIME                         -- LAST_DDL_TIME
     , CAST( TO_CHAR( syn.MODIFIED_TIME, 
                      'YYYY-MM-DD HH24:MI:SS.FF2' ) 
             AS VARCHAR(32 OCTETS) )             -- TIMESTAMP
     , CAST( 'VALID' AS VARCHAR(32 OCTETS) )     -- STATUS
     , CAST( 'N' AS VARCHAR(1 OCTETS) )          -- TEMPORARY
     , CAST( 'N' AS VARCHAR(1 OCTETS) )          -- GENERATED
     , CAST( 'N' AS VARCHAR(1 OCTETS) )          -- SECONDARY
     , CAST( sch.SCHEMA_ID AS NUMBER )           -- NAMESPACE
     , CAST( NULL AS VARCHAR(128 OCTETS) )       -- EDITION_NAME
  FROM
       DEFINITION_SCHEMA.SYNONYMS          AS syn
     , DEFINITION_SCHEMA.SCHEMATA          AS sch 
     , DEFINITION_SCHEMA.AUTHORIZATIONS    AS auth
 WHERE
       syn.SCHEMA_ID   = sch.SCHEMA_ID
   AND syn.OWNER_ID    = auth.AUTH_ID
 ORDER BY 
       syn.SCHEMA_ID
     , syn.SYNONYM_ID
)
UNION ALL
(
SELECT
       CAST( 'PUBLIC' AS VARCHAR(128 OCTETS) )   -- OWNER
     , CAST( NULL AS VARCHAR(128 OCTETS) )       -- SCHEMA_NAME
     , psyn.SYNONYM_NAME                         -- OBJECT_NAME
     , CAST( NULL AS VARCHAR(128 OCTETS) )       -- SUBOBJECT_NAME
     , CAST( psyn.SYNONYM_ID AS NUMBER )         -- OBJECT_ID
     , CAST( NULL AS NUMBER )                    -- DATA_OBJECT_ID
     , CAST( 'SYNONYM' AS VARCHAR(32 OCTETS) )   -- OBJECT_TYPE
     , psyn.CREATED_TIME                         -- CREATED
     , psyn.MODIFIED_TIME                        -- LAST_DDL_TIME
     , CAST( TO_CHAR( psyn.MODIFIED_TIME, 
                      'YYYY-MM-DD HH24:MI:SS.FF2' ) 
             AS VARCHAR(32 OCTETS) )             -- TIMESTAMP
     , CAST( 'VALID' AS VARCHAR(32 OCTETS) )     -- STATUS
     , CAST( 'N' AS VARCHAR(1 OCTETS) )          -- TEMPORARY
     , CAST( 'N' AS VARCHAR(1 OCTETS) )          -- GENERATED
     , CAST( 'N' AS VARCHAR(1 OCTETS) )          -- SECONDARY
     , CAST( 1 AS NUMBER )                       -- NAMESPACE
     , CAST( NULL AS VARCHAR(128 OCTETS) )       -- EDITION_NAME
  FROM
       DEFINITION_SCHEMA.PUBLIC_SYNONYMS          AS psyn
 ORDER BY 
       psyn.SYNONYM_ID
)
UNION ALL
(
SELECT
       auth.AUTHORIZATION_NAME                   -- OWNER
     , sch.SCHEMA_NAME                           -- SCHEMA_NAME
     , rtn.SPECIFIC_NAME                         -- OBJECT_NAME
     , CAST( NULL AS VARCHAR(128 OCTETS) )       -- SUBOBJECT_NAME
     , CAST( rtn.SPECIFIC_ID AS NUMBER )         -- OBJECT_ID
     , CAST( NULL AS NUMBER )                    -- DATA_OBJECT_ID
     , CAST( rtn.ROUTINE_TYPE AS VARCHAR(32 OCTETS) )  -- OBJECT_TYPE
     , rtn.CREATED_TIME                          -- CREATED
     , rtn.MODIFIED_TIME                         -- LAST_DDL_TIME
     , CAST( TO_CHAR( rtn.MODIFIED_TIME, 
                      'YYYY-MM-DD HH24:MI:SS.FF2' ) 
             AS VARCHAR(32 OCTETS) )             -- TIMESTAMP
     , CAST( CASE  WHEN (rtn.IS_COMPILED = TRUE) AND (rtn.IS_AFFECTED = FALSE)
                       THEN 'VALID'
                   ELSE 'INVALID'
                   END AS VARCHAR(32 OCTETS) )     -- STATUS
     , CAST( 'N' AS VARCHAR(1 OCTETS) )          -- TEMPORARY
     , CAST( 'N' AS VARCHAR(1 OCTETS) )          -- GENERATED
     , CAST( 'N' AS VARCHAR(1 OCTETS) )          -- SECONDARY
     , CAST( sch.SCHEMA_ID AS NUMBER )           -- NAMESPACE
     , CAST( NULL AS VARCHAR(128 OCTETS) )       -- EDITION_NAME
  FROM
       DEFINITION_SCHEMA.ROUTINES          AS rtn
     , DEFINITION_SCHEMA.SCHEMATA          AS sch 
     , DEFINITION_SCHEMA.AUTHORIZATIONS    AS auth
 WHERE
       rtn.SPECIFIC_SCHEMA_ID   = sch.SCHEMA_ID
   AND rtn.SPECIFIC_OWNER_ID    = auth.AUTH_ID
   AND ( rtn.SPECIFIC_ID IN ( SELECT pvrtn.SPECIFIC_ID 
                                FROM DEFINITION_SCHEMA.ROUTINE_PRIVILEGES AS pvrtn
                               WHERE  pvrtn.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                               FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS auusg 
                                                              WHERE auusg.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                           ) 
                                    -- OR  
                                    -- pvusg.GRANTEE_ID IN ( SELECT AUTH_ID 
                                    --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                            ) 
         OR
         rtn.SPECIFIC_SCHEMA_ID IN ( SELECT pvsch.SCHEMA_ID 
                                       FROM DEFINITION_SCHEMA.SCHEMA_PRIVILEGES AS pvsch 
                                      WHERE pvsch.PRIVILEGE_TYPE IN ( 'CONTROL SCHEMA', 'ALTER PROCEDURE', 'DROP PROCEDURE', 'EXECUTE PROCEDURE' )
                                        AND ( pvsch.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                                      FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS ausch 
                                                                     WHERE ausch.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                                   ) 
                                           -- OR  
                                           -- pvsch.GRANTEE_ID IN ( SELECT AUTH_ID 
                                           --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                            )  
                                    ) 
         OR 
         EXISTS ( SELECT GRANTEE_ID  
                    FROM DEFINITION_SCHEMA.DATABASE_PRIVILEGES pvdba 
                   WHERE pvdba.PRIVILEGE_TYPE IN ( 'ALTER ANY PROCEDURE', 'DROP ANY PROCEDURE', 'EXECUTE ANY PROCEDURE' ) 
                     AND ( pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                   FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS audba 
                                                  WHERE audba.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                ) 
                        -- OR  
                        -- pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                        --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                         )  
                ) 
       ) 
 ORDER BY 
       rtn.SPECIFIC_SCHEMA_ID
     , rtn.SPECIFIC_ID
)
;

View created.

Elapsed time: 4.95800 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.ALL_OBJECTS
        IS 'ALL_OBJECTS describes all objects accessible to the current user.';

Comment created.

Elapsed time: 0.16200 ms 


--#####################
--# comment column
--#####################


COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_OBJECTS.OWNER
        IS 'Owner of the object';

Comment created.

Elapsed time: 0.20100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_OBJECTS.SCHEMA_NAME
        IS 'Schema of the object';

Comment created.

Elapsed time: 0.18300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_OBJECTS.OBJECT_NAME
        IS 'Name of the object';

Comment created.

Elapsed time: 0.17900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_OBJECTS.SUBOBJECT_NAME
        IS 'Name of the subobject (for example, partition)';

Comment created.

Elapsed time: 0.17900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_OBJECTS.OBJECT_ID
        IS 'Dictionary object number of the object';

Comment created.

Elapsed time: 0.18800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_OBJECTS.DATA_OBJECT_ID
        IS 'Dictionary object number of the segment that contains the object';

Comment created.

Elapsed time: 0.42300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_OBJECTS.OBJECT_TYPE
        IS 'Type of the object (such as TABLE, INDEX)';

Comment created.

Elapsed time: 0.19100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_OBJECTS.CREATED
        IS 'Timestamp for the creation of the object';

Comment created.

Elapsed time: 0.18900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_OBJECTS.LAST_DDL_TIME
        IS 'Timestamp for the last modification of the object resulting from a DDL statement';

Comment created.

Elapsed time: 0.17900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_OBJECTS.TIMESTAMP
        IS 'Timestamp for the specification of the object (character data)';

Comment created.

Elapsed time: 0.19000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_OBJECTS.STATUS
        IS 'Status of the object: the value in ( VALID, INVALID, N/A )';

Comment created.

Elapsed time: 0.18500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_OBJECTS.TEMPORARY
        IS 'Indicates whether the object is temporary (the current session can see only data that it placed in this object itself) (Y) or not (N)';

Comment created.

Elapsed time: 0.19500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_OBJECTS.GENERATED
        IS 'Indicates whether the name of this object was system-generated (Y) or not (N)';

Comment created.

Elapsed time: 0.18100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_OBJECTS.SECONDARY
        IS 'Indicates whether this is a secondary object created by the ODCIIndexCreate method of the Oracle Data Cartridge (Y) or not (N)';

Comment created.

Elapsed time: 0.23200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_OBJECTS.NAMESPACE
        IS 'Namespace for the object';

Comment created.

Elapsed time: 0.17800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_OBJECTS.EDITION_NAME
        IS 'Name of the edition in which the object is actual';

Comment created.

Elapsed time: 0.18000 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.ALL_OBJECTS TO PUBLIC;

Grant succeeded.

Elapsed time: 0.15400 ms 


COMMIT;

Commit complete.

Elapsed time: 0.24400 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS ALL_OBJECTS;

Synonym dropped.

Elapsed time: 0.09300 ms 

CREATE PUBLIC SYNONYM ALL_OBJECTS FOR DICTIONARY_SCHEMA.ALL_OBJECTS;

Synonym created.

Elapsed time: 0.11900 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05100 ms 



--##############################################################
--# DICTIONARY_SCHEMA.USER_OBJECTS
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.USER_OBJECTS;

View dropped.

Elapsed time: 2.26300 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.USER_OBJECTS
(
       SCHEMA_NAME
     , OBJECT_NAME
     , SUBOBJECT_NAME
     , OBJECT_ID
     , DATA_OBJECT_ID
     , OBJECT_TYPE
     , CREATED
     , LAST_DDL_TIME
     , TIMESTAMP
     , STATUS
     , TEMPORARY
     , GENERATED
     , SECONDARY
     , NAMESPACE
     , EDITION_NAME
)
AS
SELECT
       aobj.SCHEMA_NAME
     , aobj.OBJECT_NAME
     , aobj.SUBOBJECT_NAME
     , aobj.OBJECT_ID
     , aobj.DATA_OBJECT_ID
     , aobj.OBJECT_TYPE
     , aobj.CREATED
     , aobj.LAST_DDL_TIME
     , aobj.TIMESTAMP
     , aobj.STATUS
     , aobj.TEMPORARY
     , aobj.GENERATED
     , aobj.SECONDARY
     , aobj.NAMESPACE
     , aobj.EDITION_NAME
  FROM
       DICTIONARY_SCHEMA.ALL_OBJECTS AS aobj
 WHERE 
       aobj.OWNER = CURRENT_USER
;

View created.

Elapsed time: 4.76200 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.USER_OBJECTS
        IS 'USER_OBJECTS describes all objects owned by the current user.';

Comment created.

Elapsed time: 0.17700 ms 


--#####################
--# comment column
--#####################


COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_OBJECTS.SCHEMA_NAME
        IS 'Schema of the object';

Comment created.

Elapsed time: 0.18900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_OBJECTS.OBJECT_NAME
        IS 'Name of the object';

Comment created.

Elapsed time: 0.17900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_OBJECTS.SUBOBJECT_NAME
        IS 'Name of the subobject (for example, partition)';

Comment created.

Elapsed time: 0.19200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_OBJECTS.OBJECT_ID
        IS 'Dictionary object number of the object';

Comment created.

Elapsed time: 0.18700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_OBJECTS.DATA_OBJECT_ID
        IS 'Dictionary object number of the segment that contains the object';

Comment created.

Elapsed time: 0.18500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_OBJECTS.OBJECT_TYPE
        IS 'Type of the object (such as TABLE, INDEX)';

Comment created.

Elapsed time: 0.17800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_OBJECTS.CREATED
        IS 'Timestamp for the creation of the object';

Comment created.

Elapsed time: 0.17700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_OBJECTS.LAST_DDL_TIME
        IS 'Timestamp for the last modification of the object resulting from a DDL statement';

Comment created.

Elapsed time: 0.17600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_OBJECTS.TIMESTAMP
        IS 'Timestamp for the specification of the object (character data)';

Comment created.

Elapsed time: 0.17600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_OBJECTS.STATUS
        IS 'Status of the object: the value in ( VALID, INVALID, N/A )';

Comment created.

Elapsed time: 0.17600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_OBJECTS.TEMPORARY
        IS 'Indicates whether the object is temporary (the current session can see only data that it placed in this object itself) (Y) or not (N)';

Comment created.

Elapsed time: 0.17700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_OBJECTS.GENERATED
        IS 'Indicates whether the name of this object was system-generated (Y) or not (N)';

Comment created.

Elapsed time: 0.17400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_OBJECTS.SECONDARY
        IS 'Indicates whether this is a secondary object created by the ODCIIndexCreate method of the Oracle Data Cartridge (Y) or not (N)';

Comment created.

Elapsed time: 0.17800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_OBJECTS.NAMESPACE
        IS 'Namespace for the object';

Comment created.

Elapsed time: 0.17100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_OBJECTS.EDITION_NAME
        IS 'Name of the edition in which the object is actual';

Comment created.

Elapsed time: 0.18000 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.USER_OBJECTS TO PUBLIC;

Grant succeeded.

Elapsed time: 0.15600 ms 


COMMIT;

Commit complete.

Elapsed time: 0.23800 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS USER_OBJECTS;

Synonym dropped.

Elapsed time: 0.09300 ms 

CREATE PUBLIC SYNONYM USER_OBJECTS FOR DICTIONARY_SCHEMA.USER_OBJECTS;

Synonym created.

Elapsed time: 0.11000 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05000 ms 


DROP PUBLIC SYNONYM IF EXISTS OBJ;

Synonym dropped.

Elapsed time: 0.08600 ms 

CREATE PUBLIC SYNONYM OBJ FOR DICTIONARY_SCHEMA.USER_OBJECTS;

Synonym created.

Elapsed time: 0.10600 ms 

COMMIT;

Commit complete.

Elapsed time: 0.04900 ms 



--##############################################################
--# DICTIONARY_SCHEMA.DBA_CATALOG
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.DBA_CATALOG;

View dropped.

Elapsed time: 1.13600 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.DBA_CATALOG
(
       OWNER
     , TABLE_SCHEMA
     , TABLE_NAME
     , TABLE_TYPE
)
AS
SELECT
       dobj.OWNER
     , dobj.SCHEMA_NAME
     , dobj.OBJECT_NAME
     , dobj.OBJECT_TYPE
  FROM
       DICTIONARY_SCHEMA.DBA_OBJECTS AS dobj
;

View created.

Elapsed time: 3.02700 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.DBA_CATALOG
        IS 'DBA_CATALOG lists all tables, views, clusters, synonyms, and sequences in the database.';

Comment created.

Elapsed time: 0.15900 ms 


--#####################
--# comment column
--#####################


COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_CATALOG.OWNER
        IS 'Owner of the TABLE, VIEW, SYNONYM, SEQUENCE, or UNDEFINED';

Comment created.

Elapsed time: 0.19200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_CATALOG.TABLE_SCHEMA
        IS 'Schema of the TABLE, VIEW, SYNONYM, SEQUENCE, or UNDEFINED';

Comment created.

Elapsed time: 0.18100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_CATALOG.TABLE_NAME
        IS 'Name of the TABLE, VIEW, SYNONYM, SEQUENCE, or UNDEFINED';

Comment created.

Elapsed time: 0.18100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_CATALOG.TABLE_TYPE
        IS 'Type of the TABLE, VIEW, SYNONYM, SEQUENCE, or UNDEFINED';

Comment created.

Elapsed time: 0.17700 ms 


--#####################
--# grant view
--#####################

--GRANT SELECT ON TABLE DICTIONARY_SCHEMA.DBA_CATALOG TO DBA;
GRANT SELECT ON TABLE DICTIONARY_SCHEMA.DBA_CATALOG TO PUBLIC;

Grant succeeded.

Elapsed time: 0.16100 ms 


COMMIT;

Commit complete.

Elapsed time: 0.12000 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS DBA_CATALOG;

Synonym dropped.

Elapsed time: 0.09700 ms 

CREATE PUBLIC SYNONYM DBA_CATALOG FOR DICTIONARY_SCHEMA.DBA_CATALOG;

Synonym created.

Elapsed time: 0.12600 ms 

COMMIT;

Commit complete.

Elapsed time: 0.06600 ms 


--##############################################################
--# DICTIONARY_SCHEMA.ALL_CATALOG
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.ALL_CATALOG;

View dropped.

Elapsed time: 1.36700 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.ALL_CATALOG
(
       OWNER
     , TABLE_SCHEMA
     , TABLE_NAME
     , TABLE_TYPE
)
AS
SELECT
       aobj.OWNER
     , aobj.SCHEMA_NAME
     , aobj.OBJECT_NAME
     , aobj.OBJECT_TYPE
  FROM
       DICTIONARY_SCHEMA.ALL_OBJECTS AS aobj
;

View created.

Elapsed time: 3.35800 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.ALL_CATALOG
        IS 'ALL_CATALOG displays the tables, clusters, views, synonyms, and sequences accessible to the current user.';

Comment created.

Elapsed time: 0.15800 ms 


--#####################
--# comment column
--#####################


COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_CATALOG.OWNER
        IS 'Owner of the TABLE, VIEW, SYNONYM, SEQUENCE, or UNDEFINED';

Comment created.

Elapsed time: 0.18800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_CATALOG.TABLE_SCHEMA
        IS 'Schema of the TABLE, VIEW, SYNONYM, SEQUENCE, or UNDEFINED';

Comment created.

Elapsed time: 0.18200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_CATALOG.TABLE_NAME
        IS 'Name of the TABLE, VIEW, SYNONYM, SEQUENCE, or UNDEFINED';

Comment created.

Elapsed time: 0.17900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_CATALOG.TABLE_TYPE
        IS 'Type of the TABLE, VIEW, SYNONYM, SEQUENCE, or UNDEFINED';

Comment created.

Elapsed time: 0.17700 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.ALL_CATALOG TO PUBLIC;

Grant succeeded.

Elapsed time: 0.15400 ms 


COMMIT;

Commit complete.

Elapsed time: 0.11900 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS ALL_CATALOG;

Synonym dropped.

Elapsed time: 0.09200 ms 

CREATE PUBLIC SYNONYM ALL_CATALOG FOR DICTIONARY_SCHEMA.ALL_CATALOG;

Synonym created.

Elapsed time: 0.10900 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05000 ms 



--##############################################################
--# DICTIONARY_SCHEMA.USER_CATALOG
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.USER_CATALOG;

View dropped.

Elapsed time: 1.17400 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.USER_CATALOG
(
       TABLE_SCHEMA
     , TABLE_NAME
     , TABLE_TYPE
)
AS
SELECT
       acat.TABLE_SCHEMA
     , acat.TABLE_NAME
     , acat.TABLE_TYPE
  FROM
       DICTIONARY_SCHEMA.ALL_CATALOG AS acat
 WHERE acat.OWNER = CURRENT_USER
;

View created.

Elapsed time: 3.57100 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.USER_CATALOG
        IS 'USER_CATALOG lists tables, views, clusters, synonyms, and sequences owned by the current user.';

Comment created.

Elapsed time: 0.16900 ms 


--#####################
--# comment column
--#####################


COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_CATALOG.TABLE_SCHEMA
        IS 'Schema of the TABLE, VIEW, SYNONYM, SEQUENCE, or UNDEFINED';

Comment created.

Elapsed time: 0.19200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_CATALOG.TABLE_NAME
        IS 'Name of the TABLE, VIEW, SYNONYM, SEQUENCE, or UNDEFINED';

Comment created.

Elapsed time: 0.18600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_CATALOG.TABLE_TYPE
        IS 'Type of the TABLE, VIEW, SYNONYM, SEQUENCE, or UNDEFINED';

Comment created.

Elapsed time: 0.18700 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.USER_CATALOG TO PUBLIC;

Grant succeeded.

Elapsed time: 0.16200 ms 


COMMIT;

Commit complete.

Elapsed time: 0.11100 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS USER_CATALOG;

Synonym dropped.

Elapsed time: 0.09400 ms 

CREATE PUBLIC SYNONYM USER_CATALOG FOR DICTIONARY_SCHEMA.USER_CATALOG;

Synonym created.

Elapsed time: 0.11000 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05100 ms 





--##############################################################
--# DICTIONARY_SCHEMA.DBA_PROFILES
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.DBA_PROFILES;

View dropped.

Elapsed time: 1.06700 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.DBA_PROFILES
(
       PROFILE_NAME
     , RESOURCE_NAME
     , RESOURCE_TYPE
     , LIMIT_VALUE
     , COMMON
)
AS
SELECT
       prof.PROFILE_NAME
     , pram.PARAMETER_NAME
     , CAST( 'PASSWORD' AS VARCHAR(32 OCTETS) )
     , pram.PARAMETER_STRING
     , CAST( 'YES' AS VARCHAR(3 OCTETS) )
  FROM
       DEFINITION_SCHEMA.PROFILES AS prof
     , DEFINITION_SCHEMA.PROFILE_PASSWORD_PARAMETER AS pram
 WHERE prof.PROFILE_ID = pram.PROFILE_ID
   AND EXISTS ( SELECT GRANTEE_ID  
                  FROM DEFINITION_SCHEMA.DATABASE_PRIVILEGES pvdba 
                 WHERE pvdba.PRIVILEGE_TYPE IN ( 'ACCESS CONTROL' ) 
                   AND ( pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                 FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS audba 
                                                WHERE audba.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                             ) 
                      -- OR  
                      -- pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                      --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                       )  
               )  
 ORDER BY
       pram.PROFILE_ID
     , pram.PARAMETER_ID
;

View created.

Elapsed time: 1.39800 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.DBA_PROFILES
        IS 'DBA_PROFILES displays all profiles and their limits.';

Comment created.

Elapsed time: 0.17000 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_PROFILES.PROFILE_NAME
        IS 'Profile name';

Comment created.

Elapsed time: 0.19200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_PROFILES.RESOURCE_NAME
        IS 'Resource name';

Comment created.

Elapsed time: 0.18000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_PROFILES.RESOURCE_TYPE
        IS 'Indicates whether the resource profile is a KERNEL or a PASSWORD parameter';

Comment created.

Elapsed time: 0.18200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_PROFILES.LIMIT_VALUE
        IS 'Limit placed on this resource for this profile';

Comment created.

Elapsed time: 0.18800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_PROFILES.COMMON
        IS 'Indicates whether a given profile is common. (YES or NO)';

Comment created.

Elapsed time: 0.18000 ms 


--#####################
--# grant view
--#####################

--GRANT SELECT ON TABLE DICTIONARY_SCHEMA.DBA_PROFILES TO DBA;
GRANT SELECT ON TABLE DICTIONARY_SCHEMA.DBA_PROFILES TO PUBLIC;

Grant succeeded.

Elapsed time: 0.16400 ms 


COMMIT;

Commit complete.

Elapsed time: 0.13600 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS DBA_PROFILES;

Synonym dropped.

Elapsed time: 0.09200 ms 

CREATE PUBLIC SYNONYM DBA_PROFILES FOR DICTIONARY_SCHEMA.DBA_PROFILES;

Synonym created.

Elapsed time: 0.12000 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05000 ms 


--##############################################################
--# DICTIONARY_SCHEMA.DBA_SCHEMAS
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.DBA_SCHEMAS;

View dropped.

Elapsed time: 1.02500 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.DBA_SCHEMAS 
(
       SCHEMA_OWNER
     , SCHEMA_NAME
     , CREATED_TIME
     , MODIFIED_TIME
     , COMMENTS
)
AS
SELECT 
       auth.AUTHORIZATION_NAME
     , sch.SCHEMA_NAME
     , sch.CREATED_TIME
     , sch.MODIFIED_TIME
     , sch.COMMENTS
  FROM 
       DEFINITION_SCHEMA.SCHEMATA        AS sch
     , DEFINITION_SCHEMA.AUTHORIZATIONS  AS auth
 WHERE 
       sch.OWNER_ID = auth.AUTH_ID
   AND EXISTS ( SELECT GRANTEE_ID  
                  FROM DEFINITION_SCHEMA.DATABASE_PRIVILEGES pvdba 
                 WHERE pvdba.PRIVILEGE_TYPE IN ( 'ACCESS CONTROL' ) 
                   AND ( pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                 FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS audba 
                                                WHERE audba.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                             ) 
                      -- OR  
                      -- pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                      --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                       )  
               ) 
 ORDER BY
       sch.SCHEMA_ID
;

View created.

Elapsed time: 1.33900 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.DBA_SCHEMAS 
        IS 'Identify the schemata in the database.';

Comment created.

Elapsed time: 0.15800 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_SCHEMAS.SCHEMA_OWNER
        IS 'Owner of the schema';

Comment created.

Elapsed time: 0.18700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_SCHEMAS.SCHEMA_NAME
        IS 'Name of the schema';

Comment created.

Elapsed time: 0.18200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_SCHEMAS.CREATED_TIME
        IS 'Created time of the schema';

Comment created.

Elapsed time: 0.21300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_SCHEMAS.MODIFIED_TIME
        IS 'Last modified time of the schema';

Comment created.

Elapsed time: 0.17800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_SCHEMAS.COMMENTS
        IS 'Comments of the schema';

Comment created.

Elapsed time: 0.18000 ms 


--#####################
--# grant view
--#####################

--GRANT SELECT ON TABLE DICTIONARY_SCHEMA.DBA_SCHEMAS TO DBA;
GRANT SELECT ON TABLE DICTIONARY_SCHEMA.DBA_SCHEMAS TO PUBLIC;

Grant succeeded.

Elapsed time: 0.15300 ms 


COMMIT;

Commit complete.

Elapsed time: 0.13500 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS DBA_SCHEMAS;

Synonym dropped.

Elapsed time: 0.09400 ms 

CREATE PUBLIC SYNONYM DBA_SCHEMAS FOR DICTIONARY_SCHEMA.DBA_SCHEMAS;

Synonym created.

Elapsed time: 0.10900 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05000 ms 


--##############################################################
--# DICTIONARY_SCHEMA.ALL_SCHEMAS
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.ALL_SCHEMAS;

View dropped.

Elapsed time: 1.19600 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.ALL_SCHEMAS 
(
       SCHEMA_OWNER
     , SCHEMA_NAME
     , CREATED_TIME
     , MODIFIED_TIME
     , COMMENTS
)
AS
SELECT 
       auth.AUTHORIZATION_NAME
     , sch.SCHEMA_NAME
     , sch.CREATED_TIME
     , sch.MODIFIED_TIME
     , sch.COMMENTS
  FROM 
       DEFINITION_SCHEMA.SCHEMATA        AS sch
     , DEFINITION_SCHEMA.AUTHORIZATIONS  AS auth
 WHERE 
       sch.OWNER_ID = auth.AUTH_ID
   AND ( auth.AUTHORIZATION_NAME = CURRENT_USER
         OR
         sch.SCHEMA_ID IN ( SELECT pvcol.SCHEMA_ID 
                              FROM DEFINITION_SCHEMA.COLUMN_PRIVILEGES AS pvcol 
                             WHERE ( pvcol.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                             FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS aucol 
                                                            WHERE aucol.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                         ) 
                                  -- OR  
                                  -- pvcol.GRANTEE_ID IN ( SELECT AUTH_ID 
                                  --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                   )
                          ) 
         OR 
         sch.SCHEMA_ID IN ( SELECT pvtab.SCHEMA_ID 
                             FROM DEFINITION_SCHEMA.TABLE_PRIVILEGES AS pvtab 
                            WHERE ( pvtab.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                            FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS autab 
                                                           WHERE autab.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                        ) 
                                 -- OR  
                                 -- pvtab.GRANTEE_ID IN ( SELECT AUTH_ID 
                                 --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                  )  
                          ) 
         OR
         sch.SCHEMA_ID IN ( SELECT pvusg.SCHEMA_ID 
                             FROM DEFINITION_SCHEMA.USAGE_PRIVILEGES AS pvusg
                            WHERE ( pvusg.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                            FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS auusg 
                                                           WHERE auusg.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                        ) 
                                 -- OR  
                                 -- pvusg.GRANTEE_ID IN ( SELECT AUTH_ID 
                                 --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                  )  
                          ) 
         OR
         sch.SCHEMA_ID IN ( SELECT pvsch.SCHEMA_ID 
                              FROM DEFINITION_SCHEMA.SCHEMA_PRIVILEGES AS pvsch 
                                     WHERE ( pvsch.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                                     FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS ausch 
                                                                    WHERE ausch.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                                 ) 
                                          -- OR  
                                          -- pvsch.GRANTEE_ID IN ( SELECT AUTH_ID 
                                          --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                           )  
                                   ) 
         OR 
         EXISTS ( SELECT GRANTEE_ID  
                    FROM DEFINITION_SCHEMA.DATABASE_PRIVILEGES pvdba 
                   WHERE pvdba.PRIVILEGE_TYPE IN ( 'ALTER SCHEMA', 'DROP SCHEMA', 
                                                   'CREATE ANY TABLE', 'ALTER ANY TABLE', 'DROP ANY TABLE', 
                                                   'SELECT ANY TABLE', 'INSERT ANY TABLE', 'DELETE ANY TABLE', 'UPDATE ANY TABLE', 'LOCK ANY TABLE',
                                                   'CREATE ANY VIEW', 'DROP ANY VIEW', 
                                                   'CREATE ANY SEQUENCE', 'ALTER ANY SEQUENCE', 'DROP ANY SEQUENCE', 'USAGE ANY SEQUENCE',
                                                   'CREATE ANY INDEX', 'ALTER ANY INDEX', 'DROP ANY INDEX' ) 
                     AND ( pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                   FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS audba 
                                                  WHERE audba.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                ) 
                        -- OR  
                        -- pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                        --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                         )  
                ) 
       ) 
 ORDER BY
       sch.SCHEMA_ID
;

View created.

Elapsed time: 1.67500 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.ALL_SCHEMAS 
        IS 'Identify the schemata in a catalog that are owned by given user or accessible to given user or role.';

Comment created.

Elapsed time: 0.16100 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_SCHEMAS.SCHEMA_OWNER
        IS 'Owner of the schema';

Comment created.

Elapsed time: 0.18700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_SCHEMAS.SCHEMA_NAME
        IS 'Name of the schema';

Comment created.

Elapsed time: 0.19200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_SCHEMAS.CREATED_TIME
        IS 'Created time of the schema';

Comment created.

Elapsed time: 0.17900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_SCHEMAS.MODIFIED_TIME
        IS 'Last modified time of the schema';

Comment created.

Elapsed time: 0.22400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_SCHEMAS.COMMENTS
        IS 'Comments of the schema';

Comment created.

Elapsed time: 0.17900 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.ALL_SCHEMAS TO PUBLIC;

Grant succeeded.

Elapsed time: 0.16500 ms 


COMMIT;

Commit complete.

Elapsed time: 0.12600 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS ALL_SCHEMAS;

Synonym dropped.

Elapsed time: 0.10800 ms 

CREATE PUBLIC SYNONYM ALL_SCHEMAS FOR DICTIONARY_SCHEMA.ALL_SCHEMAS;

Synonym created.

Elapsed time: 0.10900 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05100 ms 


--##############################################################
--# DICTIONARY_SCHEMA.USER_SCHEMAS
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.USER_SCHEMAS;

View dropped.

Elapsed time: 1.19300 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.USER_SCHEMAS 
(
       SCHEMA_OWNER
     , SCHEMA_NAME
     , CREATED_TIME
     , MODIFIED_TIME
     , COMMENTS
)
AS
SELECT 
       sch.SCHEMA_OWNER
     , sch.SCHEMA_NAME
     , sch.CREATED_TIME
     , sch.MODIFIED_TIME
     , sch.COMMENTS
  FROM 
       DICTIONARY_SCHEMA.ALL_SCHEMAS        AS sch
 WHERE 
       sch.SCHEMA_OWNER = CURRENT_USER
;

View created.

Elapsed time: 1.70200 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.USER_SCHEMAS 
        IS 'Identify the schemata in a catalog that are owned by current user.';

Comment created.

Elapsed time: 0.16700 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_SCHEMAS.SCHEMA_OWNER
        IS 'Owner of the schema';

Comment created.

Elapsed time: 0.19300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_SCHEMAS.SCHEMA_NAME
        IS 'Name of the schema';

Comment created.

Elapsed time: 0.17900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_SCHEMAS.CREATED_TIME
        IS 'Created time of the schema';

Comment created.

Elapsed time: 0.18000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_SCHEMAS.MODIFIED_TIME
        IS 'Last modified time of the schema';

Comment created.

Elapsed time: 0.17900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_SCHEMAS.COMMENTS
        IS 'Comments of the schema';

Comment created.

Elapsed time: 0.17500 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.USER_SCHEMAS TO PUBLIC;

Grant succeeded.

Elapsed time: 0.15100 ms 


COMMIT;

Commit complete.

Elapsed time: 0.12800 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS USER_SCHEMAS;

Synonym dropped.

Elapsed time: 0.10600 ms 

CREATE PUBLIC SYNONYM USER_SCHEMAS FOR DICTIONARY_SCHEMA.USER_SCHEMAS;

Synonym created.

Elapsed time: 0.11100 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05000 ms 



--##############################################################
--# DICTIONARY_SCHEMA.DBA_SCHEMA_PATH
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.DBA_SCHEMA_PATH;

View dropped.

Elapsed time: 0.88700 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.DBA_SCHEMA_PATH
(
       AUTH_NAME
     , SCHEMA_NAME
     , SEARCH_ORDER
)
AS
SELECT
       usr.AUTHORIZATION_NAME
     , sch.SCHEMA_NAME
     , CAST( upath.SEARCH_ORDER AS NUMBER )
  FROM
       DEFINITION_SCHEMA.USER_SCHEMA_PATH AS upath
     , DEFINITION_SCHEMA.SCHEMATA         AS sch 
     , DEFINITION_SCHEMA.AUTHORIZATIONS   AS usr
 WHERE
       upath.SCHEMA_ID        = sch.SCHEMA_ID
   AND upath.AUTH_ID          = usr.AUTH_ID
   AND EXISTS ( SELECT GRANTEE_ID  
                  FROM DEFINITION_SCHEMA.DATABASE_PRIVILEGES pvdba 
                 WHERE pvdba.PRIVILEGE_TYPE IN ( 'ACCESS CONTROL' ) 
                   AND ( pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                 FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS audba 
                                                WHERE audba.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                             ) 
                      -- OR  
                      -- pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                      --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                       )  
               ) 
 ORDER BY 
       usr.AUTH_ID
     , upath.SEARCH_ORDER
;

View created.

Elapsed time: 1.22400 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.DBA_SCHEMA_PATH
        IS 'DBA_SCHEMA_PATH describes the schema search order of all authorizations in the database.';

Comment created.

Elapsed time: 0.16000 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_SCHEMA_PATH.AUTH_NAME
        IS 'Name of the authorization';

Comment created.

Elapsed time: 0.19600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_SCHEMA_PATH.SCHEMA_NAME
        IS 'Name of the schema';

Comment created.

Elapsed time: 0.18500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_SCHEMA_PATH.SEARCH_ORDER
        IS 'Schema search order of the authorization';

Comment created.

Elapsed time: 0.19100 ms 


--#####################
--# grant view
--#####################

--GRANT SELECT ON TABLE DICTIONARY_SCHEMA.DBA_SCHEMA_PATH TO DBA;
GRANT SELECT ON TABLE DICTIONARY_SCHEMA.DBA_SCHEMA_PATH TO PUBLIC;

Grant succeeded.

Elapsed time: 0.15400 ms 


COMMIT;

Commit complete.

Elapsed time: 0.10600 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS DBA_SCHEMA_PATH;

Synonym dropped.

Elapsed time: 0.09300 ms 

CREATE PUBLIC SYNONYM DBA_SCHEMA_PATH FOR DICTIONARY_SCHEMA.DBA_SCHEMA_PATH;

Synonym created.

Elapsed time: 0.10900 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05000 ms 




--##############################################################
--# DICTIONARY_SCHEMA.ALL_SCHEMA_PATH
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.ALL_SCHEMA_PATH;

View dropped.

Elapsed time: 0.89600 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.ALL_SCHEMA_PATH
(
       AUTH_NAME
     , SCHEMA_NAME
     , SEARCH_ORDER
)
AS
(
SELECT
       usr.AUTHORIZATION_NAME
     , sch.SCHEMA_NAME
     , CAST( upath.SEARCH_ORDER AS NUMBER )
  FROM
       DEFINITION_SCHEMA.USER_SCHEMA_PATH AS upath
     , DEFINITION_SCHEMA.SCHEMATA         AS sch 
     , DEFINITION_SCHEMA.AUTHORIZATIONS   AS usr
 WHERE
       usr.AUTHORIZATION_NAME = CURRENT_USER
   AND upath.SCHEMA_ID        = sch.SCHEMA_ID
   AND upath.AUTH_ID          = usr.AUTH_ID
 ORDER BY 
       upath.SEARCH_ORDER
)
UNION ALL
(
SELECT
       usr.AUTHORIZATION_NAME
     , sch.SCHEMA_NAME
     , CAST( ( SELECT COUNT(*) 
                FROM DEFINITION_SCHEMA.USER_SCHEMA_PATH upath2
               WHERE upath2.AUTH_ID IN ( SELECT AUTH_ID 
                                           FROM DEFINITION_SCHEMA.AUTHORIZATIONS 
                                          WHERE AUTHORIZATION_NAME = CURRENT_USER ) )
             + upath.SEARCH_ORDER 
             AS NUMBER )
  FROM
       DEFINITION_SCHEMA.USER_SCHEMA_PATH AS upath
     , DEFINITION_SCHEMA.SCHEMATA         AS sch 
     , DEFINITION_SCHEMA.AUTHORIZATIONS   AS usr
 WHERE
       usr.AUTHORIZATION_NAME = 'PUBLIC'
   AND upath.SCHEMA_ID        = sch.SCHEMA_ID
   AND upath.AUTH_ID          = usr.AUTH_ID
 ORDER BY 
       upath.SEARCH_ORDER
)
;

View created.

Elapsed time: 1.15900 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.ALL_SCHEMA_PATH
        IS 'ALL_SCHEMA_PATH describes the schema search order of the current user and PUBLIC, for naming resolution of unqualified SQL-Schema objects.';

Comment created.

Elapsed time: 0.17600 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_SCHEMA_PATH.AUTH_NAME
        IS 'Name of the authorization';

Comment created.

Elapsed time: 0.18700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_SCHEMA_PATH.SCHEMA_NAME
        IS 'Name of the schema';

Comment created.

Elapsed time: 0.20200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_SCHEMA_PATH.SEARCH_ORDER
        IS 'Schema search order of the authorization';

Comment created.

Elapsed time: 0.18000 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.ALL_SCHEMA_PATH TO PUBLIC;

Grant succeeded.

Elapsed time: 0.16800 ms 


COMMIT;

Commit complete.

Elapsed time: 0.11000 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS ALL_SCHEMA_PATH;

Synonym dropped.

Elapsed time: 0.09100 ms 

CREATE PUBLIC SYNONYM ALL_SCHEMA_PATH FOR DICTIONARY_SCHEMA.ALL_SCHEMA_PATH;

Synonym created.

Elapsed time: 0.11000 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05000 ms 


--##############################################################
--# DICTIONARY_SCHEMA.USER_SCHEMA_PATH
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.USER_SCHEMA_PATH;

View dropped.

Elapsed time: 0.85600 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.USER_SCHEMA_PATH
(
       AUTH_NAME
     , SCHEMA_NAME
     , SEARCH_ORDER
)
AS
SELECT
       usr.AUTHORIZATION_NAME
     , sch.SCHEMA_NAME
     , CAST( upath.SEARCH_ORDER AS NUMBER )
  FROM
       DEFINITION_SCHEMA.USER_SCHEMA_PATH AS upath
     , DEFINITION_SCHEMA.SCHEMATA         AS sch 
     , DEFINITION_SCHEMA.AUTHORIZATIONS   AS usr
 WHERE
       usr.AUTHORIZATION_NAME = CURRENT_USER
   AND upath.SCHEMA_ID        = sch.SCHEMA_ID
   AND upath.AUTH_ID          = usr.AUTH_ID
 ORDER BY 
       upath.SEARCH_ORDER
;

View created.

Elapsed time: 1.13500 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.USER_SCHEMA_PATH
        IS 'USER_SCHEMA_PATH describes the schema search order of the current user, for naming resolution of unqualified SQL-Schema objects.';

Comment created.

Elapsed time: 0.16500 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_SCHEMA_PATH.AUTH_NAME
        IS 'Name of the user';

Comment created.

Elapsed time: 0.18600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_SCHEMA_PATH.SCHEMA_NAME
        IS 'Name of the schema';

Comment created.

Elapsed time: 0.17800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_SCHEMA_PATH.SEARCH_ORDER
        IS 'Schema search order of the user';

Comment created.

Elapsed time: 0.18600 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.USER_SCHEMA_PATH TO PUBLIC;

Grant succeeded.

Elapsed time: 0.15400 ms 


COMMIT;

Commit complete.

Elapsed time: 0.10700 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS USER_SCHEMA_PATH;

Synonym dropped.

Elapsed time: 0.09100 ms 

CREATE PUBLIC SYNONYM USER_SCHEMA_PATH FOR DICTIONARY_SCHEMA.USER_SCHEMA_PATH;

Synonym created.

Elapsed time: 0.11000 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05000 ms 


--##############################################################
--# DICTIONARY_SCHEMA.DBA_SCHEMA_PRIVS
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.DBA_SCHEMA_PRIVS;

View dropped.

Elapsed time: 1.24100 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.DBA_SCHEMA_PRIVS
(
       GRANTOR
     , GRANTEE
     , OWNER 
     , SCHEMA_NAME
     , PRIVILEGE
     , GRANTABLE
)
AS
SELECT
       grantor.AUTHORIZATION_NAME
     , grantee.AUTHORIZATION_NAME
     , owner.AUTHORIZATION_NAME
     , sch.SCHEMA_NAME
     , pvsch.PRIVILEGE_TYPE
     , CAST( CASE WHEN pvsch.IS_GRANTABLE = TRUE THEN 'YES' ELSE 'NO' END AS VARCHAR(3 OCTETS) )
  FROM
       DEFINITION_SCHEMA.SCHEMA_PRIVILEGES  AS pvsch
     , DEFINITION_SCHEMA.SCHEMATA           AS sch 
     , DEFINITION_SCHEMA.AUTHORIZATIONS     AS grantor
     , DEFINITION_SCHEMA.AUTHORIZATIONS     AS grantee
     , DEFINITION_SCHEMA.AUTHORIZATIONS     AS owner
 WHERE
       pvsch.SCHEMA_ID  = sch.SCHEMA_ID
   AND pvsch.GRANTOR_ID = grantor.AUTH_ID
   AND pvsch.GRANTEE_ID = grantee.AUTH_ID
   AND sch.OWNER_ID     = owner.AUTH_ID
   AND EXISTS ( SELECT GRANTEE_ID  
                  FROM DEFINITION_SCHEMA.DATABASE_PRIVILEGES pvdba 
                 WHERE pvdba.PRIVILEGE_TYPE IN ( 'ACCESS CONTROL' ) 
                   AND ( pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                 FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS audba 
                                                WHERE audba.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                             ) 
                      -- OR  
                      -- pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                      --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                       )  
               ) 
 ORDER BY 
       pvsch.SCHEMA_ID
     , pvsch.GRANTOR_ID
     , pvsch.GRANTEE_ID
     , pvsch.PRIVILEGE_TYPE_ID   
;

View created.

Elapsed time: 1.65000 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.DBA_SCHEMA_PRIVS
        IS 'DBA_SCHEMA_PRIVS describes all schema grants in the database.';

Comment created.

Elapsed time: 0.15800 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_SCHEMA_PRIVS.GRANTOR
        IS 'Name of the user who performed the grant';

Comment created.

Elapsed time: 0.21000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_SCHEMA_PRIVS.GRANTEE
        IS 'Name of the user or role to whom access was granted';

Comment created.

Elapsed time: 0.18200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_SCHEMA_PRIVS.OWNER 
        IS 'Owner of the schema';

Comment created.

Elapsed time: 0.18000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_SCHEMA_PRIVS.SCHEMA_NAME
        IS 'Name of the schema';

Comment created.

Elapsed time: 0.18000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_SCHEMA_PRIVS.PRIVILEGE
        IS 'Privilege on the schema';

Comment created.

Elapsed time: 0.18700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_SCHEMA_PRIVS.GRANTABLE
        IS 'Indicates whether the privilege was granted with the GRANT OPTION (YES) or not (NO)';

Comment created.

Elapsed time: 0.17700 ms 


--#####################
--# grant view
--#####################

--GRANT SELECT ON TABLE DICTIONARY_SCHEMA.DBA_SCHEMA_PRIVS TO DBA;
GRANT SELECT ON TABLE DICTIONARY_SCHEMA.DBA_SCHEMA_PRIVS TO PUBLIC;

Grant succeeded.

Elapsed time: 0.15200 ms 


COMMIT;

Commit complete.

Elapsed time: 0.13900 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS DBA_SCHEMA_PRIVS;

Synonym dropped.

Elapsed time: 0.09300 ms 

CREATE PUBLIC SYNONYM DBA_SCHEMA_PRIVS FOR DICTIONARY_SCHEMA.DBA_SCHEMA_PRIVS;

Synonym created.

Elapsed time: 0.12000 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05100 ms 


--##############################################################
--# DICTIONARY_SCHEMA.ALL_SCHEMA_PRIVS
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.ALL_SCHEMA_PRIVS;

View dropped.

Elapsed time: 1.46000 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.ALL_SCHEMA_PRIVS
(
       GRANTOR
     , GRANTEE
     , OWNER 
     , SCHEMA_NAME
     , PRIVILEGE
     , GRANTABLE
)
AS
SELECT
       grantor.AUTHORIZATION_NAME
     , grantee.AUTHORIZATION_NAME
     , owner.AUTHORIZATION_NAME
     , sch.SCHEMA_NAME
     , pvsch.PRIVILEGE_TYPE
     , CAST( CASE WHEN pvsch.IS_GRANTABLE = TRUE THEN 'YES' ELSE 'NO' END AS VARCHAR(3 OCTETS) )
  FROM
       DEFINITION_SCHEMA.SCHEMA_PRIVILEGES  AS pvsch
     , DEFINITION_SCHEMA.SCHEMATA           AS sch 
     , DEFINITION_SCHEMA.AUTHORIZATIONS     AS grantor
     , DEFINITION_SCHEMA.AUTHORIZATIONS     AS grantee
     , DEFINITION_SCHEMA.AUTHORIZATIONS     AS owner
 WHERE
       pvsch.SCHEMA_ID  = sch.SCHEMA_ID
   AND pvsch.GRANTOR_ID = grantor.AUTH_ID
   AND pvsch.GRANTEE_ID = grantee.AUTH_ID
   AND sch.OWNER_ID     = owner.AUTH_ID
   AND ( grantee.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )
      -- OR  
      -- pvsch.GRANTEE_ID IN ( SELECT AUTH_ID 
      --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
         OR
         grantor.AUTHORIZATION_NAME = CURRENT_USER
         OR
         owner.AUTHORIZATION_NAME = CURRENT_USER
       )
 ORDER BY 
       pvsch.SCHEMA_ID
     , pvsch.GRANTOR_ID
     , pvsch.GRANTEE_ID
     , pvsch.PRIVILEGE_TYPE_ID   
;

View created.

Elapsed time: 1.49900 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.ALL_SCHEMA_PRIVS
        IS 'ALL_SCHEMA_PRIVS describes the schema grants, for which the current user is the schema owner, grantor, or grantee, or for which an enabled role or PUBLIC is the grantee.';

Comment created.

Elapsed time: 0.17000 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_SCHEMA_PRIVS.GRANTOR
        IS 'Name of the user who performed the grant';

Comment created.

Elapsed time: 0.19100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_SCHEMA_PRIVS.GRANTEE
        IS 'Name of the user or role to whom access was granted';

Comment created.

Elapsed time: 0.18400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_SCHEMA_PRIVS.OWNER 
        IS 'Owner of the schema';

Comment created.

Elapsed time: 0.17900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_SCHEMA_PRIVS.SCHEMA_NAME
        IS 'Name of the schema';

Comment created.

Elapsed time: 0.18700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_SCHEMA_PRIVS.PRIVILEGE
        IS 'Privilege on the schema';

Comment created.

Elapsed time: 0.19500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_SCHEMA_PRIVS.GRANTABLE
        IS 'Indicates whether the privilege was granted with the GRANT OPTION (YES) or not (NO)';

Comment created.

Elapsed time: 0.17800 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.ALL_SCHEMA_PRIVS TO PUBLIC;

Grant succeeded.

Elapsed time: 0.15200 ms 


COMMIT;

Commit complete.

Elapsed time: 0.14900 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS ALL_SCHEMA_PRIVS;

Synonym dropped.

Elapsed time: 0.09500 ms 

CREATE PUBLIC SYNONYM ALL_SCHEMA_PRIVS FOR DICTIONARY_SCHEMA.ALL_SCHEMA_PRIVS;

Synonym created.

Elapsed time: 0.11000 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05000 ms 


--##############################################################
--# DICTIONARY_SCHEMA.USER_SCHEMA_PRIVS
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.USER_SCHEMA_PRIVS;

View dropped.

Elapsed time: 1.17700 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.USER_SCHEMA_PRIVS
(
       GRANTOR
     , GRANTEE
     , OWNER 
     , SCHEMA_NAME
     , PRIVILEGE
     , GRANTABLE
)
AS
SELECT
       pvsch.GRANTOR
     , pvsch.GRANTEE
     , pvsch.OWNER 
     , pvsch.SCHEMA_NAME
     , pvsch.PRIVILEGE
     , pvsch.GRANTABLE
  FROM
       DICTIONARY_SCHEMA.ALL_SCHEMA_PRIVS AS pvsch
 WHERE
       pvsch.OWNER   = CURRENT_USER
    OR pvsch.GRANTOR = CURRENT_USER
    OR pvsch.GRANTEE = CURRENT_USER
;

View created.

Elapsed time: 1.72400 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.USER_SCHEMA_PRIVS
        IS 'USER_SCHEMA_PRIVS describes the schema grants, for which the current user is the schema owner, grantor, or grantee.';

Comment created.

Elapsed time: 0.17200 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_SCHEMA_PRIVS.GRANTOR
        IS 'Name of the user who performed the grant';

Comment created.

Elapsed time: 0.18800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_SCHEMA_PRIVS.GRANTEE
        IS 'Name of the user or role to whom access was granted';

Comment created.

Elapsed time: 0.19700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_SCHEMA_PRIVS.OWNER 
        IS 'Owner of the schema';

Comment created.

Elapsed time: 0.19200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_SCHEMA_PRIVS.SCHEMA_NAME
        IS 'Name of the schema';

Comment created.

Elapsed time: 0.18600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_SCHEMA_PRIVS.PRIVILEGE
        IS 'Privilege on the schema';

Comment created.

Elapsed time: 0.17800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_SCHEMA_PRIVS.GRANTABLE
        IS 'Indicates whether the privilege was granted with the GRANT OPTION (YES) or not (NO)';

Comment created.

Elapsed time: 0.17900 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.USER_SCHEMA_PRIVS TO PUBLIC;

Grant succeeded.

Elapsed time: 0.15200 ms 


COMMIT;

Commit complete.

Elapsed time: 0.14600 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS USER_SCHEMA_PRIVS;

Synonym dropped.

Elapsed time: 0.09300 ms 

CREATE PUBLIC SYNONYM USER_SCHEMA_PRIVS FOR DICTIONARY_SCHEMA.USER_SCHEMA_PRIVS;

Synonym created.

Elapsed time: 0.11000 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05000 ms 



--##############################################################
--# DICTIONARY_SCHEMA.ALL_SCHEMA_PRIVS_MADE
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.ALL_SCHEMA_PRIVS_MADE;

View dropped.

Elapsed time: 1.14500 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.ALL_SCHEMA_PRIVS_MADE
(
       GRANTOR
     , GRANTEE
     , OWNER 
     , SCHEMA_NAME
     , PRIVILEGE
     , GRANTABLE
)
AS
SELECT
       GRANTOR
     , GRANTEE
     , OWNER 
     , SCHEMA_NAME
     , PRIVILEGE
     , GRANTABLE
  FROM
       DICTIONARY_SCHEMA.ALL_SCHEMA_PRIVS AS pvsch
 WHERE
       ( 
         pvsch.GRANTOR = CURRENT_USER
       )
;

View created.

Elapsed time: 1.61700 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.ALL_SCHEMA_PRIVS_MADE
        IS 'ALL_SCHEMA_PRIVS_MADE describes the schema grants, for which the current user is the grantor.';

Comment created.

Elapsed time: 0.17700 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_SCHEMA_PRIVS_MADE.GRANTOR
        IS 'Name of the user who performed the grant';

Comment created.

Elapsed time: 0.19800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_SCHEMA_PRIVS_MADE.GRANTEE
        IS 'Name of the user or role to whom access was granted';

Comment created.

Elapsed time: 0.19100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_SCHEMA_PRIVS_MADE.OWNER 
        IS 'Owner of the schema';

Comment created.

Elapsed time: 0.17800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_SCHEMA_PRIVS_MADE.SCHEMA_NAME
        IS 'Name of the schema';

Comment created.

Elapsed time: 0.17900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_SCHEMA_PRIVS_MADE.PRIVILEGE
        IS 'Privilege on the schema';

Comment created.

Elapsed time: 0.20200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_SCHEMA_PRIVS_MADE.GRANTABLE
        IS 'Indicates whether the privilege was granted with the GRANT OPTION (YES) or not (NO)';

Comment created.

Elapsed time: 0.18000 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.ALL_SCHEMA_PRIVS_MADE TO PUBLIC;

Grant succeeded.

Elapsed time: 0.15300 ms 


COMMIT;

Commit complete.

Elapsed time: 0.13600 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS ALL_SCHEMA_PRIVS_MADE;

Synonym dropped.

Elapsed time: 0.09600 ms 

CREATE PUBLIC SYNONYM ALL_SCHEMA_PRIVS_MADE FOR DICTIONARY_SCHEMA.ALL_SCHEMA_PRIVS_MADE;

Synonym created.

Elapsed time: 0.13300 ms 

COMMIT;

Commit complete.

Elapsed time: 0.08500 ms 


--##############################################################
--# DICTIONARY_SCHEMA.USER_SCHEMA_PRIVS_MADE
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.USER_SCHEMA_PRIVS_MADE;

View dropped.

Elapsed time: 1.15200 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.USER_SCHEMA_PRIVS_MADE
(
       GRANTOR
     , GRANTEE
     , OWNER 
     , SCHEMA_NAME
     , PRIVILEGE
     , GRANTABLE
)
AS
SELECT
       pvsch.GRANTOR
     , pvsch.GRANTEE
     , pvsch.OWNER 
     , pvsch.SCHEMA_NAME
     , pvsch.PRIVILEGE
     , pvsch.GRANTABLE
  FROM
       DICTIONARY_SCHEMA.ALL_SCHEMA_PRIVS AS pvsch
 WHERE
       pvsch.OWNER   = CURRENT_USER
;

View created.

Elapsed time: 1.59700 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.USER_SCHEMA_PRIVS_MADE
        IS 'USER_SCHEMA_PRIVS_MADE describes the schema grants for which the current user is the schema owner.';

Comment created.

Elapsed time: 0.16100 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_SCHEMA_PRIVS_MADE.GRANTOR
        IS 'Name of the user who performed the grant';

Comment created.

Elapsed time: 0.18600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_SCHEMA_PRIVS_MADE.GRANTEE
        IS 'Name of the user or role to whom access was granted';

Comment created.

Elapsed time: 0.18800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_SCHEMA_PRIVS_MADE.OWNER 
        IS 'Owner of the schema';

Comment created.

Elapsed time: 0.19000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_SCHEMA_PRIVS_MADE.SCHEMA_NAME
        IS 'Name of the schema';

Comment created.

Elapsed time: 0.23400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_SCHEMA_PRIVS_MADE.PRIVILEGE
        IS 'Privilege on the schema';

Comment created.

Elapsed time: 0.20500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_SCHEMA_PRIVS_MADE.GRANTABLE
        IS 'Indicates whether the privilege was granted with the GRANT OPTION (YES) or not (NO)';

Comment created.

Elapsed time: 0.19200 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.USER_SCHEMA_PRIVS_MADE TO PUBLIC;

Grant succeeded.

Elapsed time: 0.19500 ms 


COMMIT;

Commit complete.

Elapsed time: 0.14000 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS USER_SCHEMA_PRIVS_MADE;

Synonym dropped.

Elapsed time: 0.09200 ms 

CREATE PUBLIC SYNONYM USER_SCHEMA_PRIVS_MADE FOR DICTIONARY_SCHEMA.USER_SCHEMA_PRIVS_MADE;

Synonym created.

Elapsed time: 0.12400 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05000 ms 


--##############################################################
--# DICTIONARY_SCHEMA.ALL_SCHEMA_PRIVS_RECD
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.ALL_SCHEMA_PRIVS_RECD;

View dropped.

Elapsed time: 1.17600 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.ALL_SCHEMA_PRIVS_RECD
(
       GRANTOR
     , GRANTEE
     , OWNER 
     , SCHEMA_NAME
     , PRIVILEGE
     , GRANTABLE
)
AS
SELECT
       GRANTOR
     , GRANTEE
     , OWNER 
     , SCHEMA_NAME
     , PRIVILEGE
     , GRANTABLE
  FROM
       DICTIONARY_SCHEMA.ALL_SCHEMA_PRIVS AS pvsch
 WHERE
       (
         pvsch.GRANTEE IN ( 'PUBLIC', CURRENT_USER )
      -- OR  
      -- pvcol.GRANTEE IN ( SELECT AUTH_NAME 
      --                      FROM INORMATION_SCHEMA.ENABLED_ROLES )  
       )
;

View created.

Elapsed time: 1.62300 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.ALL_SCHEMA_PRIVS_RECD
        IS 'ALL_SCHEMA_PRIVS_RECD describes the schema grants, for which the current user is the grantee, or for which an enabled role or PUBLIC is the grantee.';

Comment created.

Elapsed time: 0.19900 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_SCHEMA_PRIVS_RECD.GRANTOR
        IS 'Name of the user who performed the grant';

Comment created.

Elapsed time: 0.19100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_SCHEMA_PRIVS_RECD.GRANTEE
        IS 'Name of the user or role to whom access was granted';

Comment created.

Elapsed time: 0.18500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_SCHEMA_PRIVS_RECD.OWNER 
        IS 'Owner of the schema';

Comment created.

Elapsed time: 0.18000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_SCHEMA_PRIVS_RECD.SCHEMA_NAME
        IS 'Name of the schema';

Comment created.

Elapsed time: 0.27200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_SCHEMA_PRIVS_RECD.PRIVILEGE
        IS 'Privilege on the schema';

Comment created.

Elapsed time: 0.21200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_SCHEMA_PRIVS_RECD.GRANTABLE
        IS 'Indicates whether the privilege was granted with the GRANT OPTION (YES) or not (NO)';

Comment created.

Elapsed time: 0.19900 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.ALL_SCHEMA_PRIVS_RECD TO PUBLIC;

Grant succeeded.

Elapsed time: 0.15900 ms 


COMMIT;

Commit complete.

Elapsed time: 0.14000 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS ALL_SCHEMA_PRIVS_RECD;

Synonym dropped.

Elapsed time: 0.09800 ms 

CREATE PUBLIC SYNONYM ALL_SCHEMA_PRIVS_RECD FOR DICTIONARY_SCHEMA.ALL_SCHEMA_PRIVS_RECD;

Synonym created.

Elapsed time: 0.11400 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05100 ms 



--##############################################################
--# DICTIONARY_SCHEMA.USER_SCHEMA_PRIVS_RECD
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.USER_SCHEMA_PRIVS_RECD;

View dropped.

Elapsed time: 1.18300 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.USER_SCHEMA_PRIVS_RECD
(
       GRANTOR
     , GRANTEE
     , OWNER 
     , SCHEMA_NAME
     , PRIVILEGE
     , GRANTABLE
)
AS
SELECT
       pvsch.GRANTOR
     , pvsch.GRANTEE
     , pvsch.OWNER 
     , pvsch.SCHEMA_NAME
     , pvsch.PRIVILEGE
     , pvsch.GRANTABLE
  FROM
       DICTIONARY_SCHEMA.ALL_SCHEMA_PRIVS AS pvsch
 WHERE
       pvsch.GRANTEE = CURRENT_USER
;

View created.

Elapsed time: 1.72900 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.USER_SCHEMA_PRIVS_RECD
        IS 'USER_SCHEMA_PRIVS_RECD describes the schema grants for which the current user is the grantee.';

Comment created.

Elapsed time: 0.17700 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_SCHEMA_PRIVS_RECD.GRANTOR
        IS 'Name of the user who performed the grant';

Comment created.

Elapsed time: 0.19800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_SCHEMA_PRIVS_RECD.GRANTEE
        IS 'Name of the user or role to whom access was granted';

Comment created.

Elapsed time: 0.18400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_SCHEMA_PRIVS_RECD.OWNER 
        IS 'Owner of the schema';

Comment created.

Elapsed time: 0.17800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_SCHEMA_PRIVS_RECD.SCHEMA_NAME
        IS 'Name of the schema';

Comment created.

Elapsed time: 0.17800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_SCHEMA_PRIVS_RECD.PRIVILEGE
        IS 'Privilege on the schema';

Comment created.

Elapsed time: 0.19100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_SCHEMA_PRIVS_RECD.GRANTABLE
        IS 'Indicates whether the privilege was granted with the GRANT OPTION (YES) or not (NO)';

Comment created.

Elapsed time: 0.17800 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.USER_SCHEMA_PRIVS_RECD TO PUBLIC;

Grant succeeded.

Elapsed time: 0.15200 ms 


COMMIT;

Commit complete.

Elapsed time: 0.13800 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS USER_SCHEMA_PRIVS_RECD;

Synonym dropped.

Elapsed time: 0.09300 ms 

CREATE PUBLIC SYNONYM USER_SCHEMA_PRIVS_RECD FOR DICTIONARY_SCHEMA.USER_SCHEMA_PRIVS_RECD;

Synonym created.

Elapsed time: 0.11900 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05700 ms 


--##############################################################
--# DICTIONARY_SCHEMA.DBA_SEQUENCES
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.DBA_SEQUENCES;

View dropped.

Elapsed time: 1.69000 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.DBA_SEQUENCES
(
       SEQUENCE_OWNER 
     , SEQUENCE_SCHEMA 
     , SEQUENCE_NAME 
     , MIN_VALUE
     , MAX_VALUE
     , INCREMENT_BY
     , CYCLE_FLAG
     , ORDER_FLAG
     , CACHE_SIZE
     , LAST_NUMBER
     , COMMENTS
)
AS
SELECT
       auth.AUTHORIZATION_NAME              -- SEQUENCE_OWNER 
     , sch.SCHEMA_NAME                      -- SEQUENCE_SCHEMA 
     , sqc.SEQUENCE_NAME                    -- SEQUENCE_NAME 
     , CAST( sqc.MINIMUM_VALUE AS NUMBER )  -- MIN_VALUE
     , CAST( sqc.MAXIMUM_VALUE AS NUMBER )  -- MAX_VALUE
     , CAST( sqc.INCREMENT AS NUMBER )      -- INCREMENT_BY
     , CAST( CASE WHEN sqc.CYCLE_OPTION = TRUE 
                  THEN 'Y'
                  ELSE 'N'
                  END
             AS VARCHAR(1 OCTETS) )         -- CYCLE_FLAG
     , CAST( 'N' AS VARCHAR(1 OCTETS) )     -- ORDER_FLAG
     , CAST( sqc.CACHE_SIZE AS NUMBER )     -- CACHE_SIZE
     , CAST( xsqc.RESTART_VALUE AS NUMBER ) -- LAST_NUMBER
     , sqc.COMMENTS                         -- COMMENTS
  FROM
       DEFINITION_SCHEMA.SEQUENCES         AS sqc
     , FIXED_TABLE_SCHEMA.X$SEQUENCE       AS xsqc
     , DEFINITION_SCHEMA.SCHEMATA          AS sch 
     , DEFINITION_SCHEMA.AUTHORIZATIONS    AS auth
 WHERE
       sqc.SCHEMA_ID   = sch.SCHEMA_ID
   AND sqc.PHYSICAL_ID = xsqc.PHYSICAL_ID
   AND sqc.OWNER_ID    = auth.AUTH_ID
   AND EXISTS ( SELECT GRANTEE_ID  
                  FROM DEFINITION_SCHEMA.DATABASE_PRIVILEGES pvdba 
                 WHERE pvdba.PRIVILEGE_TYPE IN ( 'ACCESS CONTROL' ) 
                   AND ( pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                 FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS audba 
                                                WHERE audba.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                             ) 
                      -- OR  
                      -- pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                      --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                       )  
               ) 
 ORDER BY 
       sqc.SCHEMA_ID
     , sqc.SEQUENCE_ID
;

View created.

Elapsed time: 2.30200 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.DBA_SEQUENCES
        IS 'DBA_SEQUENCES describes all sequences in the database.';

Comment created.

Elapsed time: 0.13100 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_SEQUENCES.SEQUENCE_OWNER 
        IS 'Owner of the sequence';

Comment created.

Elapsed time: 0.15000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_SEQUENCES.SEQUENCE_SCHEMA 
        IS 'Schema of the sequence';

Comment created.

Elapsed time: 0.14400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_SEQUENCES.SEQUENCE_NAME 
        IS 'Sequence name';

Comment created.

Elapsed time: 0.14300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_SEQUENCES.MIN_VALUE
        IS 'Minimum value of the sequence';

Comment created.

Elapsed time: 0.15300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_SEQUENCES.MAX_VALUE
        IS 'Maximum value of the sequence';

Comment created.

Elapsed time: 0.14700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_SEQUENCES.INCREMENT_BY
        IS 'Value by which sequence is incremented';

Comment created.

Elapsed time: 0.14200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_SEQUENCES.CYCLE_FLAG
        IS 'Indicates whether the sequence wraps around on reaching the limit (Y) or not (N)';

Comment created.

Elapsed time: 0.15100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_SEQUENCES.ORDER_FLAG
        IS 'Indicates whether sequence numbers are generated in order (Y) or not (N)';

Comment created.

Elapsed time: 0.14400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_SEQUENCES.CACHE_SIZE
        IS 'Number of sequence numbers to cache';

Comment created.

Elapsed time: 0.15400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_SEQUENCES.LAST_NUMBER
        IS 'Last sequence number written to database. If a sequence uses caching, the number written to database is the last number placed in the sequence cache.';

Comment created.

Elapsed time: 0.14400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_SEQUENCES.COMMENTS
        IS 'Comments of the sequence';

Comment created.

Elapsed time: 0.14200 ms 


--#####################
--# grant view
--#####################

--GRANT SELECT ON TABLE DICTIONARY_SCHEMA.DBA_SEQUENCES TO DBA;
GRANT SELECT ON TABLE DICTIONARY_SCHEMA.DBA_SEQUENCES TO PUBLIC;

Grant succeeded.

Elapsed time: 0.12400 ms 


COMMIT;

Commit complete.

Elapsed time: 0.14800 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS DBA_SEQUENCES;

Synonym dropped.

Elapsed time: 0.08200 ms 

CREATE PUBLIC SYNONYM DBA_SEQUENCES FOR DICTIONARY_SCHEMA.DBA_SEQUENCES;

Synonym created.

Elapsed time: 0.09000 ms 

COMMIT;

Commit complete.

Elapsed time: 0.04000 ms 


--##############################################################
--# DICTIONARY_SCHEMA.ALL_SEQUENCES
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.ALL_SEQUENCES;

View dropped.

Elapsed time: 1.39600 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.ALL_SEQUENCES
(
       SEQUENCE_OWNER 
     , SEQUENCE_SCHEMA 
     , SEQUENCE_NAME 
     , MIN_VALUE
     , MAX_VALUE
     , INCREMENT_BY
     , CYCLE_FLAG
     , ORDER_FLAG
     , CACHE_SIZE
     , LAST_NUMBER
     , COMMENTS
)
AS
SELECT
       auth.AUTHORIZATION_NAME              -- SEQUENCE_OWNER 
     , sch.SCHEMA_NAME                      -- SEQUENCE_SCHEMA 
     , sqc.SEQUENCE_NAME                    -- SEQUENCE_NAME 
     , CAST( sqc.MINIMUM_VALUE AS NUMBER )  -- MIN_VALUE
     , CAST( sqc.MAXIMUM_VALUE AS NUMBER )  -- MAX_VALUE
     , CAST( sqc.INCREMENT AS NUMBER )      -- INCREMENT_BY
     , CAST( CASE WHEN sqc.CYCLE_OPTION = TRUE 
                  THEN 'Y'
                  ELSE 'N'
                  END
             AS VARCHAR(1 OCTETS) )         -- CYCLE_FLAG
     , CAST( 'N' AS VARCHAR(1 OCTETS) )     -- ORDER_FLAG
     , CAST( sqc.CACHE_SIZE AS NUMBER )     -- CACHE_SIZE
     , CAST( xsqc.RESTART_VALUE AS NUMBER ) -- LAST_NUMBER
     , sqc.COMMENTS                         -- COMMENTS
  FROM
       DEFINITION_SCHEMA.SEQUENCES         AS sqc
     , FIXED_TABLE_SCHEMA.X$SEQUENCE       AS xsqc
     , DEFINITION_SCHEMA.SCHEMATA          AS sch 
     , DEFINITION_SCHEMA.AUTHORIZATIONS    AS auth
 WHERE
       sqc.SCHEMA_ID   = sch.SCHEMA_ID
   AND sqc.PHYSICAL_ID = xsqc.PHYSICAL_ID
   AND sqc.OWNER_ID    = auth.AUTH_ID
   AND ( sqc.SEQUENCE_ID IN ( SELECT pvusg.OBJECT_ID 
                                FROM DEFINITION_SCHEMA.USAGE_PRIVILEGES AS pvusg
                               WHERE pvusg.OBJECT_TYPE = 'SEQUENCE'
                                 AND ( pvusg.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                               FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS auusg 
                                                              WHERE auusg.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                           ) 
                                    -- OR  
                                    -- pvusg.GRANTEE_ID IN ( SELECT AUTH_ID 
                                    --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                     )  
                            ) 
         OR
         sqc.SCHEMA_ID IN ( SELECT pvsch.SCHEMA_ID 
                              FROM DEFINITION_SCHEMA.SCHEMA_PRIVILEGES AS pvsch 
                             WHERE pvsch.PRIVILEGE_TYPE IN ( 'CONTROL SCHEMA', 'ALTER SEQUENCE', 'DROP SEQUENCE', 'USAGE SEQUENCE' )
                               AND ( pvsch.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                             FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS ausch 
                                                            WHERE ausch.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                          ) 
                                  -- OR  
                                  -- pvsch.GRANTEE_ID IN ( SELECT AUTH_ID 
                                  --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                   )  
                           ) 
         OR 
         EXISTS ( SELECT GRANTEE_ID  
                    FROM DEFINITION_SCHEMA.DATABASE_PRIVILEGES pvdba 
                   WHERE pvdba.PRIVILEGE_TYPE IN ( 'ALTER ANY SEQUENCE', 'DROP ANY SEQUENCE', 'USAGE ANY SEQUENCE' ) 
                     AND ( pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                   FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS audba 
                                                  WHERE audba.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                ) 
                        -- OR  
                        -- pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                        --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                         )  
                ) 
       ) 
 ORDER BY 
       sqc.SCHEMA_ID
     , sqc.SEQUENCE_ID
;

View created.

Elapsed time: 1.90600 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.ALL_SEQUENCES
        IS 'ALL_SEQUENCES describes all sequences accessible to the current user.';

Comment created.

Elapsed time: 0.12900 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_SEQUENCES.SEQUENCE_OWNER 
        IS 'Owner of the sequence';

Comment created.

Elapsed time: 0.15500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_SEQUENCES.SEQUENCE_SCHEMA 
        IS 'Schema of the sequence';

Comment created.

Elapsed time: 0.14600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_SEQUENCES.SEQUENCE_NAME 
        IS 'Sequence name';

Comment created.

Elapsed time: 0.14200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_SEQUENCES.MIN_VALUE
        IS 'Minimum value of the sequence';

Comment created.

Elapsed time: 0.14200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_SEQUENCES.MAX_VALUE
        IS 'Maximum value of the sequence';

Comment created.

Elapsed time: 0.14200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_SEQUENCES.INCREMENT_BY
        IS 'Value by which sequence is incremented';

Comment created.

Elapsed time: 0.14400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_SEQUENCES.CYCLE_FLAG
        IS 'Indicates whether the sequence wraps around on reaching the limit (Y) or not (N)';

Comment created.

Elapsed time: 0.15200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_SEQUENCES.ORDER_FLAG
        IS 'Indicates whether sequence numbers are generated in order (Y) or not (N)';

Comment created.

Elapsed time: 0.14800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_SEQUENCES.CACHE_SIZE
        IS 'Number of sequence numbers to cache';

Comment created.

Elapsed time: 0.14700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_SEQUENCES.LAST_NUMBER
        IS 'Last sequence number written to database. If a sequence uses caching, the number written to database is the last number placed in the sequence cache.';

Comment created.

Elapsed time: 0.17400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_SEQUENCES.COMMENTS
        IS 'Comments of the sequence';

Comment created.

Elapsed time: 0.14000 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.ALL_SEQUENCES TO PUBLIC;

Grant succeeded.

Elapsed time: 0.12500 ms 


COMMIT;

Commit complete.

Elapsed time: 0.14900 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS ALL_SEQUENCES;

Synonym dropped.

Elapsed time: 0.07200 ms 

CREATE PUBLIC SYNONYM ALL_SEQUENCES FOR DICTIONARY_SCHEMA.ALL_SEQUENCES;

Synonym created.

Elapsed time: 0.09500 ms 

COMMIT;

Commit complete.

Elapsed time: 0.04100 ms 


--##############################################################
--# DICTIONARY_SCHEMA.USER_SEQUENCES
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.USER_SEQUENCES;

View dropped.

Elapsed time: 1.43100 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.USER_SEQUENCES
(
       SEQUENCE_OWNER 
     , SEQUENCE_SCHEMA 
     , SEQUENCE_NAME 
     , MIN_VALUE
     , MAX_VALUE
     , INCREMENT_BY
     , CYCLE_FLAG
     , ORDER_FLAG
     , CACHE_SIZE
     , LAST_NUMBER
     , COMMENTS
)
AS
SELECT
       asqc.SEQUENCE_OWNER 
     , asqc.SEQUENCE_SCHEMA 
     , asqc.SEQUENCE_NAME 
     , asqc.MIN_VALUE
     , asqc.MAX_VALUE
     , asqc.INCREMENT_BY
     , asqc.CYCLE_FLAG
     , asqc.ORDER_FLAG
     , asqc.CACHE_SIZE
     , asqc.LAST_NUMBER
     , asqc.COMMENTS
  FROM
       DICTIONARY_SCHEMA.ALL_SEQUENCES   AS asqc
 WHERE
       asqc.SEQUENCE_OWNER = CURRENT_USER
;

View created.

Elapsed time: 1.89500 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.USER_SEQUENCES
        IS 'USER_SEQUENCES describes all sequences owned by the current user.';

Comment created.

Elapsed time: 0.13900 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_SEQUENCES.SEQUENCE_OWNER 
        IS 'Owner of the sequence';

Comment created.

Elapsed time: 0.21000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_SEQUENCES.SEQUENCE_SCHEMA 
        IS 'Schema of the sequence';

Comment created.

Elapsed time: 0.14800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_SEQUENCES.SEQUENCE_NAME 
        IS 'Sequence name';

Comment created.

Elapsed time: 0.14600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_SEQUENCES.MIN_VALUE
        IS 'Minimum value of the sequence';

Comment created.

Elapsed time: 0.21500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_SEQUENCES.MAX_VALUE
        IS 'Maximum value of the sequence';

Comment created.

Elapsed time: 0.18500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_SEQUENCES.INCREMENT_BY
        IS 'Value by which sequence is incremented';

Comment created.

Elapsed time: 0.19100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_SEQUENCES.CYCLE_FLAG
        IS 'Indicates whether the sequence wraps around on reaching the limit (Y) or not (N)';

Comment created.

Elapsed time: 0.17200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_SEQUENCES.ORDER_FLAG
        IS 'Indicates whether sequence numbers are generated in order (Y) or not (N)';

Comment created.

Elapsed time: 0.18600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_SEQUENCES.CACHE_SIZE
        IS 'Number of sequence numbers to cache';

Comment created.

Elapsed time: 0.16400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_SEQUENCES.LAST_NUMBER
        IS 'Last sequence number written to database. If a sequence uses caching, the number written to database is the last number placed in the sequence cache.';

Comment created.

Elapsed time: 0.16900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_SEQUENCES.COMMENTS
        IS 'Comments of the sequence';

Comment created.

Elapsed time: 0.18000 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.USER_SEQUENCES TO PUBLIC;

Grant succeeded.

Elapsed time: 0.14600 ms 


COMMIT;

Commit complete.

Elapsed time: 0.18300 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS USER_SEQUENCES;

Synonym dropped.

Elapsed time: 0.09300 ms 

CREATE PUBLIC SYNONYM USER_SEQUENCES FOR DICTIONARY_SCHEMA.USER_SEQUENCES;

Synonym created.

Elapsed time: 0.10000 ms 

COMMIT;

Commit complete.

Elapsed time: 0.04600 ms 


DROP PUBLIC SYNONYM IF EXISTS SEQ;

Synonym dropped.

Elapsed time: 0.10000 ms 

CREATE PUBLIC SYNONYM SEQ FOR DICTIONARY_SCHEMA.USER_SEQUENCES;

Synonym created.

Elapsed time: 0.09200 ms 

COMMIT;

Commit complete.

Elapsed time: 0.04300 ms 


--##############################################################
--# DICTIONARY_SCHEMA.DBA_SEQ_PRIVS
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.DBA_SEQ_PRIVS;

View dropped.

Elapsed time: 1.14700 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.DBA_SEQ_PRIVS
(
       GRANTOR
     , GRANTEE
     , SEQUENCE_OWNER 
     , SEQUENCE_SCHEMA 
     , SEQUENCE_NAME 
     , PRIVILEGE
     , GRANTABLE
)
AS
SELECT
       grantor.AUTHORIZATION_NAME
     , grantee.AUTHORIZATION_NAME
     , owner.AUTHORIZATION_NAME
     , sch.SCHEMA_NAME
     , sqc.SEQUENCE_NAME
     , CAST( 'USAGE' AS VARCHAR(32 OCTETS) )
     , CAST( CASE WHEN pvsqc.IS_GRANTABLE = TRUE THEN 'YES' ELSE 'NO' END AS VARCHAR(3 OCTETS) )
  FROM
       DEFINITION_SCHEMA.USAGE_PRIVILEGES  AS pvsqc
     , DEFINITION_SCHEMA.SEQUENCES         AS sqc
     , DEFINITION_SCHEMA.SCHEMATA          AS sch 
     , DEFINITION_SCHEMA.AUTHORIZATIONS    AS grantor
     , DEFINITION_SCHEMA.AUTHORIZATIONS    AS grantee
     , DEFINITION_SCHEMA.AUTHORIZATIONS    AS owner
 WHERE
       pvsqc.OBJECT_TYPE = 'SEQUENCE'
   AND pvsqc.OBJECT_ID   = sqc.SEQUENCE_ID
   AND pvsqc.SCHEMA_ID   = sch.SCHEMA_ID
   AND pvsqc.GRANTOR_ID  = grantor.AUTH_ID
   AND pvsqc.GRANTEE_ID  = grantee.AUTH_ID
   AND sqc.OWNER_ID      = owner.AUTH_ID
   AND EXISTS ( SELECT GRANTEE_ID  
                  FROM DEFINITION_SCHEMA.DATABASE_PRIVILEGES pvdba 
                 WHERE pvdba.PRIVILEGE_TYPE IN ( 'ACCESS CONTROL' ) 
                   AND ( pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                 FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS audba 
                                                WHERE audba.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                             ) 
                      -- OR  
                      -- pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                      --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                       )  
               ) 
 ORDER BY 
       pvsqc.SCHEMA_ID
     , pvsqc.OBJECT_ID
     , pvsqc.GRANTOR_ID
     , pvsqc.GRANTEE_ID
;

View created.

Elapsed time: 1.65300 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.DBA_SEQ_PRIVS
        IS 'DBA_SEQ_PRIVS describes all sequence grants in the database.';

Comment created.

Elapsed time: 0.15700 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_SEQ_PRIVS.GRANTOR
        IS 'Name of the user who performed the grant';

Comment created.

Elapsed time: 0.15200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_SEQ_PRIVS.GRANTEE
        IS 'Name of the user or role to whom access was granted';

Comment created.

Elapsed time: 0.14500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_SEQ_PRIVS.SEQUENCE_OWNER 
        IS 'Owner of the sequence';

Comment created.

Elapsed time: 0.16300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_SEQ_PRIVS.SEQUENCE_SCHEMA 
        IS 'Schema of the sequence';

Comment created.

Elapsed time: 0.16300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_SEQ_PRIVS.SEQUENCE_NAME 
        IS 'Name of the sequence';

Comment created.

Elapsed time: 0.15200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_SEQ_PRIVS.PRIVILEGE
        IS 'Privilege on the sequence';

Comment created.

Elapsed time: 0.13900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_SEQ_PRIVS.GRANTABLE
        IS 'Indicates whether the privilege was granted with the GRANT OPTION (YES) or not (NO)';

Comment created.

Elapsed time: 0.14000 ms 


--#####################
--# grant view
--#####################

--GRANT SELECT ON TABLE DICTIONARY_SCHEMA.DBA_SEQ_PRIVS TO DBA;
GRANT SELECT ON TABLE DICTIONARY_SCHEMA.DBA_SEQ_PRIVS TO PUBLIC;

Grant succeeded.

Elapsed time: 0.14900 ms 


COMMIT;

Commit complete.

Elapsed time: 0.13400 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS DBA_SEQ_PRIVS;

Synonym dropped.

Elapsed time: 0.08400 ms 

CREATE PUBLIC SYNONYM DBA_SEQ_PRIVS FOR DICTIONARY_SCHEMA.DBA_SEQ_PRIVS;

Synonym created.

Elapsed time: 0.08900 ms 

COMMIT;

Commit complete.

Elapsed time: 0.04000 ms 



--##############################################################
--# DICTIONARY_SCHEMA.ALL_SEQ_PRIVS
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.ALL_SEQ_PRIVS;

View dropped.

Elapsed time: 1.26000 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.ALL_SEQ_PRIVS
(
       GRANTOR
     , GRANTEE
     , SEQUENCE_OWNER 
     , SEQUENCE_SCHEMA 
     , SEQUENCE_NAME 
     , PRIVILEGE
     , GRANTABLE
)
AS
SELECT
       grantor.AUTHORIZATION_NAME
     , grantee.AUTHORIZATION_NAME
     , owner.AUTHORIZATION_NAME
     , sch.SCHEMA_NAME
     , sqc.SEQUENCE_NAME
     , CAST( 'USAGE' AS VARCHAR(32 OCTETS) )
     , CAST( CASE WHEN pvsqc.IS_GRANTABLE = TRUE THEN 'YES' ELSE 'NO' END AS VARCHAR(3 OCTETS) )
  FROM
       DEFINITION_SCHEMA.USAGE_PRIVILEGES  AS pvsqc
     , DEFINITION_SCHEMA.SEQUENCES         AS sqc
     , DEFINITION_SCHEMA.SCHEMATA          AS sch 
     , DEFINITION_SCHEMA.AUTHORIZATIONS    AS grantor
     , DEFINITION_SCHEMA.AUTHORIZATIONS    AS grantee
     , DEFINITION_SCHEMA.AUTHORIZATIONS    AS owner
 WHERE
       grantor.AUTHORIZATION_NAME <> '_SYSTEM'
   AND pvsqc.OBJECT_TYPE = 'SEQUENCE'
   AND pvsqc.OBJECT_ID   = sqc.SEQUENCE_ID
   AND pvsqc.SCHEMA_ID   = sch.SCHEMA_ID
   AND pvsqc.GRANTOR_ID  = grantor.AUTH_ID
   AND pvsqc.GRANTEE_ID  = grantee.AUTH_ID
   AND sqc.OWNER_ID      = owner.AUTH_ID
   AND ( grantee.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )
      -- OR  
      -- pvtab.GRANTEE_ID IN ( SELECT AUTH_ID 
      --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
         OR
         grantor.AUTHORIZATION_NAME = CURRENT_USER
         OR
         owner.AUTHORIZATION_NAME = CURRENT_USER
       )
 ORDER BY 
       pvsqc.SCHEMA_ID
     , pvsqc.OBJECT_ID
     , pvsqc.GRANTOR_ID
     , pvsqc.GRANTEE_ID
;

View created.

Elapsed time: 1.37400 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.ALL_SEQ_PRIVS
        IS 'ALL_SEQ_PRIVS describes the sequence grants, for which the current user is the sequence owner, grantor, or grantee, or for which an enabled role or PUBLIC is the grantee.';

Comment created.

Elapsed time: 0.17800 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_SEQ_PRIVS.GRANTOR
        IS 'Name of the user who performed the grant';

Comment created.

Elapsed time: 0.14900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_SEQ_PRIVS.GRANTEE
        IS 'Name of the user or role to whom access was granted';

Comment created.

Elapsed time: 0.30500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_SEQ_PRIVS.SEQUENCE_OWNER 
        IS 'Owner of the sequence';

Comment created.

Elapsed time: 0.16800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_SEQ_PRIVS.SEQUENCE_SCHEMA 
        IS 'Schema of the sequence';

Comment created.

Elapsed time: 0.16000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_SEQ_PRIVS.SEQUENCE_NAME 
        IS 'Name of the sequence';

Comment created.

Elapsed time: 0.14200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_SEQ_PRIVS.PRIVILEGE
        IS 'Privilege on the sequence';

Comment created.

Elapsed time: 0.13800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_SEQ_PRIVS.GRANTABLE
        IS 'Indicates whether the privilege was granted with the GRANT OPTION (YES) or not (NO)';

Comment created.

Elapsed time: 0.13800 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.ALL_SEQ_PRIVS TO PUBLIC;

Grant succeeded.

Elapsed time: 0.14700 ms 


COMMIT;

Commit complete.

Elapsed time: 0.13200 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS ALL_SEQ_PRIVS;

Synonym dropped.

Elapsed time: 0.08600 ms 

CREATE PUBLIC SYNONYM ALL_SEQ_PRIVS FOR DICTIONARY_SCHEMA.ALL_SEQ_PRIVS;

Synonym created.

Elapsed time: 0.09800 ms 

COMMIT;

Commit complete.

Elapsed time: 0.04000 ms 


--##############################################################
--# DICTIONARY_SCHEMA.USER_SEQ_PRIVS
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.USER_SEQ_PRIVS;

View dropped.

Elapsed time: 1.12000 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.USER_SEQ_PRIVS
(
       GRANTOR
     , GRANTEE
     , SEQUENCE_OWNER 
     , SEQUENCE_SCHEMA 
     , SEQUENCE_NAME 
     , PRIVILEGE
     , GRANTABLE
)
AS
SELECT
       pvsqc.GRANTOR
     , pvsqc.GRANTEE
     , pvsqc.SEQUENCE_OWNER 
     , pvsqc.SEQUENCE_SCHEMA 
     , pvsqc.SEQUENCE_NAME 
     , pvsqc.PRIVILEGE
     , pvsqc.GRANTABLE
  FROM
       DICTIONARY_SCHEMA.ALL_SEQ_PRIVS pvsqc
 WHERE 
       pvsqc.SEQUENCE_OWNER = CURRENT_USER
    OR pvsqc.GRANTOR        = CURRENT_USER
    OR pvsqc.GRANTEE        = CURRENT_USER
;

View created.

Elapsed time: 1.38500 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.USER_SEQ_PRIVS
        IS 'USER_SEQ_PRIVS describes the sequence grants for which the current user is the sequence owner, grantor, or grantee.';

Comment created.

Elapsed time: 0.12700 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_SEQ_PRIVS.GRANTOR
        IS 'Name of the user who performed the grant';

Comment created.

Elapsed time: 0.16400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_SEQ_PRIVS.GRANTEE
        IS 'Name of the user or role to whom access was granted';

Comment created.

Elapsed time: 0.16900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_SEQ_PRIVS.SEQUENCE_OWNER 
        IS 'Owner of the sequence';

Comment created.

Elapsed time: 0.14200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_SEQ_PRIVS.SEQUENCE_SCHEMA 
        IS 'Schema of the sequence';

Comment created.

Elapsed time: 0.14900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_SEQ_PRIVS.SEQUENCE_NAME 
        IS 'Name of the sequence';

Comment created.

Elapsed time: 0.13800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_SEQ_PRIVS.PRIVILEGE
        IS 'Privilege on the sequence';

Comment created.

Elapsed time: 0.13800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_SEQ_PRIVS.GRANTABLE
        IS 'Indicates whether the privilege was granted with the GRANT OPTION (YES) or not (NO)';

Comment created.

Elapsed time: 0.14700 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.USER_SEQ_PRIVS TO PUBLIC;

Grant succeeded.

Elapsed time: 0.11800 ms 


COMMIT;

Commit complete.

Elapsed time: 0.11500 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS USER_SEQ_PRIVS;

Synonym dropped.

Elapsed time: 0.07700 ms 

CREATE PUBLIC SYNONYM USER_SEQ_PRIVS FOR DICTIONARY_SCHEMA.USER_SEQ_PRIVS;

Synonym created.

Elapsed time: 0.08900 ms 

COMMIT;

Commit complete.

Elapsed time: 0.03900 ms 


--##############################################################
--# DICTIONARY_SCHEMA.ALL_SEQ_PRIVS_MADE
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.ALL_SEQ_PRIVS_MADE;

View dropped.

Elapsed time: 0.97400 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.ALL_SEQ_PRIVS_MADE
(
       GRANTOR
     , GRANTEE
     , SEQUENCE_OWNER 
     , SEQUENCE_SCHEMA 
     , SEQUENCE_NAME 
     , PRIVILEGE
     , GRANTABLE
)
AS
SELECT
       GRANTOR
     , GRANTEE
     , SEQUENCE_OWNER 
     , SEQUENCE_SCHEMA 
     , SEQUENCE_NAME 
     , PRIVILEGE
     , GRANTABLE
  FROM
       DICTIONARY_SCHEMA.ALL_SEQ_PRIVS  AS pvsqc
 WHERE 
       pvsqc.SEQUENCE_OWNER = CURRENT_USER
    OR pvsqc.GRANTOR        = CURRENT_USER
;

View created.

Elapsed time: 1.43200 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.ALL_SEQ_PRIVS_MADE
        IS 'ALL_SEQ_PRIVS_MADE describes the sequence grants for which the current user is the sequence owner or grantor.';

Comment created.

Elapsed time: 0.14200 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_SEQ_PRIVS_MADE.GRANTOR
        IS 'Name of the user who performed the grant';

Comment created.

Elapsed time: 0.14600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_SEQ_PRIVS_MADE.GRANTEE
        IS 'Name of the user or role to whom access was granted';

Comment created.

Elapsed time: 0.16700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_SEQ_PRIVS_MADE.SEQUENCE_OWNER 
        IS 'Owner of the sequence';

Comment created.

Elapsed time: 0.13900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_SEQ_PRIVS_MADE.SEQUENCE_SCHEMA 
        IS 'Schema of the sequence';

Comment created.

Elapsed time: 0.13800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_SEQ_PRIVS_MADE.SEQUENCE_NAME 
        IS 'Name of the sequence';

Comment created.

Elapsed time: 0.13900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_SEQ_PRIVS_MADE.PRIVILEGE
        IS 'Privilege on the sequence';

Comment created.

Elapsed time: 0.14800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_SEQ_PRIVS_MADE.GRANTABLE
        IS 'Indicates whether the privilege was granted with the GRANT OPTION (YES) or not (NO)';

Comment created.

Elapsed time: 0.14800 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.ALL_SEQ_PRIVS_MADE TO PUBLIC;

Grant succeeded.

Elapsed time: 0.11800 ms 


COMMIT;

Commit complete.

Elapsed time: 0.11200 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS ALL_SEQ_PRIVS_MADE;

Synonym dropped.

Elapsed time: 0.07200 ms 

CREATE PUBLIC SYNONYM ALL_SEQ_PRIVS_MADE FOR DICTIONARY_SCHEMA.ALL_SEQ_PRIVS_MADE;

Synonym created.

Elapsed time: 0.08500 ms 

COMMIT;

Commit complete.

Elapsed time: 0.03900 ms 


--##############################################################
--# DICTIONARY_SCHEMA.USER_SEQ_PRIVS_MADE
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.USER_SEQ_PRIVS_MADE;

View dropped.

Elapsed time: 0.96800 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.USER_SEQ_PRIVS_MADE
(
       GRANTOR
     , GRANTEE
     , SEQUENCE_OWNER 
     , SEQUENCE_SCHEMA 
     , SEQUENCE_NAME 
     , PRIVILEGE
     , GRANTABLE
)
AS
SELECT
       pvsqc.GRANTOR
     , pvsqc.GRANTEE
     , pvsqc.SEQUENCE_OWNER 
     , pvsqc.SEQUENCE_SCHEMA 
     , pvsqc.SEQUENCE_NAME 
     , pvsqc.PRIVILEGE
     , pvsqc.GRANTABLE
  FROM
       DICTIONARY_SCHEMA.ALL_SEQ_PRIVS pvsqc
 WHERE 
       pvsqc.SEQUENCE_OWNER = CURRENT_USER
;

View created.

Elapsed time: 1.44700 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.USER_SEQ_PRIVS_MADE
        IS 'USER_SEQ_PRIVS_MADE describes the sequence grants for which the current user is the sequence owner.';

Comment created.

Elapsed time: 0.14400 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_SEQ_PRIVS_MADE.GRANTOR
        IS 'Name of the user who performed the grant';

Comment created.

Elapsed time: 0.14900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_SEQ_PRIVS_MADE.GRANTEE
        IS 'Name of the user or role to whom access was granted';

Comment created.

Elapsed time: 0.14800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_SEQ_PRIVS_MADE.SEQUENCE_OWNER 
        IS 'Owner of the sequence';

Comment created.

Elapsed time: 0.13900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_SEQ_PRIVS_MADE.SEQUENCE_SCHEMA 
        IS 'Schema of the sequence';

Comment created.

Elapsed time: 0.13700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_SEQ_PRIVS_MADE.SEQUENCE_NAME 
        IS 'Name of the sequence';

Comment created.

Elapsed time: 0.13900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_SEQ_PRIVS_MADE.PRIVILEGE
        IS 'Privilege on the sequence';

Comment created.

Elapsed time: 0.13400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_SEQ_PRIVS_MADE.GRANTABLE
        IS 'Indicates whether the privilege was granted with the GRANT OPTION (YES) or not (NO)';

Comment created.

Elapsed time: 0.13700 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.USER_SEQ_PRIVS_MADE TO PUBLIC;

Grant succeeded.

Elapsed time: 0.12000 ms 


COMMIT;

Commit complete.

Elapsed time: 0.11500 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS USER_SEQ_PRIVS_MADE;

Synonym dropped.

Elapsed time: 0.07300 ms 

CREATE PUBLIC SYNONYM USER_SEQ_PRIVS_MADE FOR DICTIONARY_SCHEMA.USER_SEQ_PRIVS_MADE;

Synonym created.

Elapsed time: 0.08600 ms 

COMMIT;

Commit complete.

Elapsed time: 0.03900 ms 



--##############################################################
--# DICTIONARY_SCHEMA.ALL_SEQ_PRIVS_RECD
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.ALL_SEQ_PRIVS_RECD;

View dropped.

Elapsed time: 0.97100 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.ALL_SEQ_PRIVS_RECD
(
       GRANTOR
     , GRANTEE
     , SEQUENCE_OWNER 
     , SEQUENCE_SCHEMA 
     , SEQUENCE_NAME 
     , PRIVILEGE
     , GRANTABLE
)
AS
SELECT
       GRANTOR
     , GRANTEE
     , SEQUENCE_OWNER 
     , SEQUENCE_SCHEMA 
     , SEQUENCE_NAME 
     , PRIVILEGE
     , GRANTABLE
  FROM
       DICTIONARY_SCHEMA.ALL_SEQ_PRIVS  AS pvsqc
 WHERE 
       ( 
         pvsqc.GRANTEE IN ( CURRENT_USER, 'PUBLIC' )
      -- OR  
      -- pvsqc.GRANTEE IN ( SELECT AUTH_NAME 
      --                      FROM INORMATION_SCHEMA.ENABLED_ROLES )  
       )
;

View created.

Elapsed time: 1.36100 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.ALL_SEQ_PRIVS_RECD
        IS 'ALL_SEQ_PRIVS_RECD describes the sequence grants, for which the current user is the grantee, or for which an enabled role or PUBLIC is the grantee.';

Comment created.

Elapsed time: 0.13200 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_SEQ_PRIVS_RECD.GRANTOR
        IS 'Name of the user who performed the grant';

Comment created.

Elapsed time: 0.16800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_SEQ_PRIVS_RECD.GRANTEE
        IS 'Name of the user or role to whom access was granted';

Comment created.

Elapsed time: 0.14300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_SEQ_PRIVS_RECD.SEQUENCE_OWNER 
        IS 'Owner of the sequence';

Comment created.

Elapsed time: 0.16800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_SEQ_PRIVS_RECD.SEQUENCE_SCHEMA 
        IS 'Schema of the sequence';

Comment created.

Elapsed time: 0.13900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_SEQ_PRIVS_RECD.SEQUENCE_NAME 
        IS 'Name of the sequence';

Comment created.

Elapsed time: 0.13600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_SEQ_PRIVS_RECD.PRIVILEGE
        IS 'Privilege on the sequence';

Comment created.

Elapsed time: 0.13900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_SEQ_PRIVS_RECD.GRANTABLE
        IS 'Indicates whether the privilege was granted with the GRANT OPTION (YES) or not (NO)';

Comment created.

Elapsed time: 0.13900 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.ALL_SEQ_PRIVS_RECD TO PUBLIC;

Grant succeeded.

Elapsed time: 0.12400 ms 


COMMIT;

Commit complete.

Elapsed time: 0.11200 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS ALL_SEQ_PRIVS_RECD;

Synonym dropped.

Elapsed time: 0.07600 ms 

CREATE PUBLIC SYNONYM ALL_SEQ_PRIVS_RECD FOR DICTIONARY_SCHEMA.ALL_SEQ_PRIVS_RECD;

Synonym created.

Elapsed time: 0.08600 ms 

COMMIT;

Commit complete.

Elapsed time: 0.03800 ms 



--##############################################################
--# DICTIONARY_SCHEMA.USER_SEQ_PRIVS_RECD
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.USER_SEQ_PRIVS_RECD;

View dropped.

Elapsed time: 0.98800 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.USER_SEQ_PRIVS_RECD
(
       GRANTOR
     , GRANTEE
     , SEQUENCE_OWNER 
     , SEQUENCE_SCHEMA 
     , SEQUENCE_NAME 
     , PRIVILEGE
     , GRANTABLE
)
AS
SELECT
       pvsqc.GRANTOR
     , pvsqc.GRANTEE
     , pvsqc.SEQUENCE_OWNER 
     , pvsqc.SEQUENCE_SCHEMA 
     , pvsqc.SEQUENCE_NAME 
     , pvsqc.PRIVILEGE
     , pvsqc.GRANTABLE
  FROM
       DICTIONARY_SCHEMA.ALL_SEQ_PRIVS pvsqc
 WHERE 
       pvsqc.GRANTEE        = CURRENT_USER
;

View created.

Elapsed time: 1.58400 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.USER_SEQ_PRIVS_RECD
        IS 'USER_SEQ_PRIVS_RECD describes the sequence grants for which the current user is the grantee.';

Comment created.

Elapsed time: 0.13000 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_SEQ_PRIVS_RECD.GRANTOR
        IS 'Name of the user who performed the grant';

Comment created.

Elapsed time: 0.14900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_SEQ_PRIVS_RECD.GRANTEE
        IS 'Name of the user or role to whom access was granted';

Comment created.

Elapsed time: 0.14200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_SEQ_PRIVS_RECD.SEQUENCE_OWNER 
        IS 'Owner of the sequence';

Comment created.

Elapsed time: 0.14200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_SEQ_PRIVS_RECD.SEQUENCE_SCHEMA 
        IS 'Schema of the sequence';

Comment created.

Elapsed time: 0.14200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_SEQ_PRIVS_RECD.SEQUENCE_NAME 
        IS 'Name of the sequence';

Comment created.

Elapsed time: 0.15000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_SEQ_PRIVS_RECD.PRIVILEGE
        IS 'Privilege on the sequence';

Comment created.

Elapsed time: 0.13500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_SEQ_PRIVS_RECD.GRANTABLE
        IS 'Indicates whether the privilege was granted with the GRANT OPTION (YES) or not (NO)';

Comment created.

Elapsed time: 0.14600 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.USER_SEQ_PRIVS_RECD TO PUBLIC;

Grant succeeded.

Elapsed time: 0.12000 ms 


COMMIT;

Commit complete.

Elapsed time: 0.12000 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS USER_SEQ_PRIVS_RECD;

Synonym dropped.

Elapsed time: 0.07200 ms 

CREATE PUBLIC SYNONYM USER_SEQ_PRIVS_RECD FOR DICTIONARY_SCHEMA.USER_SEQ_PRIVS_RECD;

Synonym created.

Elapsed time: 0.08500 ms 

COMMIT;

Commit complete.

Elapsed time: 0.03800 ms 


--##############################################################
--# DICTIONARY_SCHEMA.DBA_TABLES
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.DBA_TABLES;

View dropped.

Elapsed time: 5.06300 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.DBA_TABLES
(
       OWNER
     , TABLE_SCHEMA 
     , TABLE_NAME 
     , TABLESPACE_NAME
     , CLUSTER_NAME
     , IOT_NAME
     , STATUS
     , PCT_FREE
     , PCT_USED
     , INI_TRANS
     , MAX_TRANS
     , INITIAL_EXTENT
     , NEXT_EXTENT
     , MIN_EXTENTS
     , MAX_EXTENTS
     , PCT_INCREASE
     , FREELISTS
     , FREELIST_GROUPS
     , LOGGING
     , BACKED_UP
     , NUM_ROWS
     , BLOCKS
     , EMPTY_BLOCKS
     , AVG_SPACE
     , CHAIN_CNT
     , AVG_ROW_LEN
     , AVG_SPACE_FREELIST_BLOCKS
     , NUM_FREELIST_BLOCKS
     , DEGREE
     , INSTANCES
     , CACHE
     , TABLE_LOCK
     , SAMPLE_SIZE
     , LAST_ANALYZED
     , PARTITIONED
     , IOT_TYPE
     , TEMPORARY
     , SECONDARY
     , NESTED
     , BUFFER_POOL
     , FLASH_CACHE
     , CELL_FLASH_CACHE
     , ROW_MOVEMENT
     , GLOBAL_STATS
     , USER_STATS
     , DURATION
     , SKIP_CORRUPT
     , MONITORING
     , CLUSTER_OWNER
     , DEPENDENCIES
     , COMPRESSION
     , COMPRESS_FOR
     , DROPPED
     , READ_ONLY       
     , SEGMENT_CREATED
     , RESULT_CACHE    
)
AS
SELECT
       dbtab.OWNER
     , dbtab.TABLE_SCHEMA 
     , dbtab.TABLE_NAME 
     , dbtab.TABLESPACE_NAME
     , dbtab.CLUSTER_NAME
     , dbtab.IOT_NAME
     , dbtab.STATUS
     , dbtab.PCT_FREE
     , dbtab.PCT_USED
     , dbtab.INI_TRANS
     , dbtab.MAX_TRANS
     , dbtab.INITIAL_EXTENT
     , dbtab.NEXT_EXTENT
     , dbtab.MIN_EXTENTS
     , dbtab.MAX_EXTENTS
     , dbtab.PCT_INCREASE
     , dbtab.FREELISTS
     , dbtab.FREELIST_GROUPS
     , dbtab.LOGGING
     , dbtab.BACKED_UP
     , dbtab.NUM_ROWS
     , dbtab.BLOCKS
     , dbtab.EMPTY_BLOCKS
     , dbtab.AVG_SPACE
     , dbtab.CHAIN_CNT
     , dbtab.AVG_ROW_LEN
     , dbtab.AVG_SPACE_FREELIST_BLOCKS
     , dbtab.NUM_FREELIST_BLOCKS
     , dbtab.DEGREE
     , dbtab.INSTANCES
     , dbtab.CACHE
     , dbtab.TABLE_LOCK
     , dbtab.SAMPLE_SIZE
     , dbtab.LAST_ANALYZED
     , dbtab.PARTITIONED
     , dbtab.IOT_TYPE
     , dbtab.TEMPORARY
     , dbtab.SECONDARY
     , dbtab.NESTED
     , dbtab.BUFFER_POOL
     , dbtab.FLASH_CACHE
     , dbtab.CELL_FLASH_CACHE
     , dbtab.ROW_MOVEMENT
     , dbtab.GLOBAL_STATS
     , dbtab.USER_STATS
     , dbtab.DURATION
     , dbtab.SKIP_CORRUPT
     , dbtab.MONITORING
     , dbtab.CLUSTER_OWNER
     , dbtab.DEPENDENCIES
     , dbtab.COMPRESSION
     , dbtab.COMPRESS_FOR
     , dbtab.DROPPED
     , CAST( CASE WHEN dbtab.OWNER = '_SYSTEM' 
                  THEN 'YES'
                  ELSE 'NO'
                  END
             AS VARCHAR(3 OCTETS) )         -- READ_ONLY 
     , dbtab.SEGMENT_CREATED
     , CAST( NULL AS VARCHAR(32 OCTETS) )   -- RESULT_CACHE
  FROM
       DICTIONARY_SCHEMA.DBA_ALL_TABLES   AS dbtab 
 WHERE
       dbtab.TABLE_TYPE IS NULL
;

View created.

Elapsed time: 6.22000 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.DBA_TABLES
        IS 'DBA_TABLES describes all relational tables in the database.';

Comment created.

Elapsed time: 0.13500 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TABLES.OWNER
        IS 'Owner of the table';

Comment created.

Elapsed time: 0.15000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TABLES.TABLE_SCHEMA 
        IS 'Schema of the table';

Comment created.

Elapsed time: 0.15100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TABLES.TABLE_NAME 
        IS 'Name of the table';

Comment created.

Elapsed time: 0.14000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TABLES.TABLESPACE_NAME
        IS 'Name of the tablespace containing the table';

Comment created.

Elapsed time: 0.14000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TABLES.CLUSTER_NAME
        IS 'Name of the cluster';

Comment created.

Elapsed time: 0.14400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TABLES.IOT_NAME
        IS 'Name of the index-organized table';

Comment created.

Elapsed time: 0.13700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TABLES.STATUS
        IS 'If a previous DROP TABLE operation failed, indicates whether the table is unusable (UNUSABLE) or valid (VALID)';

Comment created.

Elapsed time: 0.15100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TABLES.PCT_FREE
        IS 'Minimum percentage of free space in a block';

Comment created.

Elapsed time: 0.14000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TABLES.PCT_USED
        IS 'Minimum percentage of used space in a block';

Comment created.

Elapsed time: 0.13600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TABLES.INI_TRANS
        IS 'Initial number of transactions';

Comment created.

Elapsed time: 0.14700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TABLES.MAX_TRANS
        IS 'Maximum number of transactions';

Comment created.

Elapsed time: 0.13700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TABLES.INITIAL_EXTENT
        IS 'Size of the initial extent (in bytes)';

Comment created.

Elapsed time: 0.14000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TABLES.NEXT_EXTENT
        IS 'Size of secondary extents (in bytes)';

Comment created.

Elapsed time: 0.14600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TABLES.MIN_EXTENTS
        IS 'Minimum number of extents allowed in the segment';

Comment created.

Elapsed time: 0.14100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TABLES.MAX_EXTENTS
        IS 'Maximum number of extents allowed in the segment';

Comment created.

Elapsed time: 0.15400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TABLES.PCT_INCREASE
        IS 'Percentage increase in extent size';

Comment created.

Elapsed time: 0.20800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TABLES.FREELISTS
        IS 'Number of process freelists allocated to the segment';

Comment created.

Elapsed time: 0.13900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TABLES.FREELIST_GROUPS
        IS 'Number of freelist groups allocated to the segment';

Comment created.

Elapsed time: 0.13700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TABLES.LOGGING
        IS 'Indicates whether or not changes to the table are logged';

Comment created.

Elapsed time: 0.15400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TABLES.BACKED_UP
        IS 'Indicates whether the table has been backed up since the last modification (Y) or not (N)';

Comment created.

Elapsed time: 0.16600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TABLES.NUM_ROWS
        IS 'Number of rows in the table';

Comment created.

Elapsed time: 0.13500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TABLES.BLOCKS
        IS 'Number of used blocks in the table';

Comment created.

Elapsed time: 0.13900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TABLES.EMPTY_BLOCKS
        IS 'Number of empty (never used) blocks in the table';

Comment created.

Elapsed time: 0.13900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TABLES.AVG_SPACE
        IS 'Average available free space in the table';

Comment created.

Elapsed time: 0.14000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TABLES.CHAIN_CNT
        IS 'Number of rows in the table that are chained from one data block to another or that have migrated to a new block, requiring a link to preserve the old rowid';

Comment created.

Elapsed time: 0.16600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TABLES.AVG_ROW_LEN
        IS 'Average row length, including row overhead';

Comment created.

Elapsed time: 0.17000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TABLES.AVG_SPACE_FREELIST_BLOCKS
        IS 'Average freespace of all blocks on a freelist';

Comment created.

Elapsed time: 0.16100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TABLES.NUM_FREELIST_BLOCKS
        IS 'Number of blocks on the freelist';

Comment created.

Elapsed time: 0.14200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TABLES.DEGREE
        IS 'Number of threads per instance for scanning the table, or DEFAULT';

Comment created.

Elapsed time: 0.13900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TABLES.INSTANCES
        IS 'Number of instances across which the table is to be scanned, or DEFAULT';

Comment created.

Elapsed time: 0.16100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TABLES.CACHE
        IS 'Indicates whether the table is to be cached in the buffer cache (Y) or not (N)';

Comment created.

Elapsed time: 0.16300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TABLES.TABLE_LOCK
        IS 'Indicates whether table locking is enabled (ENABLED) or disabled (DISABLED)';

Comment created.

Elapsed time: 0.13800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TABLES.SAMPLE_SIZE
        IS 'Sample size used in analyzing the table';

Comment created.

Elapsed time: 0.14800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TABLES.LAST_ANALYZED
        IS 'Date on which the table was most recently analyzed';

Comment created.

Elapsed time: 0.13900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TABLES.PARTITIONED
        IS 'Indicates whether the table is partitioned (YES) or not (NO)';

Comment created.

Elapsed time: 0.18200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TABLES.IOT_TYPE
        IS 'If the table is an index-organized table, then IOT_TYPE is IOT, IOT_OVERFLOW, or IOT_MAPPING.';

Comment created.

Elapsed time: 0.14000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TABLES.TEMPORARY
        IS 'Indicates whether the table is temporary (Y) or not (N)';

Comment created.

Elapsed time: 0.14700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TABLES.SECONDARY
        IS 'Indicates whether the table is a secondary object created by cartridge';

Comment created.

Elapsed time: 0.13900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TABLES.NESTED
        IS 'Indicates whether the table is a nested table (YES) or not (NO)';

Comment created.

Elapsed time: 0.13700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TABLES.BUFFER_POOL
        IS 'Buffer pool to be used for table blocks';

Comment created.

Elapsed time: 0.19400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TABLES.FLASH_CACHE
        IS 'Database Smart Flash Cache hint to be used for table blocks';

Comment created.

Elapsed time: 0.15000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TABLES.CELL_FLASH_CACHE
        IS 'Cell flash cache hint to be used for table blocks';

Comment created.

Elapsed time: 0.13800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TABLES.ROW_MOVEMENT
        IS 'If a partitioned table, indicates whether row movement is enabled (ENABLED) or disabled (DISABLED)';

Comment created.

Elapsed time: 0.13900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TABLES.GLOBAL_STATS
        IS 'For partitioned tables, indicates whether statistics for the table as a whole (global statistics) are accurate (YES)';

Comment created.

Elapsed time: 0.13500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TABLES.USER_STATS
        IS 'Indicates whether statistics were entered directly by the user (YES) or not (NO)';

Comment created.

Elapsed time: 0.15500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TABLES.DURATION
        IS 'Indicates the duration of a temporary table';

Comment created.

Elapsed time: 0.15400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TABLES.SKIP_CORRUPT
        IS 'Indicates whether Database ignores blocks marked corrupt during table and index scans (ENABLED) or raises an error (DISABLED)';

Comment created.

Elapsed time: 0.16700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TABLES.MONITORING
        IS 'Indicates whether the table has the MONITORING attribute set (YES) or not (NO)';

Comment created.

Elapsed time: 0.13900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TABLES.CLUSTER_OWNER
        IS 'Owner of the cluster, if any';

Comment created.

Elapsed time: 0.13900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TABLES.DEPENDENCIES
        IS 'Indicates whether row-level dependency tracking is enabled (ENABLED) or disabled (DISABLED)';

Comment created.

Elapsed time: 0.14000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TABLES.COMPRESSION
        IS 'Indicates whether table compression is enabled (ENABLED) or not (DISABLED)';

Comment created.

Elapsed time: 0.13800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TABLES.COMPRESS_FOR
        IS 'Default compression for what kind of operations';

Comment created.

Elapsed time: 0.15800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TABLES.DROPPED
        IS 'Indicates whether the table has been dropped and is in the recycle bin (YES) or not (NO)';

Comment created.

Elapsed time: 0.13800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TABLES.READ_ONLY
        IS 'Indicates whether the table IS READ-ONLY (YES) or not (NO)';

Comment created.

Elapsed time: 0.13400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TABLES.SEGMENT_CREATED
        IS 'Indicates whether the table segment has been created (YES) or not (NO)';

Comment created.

Elapsed time: 0.16200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TABLES.RESULT_CACHE
        IS 'Result cache mode annotation for the table: the value in ( NULL, DEFAULT, FORCE, MANUAL )';

Comment created.

Elapsed time: 0.14500 ms 


--#####################
--# grant view
--#####################

--GRANT SELECT ON TABLE DICTIONARY_SCHEMA.DBA_TABLES TO DBA;
GRANT SELECT ON TABLE DICTIONARY_SCHEMA.DBA_TABLES TO PUBLIC;

Grant succeeded.

Elapsed time: 0.11800 ms 


COMMIT;

Commit complete.

Elapsed time: 0.48400 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS DBA_TABLES;

Synonym dropped.

Elapsed time: 0.07200 ms 

CREATE PUBLIC SYNONYM DBA_TABLES FOR DICTIONARY_SCHEMA.DBA_TABLES;

Synonym created.

Elapsed time: 0.08200 ms 

COMMIT;

Commit complete.

Elapsed time: 0.03700 ms 


--##############################################################
--# DICTIONARY_SCHEMA.ALL_TABLES
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.ALL_TABLES;

View dropped.

Elapsed time: 4.82600 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.ALL_TABLES
(
       OWNER
     , TABLE_SCHEMA 
     , TABLE_NAME 
     , TABLESPACE_NAME
     , CLUSTER_NAME
     , IOT_NAME
     , STATUS
     , PCT_FREE
     , PCT_USED
     , INI_TRANS
     , MAX_TRANS
     , INITIAL_EXTENT
     , NEXT_EXTENT
     , MIN_EXTENTS
     , MAX_EXTENTS
     , PCT_INCREASE
     , FREELISTS
     , FREELIST_GROUPS
     , LOGGING
     , BACKED_UP
     , NUM_ROWS
     , BLOCKS
     , EMPTY_BLOCKS
     , AVG_SPACE
     , CHAIN_CNT
     , AVG_ROW_LEN
     , AVG_SPACE_FREELIST_BLOCKS
     , NUM_FREELIST_BLOCKS
     , DEGREE
     , INSTANCES
     , CACHE
     , TABLE_LOCK
     , SAMPLE_SIZE
     , LAST_ANALYZED
     , PARTITIONED
     , IOT_TYPE
     , TEMPORARY
     , SECONDARY
     , NESTED
     , BUFFER_POOL
     , FLASH_CACHE
     , CELL_FLASH_CACHE
     , ROW_MOVEMENT
     , GLOBAL_STATS
     , USER_STATS
     , DURATION
     , SKIP_CORRUPT
     , MONITORING
     , CLUSTER_OWNER
     , DEPENDENCIES
     , COMPRESSION
     , COMPRESS_FOR
     , DROPPED
     , READ_ONLY       
     , SEGMENT_CREATED
     , RESULT_CACHE    
)
AS
SELECT
       aatab.OWNER
     , aatab.TABLE_SCHEMA 
     , aatab.TABLE_NAME 
     , aatab.TABLESPACE_NAME
     , aatab.CLUSTER_NAME
     , aatab.IOT_NAME
     , aatab.STATUS
     , aatab.PCT_FREE
     , aatab.PCT_USED
     , aatab.INI_TRANS
     , aatab.MAX_TRANS
     , aatab.INITIAL_EXTENT
     , aatab.NEXT_EXTENT
     , aatab.MIN_EXTENTS
     , aatab.MAX_EXTENTS
     , aatab.PCT_INCREASE
     , aatab.FREELISTS
     , aatab.FREELIST_GROUPS
     , aatab.LOGGING
     , aatab.BACKED_UP
     , aatab.NUM_ROWS
     , aatab.BLOCKS
     , aatab.EMPTY_BLOCKS
     , aatab.AVG_SPACE
     , aatab.CHAIN_CNT
     , aatab.AVG_ROW_LEN
     , aatab.AVG_SPACE_FREELIST_BLOCKS
     , aatab.NUM_FREELIST_BLOCKS
     , aatab.DEGREE
     , aatab.INSTANCES
     , aatab.CACHE
     , aatab.TABLE_LOCK
     , aatab.SAMPLE_SIZE
     , aatab.LAST_ANALYZED
     , aatab.PARTITIONED
     , aatab.IOT_TYPE
     , aatab.TEMPORARY
     , aatab.SECONDARY
     , aatab.NESTED
     , aatab.BUFFER_POOL
     , aatab.FLASH_CACHE
     , aatab.CELL_FLASH_CACHE
     , aatab.ROW_MOVEMENT
     , aatab.GLOBAL_STATS
     , aatab.USER_STATS
     , aatab.DURATION
     , aatab.SKIP_CORRUPT
     , aatab.MONITORING
     , aatab.CLUSTER_OWNER
     , aatab.DEPENDENCIES
     , aatab.COMPRESSION
     , aatab.COMPRESS_FOR
     , aatab.DROPPED
     , CAST( CASE WHEN aatab.OWNER = '_SYSTEM' 
                  THEN 'YES'
                  ELSE 'NO'
                  END
             AS VARCHAR(3 OCTETS) )         -- READ_ONLY 
     , aatab.SEGMENT_CREATED
     , CAST( NULL AS VARCHAR(32 OCTETS) )   -- RESULT_CACHE
  FROM
       DICTIONARY_SCHEMA.ALL_ALL_TABLES   AS aatab 
 WHERE
       aatab.TABLE_TYPE IS NULL
;

View created.

Elapsed time: 6.24200 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.ALL_TABLES
        IS 'ALL_TABLES describes the relational tables accessible to the current user.';

Comment created.

Elapsed time: 0.12400 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TABLES.OWNER
        IS 'Owner of the table';

Comment created.

Elapsed time: 0.15600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TABLES.TABLE_SCHEMA 
        IS 'Schema of the table';

Comment created.

Elapsed time: 0.14900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TABLES.TABLE_NAME 
        IS 'Name of the table';

Comment created.

Elapsed time: 0.13900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TABLES.TABLESPACE_NAME
        IS 'Name of the tablespace containing the table';

Comment created.

Elapsed time: 0.14200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TABLES.CLUSTER_NAME
        IS 'Name of the cluster';

Comment created.

Elapsed time: 0.13700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TABLES.IOT_NAME
        IS 'Name of the index-organized table';

Comment created.

Elapsed time: 0.13600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TABLES.STATUS
        IS 'If a previous DROP TABLE operation failed, indicates whether the table is unusable (UNUSABLE) or valid (VALID)';

Comment created.

Elapsed time: 0.16800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TABLES.PCT_FREE
        IS 'Minimum percentage of free space in a block';

Comment created.

Elapsed time: 0.13800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TABLES.PCT_USED
        IS 'Minimum percentage of used space in a block';

Comment created.

Elapsed time: 0.27500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TABLES.INI_TRANS
        IS 'Initial number of transactions';

Comment created.

Elapsed time: 0.14100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TABLES.MAX_TRANS
        IS 'Maximum number of transactions';

Comment created.

Elapsed time: 0.15300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TABLES.INITIAL_EXTENT
        IS 'Size of the initial extent (in bytes)';

Comment created.

Elapsed time: 0.14600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TABLES.NEXT_EXTENT
        IS 'Size of secondary extents (in bytes)';

Comment created.

Elapsed time: 0.13700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TABLES.MIN_EXTENTS
        IS 'Minimum number of extents allowed in the segment';

Comment created.

Elapsed time: 0.13700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TABLES.MAX_EXTENTS
        IS 'Maximum number of extents allowed in the segment';

Comment created.

Elapsed time: 0.15300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TABLES.PCT_INCREASE
        IS 'Percentage increase in extent size';

Comment created.

Elapsed time: 0.13600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TABLES.FREELISTS
        IS 'Number of process freelists allocated to the segment';

Comment created.

Elapsed time: 0.14600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TABLES.FREELIST_GROUPS
        IS 'Number of freelist groups allocated to the segment';

Comment created.

Elapsed time: 0.13600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TABLES.LOGGING
        IS 'Indicates whether or not changes to the table are logged';

Comment created.

Elapsed time: 0.13600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TABLES.BACKED_UP
        IS 'Indicates whether the table has been backed up since the last modification (Y) or not (N)';

Comment created.

Elapsed time: 0.13500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TABLES.NUM_ROWS
        IS 'Number of rows in the table';

Comment created.

Elapsed time: 0.13700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TABLES.BLOCKS
        IS 'Number of used blocks in the table';

Comment created.

Elapsed time: 0.13700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TABLES.EMPTY_BLOCKS
        IS 'Number of empty (never used) blocks in the table';

Comment created.

Elapsed time: 0.15600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TABLES.AVG_SPACE
        IS 'Average available free space in the table';

Comment created.

Elapsed time: 0.14300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TABLES.CHAIN_CNT
        IS 'Number of rows in the table that are chained from one data block to another or that have migrated to a new block, requiring a link to preserve the old rowid';

Comment created.

Elapsed time: 0.15000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TABLES.AVG_ROW_LEN
        IS 'Average row length, including row overhead';

Comment created.

Elapsed time: 0.14900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TABLES.AVG_SPACE_FREELIST_BLOCKS
        IS 'Average freespace of all blocks on a freelist';

Comment created.

Elapsed time: 0.13700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TABLES.NUM_FREELIST_BLOCKS
        IS 'Number of blocks on the freelist';

Comment created.

Elapsed time: 0.13800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TABLES.DEGREE
        IS 'Number of threads per instance for scanning the table, or DEFAULT';

Comment created.

Elapsed time: 0.13600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TABLES.INSTANCES
        IS 'Number of instances across which the table is to be scanned, or DEFAULT';

Comment created.

Elapsed time: 0.13600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TABLES.CACHE
        IS 'Indicates whether the table is to be cached in the buffer cache (Y) or not (N)';

Comment created.

Elapsed time: 0.18300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TABLES.TABLE_LOCK
        IS 'Indicates whether table locking is enabled (ENABLED) or disabled (DISABLED)';

Comment created.

Elapsed time: 0.14300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TABLES.SAMPLE_SIZE
        IS 'Sample size used in analyzing the table';

Comment created.

Elapsed time: 0.13800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TABLES.LAST_ANALYZED
        IS 'Date on which the table was most recently analyzed';

Comment created.

Elapsed time: 0.15000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TABLES.PARTITIONED
        IS 'Indicates whether the table is partitioned (YES) or not (NO)';

Comment created.

Elapsed time: 0.13700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TABLES.IOT_TYPE
        IS 'If the table is an index-organized table, then IOT_TYPE is IOT, IOT_OVERFLOW, or IOT_MAPPING.';

Comment created.

Elapsed time: 0.13400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TABLES.TEMPORARY
        IS 'Indicates whether the table is temporary (Y) or not (N)';

Comment created.

Elapsed time: 0.13600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TABLES.SECONDARY
        IS 'Indicates whether the table is a secondary object created by cartridge';

Comment created.

Elapsed time: 0.18200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TABLES.NESTED
        IS 'Indicates whether the table is a nested table (YES) or not (NO)';

Comment created.

Elapsed time: 0.13700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TABLES.BUFFER_POOL
        IS 'Buffer pool to be used for table blocks';

Comment created.

Elapsed time: 0.18600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TABLES.FLASH_CACHE
        IS 'Database Smart Flash Cache hint to be used for table blocks';

Comment created.

Elapsed time: 0.14700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TABLES.CELL_FLASH_CACHE
        IS 'Cell flash cache hint to be used for table blocks';

Comment created.

Elapsed time: 0.13700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TABLES.ROW_MOVEMENT
        IS 'If a partitioned table, indicates whether row movement is enabled (ENABLED) or disabled (DISABLED)';

Comment created.

Elapsed time: 0.14000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TABLES.GLOBAL_STATS
        IS 'For partitioned tables, indicates whether statistics for the table as a whole (global statistics) are accurate (YES)';

Comment created.

Elapsed time: 0.14100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TABLES.USER_STATS
        IS 'Indicates whether statistics were entered directly by the user (YES) or not (NO)';

Comment created.

Elapsed time: 0.14200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TABLES.DURATION
        IS 'Indicates the duration of a temporary table';

Comment created.

Elapsed time: 0.13800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TABLES.SKIP_CORRUPT
        IS 'Indicates whether Database ignores blocks marked corrupt during table and index scans (ENABLED) or raises an error (DISABLED)';

Comment created.

Elapsed time: 0.13800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TABLES.MONITORING
        IS 'Indicates whether the table has the MONITORING attribute set (YES) or not (NO)';

Comment created.

Elapsed time: 0.13800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TABLES.CLUSTER_OWNER
        IS 'Owner of the cluster, if any';

Comment created.

Elapsed time: 0.14000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TABLES.DEPENDENCIES
        IS 'Indicates whether row-level dependency tracking is enabled (ENABLED) or disabled (DISABLED)';

Comment created.

Elapsed time: 0.14300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TABLES.COMPRESSION
        IS 'Indicates whether table compression is enabled (ENABLED) or not (DISABLED)';

Comment created.

Elapsed time: 0.13800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TABLES.COMPRESS_FOR
        IS 'Default compression for what kind of operations';

Comment created.

Elapsed time: 0.13700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TABLES.DROPPED
        IS 'Indicates whether the table has been dropped and is in the recycle bin (YES) or not (NO)';

Comment created.

Elapsed time: 0.13700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TABLES.READ_ONLY
        IS 'Indicates whether the table IS READ-ONLY (YES) or not (NO)';

Comment created.

Elapsed time: 0.13600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TABLES.SEGMENT_CREATED
        IS 'Indicates whether the table segment has been created (YES) or not (NO)';

Comment created.

Elapsed time: 0.14200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TABLES.RESULT_CACHE
        IS 'Result cache mode annotation for the table: the value in ( NULL, DEFAULT, FORCE, MANUAL )';

Comment created.

Elapsed time: 0.13900 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.ALL_TABLES TO PUBLIC;

Grant succeeded.

Elapsed time: 0.11800 ms 


COMMIT;

Commit complete.

Elapsed time: 0.48300 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS ALL_TABLES;

Synonym dropped.

Elapsed time: 0.07200 ms 

CREATE PUBLIC SYNONYM ALL_TABLES FOR DICTIONARY_SCHEMA.ALL_TABLES;

Synonym created.

Elapsed time: 0.08200 ms 

COMMIT;

Commit complete.

Elapsed time: 0.03700 ms 


--##############################################################
--# DICTIONARY_SCHEMA.USER_TABLES
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.USER_TABLES;

View dropped.

Elapsed time: 4.64700 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.USER_TABLES
(
       TABLE_SCHEMA 
     , TABLE_NAME 
     , TABLESPACE_NAME
     , CLUSTER_NAME
     , IOT_NAME
     , STATUS
     , PCT_FREE
     , PCT_USED
     , INI_TRANS
     , MAX_TRANS
     , INITIAL_EXTENT
     , NEXT_EXTENT
     , MIN_EXTENTS
     , MAX_EXTENTS
     , PCT_INCREASE
     , FREELISTS
     , FREELIST_GROUPS
     , LOGGING
     , BACKED_UP
     , NUM_ROWS
     , BLOCKS
     , EMPTY_BLOCKS
     , AVG_SPACE
     , CHAIN_CNT
     , AVG_ROW_LEN
     , AVG_SPACE_FREELIST_BLOCKS
     , NUM_FREELIST_BLOCKS
     , DEGREE
     , INSTANCES
     , CACHE
     , TABLE_LOCK
     , SAMPLE_SIZE
     , LAST_ANALYZED
     , PARTITIONED
     , IOT_TYPE
     , TEMPORARY
     , SECONDARY
     , NESTED
     , BUFFER_POOL
     , FLASH_CACHE
     , CELL_FLASH_CACHE
     , ROW_MOVEMENT
     , GLOBAL_STATS
     , USER_STATS
     , DURATION
     , SKIP_CORRUPT
     , MONITORING
     , CLUSTER_OWNER
     , DEPENDENCIES
     , COMPRESSION
     , COMPRESS_FOR
     , DROPPED
     , READ_ONLY       
     , SEGMENT_CREATED
     , RESULT_CACHE    
)
AS
SELECT
       atab.TABLE_SCHEMA 
     , atab.TABLE_NAME 
     , atab.TABLESPACE_NAME
     , atab.CLUSTER_NAME
     , atab.IOT_NAME
     , atab.STATUS
     , atab.PCT_FREE
     , atab.PCT_USED
     , atab.INI_TRANS
     , atab.MAX_TRANS
     , atab.INITIAL_EXTENT
     , atab.NEXT_EXTENT
     , atab.MIN_EXTENTS
     , atab.MAX_EXTENTS
     , atab.PCT_INCREASE
     , atab.FREELISTS
     , atab.FREELIST_GROUPS
     , atab.LOGGING
     , atab.BACKED_UP
     , atab.NUM_ROWS
     , atab.BLOCKS
     , atab.EMPTY_BLOCKS
     , atab.AVG_SPACE
     , atab.CHAIN_CNT
     , atab.AVG_ROW_LEN
     , atab.AVG_SPACE_FREELIST_BLOCKS
     , atab.NUM_FREELIST_BLOCKS
     , atab.DEGREE
     , atab.INSTANCES
     , atab.CACHE
     , atab.TABLE_LOCK
     , atab.SAMPLE_SIZE
     , atab.LAST_ANALYZED
     , atab.PARTITIONED
     , atab.IOT_TYPE
     , atab.TEMPORARY
     , atab.SECONDARY
     , atab.NESTED
     , atab.BUFFER_POOL
     , atab.FLASH_CACHE
     , atab.CELL_FLASH_CACHE
     , atab.ROW_MOVEMENT
     , atab.GLOBAL_STATS
     , atab.USER_STATS
     , atab.DURATION
     , atab.SKIP_CORRUPT
     , atab.MONITORING
     , atab.CLUSTER_OWNER
     , atab.DEPENDENCIES
     , atab.COMPRESSION
     , atab.COMPRESS_FOR
     , atab.DROPPED
     , atab.READ_ONLY       
     , atab.SEGMENT_CREATED
     , atab.RESULT_CACHE    
  FROM
       DICTIONARY_SCHEMA.ALL_TABLES   AS atab 
 WHERE
       atab.OWNER = CURRENT_USER
;

View created.

Elapsed time: 6.39200 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.USER_TABLES
        IS 'USER_TABLES describes the relational tables owned by the current user.';

Comment created.

Elapsed time: 0.13200 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TABLES.TABLE_SCHEMA 
        IS 'Schema of the table';

Comment created.

Elapsed time: 0.15900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TABLES.TABLE_NAME 
        IS 'Name of the table';

Comment created.

Elapsed time: 0.14200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TABLES.TABLESPACE_NAME
        IS 'Name of the tablespace containing the table';

Comment created.

Elapsed time: 0.14100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TABLES.CLUSTER_NAME
        IS 'Name of the cluster';

Comment created.

Elapsed time: 0.14100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TABLES.IOT_NAME
        IS 'Name of the index-organized table';

Comment created.

Elapsed time: 0.13900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TABLES.STATUS
        IS 'If a previous DROP TABLE operation failed, indicates whether the table is unusable (UNUSABLE) or valid (VALID)';

Comment created.

Elapsed time: 0.14800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TABLES.PCT_FREE
        IS 'Minimum percentage of free space in a block';

Comment created.

Elapsed time: 0.13900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TABLES.PCT_USED
        IS 'Minimum percentage of used space in a block';

Comment created.

Elapsed time: 0.14800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TABLES.INI_TRANS
        IS 'Initial number of transactions';

Comment created.

Elapsed time: 0.13700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TABLES.MAX_TRANS
        IS 'Maximum number of transactions';

Comment created.

Elapsed time: 0.13700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TABLES.INITIAL_EXTENT
        IS 'Size of the initial extent (in bytes)';

Comment created.

Elapsed time: 0.14300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TABLES.NEXT_EXTENT
        IS 'Size of secondary extents (in bytes)';

Comment created.

Elapsed time: 0.13600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TABLES.MIN_EXTENTS
        IS 'Minimum number of extents allowed in the segment';

Comment created.

Elapsed time: 0.13600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TABLES.MAX_EXTENTS
        IS 'Maximum number of extents allowed in the segment';

Comment created.

Elapsed time: 0.13600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TABLES.PCT_INCREASE
        IS 'Percentage increase in extent size';

Comment created.

Elapsed time: 0.13600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TABLES.FREELISTS
        IS 'Number of process freelists allocated to the segment';

Comment created.

Elapsed time: 0.14900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TABLES.FREELIST_GROUPS
        IS 'Number of freelist groups allocated to the segment';

Comment created.

Elapsed time: 0.13800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TABLES.LOGGING
        IS 'Indicates whether or not changes to the table are logged';

Comment created.

Elapsed time: 0.14200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TABLES.BACKED_UP
        IS 'Indicates whether the table has been backed up since the last modification (Y) or not (N)';

Comment created.

Elapsed time: 0.13900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TABLES.NUM_ROWS
        IS 'Number of rows in the table';

Comment created.

Elapsed time: 0.13400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TABLES.BLOCKS
        IS 'Number of used blocks in the table';

Comment created.

Elapsed time: 0.13500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TABLES.EMPTY_BLOCKS
        IS 'Number of empty (never used) blocks in the table';

Comment created.

Elapsed time: 0.14600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TABLES.AVG_SPACE
        IS 'Average available free space in the table';

Comment created.

Elapsed time: 0.14800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TABLES.CHAIN_CNT
        IS 'Number of rows in the table that are chained from one data block to another or that have migrated to a new block, requiring a link to preserve the old rowid';

Comment created.

Elapsed time: 0.14200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TABLES.AVG_ROW_LEN
        IS 'Average row length, including row overhead';

Comment created.

Elapsed time: 0.13700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TABLES.AVG_SPACE_FREELIST_BLOCKS
        IS 'Average freespace of all blocks on a freelist';

Comment created.

Elapsed time: 0.13800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TABLES.NUM_FREELIST_BLOCKS
        IS 'Number of blocks on the freelist';

Comment created.

Elapsed time: 0.16500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TABLES.DEGREE
        IS 'Number of threads per instance for scanning the table, or DEFAULT';

Comment created.

Elapsed time: 0.13900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TABLES.INSTANCES
        IS 'Number of instances across which the table is to be scanned, or DEFAULT';

Comment created.

Elapsed time: 0.13800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TABLES.CACHE
        IS 'Indicates whether the table is to be cached in the buffer cache (Y) or not (N)';

Comment created.

Elapsed time: 0.13900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TABLES.TABLE_LOCK
        IS 'Indicates whether table locking is enabled (ENABLED) or disabled (DISABLED)';

Comment created.

Elapsed time: 0.13700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TABLES.SAMPLE_SIZE
        IS 'Sample size used in analyzing the table';

Comment created.

Elapsed time: 0.14300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TABLES.LAST_ANALYZED
        IS 'Date on which the table was most recently analyzed';

Comment created.

Elapsed time: 0.13500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TABLES.PARTITIONED
        IS 'Indicates whether the table is partitioned (YES) or not (NO)';

Comment created.

Elapsed time: 0.14100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TABLES.IOT_TYPE
        IS 'If the table is an index-organized table, then IOT_TYPE is IOT, IOT_OVERFLOW, or IOT_MAPPING.';

Comment created.

Elapsed time: 0.15900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TABLES.TEMPORARY
        IS 'Indicates whether the table is temporary (Y) or not (N)';

Comment created.

Elapsed time: 0.14600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TABLES.SECONDARY
        IS 'Indicates whether the table is a secondary object created by cartridge';

Comment created.

Elapsed time: 0.15300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TABLES.NESTED
        IS 'Indicates whether the table is a nested table (YES) or not (NO)';

Comment created.

Elapsed time: 0.13500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TABLES.BUFFER_POOL
        IS 'Buffer pool to be used for table blocks';

Comment created.

Elapsed time: 0.17800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TABLES.FLASH_CACHE
        IS 'Database Smart Flash Cache hint to be used for table blocks';

Comment created.

Elapsed time: 0.13900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TABLES.CELL_FLASH_CACHE
        IS 'Cell flash cache hint to be used for table blocks';

Comment created.

Elapsed time: 0.15600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TABLES.ROW_MOVEMENT
        IS 'If a partitioned table, indicates whether row movement is enabled (ENABLED) or disabled (DISABLED)';

Comment created.

Elapsed time: 0.19400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TABLES.GLOBAL_STATS
        IS 'For partitioned tables, indicates whether statistics for the table as a whole (global statistics) are accurate (YES)';

Comment created.

Elapsed time: 0.13800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TABLES.USER_STATS
        IS 'Indicates whether statistics were entered directly by the user (YES) or not (NO)';

Comment created.

Elapsed time: 0.14200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TABLES.DURATION
        IS 'Indicates the duration of a temporary table';

Comment created.

Elapsed time: 0.23100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TABLES.SKIP_CORRUPT
        IS 'Indicates whether Database ignores blocks marked corrupt during table and index scans (ENABLED) or raises an error (DISABLED)';

Comment created.

Elapsed time: 0.16400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TABLES.MONITORING
        IS 'Indicates whether the table has the MONITORING attribute set (YES) or not (NO)';

Comment created.

Elapsed time: 0.15600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TABLES.CLUSTER_OWNER
        IS 'Owner of the cluster, if any';

Comment created.

Elapsed time: 0.15600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TABLES.DEPENDENCIES
        IS 'Indicates whether row-level dependency tracking is enabled (ENABLED) or disabled (DISABLED)';

Comment created.

Elapsed time: 0.14200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TABLES.COMPRESSION
        IS 'Indicates whether table compression is enabled (ENABLED) or not (DISABLED)';

Comment created.

Elapsed time: 0.14800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TABLES.COMPRESS_FOR
        IS 'Default compression for what kind of operations';

Comment created.

Elapsed time: 0.15300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TABLES.DROPPED
        IS 'Indicates whether the table has been dropped and is in the recycle bin (YES) or not (NO)';

Comment created.

Elapsed time: 0.14000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TABLES.READ_ONLY
        IS 'Indicates whether the table IS READ-ONLY (YES) or not (NO)';

Comment created.

Elapsed time: 0.15800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TABLES.SEGMENT_CREATED
        IS 'Indicates whether the table segment has been created (YES) or not (NO)';

Comment created.

Elapsed time: 0.13600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TABLES.RESULT_CACHE
        IS 'Result cache mode annotation for the table: the value in ( NULL, DEFAULT, FORCE, MANUAL )';

Comment created.

Elapsed time: 0.13700 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.USER_TABLES TO PUBLIC;

Grant succeeded.

Elapsed time: 0.12800 ms 


COMMIT;

Commit complete.

Elapsed time: 0.70100 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS USER_TABLES;

Synonym dropped.

Elapsed time: 0.07700 ms 

CREATE PUBLIC SYNONYM USER_TABLES FOR DICTIONARY_SCHEMA.USER_TABLES;

Synonym created.

Elapsed time: 0.10000 ms 

COMMIT;

Commit complete.

Elapsed time: 0.04200 ms 


DROP PUBLIC SYNONYM IF EXISTS TABS;

Synonym dropped.

Elapsed time: 0.07000 ms 

CREATE PUBLIC SYNONYM TABS FOR DICTIONARY_SCHEMA.USER_TABLES;

Synonym created.

Elapsed time: 0.09500 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05000 ms 



--##############################################################
--# DICTIONARY_SCHEMA.DBA_TAB_COLS
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.DBA_TAB_COLS;

View dropped.

Elapsed time: 3.35900 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.DBA_TAB_COLS
(
       OWNER
     , TABLE_SCHEMA
     , TABLE_NAME
     , COLUMN_NAME
     , DATA_TYPE
     , DATA_TYPE_MOD
     , DATA_TYPE_OWNER
     , DATA_LENGTH
     , DATA_PRECISION
     , DATA_SCALE
     , NULLABLE
     , COLUMN_ID
     , DEFAULT_LENGTH
     , DATA_DEFAULT
     , NUM_DISTINCT
     , LOW_VALUE
     , HIGH_VALUE
     , DENSITY
     , NUM_NULLS
     , NUM_BUCKETS
     , LAST_ANALYZED
     , SAMPLE_SIZE
     , CHARACTER_SET_NAME
     , CHAR_COL_DECL_LENGTH
     , GLOBAL_STATS
     , USER_STATS
     , AVG_COL_LEN
     , CHAR_LENGTH
     , CHAR_USED
     , V80_FMT_IMAGE
     , DATA_UPGRADED
     , HIDDEN_COLUMN
     , VIRTUAL_COLUMN
     , SEGMENT_COLUMN_ID
     , INTERNAL_COLUMN_ID
     , HISTOGRAM
     , QUALIFIED_COL_NAME
     , IDENTITY_COLUMN
)
AS
SELECT
       auth.AUTHORIZATION_NAME                       -- OWNER
     , sch.SCHEMA_NAME                               -- TABLE_SCHEMA
     , tab.TABLE_NAME                                -- TABLE_NAME
     , col.COLUMN_NAME                               -- COLUMN_NAME
     , dtd.DATA_TYPE                                 -- DATA_TYPE
     , CAST( NULL AS VARCHAR(3 OCTETS) )             -- DATA_TYPE_MOD
     , CAST( NULL AS VARCHAR(128 OCTETS) )           -- DATA_TYPE_OWNER
     , CAST( dtd.PHYSICAL_MAXIMUM_LENGTH AS NUMBER ) -- DATA_LENGTH
     , CAST( dtd.NUMERIC_PRECISION AS NUMBER )       -- DATA_PRECISION
     , CAST( dtd.NUMERIC_SCALE AS NUMBER )           -- DATA_SCALE
     , CAST( CASE WHEN col.IS_NULLABLE = TRUE 
                  THEN 'Y'
                  ELSE 'N'
                  END
             AS VARCHAR(1 OCTETS) )                    -- NULLABLE
     , CAST( col.LOGICAL_ORDINAL_POSITION AS NUMBER )  -- COLUMN_ID
     , CAST( LENGTH(col.COLUMN_DEFAULT) AS NUMBER )    -- DEFAULT_LENGTH
     , col.COLUMN_DEFAULT                              -- DATA_DEFAULT
     , CAST( cstat.NUM_DISTINCT AS NUMBER )            -- NUM_DISTINCT
     , cstat.MIN_STRING                                -- LOW_VALUE
     , cstat.MAX_STRING                                -- HIGH_VALUE
     , CAST( CASE WHEN cstat.NUM_DISTINCT > 0
                  THEN 1 / cstat.NUM_DISTINCT 
                  ELSE NULL
                  END
             AS NUMBER )                               -- DENSITY
     , CAST( cstat.NUM_NULLS AS NUMBER )               -- NUM_NULLS
     , CAST( NULL AS NUMBER )                          -- NUM_BUCKETS
     , CAST( cstat.ANALYZED_TIME AS TIMESTAMP )        -- LAST_ANALYZED
     , CAST( cstat.NUM_SAMPLE AS NUMBER )              -- SAMPLE_SIZE
     , CAST( NULL AS VARCHAR(128 OCTETS) )             -- CHARACTER_SET_NAME
     , CAST( CASE dtd.STRING_LENGTH_UNIT
                  WHEN 'CHARACTERS' THEN dtd.CHARACTER_MAXIMUM_LENGTH
                  WHEN 'OCTETS'     THEN dtd.CHARACTER_OCTET_LENGTH
                  ELSE NULL
                  END
             AS NUMBER )                              -- CHAR_COL_DECL_LENGTH
     , CAST( 'NO' AS VARCHAR(3 OCTETS) )              -- GLOBAL_STATS
     , CAST( 'NO' AS VARCHAR(3 OCTETS) )              -- USER_STATS
     , CAST( cstat.AVG_LENGTH AS NUMBER )             -- AVG_COL_LEN
     , CAST( dtd.CHARACTER_MAXIMUM_LENGTH AS NUMBER ) -- CHAR_LENGTH
     , CAST( CASE dtd.STRING_LENGTH_UNIT
                  WHEN 'CHARACTERS' THEN 'C'
                  WHEN 'OCTETS'     THEN 'B'
                  ELSE NULL
                  END
             AS VARCHAR(1 OCTETS) )                    -- CHAR_USED
     , CAST( 'NO' AS VARCHAR(3 OCTETS) )               -- V80_FMT_IMAGE
     , CAST( 'NO' AS VARCHAR(3 OCTETS) )               -- DATA_UPGRADED
     , CAST( CASE WHEN col.IS_UNUSED = TRUE
                  THEN 'YES'
                  ELSE 'NO'
                  END
             AS VARCHAR(3 OCTETS) )                    -- HIDDEN_COLUMN
     , CAST( 'NO' AS VARCHAR(3 OCTETS) )               -- VIRTUAL_COLUMN
     , CAST( col.PHYSICAL_ORDINAL_POSITION AS NUMBER ) -- SEGMENT_COLUMN_ID
     , CAST( col.PHYSICAL_ORDINAL_POSITION AS NUMBER ) -- INTERNAL_COLUMN_ID
     , CAST( 'NONE' AS VARCHAR(32 OCTETS) )            -- HISTOGRAM
     , CAST( '"'   || sch.SCHEMA_NAME || 
             '"."' || tab.TABLE_NAME  || 
             '"."' || col.COLUMN_NAME || '"' 
             AS VARCHAR(4000 OCTETS) )                 -- QUALIFIED_COL_NAME
     , CAST( CASE WHEN col.IS_IDENTITY = TRUE
                  THEN 'YES'
                  ELSE 'NO'
                  END
             AS VARCHAR(3 OCTETS) )                    -- IS_IDENTITY
  FROM  
       DICTIONARY_SCHEMA.WHOLE_COLUMNS AS col
       LEFT OUTER JOIN
       DEFINITION_SCHEMA.STAT_COLUMN   AS cstat
       ON col.COLUMN_ID = cstat.COLUMN_ID
     , DICTIONARY_SCHEMA.WHOLE_DTDS    AS dtd
     , DICTIONARY_SCHEMA.WHOLE_TABLES  AS tab 
     , DEFINITION_SCHEMA.SCHEMATA           AS sch 
     , DEFINITION_SCHEMA.AUTHORIZATIONS     AS auth 
 WHERE 
       col.DTD_IDENTIFIER = dtd.DTD_IDENTIFIER
   AND col.TABLE_ID  = tab.TABLE_ID 
   AND col.SCHEMA_ID = sch.SCHEMA_ID
   AND col.OWNER_ID  = auth.AUTH_ID
   AND EXISTS ( SELECT GRANTEE_ID  
                  FROM DEFINITION_SCHEMA.DATABASE_PRIVILEGES pvdba 
                 WHERE pvdba.PRIVILEGE_TYPE IN ( 'ACCESS CONTROL' ) 
                   AND ( pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                 FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS audba 
                                                WHERE audba.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                             ) 
                      -- OR  
                      -- pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                      --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                       )  
               ) 
ORDER BY 
      col.SCHEMA_ID 
    , col.TABLE_ID 
    , col.PHYSICAL_ORDINAL_POSITION
;

View created.

Elapsed time: 5.22300 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.DBA_TAB_COLS
        IS 'DBA_TAB_COLS describes the columns(including hidden columns) of all tables, views, and clusters in the database.';

Comment created.

Elapsed time: 0.12400 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TAB_COLS.OWNER
        IS 'Owner of the object';

Comment created.

Elapsed time: 0.14900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TAB_COLS.TABLE_SCHEMA
        IS 'Schema of the object';

Comment created.

Elapsed time: 0.14100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TAB_COLS.TABLE_NAME
        IS 'Name of the object';

Comment created.

Elapsed time: 0.14000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TAB_COLS.COLUMN_NAME
        IS 'Column name';

Comment created.

Elapsed time: 0.13700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TAB_COLS.DATA_TYPE
        IS 'Datatype of the column';

Comment created.

Elapsed time: 0.13900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TAB_COLS.DATA_TYPE_MOD
        IS 'Datatype modifier of the column';

Comment created.

Elapsed time: 0.14400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TAB_COLS.DATA_TYPE_OWNER
        IS 'Owner of the datatype of the column';

Comment created.

Elapsed time: 0.13700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TAB_COLS.DATA_LENGTH
        IS 'Length of the column (in bytes)';

Comment created.

Elapsed time: 0.20700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TAB_COLS.DATA_PRECISION
        IS 'Decimal precision for NUMBER datatype; binary precision for FLOAT datatype; NULL for all other datatypes';

Comment created.

Elapsed time: 0.13800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TAB_COLS.DATA_SCALE
        IS 'Digits to the right of the decimal point in a number';

Comment created.

Elapsed time: 0.13500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TAB_COLS.NULLABLE
        IS 'Indicates whether a column allows NULLs.';

Comment created.

Elapsed time: 0.14300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TAB_COLS.COLUMN_ID
        IS 'Sequence number of the column as created';

Comment created.

Elapsed time: 0.13900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TAB_COLS.DEFAULT_LENGTH
        IS 'Length of the default value for the column';

Comment created.

Elapsed time: 0.14500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TAB_COLS.DATA_DEFAULT
        IS 'Default value for the column';

Comment created.

Elapsed time: 0.13600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TAB_COLS.NUM_DISTINCT
        IS 'Number of distinct values in the column';

Comment created.

Elapsed time: 0.13700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TAB_COLS.LOW_VALUE
        IS 'Low value in the column';

Comment created.

Elapsed time: 0.14000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TAB_COLS.HIGH_VALUE
        IS 'High value in the column';

Comment created.

Elapsed time: 0.14500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TAB_COLS.DENSITY
        IS 'If a histogram is available on COLUMN_NAME, then this column displays the selectivity of a value that spans fewer than 2 endpoints in the histogram.';

Comment created.

Elapsed time: 0.13800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TAB_COLS.NUM_NULLS
        IS 'Number of NULLs in the column';

Comment created.

Elapsed time: 0.13500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TAB_COLS.NUM_BUCKETS
        IS 'Number of buckets in the histogram for the column';

Comment created.

Elapsed time: 0.13500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TAB_COLS.LAST_ANALYZED
        IS 'Date on which this column was most recently analyzed';

Comment created.

Elapsed time: 0.13600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TAB_COLS.SAMPLE_SIZE
        IS 'Sample size used in analyzing this column';

Comment created.

Elapsed time: 0.13800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TAB_COLS.CHARACTER_SET_NAME
        IS 'Name of the character set';

Comment created.

Elapsed time: 0.13500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TAB_COLS.CHAR_COL_DECL_LENGTH
        IS 'Declaration length of the character type column';

Comment created.

Elapsed time: 0.13400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TAB_COLS.GLOBAL_STATS
        IS 'For partitioned tables, indicates whether column statistics were collected for the table';

Comment created.

Elapsed time: 0.14900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TAB_COLS.USER_STATS
        IS 'Indicates whether statistics were entered directly by the user (YES) or not (NO)';

Comment created.

Elapsed time: 0.13300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TAB_COLS.AVG_COL_LEN
        IS 'Average length of the column (in bytes)';

Comment created.

Elapsed time: 0.14000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TAB_COLS.CHAR_LENGTH
        IS 'Displays the length of the column in characters.';

Comment created.

Elapsed time: 0.13300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TAB_COLS.CHAR_USED
        IS 'Indicates that the column uses BYTE length semantics (B) or CHAR length semantics (C)';

Comment created.

Elapsed time: 0.14500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TAB_COLS.V80_FMT_IMAGE
        IS 'Indicates whether the column data is in release older image format (YES) or not (NO)';

Comment created.

Elapsed time: 0.14200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TAB_COLS.DATA_UPGRADED
        IS 'Indicates whether the column data has been upgraded to the latest type version format (YES) or not (NO)';

Comment created.

Elapsed time: 0.14300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TAB_COLS.HIDDEN_COLUMN
        IS 'Indicates whether the column is a hidden column (YES) or not (NO)';

Comment created.

Elapsed time: 0.15000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TAB_COLS.VIRTUAL_COLUMN
        IS 'Indicates whether the column is a virtual column (YES) or not (NO)';

Comment created.

Elapsed time: 0.13600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TAB_COLS.SEGMENT_COLUMN_ID
        IS 'Sequence number of the column in the segment';

Comment created.

Elapsed time: 0.13300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TAB_COLS.INTERNAL_COLUMN_ID
        IS 'Internal sequence number of the column';

Comment created.

Elapsed time: 0.13400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TAB_COLS.HISTOGRAM
        IS 'Indicates existence/type of histogram';

Comment created.

Elapsed time: 0.14800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TAB_COLS.QUALIFIED_COL_NAME
        IS 'Qualified column name';

Comment created.

Elapsed time: 0.14100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TAB_COLS.IDENTITY_COLUMN
        IS 'Indicates whether this is an identity column (YES) or not (NO)';

Comment created.

Elapsed time: 0.13700 ms 


--#####################
--# grant view
--#####################

--GRANT SELECT ON TABLE DICTIONARY_SCHEMA.DBA_TAB_COLS TO DBA;
GRANT SELECT ON TABLE DICTIONARY_SCHEMA.DBA_TAB_COLS TO PUBLIC;

Grant succeeded.

Elapsed time: 0.12200 ms 


COMMIT;

Commit complete.

Elapsed time: 0.34500 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS DBA_TAB_COLS;

Synonym dropped.

Elapsed time: 0.06900 ms 

CREATE PUBLIC SYNONYM DBA_TAB_COLS FOR DICTIONARY_SCHEMA.DBA_TAB_COLS;

Synonym created.

Elapsed time: 0.08700 ms 

COMMIT;

Commit complete.

Elapsed time: 0.03700 ms 



--##############################################################
--# DICTIONARY_SCHEMA.ALL_TAB_COLS
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.ALL_TAB_COLS;

View dropped.

Elapsed time: 3.61300 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.ALL_TAB_COLS
(
       OWNER
     , TABLE_SCHEMA
     , TABLE_NAME
     , COLUMN_NAME
     , DATA_TYPE
     , DATA_TYPE_MOD
     , DATA_TYPE_OWNER
     , DATA_LENGTH
     , DATA_PRECISION
     , DATA_SCALE
     , NULLABLE
     , COLUMN_ID
     , DEFAULT_LENGTH
     , DATA_DEFAULT
     , NUM_DISTINCT
     , LOW_VALUE
     , HIGH_VALUE
     , DENSITY
     , NUM_NULLS
     , NUM_BUCKETS
     , LAST_ANALYZED
     , SAMPLE_SIZE
     , CHARACTER_SET_NAME
     , CHAR_COL_DECL_LENGTH
     , GLOBAL_STATS
     , USER_STATS
     , AVG_COL_LEN
     , CHAR_LENGTH
     , CHAR_USED
     , V80_FMT_IMAGE
     , DATA_UPGRADED
     , HIDDEN_COLUMN
     , VIRTUAL_COLUMN
     , SEGMENT_COLUMN_ID
     , INTERNAL_COLUMN_ID
     , HISTOGRAM
     , QUALIFIED_COL_NAME
     , IDENTITY_COLUMN
)
AS
SELECT
       auth.AUTHORIZATION_NAME                       -- OWNER
     , sch.SCHEMA_NAME                               -- TABLE_SCHEMA
     , tab.TABLE_NAME                                -- TABLE_NAME
     , col.COLUMN_NAME                               -- COLUMN_NAME
     , dtd.DATA_TYPE                                 -- DATA_TYPE
     , CAST( NULL AS VARCHAR(3 OCTETS) )             -- DATA_TYPE_MOD
     , CAST( NULL AS VARCHAR(128 OCTETS) )           -- DATA_TYPE_OWNER
     , CAST( dtd.PHYSICAL_MAXIMUM_LENGTH AS NUMBER ) -- DATA_LENGTH
     , CAST( dtd.NUMERIC_PRECISION AS NUMBER )       -- DATA_PRECISION
     , CAST( dtd.NUMERIC_SCALE AS NUMBER )           -- DATA_SCALE
     , CAST( CASE WHEN col.IS_NULLABLE = TRUE 
                  THEN 'Y'
                  ELSE 'N'
                  END
             AS VARCHAR(1 OCTETS) )                    -- NULLABLE
     , CAST( col.LOGICAL_ORDINAL_POSITION AS NUMBER )  -- COLUMN_ID
     , CAST( LENGTH(col.COLUMN_DEFAULT) AS NUMBER )    -- DEFAULT_LENGTH
     , col.COLUMN_DEFAULT                              -- DATA_DEFAULT
     , CAST( cstat.NUM_DISTINCT AS NUMBER )            -- NUM_DISTINCT
     , cstat.MIN_STRING                                -- LOW_VALUE
     , cstat.MAX_STRING                                -- HIGH_VALUE
     , CAST( CASE WHEN cstat.NUM_DISTINCT > 0
                  THEN 1 / cstat.NUM_DISTINCT 
                  ELSE NULL
                  END
             AS NUMBER )                               -- DENSITY
     , CAST( cstat.NUM_NULLS AS NUMBER )               -- NUM_NULLS
     , CAST( NULL AS NUMBER )                          -- NUM_BUCKETS
     , CAST( cstat.ANALYZED_TIME AS TIMESTAMP )        -- LAST_ANALYZED
     , CAST( cstat.NUM_SAMPLE AS NUMBER )              -- SAMPLE_SIZE
     , CAST( NULL AS VARCHAR(128 OCTETS) )             -- CHARACTER_SET_NAME
     , CAST( CASE dtd.STRING_LENGTH_UNIT
                  WHEN 'CHARACTERS' THEN dtd.CHARACTER_MAXIMUM_LENGTH
                  WHEN 'OCTETS'     THEN dtd.CHARACTER_OCTET_LENGTH
                  ELSE NULL
                  END
             AS NUMBER )                              -- CHAR_COL_DECL_LENGTH
     , CAST( 'NO' AS VARCHAR(3 OCTETS) )              -- GLOBAL_STATS
     , CAST( 'NO' AS VARCHAR(3 OCTETS) )              -- USER_STATS
     , CAST( cstat.AVG_LENGTH AS NUMBER )             -- AVG_COL_LEN
     , CAST( dtd.CHARACTER_MAXIMUM_LENGTH AS NUMBER ) -- CHAR_LENGTH
     , CAST( CASE dtd.STRING_LENGTH_UNIT
                  WHEN 'CHARACTERS' THEN 'C'
                  WHEN 'OCTETS'     THEN 'B'
                  ELSE NULL
                  END
             AS VARCHAR(1 OCTETS) )                    -- CHAR_USED
     , CAST( 'NO' AS VARCHAR(3 OCTETS) )               -- V80_FMT_IMAGE
     , CAST( 'NO' AS VARCHAR(3 OCTETS) )               -- DATA_UPGRADED
     , CAST( CASE WHEN col.IS_UNUSED = TRUE
                  THEN 'YES'
                  ELSE 'NO'
                  END
             AS VARCHAR(3 OCTETS) )                    -- HIDDEN_COLUMN
     , CAST( 'NO' AS VARCHAR(3 OCTETS) )               -- VIRTUAL_COLUMN
     , CAST( col.PHYSICAL_ORDINAL_POSITION AS NUMBER ) -- SEGMENT_COLUMN_ID
     , CAST( col.PHYSICAL_ORDINAL_POSITION AS NUMBER ) -- INTERNAL_COLUMN_ID
     , CAST( 'NONE' AS VARCHAR(32 OCTETS) )            -- HISTOGRAM
     , CAST( '"'   || sch.SCHEMA_NAME || 
             '"."' || tab.TABLE_NAME  || 
             '"."' || col.COLUMN_NAME || '"' 
             AS VARCHAR(4000 OCTETS) )                 -- QUALIFIED_COL_NAME
     , CAST( CASE WHEN col.IS_IDENTITY = TRUE
                  THEN 'YES'
                  ELSE 'NO'
                  END
             AS VARCHAR(3 OCTETS) )                    -- IS_IDENTITY
  FROM  
       DICTIONARY_SCHEMA.WHOLE_COLUMNS AS col
       LEFT OUTER JOIN
       DEFINITION_SCHEMA.STAT_COLUMN   AS cstat
       ON col.COLUMN_ID = cstat.COLUMN_ID
     , DICTIONARY_SCHEMA.WHOLE_DTDS    AS dtd
     , DICTIONARY_SCHEMA.WHOLE_TABLES  AS tab 
     , DEFINITION_SCHEMA.SCHEMATA           AS sch 
     , DEFINITION_SCHEMA.AUTHORIZATIONS     AS auth 
 WHERE 
       col.DTD_IDENTIFIER = dtd.DTD_IDENTIFIER
   AND col.TABLE_ID  = tab.TABLE_ID 
   AND col.SCHEMA_ID = sch.SCHEMA_ID
   AND col.OWNER_ID  = auth.AUTH_ID
   AND ( col.COLUMN_ID IN ( SELECT pvcol.COLUMN_ID 
                              FROM DEFINITION_SCHEMA.COLUMN_PRIVILEGES AS pvcol 
                             WHERE ( pvcol.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                             FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS aucol 
                                                            WHERE aucol.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                         ) 
                                  -- OR  
                                  -- pvcol.GRANTEE_ID IN ( SELECT AUTH_ID 
                                  --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                   )
                          ) 
         OR 
         tab.TABLE_ID IN ( SELECT pvtab.TABLE_ID 
                             FROM DEFINITION_SCHEMA.TABLE_PRIVILEGES AS pvtab 
                            WHERE ( pvtab.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                            FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS autab 
                                                           WHERE autab.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                        ) 
                                 -- OR  
                                 -- pvtab.GRANTEE_ID IN ( SELECT AUTH_ID 
                                 --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                  )
                          ) 
         OR 
         tab.SCHEMA_ID IN ( SELECT pvsch.SCHEMA_ID 
                              FROM DEFINITION_SCHEMA.SCHEMA_PRIVILEGES AS pvsch 
                             WHERE pvsch.PRIVILEGE_TYPE IN ( 'CONTROL SCHEMA', 'ALTER TABLE', 'DROP TABLE', 
                                                             'SELECT TABLE', 'INSERT TABLE', 'DELETE TABLE', 'UPDATE TABLE', 'LOCK TABLE' ) 
                               AND ( pvsch.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                             FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS ausch 
                                                            WHERE ausch.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                         ) 
                                  -- OR  
                                  -- pvsch.GRANTEE_ID IN ( SELECT AUTH_ID 
                                  --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                   )
                          ) 
         OR 
         EXISTS ( SELECT GRANTEE_ID  
                    FROM DEFINITION_SCHEMA.DATABASE_PRIVILEGES pvdba 
                   WHERE pvdba.PRIVILEGE_TYPE IN ( 'ALTER ANY TABLE', 'DROP ANY TABLE', 
                                                   'SELECT ANY TABLE', 'INSERT ANY TABLE', 'DELETE ANY TABLE', 'UPDATE ANY TABLE', 'LOCK ANY TABLE' ) 
                     AND ( pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                   FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS audba 
                                                  WHERE audba.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                ) 
                        -- OR  
                        -- pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                        --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                         )  
                ) 
       ) 
ORDER BY 
      col.SCHEMA_ID 
    , col.TABLE_ID 
    , col.PHYSICAL_ORDINAL_POSITION
;

View created.

Elapsed time: 5.31400 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.ALL_TAB_COLS
        IS 'ALL_TAB_COLS describes the columns(including hidden columns) of the tables, views, and clusters accessible to the current user.';

Comment created.

Elapsed time: 0.12700 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_COLS.OWNER
        IS 'Owner of the object';

Comment created.

Elapsed time: 0.14700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_COLS.TABLE_SCHEMA
        IS 'Schema of the object';

Comment created.

Elapsed time: 0.14000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_COLS.TABLE_NAME
        IS 'Name of the object';

Comment created.

Elapsed time: 0.14300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_COLS.COLUMN_NAME
        IS 'Column name';

Comment created.

Elapsed time: 0.14000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_COLS.DATA_TYPE
        IS 'Datatype of the column';

Comment created.

Elapsed time: 0.13600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_COLS.DATA_TYPE_MOD
        IS 'Datatype modifier of the column';

Comment created.

Elapsed time: 0.13400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_COLS.DATA_TYPE_OWNER
        IS 'Owner of the datatype of the column';

Comment created.

Elapsed time: 0.14100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_COLS.DATA_LENGTH
        IS 'Length of the column (in bytes)';

Comment created.

Elapsed time: 0.13800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_COLS.DATA_PRECISION
        IS 'Decimal precision for NUMBER datatype; binary precision for FLOAT datatype; NULL for all other datatypes';

Comment created.

Elapsed time: 0.14000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_COLS.DATA_SCALE
        IS 'Digits to the right of the decimal point in a number';

Comment created.

Elapsed time: 0.13500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_COLS.NULLABLE
        IS 'Indicates whether a column allows NULLs.';

Comment created.

Elapsed time: 0.15400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_COLS.COLUMN_ID
        IS 'Sequence number of the column as created';

Comment created.

Elapsed time: 0.21300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_COLS.DEFAULT_LENGTH
        IS 'Length of the default value for the column';

Comment created.

Elapsed time: 0.13800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_COLS.DATA_DEFAULT
        IS 'Default value for the column';

Comment created.

Elapsed time: 0.13600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_COLS.NUM_DISTINCT
        IS 'Number of distinct values in the column';

Comment created.

Elapsed time: 0.13800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_COLS.LOW_VALUE
        IS 'Low value in the column';

Comment created.

Elapsed time: 0.13500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_COLS.HIGH_VALUE
        IS 'High value in the column';

Comment created.

Elapsed time: 0.14100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_COLS.DENSITY
        IS 'If a histogram is available on COLUMN_NAME, then this column displays the selectivity of a value that spans fewer than 2 endpoints in the histogram.';

Comment created.

Elapsed time: 0.17600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_COLS.NUM_NULLS
        IS 'Number of NULLs in the column';

Comment created.

Elapsed time: 0.13800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_COLS.NUM_BUCKETS
        IS 'Number of buckets in the histogram for the column';

Comment created.

Elapsed time: 0.14100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_COLS.LAST_ANALYZED
        IS 'Date on which this column was most recently analyzed';

Comment created.

Elapsed time: 0.14700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_COLS.SAMPLE_SIZE
        IS 'Sample size used in analyzing this column';

Comment created.

Elapsed time: 0.18000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_COLS.CHARACTER_SET_NAME
        IS 'Name of the character set';

Comment created.

Elapsed time: 0.13800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_COLS.CHAR_COL_DECL_LENGTH
        IS 'Declaration length of the character type column';

Comment created.

Elapsed time: 0.13800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_COLS.GLOBAL_STATS
        IS 'For partitioned tables, indicates whether column statistics were collected for the table';

Comment created.

Elapsed time: 0.31100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_COLS.USER_STATS
        IS 'Indicates whether statistics were entered directly by the user (YES) or not (NO)';

Comment created.

Elapsed time: 0.14800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_COLS.AVG_COL_LEN
        IS 'Average length of the column (in bytes)';

Comment created.

Elapsed time: 0.14000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_COLS.CHAR_LENGTH
        IS 'Displays the length of the column in characters.';

Comment created.

Elapsed time: 0.13600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_COLS.CHAR_USED
        IS 'Indicates that the column uses BYTE length semantics (B) or CHAR length semantics (C)';

Comment created.

Elapsed time: 0.13600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_COLS.V80_FMT_IMAGE
        IS 'Indicates whether the column data is in release older image format (YES) or not (NO)';

Comment created.

Elapsed time: 0.13600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_COLS.DATA_UPGRADED
        IS 'Indicates whether the column data has been upgraded to the latest type version format (YES) or not (NO)';

Comment created.

Elapsed time: 0.13500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_COLS.HIDDEN_COLUMN
        IS 'Indicates whether the column is a hidden column (YES) or not (NO)';

Comment created.

Elapsed time: 0.13600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_COLS.VIRTUAL_COLUMN
        IS 'Indicates whether the column is a virtual column (YES) or not (NO)';

Comment created.

Elapsed time: 0.13500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_COLS.SEGMENT_COLUMN_ID
        IS 'Sequence number of the column in the segment';

Comment created.

Elapsed time: 0.13700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_COLS.INTERNAL_COLUMN_ID
        IS 'Internal sequence number of the column';

Comment created.

Elapsed time: 0.13600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_COLS.HISTOGRAM
        IS 'Indicates existence/type of histogram';

Comment created.

Elapsed time: 0.16400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_COLS.QUALIFIED_COL_NAME
        IS 'Qualified column name';

Comment created.

Elapsed time: 0.15500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_COLS.IDENTITY_COLUMN
        IS 'Indicates whether this is an identity column (YES) or not (NO)';

Comment created.

Elapsed time: 0.13900 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.ALL_TAB_COLS TO PUBLIC;

Grant succeeded.

Elapsed time: 0.11700 ms 


COMMIT;

Commit complete.

Elapsed time: 0.35000 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS ALL_TAB_COLS;

Synonym dropped.

Elapsed time: 0.07900 ms 

CREATE PUBLIC SYNONYM ALL_TAB_COLS FOR DICTIONARY_SCHEMA.ALL_TAB_COLS;

Synonym created.

Elapsed time: 0.08600 ms 

COMMIT;

Commit complete.

Elapsed time: 0.03800 ms 


--##############################################################
--# DICTIONARY_SCHEMA.USER_TAB_COLS
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.USER_TAB_COLS;

View dropped.

Elapsed time: 3.21600 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.USER_TAB_COLS
(
       TABLE_SCHEMA
     , TABLE_NAME
     , COLUMN_NAME
     , DATA_TYPE
     , DATA_TYPE_MOD
     , DATA_TYPE_OWNER
     , DATA_LENGTH
     , DATA_PRECISION
     , DATA_SCALE
     , NULLABLE
     , COLUMN_ID
     , DEFAULT_LENGTH
     , DATA_DEFAULT
     , NUM_DISTINCT
     , LOW_VALUE
     , HIGH_VALUE
     , DENSITY
     , NUM_NULLS
     , NUM_BUCKETS
     , LAST_ANALYZED
     , SAMPLE_SIZE
     , CHARACTER_SET_NAME
     , CHAR_COL_DECL_LENGTH
     , GLOBAL_STATS
     , USER_STATS
     , AVG_COL_LEN
     , CHAR_LENGTH
     , CHAR_USED
     , V80_FMT_IMAGE
     , DATA_UPGRADED
     , HIDDEN_COLUMN
     , VIRTUAL_COLUMN
     , SEGMENT_COLUMN_ID
     , INTERNAL_COLUMN_ID
     , HISTOGRAM
     , QUALIFIED_COL_NAME
     , IDENTITY_COLUMN
)
AS
SELECT
       atc.TABLE_SCHEMA
     , atc.TABLE_NAME
     , atc.COLUMN_NAME
     , atc.DATA_TYPE
     , atc.DATA_TYPE_MOD
     , atc.DATA_TYPE_OWNER
     , atc.DATA_LENGTH
     , atc.DATA_PRECISION
     , atc.DATA_SCALE
     , atc.NULLABLE
     , atc.COLUMN_ID
     , atc.DEFAULT_LENGTH
     , atc.DATA_DEFAULT
     , atc.NUM_DISTINCT
     , atc.LOW_VALUE
     , atc.HIGH_VALUE
     , atc.DENSITY
     , atc.NUM_NULLS
     , atc.NUM_BUCKETS
     , atc.LAST_ANALYZED
     , atc.SAMPLE_SIZE
     , atc.CHARACTER_SET_NAME
     , atc.CHAR_COL_DECL_LENGTH
     , atc.GLOBAL_STATS
     , atc.USER_STATS
     , atc.AVG_COL_LEN
     , atc.CHAR_LENGTH
     , atc.CHAR_USED
     , atc.V80_FMT_IMAGE
     , atc.DATA_UPGRADED
     , atc.HIDDEN_COLUMN
     , atc.VIRTUAL_COLUMN
     , atc.SEGMENT_COLUMN_ID
     , atc.INTERNAL_COLUMN_ID
     , atc.HISTOGRAM
     , atc.QUALIFIED_COL_NAME
     , atc.IDENTITY_COLUMN
  FROM  
       DICTIONARY_SCHEMA.ALL_TAB_COLS AS atc
 WHERE 
       atc.OWNER = CURRENT_USER
;

View created.

Elapsed time: 5.37600 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.USER_TAB_COLS
        IS 'USER_TAB_COLS describes the columns(including hidden columns) of the tables, views, and clusters owned by the current user.';

Comment created.

Elapsed time: 0.12300 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_COLS.TABLE_SCHEMA
        IS 'Schema of the object';

Comment created.

Elapsed time: 0.14400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_COLS.TABLE_NAME
        IS 'Name of the object';

Comment created.

Elapsed time: 0.14700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_COLS.COLUMN_NAME
        IS 'Column name';

Comment created.

Elapsed time: 0.14100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_COLS.DATA_TYPE
        IS 'Datatype of the column';

Comment created.

Elapsed time: 0.13900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_COLS.DATA_TYPE_MOD
        IS 'Datatype modifier of the column';

Comment created.

Elapsed time: 0.15500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_COLS.DATA_TYPE_OWNER
        IS 'Owner of the datatype of the column';

Comment created.

Elapsed time: 0.15100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_COLS.DATA_LENGTH
        IS 'Length of the column (in bytes)';

Comment created.

Elapsed time: 0.14300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_COLS.DATA_PRECISION
        IS 'Decimal precision for NUMBER datatype; binary precision for FLOAT datatype; NULL for all other datatypes';

Comment created.

Elapsed time: 0.14000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_COLS.DATA_SCALE
        IS 'Digits to the right of the decimal point in a number';

Comment created.

Elapsed time: 0.13700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_COLS.NULLABLE
        IS 'Indicates whether a column allows NULLs.';

Comment created.

Elapsed time: 0.13700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_COLS.COLUMN_ID
        IS 'Sequence number of the column as created';

Comment created.

Elapsed time: 0.13600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_COLS.DEFAULT_LENGTH
        IS 'Length of the default value for the column';

Comment created.

Elapsed time: 0.15100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_COLS.DATA_DEFAULT
        IS 'Default value for the column';

Comment created.

Elapsed time: 0.13600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_COLS.NUM_DISTINCT
        IS 'Number of distinct values in the column';

Comment created.

Elapsed time: 0.13600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_COLS.LOW_VALUE
        IS 'Low value in the column';

Comment created.

Elapsed time: 0.13900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_COLS.HIGH_VALUE
        IS 'High value in the column';

Comment created.

Elapsed time: 0.13500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_COLS.DENSITY
        IS 'If a histogram is available on COLUMN_NAME, then this column displays the selectivity of a value that spans fewer than 2 endpoints in the histogram.';

Comment created.

Elapsed time: 0.14200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_COLS.NUM_NULLS
        IS 'Number of NULLs in the column';

Comment created.

Elapsed time: 0.13600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_COLS.NUM_BUCKETS
        IS 'Number of buckets in the histogram for the column';

Comment created.

Elapsed time: 0.13500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_COLS.LAST_ANALYZED
        IS 'Date on which this column was most recently analyzed';

Comment created.

Elapsed time: 0.16100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_COLS.SAMPLE_SIZE
        IS 'Sample size used in analyzing this column';

Comment created.

Elapsed time: 0.13700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_COLS.CHARACTER_SET_NAME
        IS 'Name of the character set';

Comment created.

Elapsed time: 0.13600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_COLS.CHAR_COL_DECL_LENGTH
        IS 'Declaration length of the character type column';

Comment created.

Elapsed time: 0.14400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_COLS.GLOBAL_STATS
        IS 'For partitioned tables, indicates whether column statistics were collected for the table';

Comment created.

Elapsed time: 0.13600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_COLS.USER_STATS
        IS 'Indicates whether statistics were entered directly by the user (YES) or not (NO)';

Comment created.

Elapsed time: 0.13400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_COLS.AVG_COL_LEN
        IS 'Average length of the column (in bytes)';

Comment created.

Elapsed time: 0.13700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_COLS.CHAR_LENGTH
        IS 'Displays the length of the column in characters.';

Comment created.

Elapsed time: 0.13600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_COLS.CHAR_USED
        IS 'Indicates that the column uses BYTE length semantics (B) or CHAR length semantics (C)';

Comment created.

Elapsed time: 0.14400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_COLS.V80_FMT_IMAGE
        IS 'Indicates whether the column data is in release older image format (YES) or not (NO)';

Comment created.

Elapsed time: 0.13400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_COLS.DATA_UPGRADED
        IS 'Indicates whether the column data has been upgraded to the latest type version format (YES) or not (NO)';

Comment created.

Elapsed time: 0.14600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_COLS.HIDDEN_COLUMN
        IS 'Indicates whether the column is a hidden column (YES) or not (NO)';

Comment created.

Elapsed time: 0.14700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_COLS.VIRTUAL_COLUMN
        IS 'Indicates whether the column is a virtual column (YES) or not (NO)';

Comment created.

Elapsed time: 0.13500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_COLS.SEGMENT_COLUMN_ID
        IS 'Sequence number of the column in the segment';

Comment created.

Elapsed time: 0.14200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_COLS.INTERNAL_COLUMN_ID
        IS 'Internal sequence number of the column';

Comment created.

Elapsed time: 0.16100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_COLS.HISTOGRAM
        IS 'Indicates existence/type of histogram';

Comment created.

Elapsed time: 0.13600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_COLS.QUALIFIED_COL_NAME
        IS 'Qualified column name';

Comment created.

Elapsed time: 0.14100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_COLS.IDENTITY_COLUMN
        IS 'Indicates whether this is an identity column (YES) or not (NO)';

Comment created.

Elapsed time: 0.13500 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.USER_TAB_COLS TO PUBLIC;

Grant succeeded.

Elapsed time: 0.11800 ms 


COMMIT;

Commit complete.

Elapsed time: 0.34000 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS USER_TAB_COLS;

Synonym dropped.

Elapsed time: 0.08700 ms 

CREATE PUBLIC SYNONYM USER_TAB_COLS FOR DICTIONARY_SCHEMA.USER_TAB_COLS;

Synonym created.

Elapsed time: 0.09000 ms 

COMMIT;

Commit complete.

Elapsed time: 0.03700 ms 


--##############################################################
--# DICTIONARY_SCHEMA.DBA_TAB_COLUMNS
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.DBA_TAB_COLUMNS;

View dropped.

Elapsed time: 2.95000 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.DBA_TAB_COLUMNS
(
       OWNER
     , TABLE_SCHEMA
     , TABLE_NAME
     , COLUMN_NAME
     , DATA_TYPE
     , DATA_TYPE_MOD
     , DATA_TYPE_OWNER
     , DATA_LENGTH
     , DATA_PRECISION
     , DATA_SCALE
     , NULLABLE
     , COLUMN_ID
     , DEFAULT_LENGTH
     , DATA_DEFAULT
     , NUM_DISTINCT
     , LOW_VALUE
     , HIGH_VALUE
     , DENSITY
     , NUM_NULLS
     , NUM_BUCKETS
     , LAST_ANALYZED
     , SAMPLE_SIZE
     , CHARACTER_SET_NAME
     , CHAR_COL_DECL_LENGTH
     , GLOBAL_STATS
     , USER_STATS
     , AVG_COL_LEN
     , CHAR_LENGTH
     , CHAR_USED
     , V80_FMT_IMAGE
     , DATA_UPGRADED
     , HISTOGRAM
     , IDENTITY_COLUMN
)
AS
SELECT
       dtc.OWNER
     , dtc.TABLE_SCHEMA
     , dtc.TABLE_NAME
     , dtc.COLUMN_NAME
     , dtc.DATA_TYPE
     , dtc.DATA_TYPE_MOD
     , dtc.DATA_TYPE_OWNER
     , dtc.DATA_LENGTH
     , dtc.DATA_PRECISION
     , dtc.DATA_SCALE
     , dtc.NULLABLE
     , dtc.COLUMN_ID
     , dtc.DEFAULT_LENGTH
     , dtc.DATA_DEFAULT
     , dtc.NUM_DISTINCT
     , dtc.LOW_VALUE
     , dtc.HIGH_VALUE
     , dtc.DENSITY
     , dtc.NUM_NULLS
     , dtc.NUM_BUCKETS
     , dtc.LAST_ANALYZED
     , dtc.SAMPLE_SIZE
     , dtc.CHARACTER_SET_NAME
     , dtc.CHAR_COL_DECL_LENGTH
     , dtc.GLOBAL_STATS
     , dtc.USER_STATS
     , dtc.AVG_COL_LEN
     , dtc.CHAR_LENGTH
     , dtc.CHAR_USED
     , dtc.V80_FMT_IMAGE
     , dtc.DATA_UPGRADED
     , dtc.HISTOGRAM
     , dtc.IDENTITY_COLUMN
  FROM  
       DICTIONARY_SCHEMA.DBA_TAB_COLS AS dtc
 WHERE 
       dtc.HIDDEN_COLUMN = 'NO' 
;

View created.

Elapsed time: 4.74700 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.DBA_TAB_COLUMNS
        IS 'DBA_TAB_COLUMNS describes the columns of the tables, views, and clusters accessible to the current user.';

Comment created.

Elapsed time: 0.12400 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TAB_COLUMNS.OWNER
        IS 'Owner of the object';

Comment created.

Elapsed time: 0.14700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TAB_COLUMNS.TABLE_SCHEMA
        IS 'Schema of the object';

Comment created.

Elapsed time: 0.13700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TAB_COLUMNS.TABLE_NAME
        IS 'Name of the object';

Comment created.

Elapsed time: 0.14100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TAB_COLUMNS.COLUMN_NAME
        IS 'Column name';

Comment created.

Elapsed time: 0.13800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TAB_COLUMNS.DATA_TYPE
        IS 'Datatype of the column';

Comment created.

Elapsed time: 0.15700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TAB_COLUMNS.DATA_TYPE_MOD
        IS 'Datatype modifier of the column';

Comment created.

Elapsed time: 0.14000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TAB_COLUMNS.DATA_TYPE_OWNER
        IS 'Owner of the datatype of the column';

Comment created.

Elapsed time: 0.14100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TAB_COLUMNS.DATA_LENGTH
        IS 'Length of the column (in bytes)';

Comment created.

Elapsed time: 0.13700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TAB_COLUMNS.DATA_PRECISION
        IS 'Decimal precision for NUMBER datatype; binary precision for FLOAT datatype; NULL for all other datatypes';

Comment created.

Elapsed time: 0.14200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TAB_COLUMNS.DATA_SCALE
        IS 'Digits to the right of the decimal point in a number';

Comment created.

Elapsed time: 0.14300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TAB_COLUMNS.NULLABLE
        IS 'Indicates whether a column allows NULLs.';

Comment created.

Elapsed time: 0.13800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TAB_COLUMNS.COLUMN_ID
        IS 'Sequence number of the column as created';

Comment created.

Elapsed time: 0.13500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TAB_COLUMNS.DEFAULT_LENGTH
        IS 'Length of the default value for the column';

Comment created.

Elapsed time: 0.13400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TAB_COLUMNS.DATA_DEFAULT
        IS 'Default value for the column';

Comment created.

Elapsed time: 0.13200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TAB_COLUMNS.NUM_DISTINCT
        IS 'Number of distinct values in the column';

Comment created.

Elapsed time: 0.15700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TAB_COLUMNS.LOW_VALUE
        IS 'Low value in the column';

Comment created.

Elapsed time: 0.13300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TAB_COLUMNS.HIGH_VALUE
        IS 'High value in the column';

Comment created.

Elapsed time: 0.13800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TAB_COLUMNS.DENSITY
        IS 'If a histogram is available on COLUMN_NAME, then this column displays the selectivity of a value that spans fewer than 2 endpoints in the histogram.';

Comment created.

Elapsed time: 0.13800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TAB_COLUMNS.NUM_NULLS
        IS 'Number of NULLs in the column';

Comment created.

Elapsed time: 0.13400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TAB_COLUMNS.NUM_BUCKETS
        IS 'Number of buckets in the histogram for the column';

Comment created.

Elapsed time: 0.14300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TAB_COLUMNS.LAST_ANALYZED
        IS 'Date on which this column was most recently analyzed';

Comment created.

Elapsed time: 0.14100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TAB_COLUMNS.SAMPLE_SIZE
        IS 'Sample size used in analyzing this column';

Comment created.

Elapsed time: 0.14800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TAB_COLUMNS.CHARACTER_SET_NAME
        IS 'Name of the character set';

Comment created.

Elapsed time: 0.13500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TAB_COLUMNS.CHAR_COL_DECL_LENGTH
        IS 'Declaration length of the character type column';

Comment created.

Elapsed time: 0.13800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TAB_COLUMNS.GLOBAL_STATS
        IS 'For partitioned tables, indicates whether column statistics were collected for the table';

Comment created.

Elapsed time: 0.14100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TAB_COLUMNS.USER_STATS
        IS 'Indicates whether statistics were entered directly by the user (YES) or not (NO)';

Comment created.

Elapsed time: 0.13900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TAB_COLUMNS.AVG_COL_LEN
        IS 'Average length of the column (in bytes)';

Comment created.

Elapsed time: 0.22500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TAB_COLUMNS.CHAR_LENGTH
        IS 'Displays the length of the column in characters.';

Comment created.

Elapsed time: 0.13600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TAB_COLUMNS.CHAR_USED
        IS 'Indicates that the column uses BYTE length semantics (B) or CHAR length semantics (C)';

Comment created.

Elapsed time: 0.13700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TAB_COLUMNS.V80_FMT_IMAGE
        IS 'Indicates whether the column data is in release older image format (YES) or not (NO)';

Comment created.

Elapsed time: 0.14300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TAB_COLUMNS.DATA_UPGRADED
        IS 'Indicates whether the column data has been upgraded to the latest type version format (YES) or not (NO)';

Comment created.

Elapsed time: 0.13900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TAB_COLUMNS.HISTOGRAM
        IS 'Indicates existence/type of histogram';

Comment created.

Elapsed time: 0.13400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TAB_COLUMNS.IDENTITY_COLUMN
        IS 'Indicates whether this is an identity column (YES) or not (NO)';

Comment created.

Elapsed time: 0.13700 ms 


--#####################
--# grant view
--#####################

--GRANT SELECT ON TABLE DICTIONARY_SCHEMA.DBA_TAB_COLUMNS TO DBA;
GRANT SELECT ON TABLE DICTIONARY_SCHEMA.DBA_TAB_COLUMNS TO PUBLIC;

Grant succeeded.

Elapsed time: 0.12000 ms 


COMMIT;

Commit complete.

Elapsed time: 0.31800 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS DBA_TAB_COLUMNS;

Synonym dropped.

Elapsed time: 0.07200 ms 

CREATE PUBLIC SYNONYM DBA_TAB_COLUMNS FOR DICTIONARY_SCHEMA.DBA_TAB_COLUMNS;

Synonym created.

Elapsed time: 0.08400 ms 

COMMIT;

Commit complete.

Elapsed time: 0.04300 ms 


--##############################################################
--# DICTIONARY_SCHEMA.ALL_TAB_COLUMNS
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.ALL_TAB_COLUMNS;

View dropped.

Elapsed time: 2.97500 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.ALL_TAB_COLUMNS
(
       OWNER
     , TABLE_SCHEMA
     , TABLE_NAME
     , COLUMN_NAME
     , DATA_TYPE
     , DATA_TYPE_MOD
     , DATA_TYPE_OWNER
     , DATA_LENGTH
     , DATA_PRECISION
     , DATA_SCALE
     , NULLABLE
     , COLUMN_ID
     , DEFAULT_LENGTH
     , DATA_DEFAULT
     , NUM_DISTINCT
     , LOW_VALUE
     , HIGH_VALUE
     , DENSITY
     , NUM_NULLS
     , NUM_BUCKETS
     , LAST_ANALYZED
     , SAMPLE_SIZE
     , CHARACTER_SET_NAME
     , CHAR_COL_DECL_LENGTH
     , GLOBAL_STATS
     , USER_STATS
     , AVG_COL_LEN
     , CHAR_LENGTH
     , CHAR_USED
     , V80_FMT_IMAGE
     , DATA_UPGRADED
     , HISTOGRAM
     , IDENTITY_COLUMN
)
AS
SELECT
       atc.OWNER
     , atc.TABLE_SCHEMA
     , atc.TABLE_NAME
     , atc.COLUMN_NAME
     , atc.DATA_TYPE
     , atc.DATA_TYPE_MOD
     , atc.DATA_TYPE_OWNER
     , atc.DATA_LENGTH
     , atc.DATA_PRECISION
     , atc.DATA_SCALE
     , atc.NULLABLE
     , atc.COLUMN_ID
     , atc.DEFAULT_LENGTH
     , atc.DATA_DEFAULT
     , atc.NUM_DISTINCT
     , atc.LOW_VALUE
     , atc.HIGH_VALUE
     , atc.DENSITY
     , atc.NUM_NULLS
     , atc.NUM_BUCKETS
     , atc.LAST_ANALYZED
     , atc.SAMPLE_SIZE
     , atc.CHARACTER_SET_NAME
     , atc.CHAR_COL_DECL_LENGTH
     , atc.GLOBAL_STATS
     , atc.USER_STATS
     , atc.AVG_COL_LEN
     , atc.CHAR_LENGTH
     , atc.CHAR_USED
     , atc.V80_FMT_IMAGE
     , atc.DATA_UPGRADED
     , atc.HISTOGRAM
     , atc.IDENTITY_COLUMN
  FROM  
       DICTIONARY_SCHEMA.ALL_TAB_COLS AS atc
 WHERE 
       atc.HIDDEN_COLUMN = 'NO' 
;

View created.

Elapsed time: 5.10600 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.ALL_TAB_COLUMNS
        IS 'ALL_TAB_COLUMNS describes the columns of the tables, views, and clusters accessible to the current user.';

Comment created.

Elapsed time: 0.13600 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_COLUMNS.OWNER
        IS 'Owner of the object';

Comment created.

Elapsed time: 0.15000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_COLUMNS.TABLE_SCHEMA
        IS 'Schema of the object';

Comment created.

Elapsed time: 0.14800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_COLUMNS.TABLE_NAME
        IS 'Name of the object';

Comment created.

Elapsed time: 0.17100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_COLUMNS.COLUMN_NAME
        IS 'Column name';

Comment created.

Elapsed time: 0.14000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_COLUMNS.DATA_TYPE
        IS 'Datatype of the column';

Comment created.

Elapsed time: 0.13500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_COLUMNS.DATA_TYPE_MOD
        IS 'Datatype modifier of the column';

Comment created.

Elapsed time: 0.16000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_COLUMNS.DATA_TYPE_OWNER
        IS 'Owner of the datatype of the column';

Comment created.

Elapsed time: 0.13600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_COLUMNS.DATA_LENGTH
        IS 'Length of the column (in bytes)';

Comment created.

Elapsed time: 0.13500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_COLUMNS.DATA_PRECISION
        IS 'Decimal precision for NUMBER datatype; binary precision for FLOAT datatype; NULL for all other datatypes';

Comment created.

Elapsed time: 0.14200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_COLUMNS.DATA_SCALE
        IS 'Digits to the right of the decimal point in a number';

Comment created.

Elapsed time: 0.14300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_COLUMNS.NULLABLE
        IS 'Indicates whether a column allows NULLs.';

Comment created.

Elapsed time: 0.15400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_COLUMNS.COLUMN_ID
        IS 'Sequence number of the column as created';

Comment created.

Elapsed time: 0.13600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_COLUMNS.DEFAULT_LENGTH
        IS 'Length of the default value for the column';

Comment created.

Elapsed time: 0.13500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_COLUMNS.DATA_DEFAULT
        IS 'Default value for the column';

Comment created.

Elapsed time: 0.13600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_COLUMNS.NUM_DISTINCT
        IS 'Number of distinct values in the column';

Comment created.

Elapsed time: 0.13800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_COLUMNS.LOW_VALUE
        IS 'Low value in the column';

Comment created.

Elapsed time: 0.14200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_COLUMNS.HIGH_VALUE
        IS 'High value in the column';

Comment created.

Elapsed time: 0.13600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_COLUMNS.DENSITY
        IS 'If a histogram is available on COLUMN_NAME, then this column displays the selectivity of a value that spans fewer than 2 endpoints in the histogram.';

Comment created.

Elapsed time: 0.14100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_COLUMNS.NUM_NULLS
        IS 'Number of NULLs in the column';

Comment created.

Elapsed time: 0.18200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_COLUMNS.NUM_BUCKETS
        IS 'Number of buckets in the histogram for the column';

Comment created.

Elapsed time: 0.13800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_COLUMNS.LAST_ANALYZED
        IS 'Date on which this column was most recently analyzed';

Comment created.

Elapsed time: 0.15800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_COLUMNS.SAMPLE_SIZE
        IS 'Sample size used in analyzing this column';

Comment created.

Elapsed time: 0.13500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_COLUMNS.CHARACTER_SET_NAME
        IS 'Name of the character set';

Comment created.

Elapsed time: 0.13400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_COLUMNS.CHAR_COL_DECL_LENGTH
        IS 'Declaration length of the character type column';

Comment created.

Elapsed time: 0.14000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_COLUMNS.GLOBAL_STATS
        IS 'For partitioned tables, indicates whether column statistics were collected for the table';

Comment created.

Elapsed time: 0.14000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_COLUMNS.USER_STATS
        IS 'Indicates whether statistics were entered directly by the user (YES) or not (NO)';

Comment created.

Elapsed time: 0.13400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_COLUMNS.AVG_COL_LEN
        IS 'Average length of the column (in bytes)';

Comment created.

Elapsed time: 0.13600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_COLUMNS.CHAR_LENGTH
        IS 'Displays the length of the column in characters.';

Comment created.

Elapsed time: 0.13500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_COLUMNS.CHAR_USED
        IS 'Indicates that the column uses BYTE length semantics (B) or CHAR length semantics (C)';

Comment created.

Elapsed time: 0.14300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_COLUMNS.V80_FMT_IMAGE
        IS 'Indicates whether the column data is in release older image format (YES) or not (NO)';

Comment created.

Elapsed time: 0.13600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_COLUMNS.DATA_UPGRADED
        IS 'Indicates whether the column data has been upgraded to the latest type version format (YES) or not (NO)';

Comment created.

Elapsed time: 0.13400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_COLUMNS.HISTOGRAM
        IS 'Indicates existence/type of histogram';

Comment created.

Elapsed time: 0.13100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_COLUMNS.IDENTITY_COLUMN
        IS 'Indicates whether this is an identity column (YES) or not (NO)';

Comment created.

Elapsed time: 0.14900 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.ALL_TAB_COLUMNS TO PUBLIC;

Grant succeeded.

Elapsed time: 0.12100 ms 


COMMIT;

Commit complete.

Elapsed time: 0.31100 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS ALL_TAB_COLUMNS;

Synonym dropped.

Elapsed time: 0.07000 ms 

CREATE PUBLIC SYNONYM ALL_TAB_COLUMNS FOR DICTIONARY_SCHEMA.ALL_TAB_COLUMNS;

Synonym created.

Elapsed time: 0.08400 ms 

COMMIT;

Commit complete.

Elapsed time: 0.03700 ms 


--##############################################################
--# DICTIONARY_SCHEMA.USER_TAB_COLUMNS
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.USER_TAB_COLUMNS;

View dropped.

Elapsed time: 3.03000 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.USER_TAB_COLUMNS
(
       TABLE_SCHEMA
     , TABLE_NAME
     , COLUMN_NAME
     , DATA_TYPE
     , DATA_TYPE_MOD
     , DATA_TYPE_OWNER
     , DATA_LENGTH
     , DATA_PRECISION
     , DATA_SCALE
     , NULLABLE
     , COLUMN_ID
     , DEFAULT_LENGTH
     , DATA_DEFAULT
     , NUM_DISTINCT
     , LOW_VALUE
     , HIGH_VALUE
     , DENSITY
     , NUM_NULLS
     , NUM_BUCKETS
     , LAST_ANALYZED
     , SAMPLE_SIZE
     , CHARACTER_SET_NAME
     , CHAR_COL_DECL_LENGTH
     , GLOBAL_STATS
     , USER_STATS
     , AVG_COL_LEN
     , CHAR_LENGTH
     , CHAR_USED
     , V80_FMT_IMAGE
     , DATA_UPGRADED
     , HISTOGRAM
     , IDENTITY_COLUMN
)
AS
SELECT
       atc.TABLE_SCHEMA
     , atc.TABLE_NAME
     , atc.COLUMN_NAME
     , atc.DATA_TYPE
     , atc.DATA_TYPE_MOD
     , atc.DATA_TYPE_OWNER
     , atc.DATA_LENGTH
     , atc.DATA_PRECISION
     , atc.DATA_SCALE
     , atc.NULLABLE
     , atc.COLUMN_ID
     , atc.DEFAULT_LENGTH
     , atc.DATA_DEFAULT
     , atc.NUM_DISTINCT
     , atc.LOW_VALUE
     , atc.HIGH_VALUE
     , atc.DENSITY
     , atc.NUM_NULLS
     , atc.NUM_BUCKETS
     , atc.LAST_ANALYZED
     , atc.SAMPLE_SIZE
     , atc.CHARACTER_SET_NAME
     , atc.CHAR_COL_DECL_LENGTH
     , atc.GLOBAL_STATS
     , atc.USER_STATS
     , atc.AVG_COL_LEN
     , atc.CHAR_LENGTH
     , atc.CHAR_USED
     , atc.V80_FMT_IMAGE
     , atc.DATA_UPGRADED
     , atc.HISTOGRAM
     , atc.IDENTITY_COLUMN
  FROM  
       DICTIONARY_SCHEMA.ALL_TAB_COLUMNS AS atc
 WHERE 
       atc.OWNER = CURRENT_USER
;

View created.

Elapsed time: 4.96200 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.USER_TAB_COLUMNS
        IS 'USER_TAB_COLUMNS describes the columns of the tables, views, and clusters owned by the current user.';

Comment created.

Elapsed time: 0.12500 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_COLUMNS.TABLE_SCHEMA
        IS 'Schema of the object';

Comment created.

Elapsed time: 0.14500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_COLUMNS.TABLE_NAME
        IS 'Name of the object';

Comment created.

Elapsed time: 0.14100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_COLUMNS.COLUMN_NAME
        IS 'Column name';

Comment created.

Elapsed time: 0.16900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_COLUMNS.DATA_TYPE
        IS 'Datatype of the column';

Comment created.

Elapsed time: 0.14400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_COLUMNS.DATA_TYPE_MOD
        IS 'Datatype modifier of the column';

Comment created.

Elapsed time: 0.14300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_COLUMNS.DATA_TYPE_OWNER
        IS 'Owner of the datatype of the column';

Comment created.

Elapsed time: 0.14400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_COLUMNS.DATA_LENGTH
        IS 'Length of the column (in bytes)';

Comment created.

Elapsed time: 0.14100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_COLUMNS.DATA_PRECISION
        IS 'Decimal precision for NUMBER datatype; binary precision for FLOAT datatype; NULL for all other datatypes';

Comment created.

Elapsed time: 0.15300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_COLUMNS.DATA_SCALE
        IS 'Digits to the right of the decimal point in a number';

Comment created.

Elapsed time: 0.14400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_COLUMNS.NULLABLE
        IS 'Indicates whether a column allows NULLs.';

Comment created.

Elapsed time: 0.14100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_COLUMNS.COLUMN_ID
        IS 'Sequence number of the column as created';

Comment created.

Elapsed time: 0.14800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_COLUMNS.DEFAULT_LENGTH
        IS 'Length of the default value for the column';

Comment created.

Elapsed time: 0.15700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_COLUMNS.DATA_DEFAULT
        IS 'Default value for the column';

Comment created.

Elapsed time: 0.15000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_COLUMNS.NUM_DISTINCT
        IS 'Number of distinct values in the column';

Comment created.

Elapsed time: 0.14500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_COLUMNS.LOW_VALUE
        IS 'Low value in the column';

Comment created.

Elapsed time: 0.14200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_COLUMNS.HIGH_VALUE
        IS 'High value in the column';

Comment created.

Elapsed time: 0.13700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_COLUMNS.DENSITY
        IS 'If a histogram is available on COLUMN_NAME, then this column displays the selectivity of a value that spans fewer than 2 endpoints in the histogram.';

Comment created.

Elapsed time: 0.20200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_COLUMNS.NUM_NULLS
        IS 'Number of NULLs in the column';

Comment created.

Elapsed time: 0.18400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_COLUMNS.NUM_BUCKETS
        IS 'Number of buckets in the histogram for the column';

Comment created.

Elapsed time: 0.13600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_COLUMNS.LAST_ANALYZED
        IS 'Date on which this column was most recently analyzed';

Comment created.

Elapsed time: 0.13600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_COLUMNS.SAMPLE_SIZE
        IS 'Sample size used in analyzing this column';

Comment created.

Elapsed time: 0.14300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_COLUMNS.CHARACTER_SET_NAME
        IS 'Name of the character set';

Comment created.

Elapsed time: 0.13500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_COLUMNS.CHAR_COL_DECL_LENGTH
        IS 'Declaration length of the character type column';

Comment created.

Elapsed time: 0.14600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_COLUMNS.GLOBAL_STATS
        IS 'For partitioned tables, indicates whether column statistics were collected for the table';

Comment created.

Elapsed time: 0.13500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_COLUMNS.USER_STATS
        IS 'Indicates whether statistics were entered directly by the user (YES) or not (NO)';

Comment created.

Elapsed time: 0.13400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_COLUMNS.AVG_COL_LEN
        IS 'Average length of the column (in bytes)';

Comment created.

Elapsed time: 0.13300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_COLUMNS.CHAR_LENGTH
        IS 'Displays the length of the column in characters.';

Comment created.

Elapsed time: 0.13500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_COLUMNS.CHAR_USED
        IS 'Indicates that the column uses BYTE length semantics (B) or CHAR length semantics (C)';

Comment created.

Elapsed time: 0.16100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_COLUMNS.V80_FMT_IMAGE
        IS 'Indicates whether the column data is in release older image format (YES) or not (NO)';

Comment created.

Elapsed time: 0.14300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_COLUMNS.DATA_UPGRADED
        IS 'Indicates whether the column data has been upgraded to the latest type version format (YES) or not (NO)';

Comment created.

Elapsed time: 0.15000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_COLUMNS.HISTOGRAM
        IS 'Indicates existence/type of histogram';

Comment created.

Elapsed time: 0.13400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_COLUMNS.IDENTITY_COLUMN
        IS 'Indicates whether this is an identity column (YES) or not (NO)';

Comment created.

Elapsed time: 0.18400 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.USER_TAB_COLUMNS TO PUBLIC;

Grant succeeded.

Elapsed time: 0.12400 ms 


COMMIT;

Commit complete.

Elapsed time: 0.30200 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS USER_TAB_COLUMNS;

Synonym dropped.

Elapsed time: 0.08200 ms 

CREATE PUBLIC SYNONYM USER_TAB_COLUMNS FOR DICTIONARY_SCHEMA.USER_TAB_COLUMNS;

Synonym created.

Elapsed time: 0.08600 ms 

COMMIT;

Commit complete.

Elapsed time: 0.03800 ms 


DROP PUBLIC SYNONYM IF EXISTS COLS;

Synonym dropped.

Elapsed time: 0.07700 ms 

CREATE PUBLIC SYNONYM COLS FOR DICTIONARY_SCHEMA.USER_TAB_COLUMNS;

Synonym created.

Elapsed time: 0.08000 ms 

COMMIT;

Commit complete.

Elapsed time: 0.03700 ms 


--##############################################################
--# DICTIONARY_SCHEMA.DBA_TAB_COMMENTS
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.DBA_TAB_COMMENTS;

View dropped.

Elapsed time: 0.88100 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.DBA_TAB_COMMENTS
(
       OWNER
     , TABLE_SCHEMA
     , TABLE_NAME
     , TABLE_TYPE
     , COMMENTS
)
AS
SELECT
       auth.AUTHORIZATION_NAME
     , sch.SCHEMA_NAME
     , tab.TABLE_NAME
     , CAST( CASE tab.TABLE_TYPE WHEN 'VIEW' THEN 'VIEW' ELSE 'TABLE' END AS VARCHAR(32 OCTETS) )
     , tab.COMMENTS
  FROM  
       DICTIONARY_SCHEMA.WHOLE_TABLES  AS tab 
     , DEFINITION_SCHEMA.SCHEMATA           AS sch 
     , DEFINITION_SCHEMA.AUTHORIZATIONS     AS auth 
 WHERE 
       tab.SCHEMA_ID = sch.SCHEMA_ID 
   AND tab.OWNER_ID  = auth.AUTH_ID 
   AND EXISTS ( SELECT GRANTEE_ID  
                  FROM DEFINITION_SCHEMA.DATABASE_PRIVILEGES pvdba 
                 WHERE pvdba.PRIVILEGE_TYPE IN ( 'ACCESS CONTROL' ) 
                   AND ( pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                 FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS audba 
                                                WHERE audba.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                             ) 
                      -- OR  
                      -- pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                      --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                       )  
               ) 
ORDER BY 
      tab.SCHEMA_ID 
    , tab.TABLE_ID 
;

View created.

Elapsed time: 1.44900 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.DBA_TAB_COMMENTS
        IS 'DBA_TAB_COMMENTS displays comments on all tables and views in the database.';

Comment created.

Elapsed time: 0.13000 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TAB_COMMENTS.OWNER
        IS 'Owner of the object';

Comment created.

Elapsed time: 0.15000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TAB_COMMENTS.TABLE_SCHEMA
        IS 'Schema of the object';

Comment created.

Elapsed time: 0.13700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TAB_COMMENTS.TABLE_NAME
        IS 'Name of the object';

Comment created.

Elapsed time: 0.15000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TAB_COMMENTS.TABLE_TYPE
        IS 'Type of the object';

Comment created.

Elapsed time: 0.14600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TAB_COMMENTS.COMMENTS
        IS 'Comment on the object';

Comment created.

Elapsed time: 0.15200 ms 


--#####################
--# grant view
--#####################

--GRANT SELECT ON TABLE DICTIONARY_SCHEMA.DBA_TAB_COMMENTS TO DBA;
GRANT SELECT ON TABLE DICTIONARY_SCHEMA.DBA_TAB_COMMENTS TO PUBLIC;

Grant succeeded.

Elapsed time: 0.11600 ms 


COMMIT;

Commit complete.

Elapsed time: 0.09500 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS DBA_TAB_COMMENTS;

Synonym dropped.

Elapsed time: 0.07800 ms 

CREATE PUBLIC SYNONYM DBA_TAB_COMMENTS FOR DICTIONARY_SCHEMA.DBA_TAB_COMMENTS;

Synonym created.

Elapsed time: 0.08200 ms 

COMMIT;

Commit complete.

Elapsed time: 0.03700 ms 


--##############################################################
--# DICTIONARY_SCHEMA.ALL_TAB_COMMENTS
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.ALL_TAB_COMMENTS;

View dropped.

Elapsed time: 0.95300 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.ALL_TAB_COMMENTS
(
       OWNER
     , TABLE_SCHEMA
     , TABLE_NAME
     , TABLE_TYPE
     , COMMENTS
)
AS
SELECT
       auth.AUTHORIZATION_NAME
     , sch.SCHEMA_NAME
     , tab.TABLE_NAME
     , CAST( CASE tab.TABLE_TYPE WHEN 'VIEW' THEN 'VIEW' ELSE 'TABLE' END AS VARCHAR(32 OCTETS) )
     , tab.COMMENTS
  FROM  
       DICTIONARY_SCHEMA.WHOLE_TABLES  AS tab 
     , DEFINITION_SCHEMA.SCHEMATA           AS sch 
     , DEFINITION_SCHEMA.AUTHORIZATIONS     AS auth 
 WHERE 
       tab.SCHEMA_ID = sch.SCHEMA_ID 
   AND tab.OWNER_ID  = auth.AUTH_ID 
   AND ( tab.TABLE_ID IN ( SELECT pvcol.TABLE_ID 
                              FROM DEFINITION_SCHEMA.COLUMN_PRIVILEGES AS pvcol 
                             WHERE ( pvcol.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                             FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS aucol 
                                                            WHERE aucol.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                         ) 
                                  -- OR  
                                  -- pvcol.GRANTEE_ID IN ( SELECT AUTH_ID 
                                  --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                   )
                          ) 
         OR 
         tab.TABLE_ID IN ( SELECT pvtab.TABLE_ID 
                             FROM DEFINITION_SCHEMA.TABLE_PRIVILEGES AS pvtab 
                            WHERE ( pvtab.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                            FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS autab 
                                                           WHERE autab.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                        ) 
                                 -- OR  
                                 -- pvtab.GRANTEE_ID IN ( SELECT AUTH_ID 
                                 --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                  )
                          ) 
         OR 
         tab.SCHEMA_ID IN ( SELECT pvsch.SCHEMA_ID 
                              FROM DEFINITION_SCHEMA.SCHEMA_PRIVILEGES AS pvsch 
                             WHERE pvsch.PRIVILEGE_TYPE IN ( 'CONTROL SCHEMA', 'ALTER TABLE', 'DROP TABLE', 
                                                             'SELECT TABLE', 'INSERT TABLE', 'DELETE TABLE', 'UPDATE TABLE', 'LOCK TABLE' ) 
                               AND ( pvsch.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                             FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS ausch 
                                                            WHERE ausch.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                         ) 
                                  -- OR  
                                  -- pvsch.GRANTEE_ID IN ( SELECT AUTH_ID 
                                  --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                   )
                          ) 
         OR 
         EXISTS ( SELECT GRANTEE_ID  
                    FROM DEFINITION_SCHEMA.DATABASE_PRIVILEGES pvdba 
                   WHERE pvdba.PRIVILEGE_TYPE IN ( 'ALTER ANY TABLE', 'DROP ANY TABLE', 
                                                   'SELECT ANY TABLE', 'INSERT ANY TABLE', 'DELETE ANY TABLE', 'UPDATE ANY TABLE', 'LOCK ANY TABLE' ) 
                     AND ( pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                   FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS audba 
                                                  WHERE audba.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                               ) 
                        -- OR  
                        -- pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                        --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                         )  
               ) 
       ) 
ORDER BY 
      tab.SCHEMA_ID 
    , tab.TABLE_ID 
;

View created.

Elapsed time: 1.47300 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.ALL_TAB_COMMENTS
        IS 'ALL_TAB_COMMENTS displays comments on the tables and views accessible to the current user.';

Comment created.

Elapsed time: 0.13400 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_COMMENTS.OWNER
        IS 'Owner of the object';

Comment created.

Elapsed time: 0.14400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_COMMENTS.TABLE_SCHEMA
        IS 'Schema of the object';

Comment created.

Elapsed time: 0.16100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_COMMENTS.TABLE_NAME
        IS 'Name of the object';

Comment created.

Elapsed time: 0.13800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_COMMENTS.TABLE_TYPE
        IS 'Type of the object';

Comment created.

Elapsed time: 0.13300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_COMMENTS.COMMENTS
        IS 'Comment on the object';

Comment created.

Elapsed time: 0.13300 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.ALL_TAB_COMMENTS TO PUBLIC;

Grant succeeded.

Elapsed time: 0.11400 ms 


COMMIT;

Commit complete.

Elapsed time: 0.09600 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS ALL_TAB_COMMENTS;

Synonym dropped.

Elapsed time: 0.06900 ms 

CREATE PUBLIC SYNONYM ALL_TAB_COMMENTS FOR DICTIONARY_SCHEMA.ALL_TAB_COMMENTS;

Synonym created.

Elapsed time: 0.09400 ms 

COMMIT;

Commit complete.

Elapsed time: 0.03800 ms 


--##############################################################
--# DICTIONARY_SCHEMA.USER_TAB_COMMENTS
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.USER_TAB_COMMENTS;

View dropped.

Elapsed time: 0.83800 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.USER_TAB_COMMENTS
(
       TABLE_SCHEMA
     , TABLE_NAME
     , TABLE_TYPE
     , COMMENTS
)
AS
SELECT
       atc.TABLE_SCHEMA
     , atc.TABLE_NAME
     , atc.TABLE_TYPE
     , atc.COMMENTS
  FROM  
       DICTIONARY_SCHEMA.ALL_TAB_COMMENTS  AS atc
 WHERE 
       atc.OWNER = CURRENT_USER
;

View created.

Elapsed time: 1.38500 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.USER_TAB_COMMENTS
        IS 'USER_TAB_COMMENTS displays comments on the tables and views owned by the current user.';

Comment created.

Elapsed time: 0.12400 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_COMMENTS.TABLE_SCHEMA
        IS 'Schema of the object';

Comment created.

Elapsed time: 0.14400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_COMMENTS.TABLE_NAME
        IS 'Name of the object';

Comment created.

Elapsed time: 0.14600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_COMMENTS.TABLE_TYPE
        IS 'Type of the object';

Comment created.

Elapsed time: 0.13500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_COMMENTS.COMMENTS
        IS 'Comment on the object';

Comment created.

Elapsed time: 0.13300 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.USER_TAB_COMMENTS TO PUBLIC;

Grant succeeded.

Elapsed time: 0.11600 ms 


COMMIT;

Commit complete.

Elapsed time: 0.08900 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS USER_TAB_COMMENTS;

Synonym dropped.

Elapsed time: 0.07100 ms 

CREATE PUBLIC SYNONYM USER_TAB_COMMENTS FOR DICTIONARY_SCHEMA.USER_TAB_COMMENTS;

Synonym created.

Elapsed time: 0.08800 ms 

COMMIT;

Commit complete.

Elapsed time: 0.03800 ms 



--##############################################################
--# DICTIONARY_SCHEMA.DBA_TAB_IDENTITY_COLS
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.DBA_TAB_IDENTITY_COLS;

View dropped.

Elapsed time: 1.01100 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.DBA_TAB_IDENTITY_COLS
(
       OWNER
     , TABLE_SCHEMA
     , TABLE_NAME
     , COLUMN_NAME
     , GENERATION_TYPE
     , IDENTITY_OPTIONS
)
AS
SELECT
       auth.AUTHORIZATION_NAME                       -- OWNER
     , sch.SCHEMA_NAME                               -- TABLE_SCHEMA
     , tab.TABLE_NAME                                -- TABLE_NAME
     , col.COLUMN_NAME                               -- COLUMN_NAME
     , CAST( IDENTITY_GENERATION 
             AS VARCHAR(32 OCTETS) )                 -- GENERATION_TYPE
     , CAST( 'START WITH: ' || col.IDENTITY_START
             || ', INCREMENT BY: ' || col.IDENTITY_INCREMENT
             || ', MAX_VALUE: ' || col.IDENTITY_MAXIMUM   
             || ', MIN_VALUE: ' || col.IDENTITY_MINIMUM   
             || ', CYCLE_FLAG: ' || CASE WHEN col.IDENTITY_CYCLE = TRUE 
                                          THEN 'Y'
                                          ELSE 'N'
                                          END
             || ', CACHE_SIZE: ' || col.IDENTITY_CACHE_SIZE
             AS VARCHAR(1024 OCTETS) )               -- IDENTITY_OPTIONS
  FROM  
       DICTIONARY_SCHEMA.WHOLE_COLUMNS AS col
     , DICTIONARY_SCHEMA.WHOLE_DTDS    AS dtd
     , DICTIONARY_SCHEMA.WHOLE_TABLES  AS tab 
     , DEFINITION_SCHEMA.SCHEMATA           AS sch 
     , DEFINITION_SCHEMA.AUTHORIZATIONS     AS auth 
 WHERE 
       col.IS_IDENTITY = TRUE
   AND col.DTD_IDENTIFIER = dtd.DTD_IDENTIFIER
   AND col.TABLE_ID  = tab.TABLE_ID 
   AND col.SCHEMA_ID = sch.SCHEMA_ID
   AND col.OWNER_ID  = auth.AUTH_ID
   AND EXISTS ( SELECT GRANTEE_ID  
                  FROM DEFINITION_SCHEMA.DATABASE_PRIVILEGES pvdba 
                 WHERE pvdba.PRIVILEGE_TYPE IN ( 'ACCESS CONTROL' ) 
                   AND ( pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                 FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS audba 
                                                WHERE audba.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                             ) 
                      -- OR  
                      -- pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                      --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                       )  
               ) 
ORDER BY 
      col.SCHEMA_ID 
    , col.TABLE_ID 
;

View created.

Elapsed time: 2.15100 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.DBA_TAB_IDENTITY_COLS
        IS 'DBA_TAB_IDENTITY_COLS describes all table identity columns.';

Comment created.

Elapsed time: 0.13000 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TAB_IDENTITY_COLS.OWNER
        IS 'Owner of the table';

Comment created.

Elapsed time: 0.15100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TAB_IDENTITY_COLS.TABLE_SCHEMA
        IS 'Schema of the table';

Comment created.

Elapsed time: 0.14300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TAB_IDENTITY_COLS.TABLE_NAME
        IS 'Name of the table';

Comment created.

Elapsed time: 0.14400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TAB_IDENTITY_COLS.COLUMN_NAME
        IS 'Name of the identity column';

Comment created.

Elapsed time: 0.14500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TAB_IDENTITY_COLS.GENERATION_TYPE
        IS 'Generation type of the identity column. Possible values are ALWAYS or BY DEFAULT.';

Comment created.

Elapsed time: 0.13500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TAB_IDENTITY_COLS.IDENTITY_OPTIONS
        IS 'Options for the identity column sequence generator';

Comment created.

Elapsed time: 0.13500 ms 


--#####################
--# grant view
--#####################

--GRANT SELECT ON TABLE DICTIONARY_SCHEMA.DBA_TAB_IDENTITY_COLS TO DBA;
GRANT SELECT ON TABLE DICTIONARY_SCHEMA.DBA_TAB_IDENTITY_COLS TO PUBLIC;

Grant succeeded.

Elapsed time: 0.11700 ms 


COMMIT;

Commit complete.

Elapsed time: 0.11000 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS DBA_TAB_IDENTITY_COLS;

Synonym dropped.

Elapsed time: 0.06900 ms 

CREATE PUBLIC SYNONYM DBA_TAB_IDENTITY_COLS FOR DICTIONARY_SCHEMA.DBA_TAB_IDENTITY_COLS;

Synonym created.

Elapsed time: 0.08800 ms 

COMMIT;

Commit complete.

Elapsed time: 0.03800 ms 



--##############################################################
--# DICTIONARY_SCHEMA.ALL_TAB_IDENTITY_COLS
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.ALL_TAB_IDENTITY_COLS;

View dropped.

Elapsed time: 1.08600 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.ALL_TAB_IDENTITY_COLS
(
       OWNER
     , TABLE_SCHEMA
     , TABLE_NAME
     , COLUMN_NAME
     , GENERATION_TYPE
     , IDENTITY_OPTIONS
)
AS
SELECT
       auth.AUTHORIZATION_NAME                       -- OWNER
     , sch.SCHEMA_NAME                               -- TABLE_SCHEMA
     , tab.TABLE_NAME                                -- TABLE_NAME
     , col.COLUMN_NAME                               -- COLUMN_NAME
     , CAST( IDENTITY_GENERATION 
             AS VARCHAR(32 OCTETS) )                 -- GENERATION_TYPE
     , CAST( 'START WITH: ' || col.IDENTITY_START
             || ', INCREMENT BY: ' || col.IDENTITY_INCREMENT
             || ', MAX_VALUE: ' || col.IDENTITY_MAXIMUM   
             || ', MIN_VALUE: ' || col.IDENTITY_MINIMUM   
             || ', CYCLE_FLAG: ' || CASE WHEN col.IDENTITY_CYCLE = TRUE 
                                          THEN 'Y'
                                          ELSE 'N'
                                          END
             || ', CACHE_SIZE: ' || col.IDENTITY_CACHE_SIZE
             AS VARCHAR(1024 OCTETS) )               -- IDENTITY_OPTIONS
  FROM  
       DICTIONARY_SCHEMA.WHOLE_COLUMNS AS col
     , DICTIONARY_SCHEMA.WHOLE_DTDS    AS dtd
     , DICTIONARY_SCHEMA.WHOLE_TABLES  AS tab 
     , DEFINITION_SCHEMA.SCHEMATA           AS sch 
     , DEFINITION_SCHEMA.AUTHORIZATIONS     AS auth 
 WHERE 
       col.IS_IDENTITY = TRUE
   AND col.DTD_IDENTIFIER = dtd.DTD_IDENTIFIER
   AND col.TABLE_ID  = tab.TABLE_ID 
   AND col.SCHEMA_ID = sch.SCHEMA_ID
   AND col.OWNER_ID  = auth.AUTH_ID
   AND ( col.COLUMN_ID IN ( SELECT pvcol.COLUMN_ID 
                              FROM DEFINITION_SCHEMA.COLUMN_PRIVILEGES AS pvcol 
                             WHERE ( pvcol.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                             FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS aucol 
                                                            WHERE aucol.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                         ) 
                                  -- OR  
                                  -- pvcol.GRANTEE_ID IN ( SELECT AUTH_ID 
                                  --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                   )
                          ) 
         OR 
         tab.TABLE_ID IN ( SELECT pvtab.TABLE_ID 
                             FROM DEFINITION_SCHEMA.TABLE_PRIVILEGES AS pvtab 
                            WHERE ( pvtab.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                            FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS autab 
                                                           WHERE autab.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                        ) 
                                 -- OR  
                                 -- pvtab.GRANTEE_ID IN ( SELECT AUTH_ID 
                                 --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                  )
                          ) 
         OR 
         tab.SCHEMA_ID IN ( SELECT pvsch.SCHEMA_ID 
                              FROM DEFINITION_SCHEMA.SCHEMA_PRIVILEGES AS pvsch 
                             WHERE pvsch.PRIVILEGE_TYPE IN ( 'CONTROL SCHEMA', 'ALTER TABLE', 'DROP TABLE', 
                                                             'SELECT TABLE', 'INSERT TABLE', 'DELETE TABLE', 'UPDATE TABLE', 'LOCK TABLE' ) 
                               AND ( pvsch.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                             FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS ausch 
                                                            WHERE ausch.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                         ) 
                                  -- OR  
                                  -- pvsch.GRANTEE_ID IN ( SELECT AUTH_ID 
                                  --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                   )
                          ) 
         OR 
         EXISTS ( SELECT GRANTEE_ID  
                    FROM DEFINITION_SCHEMA.DATABASE_PRIVILEGES pvdba 
                   WHERE pvdba.PRIVILEGE_TYPE IN ( 'ALTER ANY TABLE', 'DROP ANY TABLE', 
                                                   'SELECT ANY TABLE', 'INSERT ANY TABLE', 'DELETE ANY TABLE', 'UPDATE ANY TABLE', 'LOCK ANY TABLE' ) 
                     AND ( pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                   FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS audba 
                                                  WHERE audba.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                ) 
                        -- OR  
                        -- pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                        --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                         )  
                ) 
       ) 
ORDER BY 
      col.SCHEMA_ID 
    , col.TABLE_ID 
;

View created.

Elapsed time: 2.23400 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.ALL_TAB_IDENTITY_COLS
        IS 'ALL_TAB_IDENTITY_COLS describes all table identity columns.';

Comment created.

Elapsed time: 0.12300 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_IDENTITY_COLS.OWNER
        IS 'Owner of the table';

Comment created.

Elapsed time: 0.14300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_IDENTITY_COLS.TABLE_SCHEMA
        IS 'Schema of the table';

Comment created.

Elapsed time: 0.13900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_IDENTITY_COLS.TABLE_NAME
        IS 'Name of the table';

Comment created.

Elapsed time: 0.13300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_IDENTITY_COLS.COLUMN_NAME
        IS 'Name of the identity column';

Comment created.

Elapsed time: 0.13300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_IDENTITY_COLS.GENERATION_TYPE
        IS 'Generation type of the identity column. Possible values are ALWAYS or BY DEFAULT.';

Comment created.

Elapsed time: 0.14000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_IDENTITY_COLS.IDENTITY_OPTIONS
        IS 'Options for the identity column sequence generator';

Comment created.

Elapsed time: 0.13300 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.ALL_TAB_IDENTITY_COLS TO PUBLIC;

Grant succeeded.

Elapsed time: 0.11600 ms 


COMMIT;

Commit complete.

Elapsed time: 0.10400 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS ALL_TAB_IDENTITY_COLS;

Synonym dropped.

Elapsed time: 0.07000 ms 

CREATE PUBLIC SYNONYM ALL_TAB_IDENTITY_COLS FOR DICTIONARY_SCHEMA.ALL_TAB_IDENTITY_COLS;

Synonym created.

Elapsed time: 0.08500 ms 

COMMIT;

Commit complete.

Elapsed time: 0.03800 ms 



--##############################################################
--# DICTIONARY_SCHEMA.USER_TAB_IDENTITY_COLS
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.USER_TAB_IDENTITY_COLS;

View dropped.

Elapsed time: 0.98100 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.USER_TAB_IDENTITY_COLS
(
       TABLE_SCHEMA
     , TABLE_NAME
     , COLUMN_NAME
     , GENERATION_TYPE
     , IDENTITY_OPTIONS
)
AS
SELECT
       ati.TABLE_SCHEMA
     , ati.TABLE_NAME
     , ati.COLUMN_NAME
     , ati.GENERATION_TYPE
     , ati.IDENTITY_OPTIONS
  FROM  
       DICTIONARY_SCHEMA.ALL_TAB_IDENTITY_COLS AS ati
 WHERE 
       ati.OWNER = CURRENT_USER
;

View created.

Elapsed time: 2.10700 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.USER_TAB_IDENTITY_COLS
        IS 'USER_TAB_IDENTITY_COLS describes all table identity columns.';

Comment created.

Elapsed time: 0.12100 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_IDENTITY_COLS.TABLE_SCHEMA
        IS 'Schema of the table';

Comment created.

Elapsed time: 0.13800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_IDENTITY_COLS.TABLE_NAME
        IS 'Name of the table';

Comment created.

Elapsed time: 0.13400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_IDENTITY_COLS.COLUMN_NAME
        IS 'Name of the identity column';

Comment created.

Elapsed time: 0.14200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_IDENTITY_COLS.GENERATION_TYPE
        IS 'Generation type of the identity column. Possible values are ALWAYS or BY DEFAULT.';

Comment created.

Elapsed time: 0.13400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_IDENTITY_COLS.IDENTITY_OPTIONS
        IS 'Options for the identity column sequence generator';

Comment created.

Elapsed time: 0.13100 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.USER_TAB_IDENTITY_COLS TO PUBLIC;

Grant succeeded.

Elapsed time: 0.11800 ms 


COMMIT;

Commit complete.

Elapsed time: 0.10100 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS USER_TAB_IDENTITY_COLS;

Synonym dropped.

Elapsed time: 0.07000 ms 

CREATE PUBLIC SYNONYM USER_TAB_IDENTITY_COLS FOR DICTIONARY_SCHEMA.USER_TAB_IDENTITY_COLS;

Synonym created.

Elapsed time: 0.08300 ms 

COMMIT;

Commit complete.

Elapsed time: 0.04000 ms 


--##############################################################
--# DICTIONARY_SCHEMA.DBA_TABLESPACES
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.DBA_TABLESPACES;

View dropped.

Elapsed time: 2.10400 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.DBA_TABLESPACES
(
       TABLESPACE_NAME
     , BLOCK_SIZE
     , INITIAL_EXTENT
     , NEXT_EXTENT
     , MIN_EXTENTS
     , MAX_EXTENTS
     , MAX_SIZE
     , PCT_INCREASE
     , MIN_EXTLEN
     , STATUS
     , CONTENTS
     , LOGGING 
     , FORCE_LOGGING
     , EXTENT_MANAGEMENT
     , ALLOCATION_TYPE
     , PLUGGED_IN
     , SEGMENT_SPACE_MANAGEMENT
     , DEF_TAB_COMPRESSION
     , RETENTION
     , BIGFILE
     , PREDICATE_EVALUATION
     , ENCRYPTED
     , COMPRESS_FOR
)
AS
SELECT
       spc.TABLESPACE_NAME               -- TABLESPACE_NAME
     , CAST( xspc.PAGE_SIZE AS NUMBER )  -- BLOCK_SIZE
     , CAST( NULL AS NUMBER )            -- INITIAL_EXTENT
     , CAST( NULL AS NUMBER )            -- NEXT_EXTENT
     , CAST( 1 AS NUMBER )               -- MIN_EXTENTS
     , CAST( NULL AS NUMBER )            -- MAX_EXTENTS
     , CAST( NULL AS NUMBER )            -- MAX_SIZE
     , CAST( NULL AS NUMBER )            -- PCT_INCREASE
     , CAST( NULL AS NUMBER )            -- MIN_EXTLEN
     , CAST( CASE WHEN xspc.ONLINE = TRUE 
                  THEN 'ONLINE' 
                  ELSE 'OFFLINE' 
                  END AS VARCHAR(32 OCTETS) )        -- STATUS
     , CAST( spc.USAGE_TYPE AS VARCHAR(32 OCTETS) )  -- CONTENTS
     , CAST( CASE WHEN xspc.LOGGING = TRUE 
                  THEN 'LOGGING' 
                  ELSE 'NOLOGGING' 
                  END AS VARCHAR(32 OCTETS) )        -- LOGGING
     , CAST( NULL AS VARCHAR(3 OCTETS) )             -- FORCE_LOGGING
     , CAST( NULL AS VARCHAR(32 OCTETS) )            -- EXTENT_MANAGEMENT
     , CAST( NULL AS VARCHAR(32 OCTETS) )            -- ALLOCATION_TYPE
     , CAST( 'NO' AS VARCHAR(3 OCTETS) )             -- PLUGGED_IN
     , CAST( NULL AS VARCHAR(32 OCTETS) )            -- SEGMENT_SPACE_MANAGEMENT
     , CAST( 'DISABLED' AS VARCHAR(32 OCTETS) )      -- DEF_TAB_COMPRESSION
     , CAST( NULL AS VARCHAR(32 OCTETS) )            -- RETENTION
     , CAST( NULL AS VARCHAR(3 OCTETS) )             -- BIGFILE
     , CAST( NULL AS VARCHAR(32 OCTETS) )            -- PREDICATE_EVALUATION
     , CAST( 'NO' AS VARCHAR(3 OCTETS) )             -- ENCRYPTED
     , CAST( NULL AS VARCHAR(32 OCTETS) )            -- COMPRESS_FOR
  FROM
       DEFINITION_SCHEMA.TABLESPACES     AS spc
     , FIXED_TABLE_SCHEMA.X$TABLESPACE   AS xspc
 WHERE
       spc.TABLESPACE_ID = xspc.ID
   AND EXISTS ( SELECT GRANTEE_ID  
                  FROM DEFINITION_SCHEMA.DATABASE_PRIVILEGES pvdba 
                 WHERE pvdba.PRIVILEGE_TYPE IN ( 'ACCESS CONTROL' ) 
                   AND ( pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                 FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS audba 
                                                WHERE audba.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                             ) 
                      -- OR  
                      -- pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                      --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                       )  
               ) 
 ORDER BY 
       spc.TABLESPACE_ID
;

View created.

Elapsed time: 2.79000 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.DBA_TABLESPACES
        IS 'DBA_TABLESPACES describes all tablespaces in the database.';

Comment created.

Elapsed time: 0.12500 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TABLESPACES.TABLESPACE_NAME
        IS 'Name of the tablespace';

Comment created.

Elapsed time: 0.14500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TABLESPACES.BLOCK_SIZE
        IS 'Tablespace block size';

Comment created.

Elapsed time: 0.13800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TABLESPACES.INITIAL_EXTENT
        IS 'Default initial extent size (in bytes)';

Comment created.

Elapsed time: 0.13600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TABLESPACES.NEXT_EXTENT
        IS 'Default incremental extent size (in bytes)';

Comment created.

Elapsed time: 0.15200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TABLESPACES.MIN_EXTENTS
        IS 'Default minimum number of extents';

Comment created.

Elapsed time: 0.13900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TABLESPACES.MAX_EXTENTS
        IS 'Default maximum number of extents';

Comment created.

Elapsed time: 0.14400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TABLESPACES.MAX_SIZE
        IS 'Default maximum size of segments';

Comment created.

Elapsed time: 0.13600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TABLESPACES.PCT_INCREASE
        IS 'Default percent increase for extent size';

Comment created.

Elapsed time: 0.13400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TABLESPACES.MIN_EXTLEN
        IS 'Minimum extent size for this tablespace (in bytes)';

Comment created.

Elapsed time: 0.16100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TABLESPACES.STATUS
        IS 'Tablespace status: the value in ( ONLINE, OFFLINE, READ ONLY )';

Comment created.

Elapsed time: 0.14900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TABLESPACES.CONTENTS
        IS 'Tablespace contents: the value in ( SYSTEM, DATA, TEMPORARY, UNDO )';

Comment created.

Elapsed time: 0.14600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TABLESPACES.LOGGING 
        IS 'Default logging attribute: LOGGING, NOLOGGING';

Comment created.

Elapsed time: 0.14200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TABLESPACES.FORCE_LOGGING
        IS 'Indicates whether the tablespace is under force logging mode (YES) or not (NO)';

Comment created.

Elapsed time: 0.13700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TABLESPACES.EXTENT_MANAGEMENT
        IS 'Indicates whether the extents in the tablespace are dictionary managed (DICTIONARY) or locally managed (LOCAL)';

Comment created.

Elapsed time: 0.13700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TABLESPACES.ALLOCATION_TYPE
        IS 'Type of extent allocation in effect for the tablespace: the value in ( SYSTEM, UNIFORM, USER )';

Comment created.

Elapsed time: 0.14300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TABLESPACES.PLUGGED_IN
        IS 'Indicates whether the tablespace is plugged in (YES) or not (NO)';

Comment created.

Elapsed time: 0.13300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TABLESPACES.SEGMENT_SPACE_MANAGEMENT
        IS 'Indicates whether the free and used segment space in the tablespace is managed using free lists (MANUAL) or bitmaps (AUTO)';

Comment created.

Elapsed time: 0.13700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TABLESPACES.DEF_TAB_COMPRESSION
        IS 'Indicates whether default table compression is enabled (ENABLED) or not (DISABLED)';

Comment created.

Elapsed time: 0.13900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TABLESPACES.RETENTION
        IS 'Undo tablespace retention: the value in ( GUARANTEE, NOGUARANTEE, NOT APPLY )';

Comment created.

Elapsed time: 0.13500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TABLESPACES.BIGFILE
        IS 'Indicates whether the tablespace is a bigfile tablespace (YES) or a smallfile tablespace (NO)';

Comment created.

Elapsed time: 0.14300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TABLESPACES.PREDICATE_EVALUATION
        IS 'Indicates whether predicates are evaluated by host (HOST) or by storage (STORAGE)';

Comment created.

Elapsed time: 0.13500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TABLESPACES.ENCRYPTED
        IS 'Indicates whether the tablespace is encrypted (YES) or not (NO)';

Comment created.

Elapsed time: 0.13400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TABLESPACES.COMPRESS_FOR
        IS 'Indicates whether the tablespace is encrypted (YES) or not (NO)';

Comment created.

Elapsed time: 0.13300 ms 


--#####################
--# grant view
--#####################

--GRANT SELECT ON TABLE DICTIONARY_SCHEMA.DBA_TABLESPACES TO DBA;
GRANT SELECT ON TABLE DICTIONARY_SCHEMA.DBA_TABLESPACES TO PUBLIC;

Grant succeeded.

Elapsed time: 0.12500 ms 


COMMIT;

Commit complete.

Elapsed time: 0.23900 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS DBA_TABLESPACES;

Synonym dropped.

Elapsed time: 0.07200 ms 

CREATE PUBLIC SYNONYM DBA_TABLESPACES FOR DICTIONARY_SCHEMA.DBA_TABLESPACES;

Synonym created.

Elapsed time: 0.08300 ms 

COMMIT;

Commit complete.

Elapsed time: 0.03700 ms 






--##############################################################
--# DICTIONARY_SCHEMA.USER_TABLESPACES
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.USER_TABLESPACES;

View dropped.

Elapsed time: 2.06700 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.USER_TABLESPACES
(
       TABLESPACE_NAME
     , BLOCK_SIZE
     , INITIAL_EXTENT
     , NEXT_EXTENT
     , MIN_EXTENTS
     , MAX_EXTENTS
     , MAX_SIZE
     , PCT_INCREASE
     , MIN_EXTLEN
     , STATUS
     , CONTENTS
     , LOGGING 
     , FORCE_LOGGING
     , EXTENT_MANAGEMENT
     , ALLOCATION_TYPE
     , SEGMENT_SPACE_MANAGEMENT
     , DEF_TAB_COMPRESSION
     , RETENTION
     , BIGFILE
     , PREDICATE_EVALUATION
     , ENCRYPTED
     , COMPRESS_FOR
)
AS
SELECT
       spc.TABLESPACE_NAME               -- TABLESPACE_NAME
     , CAST( xspc.PAGE_SIZE AS NUMBER )  -- BLOCK_SIZE
     , CAST( NULL AS NUMBER )            -- INITIAL_EXTENT
     , CAST( NULL AS NUMBER )            -- NEXT_EXTENT
     , CAST( 1 AS NUMBER )               -- MIN_EXTENTS
     , CAST( NULL AS NUMBER )            -- MAX_EXTENTS
     , CAST( NULL AS NUMBER )            -- MAX_SIZE
     , CAST( NULL AS NUMBER )            -- PCT_INCREASE
     , CAST( NULL AS NUMBER )            -- MIN_EXTLEN
     , CAST( CASE WHEN xspc.ONLINE = TRUE 
                  THEN 'ONLINE' 
                  ELSE 'OFFLINE' 
                  END AS VARCHAR(32 OCTETS) )        -- STATUS
     , CAST( spc.USAGE_TYPE AS VARCHAR(32 OCTETS) )  -- CONTENTS
     , CAST( CASE WHEN xspc.LOGGING = TRUE 
                  THEN 'LOGGING' 
                  ELSE 'NOLOGGING' 
                  END AS VARCHAR(32 OCTETS) )        -- LOGGING
     , CAST( NULL AS VARCHAR(3 OCTETS) )             -- FORCE_LOGGING
     , CAST( NULL AS VARCHAR(32 OCTETS) )            -- EXTENT_MANAGEMENT
     , CAST( NULL AS VARCHAR(32 OCTETS) )            -- ALLOCATION_TYPE
     , CAST( NULL AS VARCHAR(32 OCTETS) )            -- SEGMENT_SPACE_MANAGEMENT
     , CAST( 'DISABLED' AS VARCHAR(32 OCTETS) )      -- DEF_TAB_COMPRESSION
     , CAST( NULL AS VARCHAR(32 OCTETS) )            -- RETENTION
     , CAST( NULL AS VARCHAR(3 OCTETS) )             -- BIGFILE
     , CAST( NULL AS VARCHAR(32 OCTETS) )            -- PREDICATE_EVALUATION
     , CAST( 'NO' AS VARCHAR(3 OCTETS) )             -- ENCRYPTED
     , CAST( NULL AS VARCHAR(32 OCTETS) )            -- COMPRESS_FOR
  FROM
       DEFINITION_SCHEMA.TABLESPACES     AS spc
     , FIXED_TABLE_SCHEMA.X$TABLESPACE   AS xspc
 WHERE
       spc.TABLESPACE_ID = xspc.ID
   AND ( spc.TABLESPACE_ID IN ( SELECT pvspc.TABLESPACE_ID 
                                  FROM DEFINITION_SCHEMA.TABLESPACE_PRIVILEGES AS pvspc 
                                 WHERE pvspc.PRIVILEGE_TYPE IN ( 'CREATE OBJECT' ) 
                                   AND ( pvspc.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                                 FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS auspc
                                                                WHERE auspc.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                             ) 
                                      -- OR  
                                      -- pvspc.GRANTEE_ID IN ( SELECT AUTH_ID 
                                      --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                   )
                          ) 
         OR 
         EXISTS ( SELECT GRANTEE_ID  
                    FROM DEFINITION_SCHEMA.DATABASE_PRIVILEGES pvdba 
                   WHERE pvdba.PRIVILEGE_TYPE IN ( 'USAGE TABLESPACE' ) 
                     AND ( pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                   FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS audba 
                                                  WHERE audba.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                               ) 
                        -- OR  
                        -- pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                        --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                         )  
                ) 
       ) 
 ORDER BY 
       spc.TABLESPACE_ID
;

View created.

Elapsed time: 2.80800 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.USER_TABLESPACES
        IS 'USER_TABLESPACES describes the tablespaces accessible to the current user.';

Comment created.

Elapsed time: 0.12400 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TABLESPACES.TABLESPACE_NAME
        IS 'Name of the tablespace';

Comment created.

Elapsed time: 0.14100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TABLESPACES.BLOCK_SIZE
        IS 'Tablespace block size';

Comment created.

Elapsed time: 0.14600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TABLESPACES.INITIAL_EXTENT
        IS 'Default initial extent size (in bytes)';

Comment created.

Elapsed time: 0.13800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TABLESPACES.NEXT_EXTENT
        IS 'Default incremental extent size (in bytes)';

Comment created.

Elapsed time: 0.13400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TABLESPACES.MIN_EXTENTS
        IS 'Default minimum number of extents';

Comment created.

Elapsed time: 0.13300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TABLESPACES.MAX_EXTENTS
        IS 'Default maximum number of extents';

Comment created.

Elapsed time: 0.13900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TABLESPACES.MAX_SIZE
        IS 'Default maximum size of segments';

Comment created.

Elapsed time: 0.14700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TABLESPACES.PCT_INCREASE
        IS 'Default percent increase for extent size';

Comment created.

Elapsed time: 0.13600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TABLESPACES.MIN_EXTLEN
        IS 'Minimum extent size for this tablespace (in bytes)';

Comment created.

Elapsed time: 0.13500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TABLESPACES.STATUS
        IS 'Tablespace status: the value in ( ONLINE, OFFLINE, READ ONLY )';

Comment created.

Elapsed time: 0.13500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TABLESPACES.CONTENTS
        IS 'Tablespace contents: the value in ( SYSTEM, DATA, TEMPORARY, UNDO )';

Comment created.

Elapsed time: 0.13300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TABLESPACES.LOGGING 
        IS 'Default logging attribute: LOGGING, NOLOGGING';

Comment created.

Elapsed time: 0.13400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TABLESPACES.FORCE_LOGGING
        IS 'Indicates whether the tablespace is under force logging mode (YES) or not (NO)';

Comment created.

Elapsed time: 0.16100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TABLESPACES.EXTENT_MANAGEMENT
        IS 'Indicates whether the extents in the tablespace are dictionary managed (DICTIONARY) or locally managed (LOCAL)';

Comment created.

Elapsed time: 0.14000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TABLESPACES.ALLOCATION_TYPE
        IS 'Type of extent allocation in effect for the tablespace: the value in ( SYSTEM, UNIFORM, USER )';

Comment created.

Elapsed time: 0.13800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TABLESPACES.SEGMENT_SPACE_MANAGEMENT
        IS 'Indicates whether the free and used segment space in the tablespace is managed using free lists (MANUAL) or bitmaps (AUTO)';

Comment created.

Elapsed time: 0.13900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TABLESPACES.DEF_TAB_COMPRESSION
        IS 'Indicates whether default table compression is enabled (ENABLED) or not (DISABLED)';

Comment created.

Elapsed time: 0.14100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TABLESPACES.RETENTION
        IS 'Undo tablespace retention: the value in ( GUARANTEE, NOGUARANTEE, NOT APPLY )';

Comment created.

Elapsed time: 0.13400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TABLESPACES.BIGFILE
        IS 'Indicates whether the tablespace is a bigfile tablespace (YES) or a smallfile tablespace (NO)';

Comment created.

Elapsed time: 0.13500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TABLESPACES.PREDICATE_EVALUATION
        IS 'Indicates whether predicates are evaluated by host (HOST) or by storage (STORAGE)';

Comment created.

Elapsed time: 0.13500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TABLESPACES.ENCRYPTED
        IS 'Indicates whether the tablespace is encrypted (YES) or not (NO)';

Comment created.

Elapsed time: 0.13300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TABLESPACES.COMPRESS_FOR
        IS 'Indicates whether the tablespace is encrypted (YES) or not (NO)';

Comment created.

Elapsed time: 0.22400 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.USER_TABLESPACES TO PUBLIC;

Grant succeeded.

Elapsed time: 0.11900 ms 


COMMIT;

Commit complete.

Elapsed time: 0.22400 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS USER_TABLESPACES;

Synonym dropped.

Elapsed time: 0.07100 ms 

CREATE PUBLIC SYNONYM USER_TABLESPACES FOR DICTIONARY_SCHEMA.USER_TABLESPACES;

Synonym created.

Elapsed time: 0.08300 ms 

COMMIT;

Commit complete.

Elapsed time: 0.03800 ms 





--##############################################################
--# DICTIONARY_SCHEMA.DBA_TAB_PRIVS
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.DBA_TAB_PRIVS;

View dropped.

Elapsed time: 1.04800 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.DBA_TAB_PRIVS
(
       GRANTEE
     , OWNER 
     , TABLE_SCHEMA 
     , TABLE_NAME 
     , GRANTOR
     , PRIVILEGE
     , GRANTABLE
     , HIERARCHY
)
AS
SELECT
       grantee.AUTHORIZATION_NAME
     , owner.AUTHORIZATION_NAME
     , sch.SCHEMA_NAME
     , tab.TABLE_NAME
     , grantor.AUTHORIZATION_NAME
     , pvtab.PRIVILEGE_TYPE
     , CAST( CASE WHEN pvtab.IS_GRANTABLE = TRUE THEN 'YES' ELSE 'NO' END AS VARCHAR(3 OCTETS) )
     , CAST( CASE WHEN pvtab.WITH_HIERARCHY = TRUE THEN 'YES' ELSE 'NO' END AS VARCHAR(3 OCTETS) )
  FROM
       DEFINITION_SCHEMA.TABLE_PRIVILEGES  AS pvtab
     , DEFINITION_SCHEMA.TABLES            AS tab 
     , DEFINITION_SCHEMA.SCHEMATA          AS sch 
     , DEFINITION_SCHEMA.AUTHORIZATIONS    AS grantor
     , DEFINITION_SCHEMA.AUTHORIZATIONS    AS grantee
     , DEFINITION_SCHEMA.AUTHORIZATIONS    AS owner
 WHERE
       pvtab.TABLE_ID   = tab.TABLE_ID
   AND pvtab.SCHEMA_ID  = sch.SCHEMA_ID
   AND pvtab.GRANTOR_ID = grantor.AUTH_ID
   AND pvtab.GRANTEE_ID = grantee.AUTH_ID
   AND tab.OWNER_ID     = owner.AUTH_ID
   AND EXISTS ( SELECT GRANTEE_ID  
                  FROM DEFINITION_SCHEMA.DATABASE_PRIVILEGES pvdba 
                 WHERE pvdba.PRIVILEGE_TYPE IN ( 'ACCESS CONTROL' ) 
                   AND ( pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                 FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS audba 
                                                WHERE audba.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                             ) 
                      -- OR  
                      -- pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                      --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                       )  
              ) 
 ORDER BY 
       pvtab.SCHEMA_ID
     , pvtab.TABLE_ID
     , pvtab.GRANTOR_ID
     , pvtab.GRANTEE_ID
     , pvtab.PRIVILEGE_TYPE_ID   
;

View created.

Elapsed time: 1.42300 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.DBA_TAB_PRIVS
        IS 'DBA_TAB_PRIVS describes all object grants in the database.';

Comment created.

Elapsed time: 0.12500 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TAB_PRIVS.GRANTEE
        IS 'Name of the user or role to whom access was granted';

Comment created.

Elapsed time: 0.14500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TAB_PRIVS.OWNER 
        IS 'Owner of the object';

Comment created.

Elapsed time: 0.13700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TAB_PRIVS.TABLE_SCHEMA 
        IS 'Schema of the object';

Comment created.

Elapsed time: 0.13500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TAB_PRIVS.TABLE_NAME 
        IS 'Name of the object';

Comment created.

Elapsed time: 0.13500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TAB_PRIVS.GRANTOR
        IS 'Name of the user who performed the grant';

Comment created.

Elapsed time: 0.13900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TAB_PRIVS.PRIVILEGE
        IS 'Privilege on the object';

Comment created.

Elapsed time: 0.13200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TAB_PRIVS.GRANTABLE
        IS 'Indicates whether the privilege was granted with the GRANT OPTION (YES) or not (NO)';

Comment created.

Elapsed time: 0.13500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TAB_PRIVS.HIERARCHY
        IS 'Indicates whether the privilege was granted with the HIERARCHY OPTION (YES) or not (NO)';

Comment created.

Elapsed time: 0.13500 ms 


--#####################
--# grant view
--#####################

--GRANT SELECT ON TABLE DICTIONARY_SCHEMA.DBA_TAB_PRIVS TO DBA;
GRANT SELECT ON TABLE DICTIONARY_SCHEMA.DBA_TAB_PRIVS TO PUBLIC;

Grant succeeded.

Elapsed time: 0.11800 ms 


COMMIT;

Commit complete.

Elapsed time: 0.12500 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS DBA_TAB_PRIVS;

Synonym dropped.

Elapsed time: 0.07400 ms 

CREATE PUBLIC SYNONYM DBA_TAB_PRIVS FOR DICTIONARY_SCHEMA.DBA_TAB_PRIVS;

Synonym created.

Elapsed time: 0.08300 ms 

COMMIT;

Commit complete.

Elapsed time: 0.03700 ms 



--##############################################################
--# DICTIONARY_SCHEMA.ALL_TAB_PRIVS
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.ALL_TAB_PRIVS;

View dropped.

Elapsed time: 1.27600 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.ALL_TAB_PRIVS
(
       GRANTOR
     , GRANTEE
     , OWNER 
     , TABLE_SCHEMA 
     , TABLE_NAME 
     , PRIVILEGE
     , GRANTABLE
     , HIERARCHY
)
AS
SELECT
       grantor.AUTHORIZATION_NAME
     , grantee.AUTHORIZATION_NAME
     , owner.AUTHORIZATION_NAME
     , sch.SCHEMA_NAME
     , tab.TABLE_NAME
     , pvtab.PRIVILEGE_TYPE
     , CAST( CASE WHEN pvtab.IS_GRANTABLE = TRUE THEN 'YES' ELSE 'NO' END AS VARCHAR(3 OCTETS) )
     , CAST( CASE WHEN pvtab.WITH_HIERARCHY = TRUE THEN 'YES' ELSE 'NO' END AS VARCHAR(3 OCTETS) )
  FROM
       DEFINITION_SCHEMA.TABLE_PRIVILEGES  AS pvtab
     , DEFINITION_SCHEMA.TABLES            AS tab 
     , DEFINITION_SCHEMA.SCHEMATA          AS sch 
     , DEFINITION_SCHEMA.AUTHORIZATIONS    AS grantor
     , DEFINITION_SCHEMA.AUTHORIZATIONS    AS grantee
     , DEFINITION_SCHEMA.AUTHORIZATIONS    AS owner
 WHERE
       grantor.AUTHORIZATION_NAME <> '_SYSTEM'
   AND pvtab.TABLE_ID   = tab.TABLE_ID
   AND pvtab.SCHEMA_ID  = sch.SCHEMA_ID
   AND pvtab.GRANTOR_ID = grantor.AUTH_ID
   AND pvtab.GRANTEE_ID = grantee.AUTH_ID
   AND tab.OWNER_ID     = owner.AUTH_ID
   AND ( grantee.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )
      -- OR  
      -- pvtab.GRANTEE_ID IN ( SELECT AUTH_ID 
      --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
         OR
         grantor.AUTHORIZATION_NAME = CURRENT_USER
         OR
         owner.AUTHORIZATION_NAME = CURRENT_USER
       )
 ORDER BY 
       pvtab.SCHEMA_ID
     , pvtab.TABLE_ID
     , pvtab.GRANTOR_ID
     , pvtab.GRANTEE_ID
     , pvtab.PRIVILEGE_TYPE_ID   
;

View created.

Elapsed time: 1.38600 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.ALL_TAB_PRIVS
        IS 'ALL_TAB_PRIVS describes the object grants, for which the current user is the object owner, grantor, or grantee, or for which an enabled role or PUBLIC is the grantee.';

Comment created.

Elapsed time: 0.14200 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_PRIVS.GRANTOR
        IS 'Name of the user who performed the grant';

Comment created.

Elapsed time: 0.16400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_PRIVS.GRANTEE
        IS 'Name of the user or role to whom access was granted';

Comment created.

Elapsed time: 0.13700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_PRIVS.OWNER 
        IS 'Owner of the object';

Comment created.

Elapsed time: 0.13200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_PRIVS.TABLE_SCHEMA 
        IS 'Schema of the object';

Comment created.

Elapsed time: 0.13600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_PRIVS.TABLE_NAME 
        IS 'Name of the object';

Comment created.

Elapsed time: 0.14800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_PRIVS.PRIVILEGE
        IS 'Privilege on the object';

Comment created.

Elapsed time: 0.15200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_PRIVS.GRANTABLE
        IS 'Indicates whether the privilege was granted with the GRANT OPTION (YES) or not (NO)';

Comment created.

Elapsed time: 0.13400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_PRIVS.HIERARCHY
        IS 'Indicates whether the privilege was granted with the HIERARCHY OPTION (YES) or not (NO)';

Comment created.

Elapsed time: 0.13600 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.ALL_TAB_PRIVS TO PUBLIC;

Grant succeeded.

Elapsed time: 0.11500 ms 


COMMIT;

Commit complete.

Elapsed time: 0.12900 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS ALL_TAB_PRIVS;

Synonym dropped.

Elapsed time: 0.07000 ms 

CREATE PUBLIC SYNONYM ALL_TAB_PRIVS FOR DICTIONARY_SCHEMA.ALL_TAB_PRIVS;

Synonym created.

Elapsed time: 0.08300 ms 

COMMIT;

Commit complete.

Elapsed time: 0.04000 ms 


--##############################################################
--# DICTIONARY_SCHEMA.USER_TAB_PRIVS
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.USER_TAB_PRIVS;

View dropped.

Elapsed time: 1.02700 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.USER_TAB_PRIVS
(
       GRANTEE
     , OWNER 
     , TABLE_SCHEMA 
     , TABLE_NAME 
     , GRANTOR
     , PRIVILEGE
     , GRANTABLE
     , HIERARCHY
)
AS
SELECT
       pvtab.GRANTEE
     , pvtab.OWNER 
     , pvtab.TABLE_SCHEMA 
     , pvtab.TABLE_NAME 
     , pvtab.GRANTOR
     , pvtab.PRIVILEGE
     , pvtab.GRANTABLE
     , pvtab.HIERARCHY
  FROM
       DICTIONARY_SCHEMA.ALL_TAB_PRIVS pvtab
 WHERE 
       pvtab.OWNER   = CURRENT_USER
    OR pvtab.GRANTOR = CURRENT_USER
    OR pvtab.GRANTEE = CURRENT_USER
;

View created.

Elapsed time: 1.47400 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.USER_TAB_PRIVS
        IS 'USER_TAB_PRIVS describes the object grants for which the current user is the object owner, grantor, or grantee.';

Comment created.

Elapsed time: 0.13100 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_PRIVS.GRANTEE
        IS 'Name of the user or role to whom access was granted';

Comment created.

Elapsed time: 0.14300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_PRIVS.OWNER 
        IS 'Owner of the object';

Comment created.

Elapsed time: 0.15000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_PRIVS.TABLE_SCHEMA 
        IS 'Schema of the object';

Comment created.

Elapsed time: 0.13600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_PRIVS.TABLE_NAME 
        IS 'Name of the object';

Comment created.

Elapsed time: 0.14500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_PRIVS.GRANTOR
        IS 'Name of the user who performed the grant';

Comment created.

Elapsed time: 0.16000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_PRIVS.PRIVILEGE
        IS 'Privilege on the object';

Comment created.

Elapsed time: 0.15400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_PRIVS.GRANTABLE
        IS 'Indicates whether the privilege was granted with the GRANT OPTION (YES) or not (NO)';

Comment created.

Elapsed time: 0.14000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_PRIVS.HIERARCHY
        IS 'Indicates whether the privilege was granted with the HIERARCHY OPTION (YES) or not (NO)';

Comment created.

Elapsed time: 0.16000 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.USER_TAB_PRIVS TO PUBLIC;

Grant succeeded.

Elapsed time: 0.11500 ms 


COMMIT;

Commit complete.

Elapsed time: 0.12200 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS USER_TAB_PRIVS;

Synonym dropped.

Elapsed time: 0.07100 ms 

CREATE PUBLIC SYNONYM USER_TAB_PRIVS FOR DICTIONARY_SCHEMA.USER_TAB_PRIVS;

Synonym created.

Elapsed time: 0.08300 ms 

COMMIT;

Commit complete.

Elapsed time: 0.03800 ms 


--##############################################################
--# DICTIONARY_SCHEMA.ALL_TAB_PRIVS_MADE
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.ALL_TAB_PRIVS_MADE;

View dropped.

Elapsed time: 1.05600 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.ALL_TAB_PRIVS_MADE
(
       GRANTEE
     , OWNER 
     , TABLE_SCHEMA 
     , TABLE_NAME 
     , GRANTOR
     , PRIVILEGE
     , GRANTABLE
     , HIERARCHY
)
AS
SELECT
       pvtab.GRANTEE
     , pvtab.OWNER 
     , pvtab.TABLE_SCHEMA 
     , pvtab.TABLE_NAME 
     , pvtab.GRANTOR
     , pvtab.PRIVILEGE
     , pvtab.GRANTABLE
     , pvtab.HIERARCHY
  FROM
       DICTIONARY_SCHEMA.ALL_TAB_PRIVS pvtab
 WHERE 
       pvtab.OWNER   = CURRENT_USER
    OR pvtab.GRANTOR = CURRENT_USER
;

View created.

Elapsed time: 1.51000 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.ALL_TAB_PRIVS_MADE
        IS 'ALL_TAB_PRIVS_MADE describes the object grants for which the current user is the object owner or grantor.';

Comment created.

Elapsed time: 0.12400 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_PRIVS_MADE.GRANTEE
        IS 'Name of the user or role to whom access was granted';

Comment created.

Elapsed time: 0.14100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_PRIVS_MADE.OWNER 
        IS 'Owner of the object';

Comment created.

Elapsed time: 0.13600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_PRIVS_MADE.TABLE_SCHEMA 
        IS 'Schema of the object';

Comment created.

Elapsed time: 0.13500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_PRIVS_MADE.TABLE_NAME 
        IS 'Name of the object';

Comment created.

Elapsed time: 0.13500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_PRIVS_MADE.GRANTOR
        IS 'Name of the user who performed the grant';

Comment created.

Elapsed time: 0.13300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_PRIVS_MADE.PRIVILEGE
        IS 'Privilege on the object';

Comment created.

Elapsed time: 0.13100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_PRIVS_MADE.GRANTABLE
        IS 'Indicates whether the privilege was granted with the GRANT OPTION (YES) or not (NO)';

Comment created.

Elapsed time: 0.17700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_PRIVS_MADE.HIERARCHY
        IS 'Indicates whether the privilege was granted with the HIERARCHY OPTION (YES) or not (NO)';

Comment created.

Elapsed time: 0.14800 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.ALL_TAB_PRIVS_MADE TO PUBLIC;

Grant succeeded.

Elapsed time: 0.11600 ms 


COMMIT;

Commit complete.

Elapsed time: 0.12000 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS ALL_TAB_PRIVS_MADE;

Synonym dropped.

Elapsed time: 0.06900 ms 

CREATE PUBLIC SYNONYM ALL_TAB_PRIVS_MADE FOR DICTIONARY_SCHEMA.ALL_TAB_PRIVS_MADE;

Synonym created.

Elapsed time: 0.08400 ms 

COMMIT;

Commit complete.

Elapsed time: 0.03800 ms 


--##############################################################
--# DICTIONARY_SCHEMA.USER_TAB_PRIVS_MADE
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.USER_TAB_PRIVS_MADE;

View dropped.

Elapsed time: 1.00100 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.USER_TAB_PRIVS_MADE
(
       GRANTEE
     , TABLE_SCHEMA 
     , TABLE_NAME 
     , GRANTOR
     , PRIVILEGE
     , GRANTABLE
     , HIERARCHY
)
AS
SELECT
       pvtab.GRANTEE
     , pvtab.TABLE_SCHEMA 
     , pvtab.TABLE_NAME 
     , pvtab.GRANTOR
     , pvtab.PRIVILEGE
     , pvtab.GRANTABLE
     , pvtab.HIERARCHY
  FROM
       DICTIONARY_SCHEMA.ALL_TAB_PRIVS pvtab
 WHERE 
       pvtab.OWNER = CURRENT_USER
;

View created.

Elapsed time: 1.37900 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.USER_TAB_PRIVS_MADE
        IS 'USER_TAB_PRIVS_MADE describes the object grants for which the current user is the object owner.';

Comment created.

Elapsed time: 0.12300 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_PRIVS_MADE.GRANTEE
        IS 'Name of the user or role to whom access was granted';

Comment created.

Elapsed time: 0.14400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_PRIVS_MADE.TABLE_SCHEMA 
        IS 'Schema of the object';

Comment created.

Elapsed time: 0.13800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_PRIVS_MADE.TABLE_NAME 
        IS 'Name of the object';

Comment created.

Elapsed time: 0.14200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_PRIVS_MADE.GRANTOR
        IS 'Name of the user who performed the grant';

Comment created.

Elapsed time: 0.13600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_PRIVS_MADE.PRIVILEGE
        IS 'Privilege on the object';

Comment created.

Elapsed time: 0.13200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_PRIVS_MADE.GRANTABLE
        IS 'Indicates whether the privilege was granted with the GRANT OPTION (YES) or not (NO)';

Comment created.

Elapsed time: 0.13400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_PRIVS_MADE.HIERARCHY
        IS 'Indicates whether the privilege was granted with the HIERARCHY OPTION (YES) or not (NO)';

Comment created.

Elapsed time: 0.13400 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.USER_TAB_PRIVS_MADE TO PUBLIC;

Grant succeeded.

Elapsed time: 0.11500 ms 


COMMIT;

Commit complete.

Elapsed time: 0.11200 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS USER_TAB_PRIVS_MADE;

Synonym dropped.

Elapsed time: 0.07500 ms 

CREATE PUBLIC SYNONYM USER_TAB_PRIVS_MADE FOR DICTIONARY_SCHEMA.USER_TAB_PRIVS_MADE;

Synonym created.

Elapsed time: 0.08400 ms 

COMMIT;

Commit complete.

Elapsed time: 0.03700 ms 


--##############################################################
--# DICTIONARY_SCHEMA.ALL_TAB_PRIVS_RECD
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.ALL_TAB_PRIVS_RECD;

View dropped.

Elapsed time: 1.66200 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.ALL_TAB_PRIVS_RECD
(
       GRANTEE
     , OWNER 
     , TABLE_SCHEMA 
     , TABLE_NAME 
     , GRANTOR
     , PRIVILEGE
     , GRANTABLE
     , HIERARCHY
)
AS
SELECT
       pvtab.GRANTEE
     , pvtab.OWNER 
     , pvtab.TABLE_SCHEMA 
     , pvtab.TABLE_NAME 
     , pvtab.GRANTOR
     , pvtab.PRIVILEGE
     , pvtab.GRANTABLE
     , pvtab.HIERARCHY
  FROM
       DICTIONARY_SCHEMA.ALL_TAB_PRIVS pvtab
 WHERE 
       ( 
         pvtab.GRANTEE IN ( CURRENT_USER, 'PUBLIC' )
      -- OR  
      -- pvtab.GRANTEE IN ( SELECT AUTH_NAME 
      --                      FROM INORMATION_SCHEMA.ENABLED_ROLES )  
       )
;

View created.

Elapsed time: 2.72900 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.ALL_TAB_PRIVS_RECD
        IS 'ALL_TAB_PRIVS_RECD describes object grants, for which the current user is the grantee, or for which an enabled role or PUBLIC is the grantee.';

Comment created.

Elapsed time: 0.17500 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_PRIVS_RECD.GRANTEE
        IS 'Name of the user or role to whom access was granted';

Comment created.

Elapsed time: 0.22000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_PRIVS_RECD.OWNER 
        IS 'Owner of the object';

Comment created.

Elapsed time: 0.20600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_PRIVS_RECD.TABLE_SCHEMA 
        IS 'Schema of the object';

Comment created.

Elapsed time: 0.17400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_PRIVS_RECD.TABLE_NAME 
        IS 'Name of the object';

Comment created.

Elapsed time: 0.13600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_PRIVS_RECD.GRANTOR
        IS 'Name of the user who performed the grant';

Comment created.

Elapsed time: 0.13700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_PRIVS_RECD.PRIVILEGE
        IS 'Privilege on the object';

Comment created.

Elapsed time: 0.13900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_PRIVS_RECD.GRANTABLE
        IS 'Indicates whether the privilege was granted with the GRANT OPTION (YES) or not (NO)';

Comment created.

Elapsed time: 0.13100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TAB_PRIVS_RECD.HIERARCHY
        IS 'Indicates whether the privilege was granted with the HIERARCHY OPTION (YES) or not (NO)';

Comment created.

Elapsed time: 0.13400 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.ALL_TAB_PRIVS_RECD TO PUBLIC;

Grant succeeded.

Elapsed time: 0.11600 ms 


COMMIT;

Commit complete.

Elapsed time: 0.12000 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS ALL_TAB_PRIVS_RECD;

Synonym dropped.

Elapsed time: 0.07000 ms 

CREATE PUBLIC SYNONYM ALL_TAB_PRIVS_RECD FOR DICTIONARY_SCHEMA.ALL_TAB_PRIVS_RECD;

Synonym created.

Elapsed time: 0.09600 ms 

COMMIT;

Commit complete.

Elapsed time: 0.03800 ms 




--##############################################################
--# DICTIONARY_SCHEMA.USER_TAB_PRIVS_RECD
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.USER_TAB_PRIVS_RECD;

View dropped.

Elapsed time: 0.96600 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.USER_TAB_PRIVS_RECD
(
       OWNER
     , TABLE_SCHEMA 
     , TABLE_NAME 
     , GRANTOR
     , PRIVILEGE
     , GRANTABLE
     , HIERARCHY
)
AS
SELECT
       pvtab.OWNER 
     , pvtab.TABLE_SCHEMA 
     , pvtab.TABLE_NAME 
     , pvtab.GRANTOR
     , pvtab.PRIVILEGE
     , pvtab.GRANTABLE
     , pvtab.HIERARCHY
  FROM
       DICTIONARY_SCHEMA.ALL_TAB_PRIVS pvtab
 WHERE 
       pvtab.GRANTEE = CURRENT_USER
;

View created.

Elapsed time: 1.38100 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.USER_TAB_PRIVS_RECD
        IS 'USER_TAB_PRIVS_RECD describes the object grants for which the current user is the grantee.';

Comment created.

Elapsed time: 0.13700 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_PRIVS_RECD.OWNER 
        IS 'Owner of the object';

Comment created.

Elapsed time: 0.14300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_PRIVS_RECD.TABLE_SCHEMA 
        IS 'Schema of the object';

Comment created.

Elapsed time: 0.13700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_PRIVS_RECD.TABLE_NAME 
        IS 'Name of the object';

Comment created.

Elapsed time: 0.13400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_PRIVS_RECD.GRANTOR
        IS 'Name of the user who performed the grant';

Comment created.

Elapsed time: 0.13400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_PRIVS_RECD.PRIVILEGE
        IS 'Privilege on the object';

Comment created.

Elapsed time: 0.13400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_PRIVS_RECD.GRANTABLE
        IS 'Indicates whether the privilege was granted with the GRANT OPTION (YES) or not (NO)';

Comment created.

Elapsed time: 0.14200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_TAB_PRIVS_RECD.HIERARCHY
        IS 'Indicates whether the privilege was granted with the HIERARCHY OPTION (YES) or not (NO)';

Comment created.

Elapsed time: 0.13600 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.USER_TAB_PRIVS_RECD TO PUBLIC;

Grant succeeded.

Elapsed time: 0.14200 ms 


COMMIT;

Commit complete.

Elapsed time: 0.11200 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS USER_TAB_PRIVS_RECD;

Synonym dropped.

Elapsed time: 0.07600 ms 

CREATE PUBLIC SYNONYM USER_TAB_PRIVS_RECD FOR DICTIONARY_SCHEMA.USER_TAB_PRIVS_RECD;

Synonym created.

Elapsed time: 0.08400 ms 

COMMIT;

Commit complete.

Elapsed time: 0.03700 ms 


--##############################################################
--# DICTIONARY_SCHEMA.DBA_TBS_PRIVS
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.DBA_TBS_PRIVS;

View dropped.

Elapsed time: 0.89800 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.DBA_TBS_PRIVS
(
       GRANTOR
     , GRANTEE
     , TABLESPACE_NAME 
     , PRIVILEGE
     , GRANTABLE
)
AS
SELECT
       grantor.AUTHORIZATION_NAME
     , grantee.AUTHORIZATION_NAME
     , spc.TABLESPACE_NAME
     , pvspc.PRIVILEGE_TYPE
     , CAST( CASE WHEN pvspc.IS_GRANTABLE = TRUE THEN 'YES' ELSE 'NO' END AS VARCHAR(3 OCTETS) )
  FROM
       DEFINITION_SCHEMA.TABLESPACE_PRIVILEGES  AS pvspc
     , DEFINITION_SCHEMA.TABLESPACES            AS spc
     , DEFINITION_SCHEMA.AUTHORIZATIONS         AS grantor
     , DEFINITION_SCHEMA.AUTHORIZATIONS         AS grantee
 WHERE
       pvspc.TABLESPACE_ID = spc.TABLESPACE_ID
   AND pvspc.GRANTOR_ID    = grantor.AUTH_ID
   AND pvspc.GRANTEE_ID    = grantee.AUTH_ID
   AND EXISTS ( SELECT GRANTEE_ID  
                  FROM DEFINITION_SCHEMA.DATABASE_PRIVILEGES pvdba 
                 WHERE pvdba.PRIVILEGE_TYPE IN ( 'ACCESS CONTROL' ) 
                   AND ( pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                 FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS audba 
                                                WHERE audba.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                             ) 
                      -- OR  
                      -- pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                      --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                       )  
              ) 
 ORDER BY 
       pvspc.TABLESPACE_ID
     , pvspc.GRANTOR_ID
     , pvspc.GRANTEE_ID
;

View created.

Elapsed time: 1.17500 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.DBA_TBS_PRIVS
        IS 'DBA_TBS_PRIVS describes all tablespace grants in the database.';

Comment created.

Elapsed time: 0.12100 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TBS_PRIVS.GRANTOR
        IS 'Name of the user who performed the grant';

Comment created.

Elapsed time: 0.16700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TBS_PRIVS.GRANTEE
        IS 'Name of the user or role to whom access was granted';

Comment created.

Elapsed time: 0.14400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TBS_PRIVS.TABLESPACE_NAME 
        IS 'Name of the tablespace';

Comment created.

Elapsed time: 0.14700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TBS_PRIVS.PRIVILEGE
        IS 'Privilege on the tablespace';

Comment created.

Elapsed time: 0.13300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_TBS_PRIVS.GRANTABLE
        IS 'Indicates whether the privilege was granted with the GRANT OPTION (YES) or not (NO)';

Comment created.

Elapsed time: 0.13300 ms 


--#####################
--# grant view
--#####################

--GRANT SELECT ON TABLE DICTIONARY_SCHEMA.DBA_TBS_PRIVS TO DBA;
GRANT SELECT ON TABLE DICTIONARY_SCHEMA.DBA_TBS_PRIVS TO PUBLIC;

Grant succeeded.

Elapsed time: 0.17300 ms 


COMMIT;

Commit complete.

Elapsed time: 0.09800 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS DBA_TBS_PRIVS;

Synonym dropped.

Elapsed time: 0.07100 ms 

CREATE PUBLIC SYNONYM DBA_TBS_PRIVS FOR DICTIONARY_SCHEMA.DBA_TBS_PRIVS;

Synonym created.

Elapsed time: 0.08200 ms 

COMMIT;

Commit complete.

Elapsed time: 0.03800 ms 


--##############################################################
--# DICTIONARY_SCHEMA.ALL_TBS_PRIVS
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.ALL_TBS_PRIVS;

View dropped.

Elapsed time: 0.99400 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.ALL_TBS_PRIVS
(
       GRANTOR
     , GRANTEE
     , TABLESPACE_NAME 
     , PRIVILEGE
     , GRANTABLE
)
AS
SELECT
       grantor.AUTHORIZATION_NAME
     , grantee.AUTHORIZATION_NAME
     , spc.TABLESPACE_NAME
     , pvspc.PRIVILEGE_TYPE
     , CAST( CASE WHEN pvspc.IS_GRANTABLE = TRUE THEN 'YES' ELSE 'NO' END AS VARCHAR(3 OCTETS) )
  FROM
       DEFINITION_SCHEMA.TABLESPACE_PRIVILEGES  AS pvspc
     , DEFINITION_SCHEMA.TABLESPACES            AS spc
     , DEFINITION_SCHEMA.AUTHORIZATIONS         AS grantor
     , DEFINITION_SCHEMA.AUTHORIZATIONS         AS grantee
 WHERE
       pvspc.TABLESPACE_ID = spc.TABLESPACE_ID
   AND pvspc.GRANTOR_ID    = grantor.AUTH_ID
   AND pvspc.GRANTEE_ID    = grantee.AUTH_ID
   AND ( grantee.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )
      -- OR  
      -- pvtab.GRANTEE_ID IN ( SELECT AUTH_ID 
      --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
         OR
         grantor.AUTHORIZATION_NAME = CURRENT_USER
       )
 ORDER BY 
       pvspc.TABLESPACE_ID
     , pvspc.GRANTOR_ID
     , pvspc.GRANTEE_ID
;

View created.

Elapsed time: 1.12300 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.ALL_TBS_PRIVS
        IS 'ALL_TBS_PRIVS describes the tablespace grants, for which the current user is the grantor, or grantee, or for which an enabled role or PUBLIC is the grantee.';

Comment created.

Elapsed time: 0.12400 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TBS_PRIVS.GRANTOR
        IS 'Name of the user who performed the grant';

Comment created.

Elapsed time: 0.13900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TBS_PRIVS.GRANTEE
        IS 'Name of the user or role to whom access was granted';

Comment created.

Elapsed time: 0.13600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TBS_PRIVS.TABLESPACE_NAME 
        IS 'Name of the tablespace';

Comment created.

Elapsed time: 0.13300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TBS_PRIVS.PRIVILEGE
        IS 'Privilege on the tablespace';

Comment created.

Elapsed time: 0.14400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TBS_PRIVS.GRANTABLE
        IS 'Indicates whether the privilege was granted with the GRANT OPTION (YES) or not (NO)';

Comment created.

Elapsed time: 0.15000 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.ALL_TBS_PRIVS TO PUBLIC;

Grant succeeded.

Elapsed time: 0.11400 ms 


COMMIT;

Commit complete.

Elapsed time: 0.09700 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS ALL_TBS_PRIVS;

Synonym dropped.

Elapsed time: 0.07200 ms 

CREATE PUBLIC SYNONYM ALL_TBS_PRIVS FOR DICTIONARY_SCHEMA.ALL_TBS_PRIVS;

Synonym created.

Elapsed time: 0.08200 ms 

COMMIT;

Commit complete.

Elapsed time: 0.03800 ms 


--##############################################################
--# DICTIONARY_SCHEMA.ALL_TBS_PRIVS_MADE
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.ALL_TBS_PRIVS_MADE;

View dropped.

Elapsed time: 0.82000 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.ALL_TBS_PRIVS_MADE
(
       GRANTOR
     , GRANTEE
     , TABLESPACE_NAME 
     , PRIVILEGE
     , GRANTABLE
)
AS
SELECT
       pvspc.GRANTOR
     , pvspc.GRANTEE
     , pvspc.TABLESPACE_NAME 
     , pvspc.PRIVILEGE
     , pvspc.GRANTABLE
  FROM
       DICTIONARY_SCHEMA.ALL_TBS_PRIVS pvspc
 WHERE 
       pvspc.GRANTOR = CURRENT_USER
;

View created.

Elapsed time: 1.14200 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.ALL_TBS_PRIVS_MADE
        IS 'ALL_TBS_PRIVS_MADE describes the tablespace grants for which the current user is the grantor.';

Comment created.

Elapsed time: 0.12400 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TBS_PRIVS_MADE.GRANTOR
        IS 'Name of the user who performed the grant';

Comment created.

Elapsed time: 0.14100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TBS_PRIVS_MADE.GRANTEE
        IS 'Name of the user or role to whom access was granted';

Comment created.

Elapsed time: 0.14900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TBS_PRIVS_MADE.TABLESPACE_NAME 
        IS 'Name of the tablespace';

Comment created.

Elapsed time: 0.13600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TBS_PRIVS_MADE.PRIVILEGE
        IS 'Privilege on the tablespace';

Comment created.

Elapsed time: 0.14500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TBS_PRIVS_MADE.GRANTABLE
        IS 'Indicates whether the privilege was granted with the GRANT OPTION (YES) or not (NO)';

Comment created.

Elapsed time: 0.14800 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.ALL_TBS_PRIVS_MADE TO PUBLIC;

Grant succeeded.

Elapsed time: 0.12500 ms 


COMMIT;

Commit complete.

Elapsed time: 0.14900 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS ALL_TBS_PRIVS_MADE;

Synonym dropped.

Elapsed time: 0.08300 ms 

CREATE PUBLIC SYNONYM ALL_TBS_PRIVS_MADE FOR DICTIONARY_SCHEMA.ALL_TBS_PRIVS_MADE;

Synonym created.

Elapsed time: 0.08500 ms 

COMMIT;

Commit complete.

Elapsed time: 0.03900 ms 


--##############################################################
--# DICTIONARY_SCHEMA.ALL_TBS_PRIVS_RECD
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.ALL_TBS_PRIVS_RECD;

View dropped.

Elapsed time: 0.81700 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.ALL_TBS_PRIVS_RECD
(
       GRANTOR
     , GRANTEE
     , TABLESPACE_NAME 
     , PRIVILEGE
     , GRANTABLE
)
AS
SELECT
       pvspc.GRANTOR
     , pvspc.GRANTEE
     , pvspc.TABLESPACE_NAME 
     , pvspc.PRIVILEGE
     , pvspc.GRANTABLE
  FROM
       DICTIONARY_SCHEMA.ALL_TBS_PRIVS pvspc
 WHERE 
       ( 
         pvspc.GRANTEE IN ( CURRENT_USER, 'PUBLIC' )
      -- OR  
      -- pvspc.GRANTEE IN ( SELECT AUTH_NAME 
      --                      FROM INORMATION_SCHEMA.ENABLED_ROLES )  
       )
;

View created.

Elapsed time: 1.10500 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.ALL_TBS_PRIVS_RECD
        IS 'ALL_TBS_PRIVS_RECD describes the tablespace grants, for which the current user is the grantee, or for which an enabled role or PUBLIC is the grantee.';

Comment created.

Elapsed time: 0.13300 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TBS_PRIVS_RECD.GRANTOR
        IS 'Name of the user who performed the grant';

Comment created.

Elapsed time: 0.15100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TBS_PRIVS_RECD.GRANTEE
        IS 'Name of the user or role to whom access was granted';

Comment created.

Elapsed time: 0.13800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TBS_PRIVS_RECD.TABLESPACE_NAME 
        IS 'Name of the tablespace';

Comment created.

Elapsed time: 0.15900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TBS_PRIVS_RECD.PRIVILEGE
        IS 'Privilege on the tablespace';

Comment created.

Elapsed time: 0.19400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_TBS_PRIVS_RECD.GRANTABLE
        IS 'Indicates whether the privilege was granted with the GRANT OPTION (YES) or not (NO)';

Comment created.

Elapsed time: 0.13500 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.ALL_TBS_PRIVS_RECD TO PUBLIC;

Grant succeeded.

Elapsed time: 0.11500 ms 


COMMIT;

Commit complete.

Elapsed time: 0.09600 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS ALL_TBS_PRIVS_RECD;

Synonym dropped.

Elapsed time: 0.07100 ms 

CREATE PUBLIC SYNONYM ALL_TBS_PRIVS_RECD FOR DICTIONARY_SCHEMA.ALL_TBS_PRIVS_RECD;

Synonym created.

Elapsed time: 0.09100 ms 

COMMIT;

Commit complete.

Elapsed time: 0.03800 ms 


--##############################################################
--# DICTIONARY_SCHEMA.DBA_SYS_PRIVS
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.DBA_SYS_PRIVS;

View dropped.

Elapsed time: 0.80500 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.DBA_SYS_PRIVS
(
       GRANTEE
     , PRIVILEGE
     , GRANTABLE
     , ADMIN_OPTION
)
AS
SELECT 
       pvall.GRANTEE
     , pvall.PRIVILEGE
     , pvall.GRANTABLE
     , pvall.ADMIN_OPTION
  FROM (
         SELECT
                pvdba.GRANTEE
              , 1
              , CAST( pvdba.PRIVILEGE || ' ON DATABASE ' AS VARCHAR(256 OCTETS) )
              , pvdba.GRANTABLE
              , pvdba.GRANTABLE
           FROM
                DICTIONARY_SCHEMA.DBA_DB_PRIVS AS pvdba
          UNION ALL
         SELECT
                pvtbs.GRANTEE
              , 2
              , CAST( pvtbs.PRIVILEGE || ' ON TABLESPACE "' || pvtbs.TABLESPACE_NAME || '" ' AS VARCHAR(256 OCTETS) )
              , pvtbs.GRANTABLE
              , pvtbs.GRANTABLE
           FROM
                DICTIONARY_SCHEMA.DBA_TBS_PRIVS AS pvtbs
          UNION ALL
         SELECT
                pvsch.GRANTEE
              , 3
              , CAST( pvsch.PRIVILEGE || ' ON SCHEMA "' || pvsch.SCHEMA_NAME || '" ' AS VARCHAR(256 OCTETS) )
              , pvsch.GRANTABLE
              , pvsch.GRANTABLE
           FROM
                DICTIONARY_SCHEMA.DBA_SCHEMA_PRIVS AS pvsch
       ) pvall( GRANTEE
              , ORDER_NO
              , PRIVILEGE
              , GRANTABLE
              , ADMIN_OPTION )

 ORDER BY 
       GRANTEE
     , ORDER_NO
;

View created.

Elapsed time: 1.51800 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.DBA_SYS_PRIVS
        IS 'DBA_SYS_PRIVS describes all system(database, tablespace, schema) privileges in the database.';

Comment created.

Elapsed time: 0.11900 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_SYS_PRIVS.GRANTEE
        IS 'Name of the grantee';

Comment created.

Elapsed time: 0.14000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_SYS_PRIVS.PRIVILEGE
        IS 'System(database, tablespace, schema) privilege';

Comment created.

Elapsed time: 0.15100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_SYS_PRIVS.GRANTABLE
        IS 'Indicates whether the privilege was granted with the GRANT OPTION (YES) or not (NO)';

Comment created.

Elapsed time: 0.13600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_SYS_PRIVS.ADMIN_OPTION
        IS 'equal to GRANTABLE column';

Comment created.

Elapsed time: 0.13800 ms 


--#####################
--# grant view
--#####################

--GRANT SELECT ON TABLE DICTIONARY_SCHEMA.DBA_SYS_PRIVS TO DBA;
GRANT SELECT ON TABLE DICTIONARY_SCHEMA.DBA_SYS_PRIVS TO PUBLIC;

Grant succeeded.

Elapsed time: 0.11700 ms 


COMMIT;

Commit complete.

Elapsed time: 0.08800 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS DBA_SYS_PRIVS;

Synonym dropped.

Elapsed time: 0.07200 ms 

CREATE PUBLIC SYNONYM DBA_SYS_PRIVS FOR DICTIONARY_SCHEMA.DBA_SYS_PRIVS;

Synonym created.

Elapsed time: 0.08400 ms 

COMMIT;

Commit complete.

Elapsed time: 0.03700 ms 



--##############################################################
--# DICTIONARY_SCHEMA.USER_SYS_PRIVS
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.USER_SYS_PRIVS;

View dropped.

Elapsed time: 0.82000 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.USER_SYS_PRIVS
(
       USERNAME
     , PRIVILEGE
     , GRANTABLE
     , ADMIN_OPTION
)
AS
SELECT
       pvdba.GRANTEE
     , CAST( pvdba.PRIVILEGE || ' ON DATABASE ' AS VARCHAR(256 OCTETS) )
     , pvdba.GRANTABLE
     , pvdba.GRANTABLE
  FROM
       DICTIONARY_SCHEMA.ALL_DB_PRIVS AS pvdba
 WHERE 
       pvdba.GRANTEE IN ( CURRENT_USER, 'PUBLIC' )
UNION ALL
SELECT
       pvtbs.GRANTEE
     , CAST( pvtbs.PRIVILEGE || ' ON TABLESPACE "' || pvtbs.TABLESPACE_NAME || '" ' AS VARCHAR(256 OCTETS) )
     , pvtbs.GRANTABLE
     , pvtbs.GRANTABLE
  FROM
       DICTIONARY_SCHEMA.ALL_TBS_PRIVS AS pvtbs
 WHERE 
       pvtbs.GRANTEE IN ( CURRENT_USER, 'PUBLIC' )
UNION ALL
SELECT
       pvsch.GRANTEE
     , CAST( pvsch.PRIVILEGE || ' ON SCHEMA "' || pvsch.SCHEMA_NAME || '" ' AS VARCHAR(256 OCTETS) )
     , pvsch.GRANTABLE
     , pvsch.GRANTABLE
  FROM
       DICTIONARY_SCHEMA.ALL_SCHEMA_PRIVS AS pvsch
 WHERE 
       pvsch.GRANTEE IN ( CURRENT_USER, 'PUBLIC' )
;

View created.

Elapsed time: 1.53500 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.USER_SYS_PRIVS
        IS 'USER_SYS_PRIVS describes system(database, tablespace, schema) privileges granted to the current user or PUBLIC.';

Comment created.

Elapsed time: 0.12100 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_SYS_PRIVS.USERNAME
        IS 'Name of the user, or PUBLIC';

Comment created.

Elapsed time: 0.15000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_SYS_PRIVS.PRIVILEGE
        IS 'System(database, tablespace, schema) privilege';

Comment created.

Elapsed time: 0.14200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_SYS_PRIVS.GRANTABLE
        IS 'Indicates whether the privilege was granted with the GRANT OPTION (YES) or not (NO)';

Comment created.

Elapsed time: 0.13600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_SYS_PRIVS.ADMIN_OPTION
        IS 'equal to GRANTABLE column';

Comment created.

Elapsed time: 0.13100 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.USER_SYS_PRIVS TO PUBLIC;

Grant succeeded.

Elapsed time: 0.11400 ms 


COMMIT;

Commit complete.

Elapsed time: 0.09400 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS USER_SYS_PRIVS;

Synonym dropped.

Elapsed time: 0.06900 ms 

CREATE PUBLIC SYNONYM USER_SYS_PRIVS FOR DICTIONARY_SCHEMA.USER_SYS_PRIVS;

Synonym created.

Elapsed time: 0.09400 ms 

COMMIT;

Commit complete.

Elapsed time: 0.03800 ms 


--##############################################################
--# DICTIONARY_SCHEMA.DBA_VIEWS
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.DBA_VIEWS;

View dropped.

Elapsed time: 1.54200 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.DBA_VIEWS
(
       OWNER
     , VIEW_SCHEMA 
     , VIEW_NAME 
     , TEXT_LENGTH
     , TEXT
     , TYPE_TEXT_LENGTH
     , TYPE_TEXT
     , OID_TEXT_LENGTH
     , OID_TEXT
     , VIEW_TYPE_OWNER
     , VIEW_TYPE
     , SUPERVIEW_NAME
     , EDITIONING_VIEW
     , READ_ONLY
)
AS
SELECT
       auth.AUTHORIZATION_NAME                          -- OWNER
     , sch.SCHEMA_NAME                                  -- VIEW_SCHEMA 
     , tab.TABLE_NAME                                   -- VIEW_NAME 
     , CAST( LENGTHB( viw.VIEW_DEFINITION ) AS NUMBER ) -- TEXT_LENGTH
     , viw.VIEW_DEFINITION                              -- TEXT
     , CAST( NULL AS NUMBER )                           -- TYPE_TEXT_LENGTH
     , CAST( NULL AS VARCHAR(4000 OCTETS) )             -- TYPE_TEXT
     , CAST( NULL AS NUMBER )                           -- OID_TEXT_LENGTH
     , CAST( NULL AS VARCHAR(4000 OCTETS) )             -- OID_TEXT
     , CAST( NULL AS VARCHAR(128 OCTETS) )              -- VIEW_TYPE_OWNER
     , CAST( NULL AS VARCHAR(32 OCTETS) )               -- VIEW_TYPE
     , CAST( NULL AS VARCHAR(128 OCTETS) )              -- SUPERVIEW_NAME
     , CAST( 'N' AS VARCHAR(1 OCTETS) )                 -- EDITIONING_VIEW
     , CAST( CASE WHEN viw.IS_UPDATABLE = TRUE 
                  THEN 'Y'
                  ELSE 'N'
                  END
             AS VARCHAR(1 OCTETS) )                     -- READ_ONLY
  FROM
       DEFINITION_SCHEMA.TABLES           AS tab 
     , DEFINITION_SCHEMA.VIEWS            AS viw
     , DEFINITION_SCHEMA.SCHEMATA         AS sch 
     , DEFINITION_SCHEMA.AUTHORIZATIONS   AS auth 
 WHERE
       tab.TABLE_TYPE = 'VIEW'
   AND tab.TABLE_ID   = viw.TABLE_ID
   AND tab.SCHEMA_ID  = sch.SCHEMA_ID
   AND tab.OWNER_ID   = auth.AUTH_ID
   AND EXISTS ( SELECT GRANTEE_ID  
                  FROM DEFINITION_SCHEMA.DATABASE_PRIVILEGES pvdba 
                 WHERE pvdba.PRIVILEGE_TYPE IN ( 'ACCESS CONTROL' ) 
                   AND ( pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                 FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS audba 
                                                WHERE audba.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                             ) 
                      -- OR  
                      -- pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                      --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                       )  
              ) 
 ORDER BY 
       tab.SCHEMA_ID
     , tab.TABLE_ID
;

View created.

Elapsed time: 2.14300 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.DBA_VIEWS
        IS 'DBA_VIEWS describes all views in the database.';

Comment created.

Elapsed time: 0.12000 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_VIEWS.OWNER
        IS 'Owner of the view';

Comment created.

Elapsed time: 0.14200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_VIEWS.VIEW_SCHEMA 
        IS 'Schema of the view';

Comment created.

Elapsed time: 0.13800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_VIEWS.VIEW_NAME 
        IS 'Name of the view';

Comment created.

Elapsed time: 0.13400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_VIEWS.TEXT_LENGTH
        IS 'Length of the view text';

Comment created.

Elapsed time: 0.13800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_VIEWS.TEXT
        IS 'View text';

Comment created.

Elapsed time: 0.13700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_VIEWS.TYPE_TEXT_LENGTH
        IS 'Length of the type clause of the typed view';

Comment created.

Elapsed time: 0.14700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_VIEWS.TYPE_TEXT
        IS 'Type clause of the typed view';

Comment created.

Elapsed time: 0.15100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_VIEWS.OID_TEXT_LENGTH
        IS 'Length of the WITH OID clause of the typed view';

Comment created.

Elapsed time: 0.29600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_VIEWS.OID_TEXT
        IS 'WITH OID clause of the typed view';

Comment created.

Elapsed time: 0.13800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_VIEWS.VIEW_TYPE_OWNER
        IS 'Owner of the type of the view if the view is a typed view';

Comment created.

Elapsed time: 0.14400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_VIEWS.VIEW_TYPE
        IS 'Type of the view if the view is a typed view';

Comment created.

Elapsed time: 0.14500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_VIEWS.SUPERVIEW_NAME
        IS 'Name of the superview';

Comment created.

Elapsed time: 0.15300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_VIEWS.EDITIONING_VIEW
        IS 'Reserved for future use';

Comment created.

Elapsed time: 0.13300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_VIEWS.READ_ONLY
        IS 'Indicates whether the view is read-only (Y) or not (N)';

Comment created.

Elapsed time: 0.14800 ms 


--#####################
--# grant view
--#####################

--GRANT SELECT ON TABLE DICTIONARY_SCHEMA.DBA_VIEWS TO DBA;
GRANT SELECT ON TABLE DICTIONARY_SCHEMA.DBA_VIEWS TO PUBLIC;

Grant succeeded.

Elapsed time: 0.13500 ms 


COMMIT;

Commit complete.

Elapsed time: 0.23800 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS DBA_VIEWS;

Synonym dropped.

Elapsed time: 0.07800 ms 

CREATE PUBLIC SYNONYM DBA_VIEWS FOR DICTIONARY_SCHEMA.DBA_VIEWS;

Synonym created.

Elapsed time: 0.09800 ms 

COMMIT;

Commit complete.

Elapsed time: 0.04500 ms 


--##############################################################
--# DICTIONARY_SCHEMA.ALL_VIEWS
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.ALL_VIEWS;

View dropped.

Elapsed time: 1.58900 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.ALL_VIEWS
(
       OWNER
     , VIEW_SCHEMA 
     , VIEW_NAME 
     , TEXT_LENGTH
     , TEXT
     , TYPE_TEXT_LENGTH
     , TYPE_TEXT
     , OID_TEXT_LENGTH
     , OID_TEXT
     , VIEW_TYPE_OWNER
     , VIEW_TYPE
     , SUPERVIEW_NAME
     , EDITIONING_VIEW
     , READ_ONLY
)
AS
SELECT
       auth.AUTHORIZATION_NAME                          -- OWNER
     , sch.SCHEMA_NAME                                  -- VIEW_SCHEMA 
     , tab.TABLE_NAME                                   -- VIEW_NAME 
     , CAST( LENGTHB( viw.VIEW_DEFINITION ) AS NUMBER ) -- TEXT_LENGTH
     , viw.VIEW_DEFINITION                              -- TEXT
     , CAST( NULL AS NUMBER )                           -- TYPE_TEXT_LENGTH
     , CAST( NULL AS VARCHAR(4000 OCTETS) )             -- TYPE_TEXT
     , CAST( NULL AS NUMBER )                           -- OID_TEXT_LENGTH
     , CAST( NULL AS VARCHAR(4000 OCTETS) )             -- OID_TEXT
     , CAST( NULL AS VARCHAR(128 OCTETS) )              -- VIEW_TYPE_OWNER
     , CAST( NULL AS VARCHAR(32 OCTETS) )               -- VIEW_TYPE
     , CAST( NULL AS VARCHAR(128 OCTETS) )              -- SUPERVIEW_NAME
     , CAST( 'N' AS VARCHAR(1 OCTETS) )                 -- EDITIONING_VIEW
     , CAST( CASE WHEN viw.IS_UPDATABLE = TRUE 
                  THEN 'Y'
                  ELSE 'N'
                  END
             AS VARCHAR(1 OCTETS) )                     -- READ_ONLY
  FROM
       DEFINITION_SCHEMA.TABLES           AS tab 
     , DEFINITION_SCHEMA.VIEWS            AS viw
     , DEFINITION_SCHEMA.SCHEMATA         AS sch 
     , DEFINITION_SCHEMA.AUTHORIZATIONS   AS auth 
 WHERE
       tab.TABLE_TYPE = 'VIEW'
   AND tab.TABLE_ID   = viw.TABLE_ID
   AND tab.SCHEMA_ID  = sch.SCHEMA_ID
   AND tab.OWNER_ID   = auth.AUTH_ID
   AND ( tab.TABLE_ID IN ( SELECT pvcol.TABLE_ID 
                              FROM DEFINITION_SCHEMA.COLUMN_PRIVILEGES AS pvcol 
                             WHERE ( pvcol.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                             FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS aucol 
                                                            WHERE aucol.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                         ) 
                                  -- OR  
                                  -- pvcol.GRANTEE_ID IN ( SELECT AUTH_ID 
                                  --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                   )
                          ) 
         OR 
         tab.TABLE_ID IN ( SELECT pvtab.TABLE_ID 
                             FROM DEFINITION_SCHEMA.TABLE_PRIVILEGES AS pvtab 
                            WHERE ( pvtab.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                            FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS autab 
                                                           WHERE autab.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                        ) 
                                 -- OR  
                                 -- pvtab.GRANTEE_ID IN ( SELECT AUTH_ID 
                                 --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                  )
                          ) 
         OR 
         tab.SCHEMA_ID IN ( SELECT pvsch.SCHEMA_ID 
                              FROM DEFINITION_SCHEMA.SCHEMA_PRIVILEGES AS pvsch 
                             WHERE pvsch.PRIVILEGE_TYPE IN ( 'CONTROL SCHEMA', 'ALTER TABLE', 'DROP TABLE', 
                                                             'SELECT TABLE', 'INSERT TABLE', 'DELETE TABLE', 'UPDATE TABLE', 'LOCK TABLE' ) 
                               AND ( pvsch.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                             FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS ausch 
                                                            WHERE ausch.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                         ) 
                                  -- OR  
                                  -- pvsch.GRANTEE_ID IN ( SELECT AUTH_ID 
                                  --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                   )
                          ) 
         OR 
         EXISTS ( SELECT GRANTEE_ID  
                    FROM DEFINITION_SCHEMA.DATABASE_PRIVILEGES pvdba 
                   WHERE pvdba.PRIVILEGE_TYPE IN ( 'ALTER ANY TABLE', 'DROP ANY TABLE', 
                                                   'SELECT ANY TABLE', 'INSERT ANY TABLE', 'DELETE ANY TABLE', 'UPDATE ANY TABLE', 'LOCK ANY TABLE' ) 
                     AND ( pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                   FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS audba 
                                                  WHERE audba.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                ) 
                        -- OR  
                        -- pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                        --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                         )  
                ) 
       ) 
 ORDER BY 
       tab.SCHEMA_ID
     , tab.TABLE_ID
;

View created.

Elapsed time: 2.20800 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.ALL_VIEWS
        IS 'ALL_VIEWS describes the views accessible to the current user.';

Comment created.

Elapsed time: 0.12000 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_VIEWS.OWNER
        IS 'Owner of the view';

Comment created.

Elapsed time: 0.14800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_VIEWS.VIEW_SCHEMA 
        IS 'Schema of the view';

Comment created.

Elapsed time: 0.14700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_VIEWS.VIEW_NAME 
        IS 'Name of the view';

Comment created.

Elapsed time: 0.14800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_VIEWS.TEXT_LENGTH
        IS 'Length of the view text';

Comment created.

Elapsed time: 0.13900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_VIEWS.TEXT
        IS 'View text';

Comment created.

Elapsed time: 0.13400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_VIEWS.TYPE_TEXT_LENGTH
        IS 'Length of the type clause of the typed view';

Comment created.

Elapsed time: 0.16200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_VIEWS.TYPE_TEXT
        IS 'Type clause of the typed view';

Comment created.

Elapsed time: 0.14100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_VIEWS.OID_TEXT_LENGTH
        IS 'Length of the WITH OID clause of the typed view';

Comment created.

Elapsed time: 0.13600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_VIEWS.OID_TEXT
        IS 'WITH OID clause of the typed view';

Comment created.

Elapsed time: 0.13200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_VIEWS.VIEW_TYPE_OWNER
        IS 'Owner of the type of the view if the view is a typed view';

Comment created.

Elapsed time: 0.13500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_VIEWS.VIEW_TYPE
        IS 'Type of the view if the view is a typed view';

Comment created.

Elapsed time: 0.13900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_VIEWS.SUPERVIEW_NAME
        IS 'Name of the superview';

Comment created.

Elapsed time: 0.13200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_VIEWS.EDITIONING_VIEW
        IS 'Reserved for future use';

Comment created.

Elapsed time: 0.13400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_VIEWS.READ_ONLY
        IS 'Indicates whether the view is read-only (Y) or not (N)';

Comment created.

Elapsed time: 0.13500 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.ALL_VIEWS TO PUBLIC;

Grant succeeded.

Elapsed time: 0.12000 ms 


COMMIT;

Commit complete.

Elapsed time: 0.17400 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS ALL_VIEWS;

Synonym dropped.

Elapsed time: 0.07600 ms 

CREATE PUBLIC SYNONYM ALL_VIEWS FOR DICTIONARY_SCHEMA.ALL_VIEWS;

Synonym created.

Elapsed time: 0.08100 ms 

COMMIT;

Commit complete.

Elapsed time: 0.03700 ms 


--##############################################################
--# DICTIONARY_SCHEMA.USER_VIEWS
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.USER_VIEWS;

View dropped.

Elapsed time: 1.44700 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.USER_VIEWS
(
       VIEW_SCHEMA 
     , VIEW_NAME 
     , TEXT_LENGTH
     , TEXT
     , TYPE_TEXT_LENGTH
     , TYPE_TEXT
     , OID_TEXT_LENGTH
     , OID_TEXT
     , VIEW_TYPE_OWNER
     , VIEW_TYPE
     , SUPERVIEW_NAME
     , EDITIONING_VIEW
     , READ_ONLY
)
AS
SELECT
       av.VIEW_SCHEMA 
     , av.VIEW_NAME 
     , av.TEXT_LENGTH
     , av.TEXT
     , av.TYPE_TEXT_LENGTH
     , av.TYPE_TEXT
     , av.OID_TEXT_LENGTH
     , av.OID_TEXT
     , av.VIEW_TYPE_OWNER
     , av.VIEW_TYPE
     , av.SUPERVIEW_NAME
     , av.EDITIONING_VIEW
     , av.READ_ONLY
  FROM
       DICTIONARY_SCHEMA.ALL_VIEWS   AS av
 WHERE
       av.OWNER = CURRENT_USER
;

View created.

Elapsed time: 2.20100 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.USER_VIEWS
        IS 'USER_VIEWS describes the views owned by the current user.';

Comment created.

Elapsed time: 0.12100 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_VIEWS.VIEW_SCHEMA 
        IS 'Schema of the view';

Comment created.

Elapsed time: 0.16400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_VIEWS.VIEW_NAME 
        IS 'Name of the view';

Comment created.

Elapsed time: 0.13600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_VIEWS.TEXT_LENGTH
        IS 'Length of the view text';

Comment created.

Elapsed time: 0.14100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_VIEWS.TEXT
        IS 'View text';

Comment created.

Elapsed time: 0.13400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_VIEWS.TYPE_TEXT_LENGTH
        IS 'Length of the type clause of the typed view';

Comment created.

Elapsed time: 0.13400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_VIEWS.TYPE_TEXT
        IS 'Type clause of the typed view';

Comment created.

Elapsed time: 0.14400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_VIEWS.OID_TEXT_LENGTH
        IS 'Length of the WITH OID clause of the typed view';

Comment created.

Elapsed time: 0.14000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_VIEWS.OID_TEXT
        IS 'WITH OID clause of the typed view';

Comment created.

Elapsed time: 0.18400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_VIEWS.VIEW_TYPE_OWNER
        IS 'Owner of the type of the view if the view is a typed view';

Comment created.

Elapsed time: 0.13900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_VIEWS.VIEW_TYPE
        IS 'Type of the view if the view is a typed view';

Comment created.

Elapsed time: 0.13900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_VIEWS.SUPERVIEW_NAME
        IS 'Name of the superview';

Comment created.

Elapsed time: 0.13300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_VIEWS.EDITIONING_VIEW
        IS 'Reserved for future use';

Comment created.

Elapsed time: 0.13300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_VIEWS.READ_ONLY
        IS 'Indicates whether the view is read-only (Y) or not (N)';

Comment created.

Elapsed time: 0.13500 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.USER_VIEWS TO PUBLIC;

Grant succeeded.

Elapsed time: 0.12400 ms 


COMMIT;

Commit complete.

Elapsed time: 0.15600 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS USER_VIEWS;

Synonym dropped.

Elapsed time: 0.07200 ms 

CREATE PUBLIC SYNONYM USER_VIEWS FOR DICTIONARY_SCHEMA.USER_VIEWS;

Synonym created.

Elapsed time: 0.08200 ms 

COMMIT;

Commit complete.

Elapsed time: 0.03700 ms 


--##############################################################
--# DICTIONARY_SCHEMA.DBA_USERS
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.DBA_USERS;

View dropped.

Elapsed time: 1.61400 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.DBA_USERS
(
       USERNAME
     , USER_ID
     , PASSWORD
     , ACCOUNT_STATUS
     , LOCK_DATE
     , EXPIRY_DATE
     , FAILED_LOGIN_ATTEMPTS
     , DEFAULT_TABLESPACE
     , TEMPORARY_TABLESPACE
     , CREATED
     , PROFILE_NAME
     , INITIAL_RSRC_CONSUMER_GROUP
     , EXTERNAL_NAME
     , PASSWORD_VERSIONS
     , EDITIONS_ENABLED
     , AUTHENTICATION_TYPE
)
AS
SELECT
       auth.AUTHORIZATION_NAME                                 -- USERNAME
     , CAST( auth.AUTH_ID AS NUMBER )                          -- USER_ID
     , CAST( usr.ENCRYPTED_PASSWORD AS VARCHAR(128 OCTETS) )   -- PASSWORD
     , CAST( CASE WHEN (usr.EXPIRY_STATUS =  'OPEN' AND usr.LOCKED_STATUS =  'OPEN' )   THEN 'OPEN'
                  WHEN (usr.EXPIRY_STATUS =  'OPEN' AND usr.LOCKED_STATUS <> 'OPEN' )   THEN usr.LOCKED_STATUS
                  WHEN (usr.EXPIRY_STATUS <> 'OPEN' AND usr.LOCKED_STATUS =  'OPEN' )   THEN usr.EXPIRY_STATUS
                  ELSE usr.EXPIRY_STATUS || ' & ' || usr.LOCKED_STATUS
                  END AS VARCHAR(32 OCTETS) )                    -- ACCOUNT_STATUS
     , usr.LOCKED_TIME                                           -- LOCK_DATE
     , usr.EXPIRY_TIME                                           -- EXPIRY_DATE
     , CAST( usr.FAILED_LOGIN_ATTEMPTS AS NUMBER )               -- FAILED_LOGIN_ATTEMPTS
     , ( SELECT spc.TABLESPACE_NAME 
           FROM DEFINITION_SCHEMA.TABLESPACES AS spc
          WHERE spc.TABLESPACE_ID = usr.DEFAULT_DATA_TABLESPACE_ID ) -- DEFAULT_TABLESPACE
     , ( SELECT spc.TABLESPACE_NAME 
           FROM DEFINITION_SCHEMA.TABLESPACES AS spc
          WHERE spc.TABLESPACE_ID = usr.DEFAULT_TEMP_TABLESPACE_ID ) -- TEMPORARY_TABLESPACE
     , auth.CREATED_TIME                          -- CREATED
     , CAST( ( SELECT PROFILE_NAME 
                 FROM DEFINITION_SCHEMA.PROFILES prof
                WHERE prof.PROFILE_ID = usr.PROFILE_ID )
              AS VARCHAR(128 OCTETS) )            -- PROFILE_NAME
     , CAST( NULL AS VARCHAR(128 OCTETS) )        -- INITIAL_RSRC_CONSUMER_GROUP
     , CAST( NULL AS VARCHAR(128 OCTETS) )        -- EXTERNAL_NAME
     , CAST( NULL AS VARCHAR(32 OCTETS) )         -- PASSWORD_VERSIONS
     , CAST( CASE WHEN auth.AUTH_ID > ( SELECT auth2.AUTH_ID
                                          FROM DEFINITION_SCHEMA.AUTHORIZATIONS  AS auth2
                                         WHERE auth2.AUTHORIZATION_NAME = 'PUBLIC' ) 
                  THEN 'Y'
                  ELSE 'N'
                  END AS VARCHAR(1 OCTETS) )      -- EDITIONS_ENABLED
     , CAST( 'PASSWORD' AS VARCHAR(32 OCTETS) )   -- AUTHENTICATION_TYPE
  FROM
       DEFINITION_SCHEMA.AUTHORIZATIONS   AS auth 
     , DEFINITION_SCHEMA.USERS            AS usr
 WHERE
       auth.AUTH_ID = usr.AUTH_ID
   AND EXISTS ( SELECT GRANTEE_ID  
                  FROM DEFINITION_SCHEMA.DATABASE_PRIVILEGES pvdba 
                 WHERE pvdba.PRIVILEGE_TYPE IN ( 'ACCESS CONTROL' ) 
                   AND ( pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                 FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS audba 
                                                WHERE audba.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                             ) 
                      -- OR  
                      -- pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                      --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                       )  
              ) 
 ORDER BY 
       auth.AUTH_ID
;

View created.

Elapsed time: 2.16500 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.DBA_USERS
        IS 'DBA_USERS describes all users of the database.';

Comment created.

Elapsed time: 0.12200 ms 


--#####################
--# comment column
--#####################


COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_USERS.USERNAME
        IS 'Name of the user';

Comment created.

Elapsed time: 0.14100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_USERS.USER_ID
        IS 'ID number of the user';

Comment created.

Elapsed time: 0.14700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_USERS.PASSWORD
        IS 'encrypted password';

Comment created.

Elapsed time: 0.15800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_USERS.ACCOUNT_STATUS
        IS 'Account status: the value in ( OPEN, EXPIRED, EXPIRED(GRACE), LOCKED(TIMED), LOCKED, EXPIRED & LOCKED(TIMED), EXPIRED(GRACE) & LOCKED(TIMED), EXPIRED & LOCKED, EXPIRED(GRACE) & LOCKED )';

Comment created.

Elapsed time: 0.14700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_USERS.LOCK_DATE
        IS 'Timestamp the account was locked if account status was LOCKED';

Comment created.

Elapsed time: 0.14400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_USERS.EXPIRY_DATE
        IS 'Timestamp of expiration of the account';

Comment created.

Elapsed time: 0.13700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_USERS.FAILED_LOGIN_ATTEMPTS
        IS 'Consecutive failed login attempts count';

Comment created.

Elapsed time: 0.13900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_USERS.DEFAULT_TABLESPACE
        IS 'Default tablespace for data';

Comment created.

Elapsed time: 0.13400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_USERS.TEMPORARY_TABLESPACE
        IS 'Name of the default tablespace for temporary tables or the name of a tablespace group';

Comment created.

Elapsed time: 0.15000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_USERS.CREATED
        IS 'User creation timestamp';

Comment created.

Elapsed time: 0.13300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_USERS.PROFILE_NAME
        IS 'User resource profile name';

Comment created.

Elapsed time: 0.13700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_USERS.INITIAL_RSRC_CONSUMER_GROUP
        IS 'Initial resource consumer group for the user';

Comment created.

Elapsed time: 0.13700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_USERS.EXTERNAL_NAME
        IS 'User external name';

Comment created.

Elapsed time: 0.13300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_USERS.PASSWORD_VERSIONS
        IS 'Shows the list of versions of the password hashes (verifiers).';

Comment created.

Elapsed time: 0.13500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_USERS.EDITIONS_ENABLED
        IS 'Indicates whether editions have been enabled for the corresponding user (Y) or not (N).';

Comment created.

Elapsed time: 0.13400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_USERS.AUTHENTICATION_TYPE
        IS 'Indicates the authentication mechanism for the user.';

Comment created.

Elapsed time: 0.13300 ms 


--#####################
--# grant view
--#####################

--GRANT SELECT ON TABLE DICTIONARY_SCHEMA.DBA_USERS TO DBA;
GRANT SELECT ON TABLE DICTIONARY_SCHEMA.DBA_USERS TO PUBLIC;

Grant succeeded.

Elapsed time: 0.11700 ms 


COMMIT;

Commit complete.

Elapsed time: 0.18600 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS DBA_USERS;

Synonym dropped.

Elapsed time: 0.07100 ms 

CREATE PUBLIC SYNONYM DBA_USERS FOR DICTIONARY_SCHEMA.DBA_USERS;

Synonym created.

Elapsed time: 0.08500 ms 

COMMIT;

Commit complete.

Elapsed time: 0.03700 ms 


--##############################################################
--# DICTIONARY_SCHEMA.ALL_USERS
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.ALL_USERS;

View dropped.

Elapsed time: 0.61800 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.ALL_USERS
(
       USERNAME
     , USER_ID
     , CREATED
)
AS
SELECT
       auth.AUTHORIZATION_NAME 
     , CAST( auth.AUTH_ID AS NUMBER )
     , auth.CREATED_TIME
  FROM
       DEFINITION_SCHEMA.AUTHORIZATIONS   AS auth 
 WHERE
       auth.AUTHORIZATION_TYPE = 'USER'
 ORDER BY 
       auth.AUTH_ID
;

View created.

Elapsed time: 0.74300 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.ALL_USERS
        IS 'ALL_USERS lists all users of the database visible to the current user.';

Comment created.

Elapsed time: 0.12000 ms 


--#####################
--# comment column
--#####################


COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_USERS.USERNAME
        IS 'Name of the user';

Comment created.

Elapsed time: 0.14300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_USERS.USER_ID
        IS 'ID number of the user';

Comment created.

Elapsed time: 0.13600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_USERS.CREATED
        IS 'User creation timestamp';

Comment created.

Elapsed time: 0.13200 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.ALL_USERS TO PUBLIC;

Grant succeeded.

Elapsed time: 0.11500 ms 


COMMIT;

Commit complete.

Elapsed time: 0.08800 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS ALL_USERS;

Synonym dropped.

Elapsed time: 0.07000 ms 

CREATE PUBLIC SYNONYM ALL_USERS FOR DICTIONARY_SCHEMA.ALL_USERS;

Synonym created.

Elapsed time: 0.08800 ms 

COMMIT;

Commit complete.

Elapsed time: 0.03800 ms 



--##############################################################
--# DICTIONARY_SCHEMA.USER_USERS
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.USER_USERS;

View dropped.

Elapsed time: 1.14900 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.USER_USERS
(
       USERNAME
     , USER_ID
     , ACCOUNT_STATUS
     , LOCK_DATE
     , EXPIRY_DATE
     , DEFAULT_TABLESPACE
     , TEMPORARY_TABLESPACE
     , CREATED
     , INITIAL_RSRC_CONSUMER_GROUP
     , EXTERNAL_NAME
)
AS
SELECT
       auth.AUTHORIZATION_NAME                -- USERNAME
     , CAST( auth.AUTH_ID AS NUMBER )         -- USER_ID
     , CAST( CASE WHEN (usr.EXPIRY_STATUS =  'OPEN' AND usr.LOCKED_STATUS =  'OPEN' )   THEN 'OPEN'
                  WHEN (usr.EXPIRY_STATUS =  'OPEN' AND usr.LOCKED_STATUS <> 'OPEN' )   THEN usr.LOCKED_STATUS
                  WHEN (usr.EXPIRY_STATUS <> 'OPEN' AND usr.LOCKED_STATUS =  'OPEN' )   THEN usr.EXPIRY_STATUS
                  ELSE usr.EXPIRY_STATUS || ' & ' || usr.LOCKED_STATUS
                  END AS VARCHAR(32 OCTETS) )                    -- ACCOUNT_STATUS
     , usr.LOCKED_TIME                                           -- LOCK_DATE
     , usr.EXPIRY_TIME                                           -- EXPIRY_DATE
     , ( SELECT spc.TABLESPACE_NAME 
           FROM DEFINITION_SCHEMA.TABLESPACES AS spc
          WHERE spc.TABLESPACE_ID = usr.DEFAULT_DATA_TABLESPACE_ID ) -- DEFAULT_TABLESPACE
     , ( SELECT spc.TABLESPACE_NAME 
           FROM DEFINITION_SCHEMA.TABLESPACES AS spc
          WHERE spc.TABLESPACE_ID = usr.DEFAULT_TEMP_TABLESPACE_ID ) -- TEMPORARY_TABLESPACE
     , auth.CREATED_TIME                      -- CREATED
     , CAST( NULL AS VARCHAR(128 OCTETS) )    -- INITIAL_RSRC_CONSUMER_GROUP
     , CAST( NULL AS VARCHAR(128 OCTETS) )    -- EXTERNAL_NAME
  FROM
       DEFINITION_SCHEMA.AUTHORIZATIONS   AS auth 
     , DEFINITION_SCHEMA.USERS            AS usr
 WHERE
       auth.AUTH_ID = usr.AUTH_ID
   AND auth.AUTHORIZATION_NAME = CURRENT_USER
 ORDER BY 
       auth.AUTH_ID
;

View created.

Elapsed time: 1.51100 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.USER_USERS
        IS 'USER_USERS describes the current user.';

Comment created.

Elapsed time: 0.12300 ms 


--#####################
--# comment column
--#####################


COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_USERS.USERNAME
        IS 'Name of the user';

Comment created.

Elapsed time: 0.16700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_USERS.USER_ID
        IS 'ID number of the user';

Comment created.

Elapsed time: 0.13700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_USERS.ACCOUNT_STATUS
        IS 'Account status: the value in ( OPEN, EXPIRED, EXPIRED(GRACE), LOCKED(TIMED), LOCKED, EXPIRED & LOCKED(TIMED), EXPIRED(GRACE) & LOCKED(TIMED), EXPIRED & LOCKED, EXPIRED(GRACE) & LOCKED )';

Comment created.

Elapsed time: 0.13900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_USERS.LOCK_DATE
        IS 'Timestamp the account was locked if account status was LOCKED';

Comment created.

Elapsed time: 0.13400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_USERS.EXPIRY_DATE
        IS 'Timestamp of expiration of the account';

Comment created.

Elapsed time: 0.13500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_USERS.DEFAULT_TABLESPACE
        IS 'Default tablespace for data';

Comment created.

Elapsed time: 0.14600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_USERS.TEMPORARY_TABLESPACE
        IS 'Name of the default tablespace for temporary tables or the name of a tablespace group';

Comment created.

Elapsed time: 0.14900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_USERS.CREATED
        IS 'User creation timestamp';

Comment created.

Elapsed time: 0.16000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_USERS.INITIAL_RSRC_CONSUMER_GROUP
        IS 'Initial resource consumer group for the user';

Comment created.

Elapsed time: 0.13400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_USERS.EXTERNAL_NAME
        IS 'User external name';

Comment created.

Elapsed time: 0.14400 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.USER_USERS TO PUBLIC;

Grant succeeded.

Elapsed time: 0.12400 ms 


COMMIT;

Commit complete.

Elapsed time: 0.13600 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS USER_USERS;

Synonym dropped.

Elapsed time: 0.07000 ms 

CREATE PUBLIC SYNONYM USER_USERS FOR DICTIONARY_SCHEMA.USER_USERS;

Synonym created.

Elapsed time: 0.08300 ms 

COMMIT;

Commit complete.

Elapsed time: 0.03700 ms 


--##############################################################
--# DICTIONARY_SCHEMA.DBA_SYNONYMS
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.DBA_SYNONYMS;

View dropped.

Elapsed time: 0.94400 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.DBA_SYNONYMS
(
       SYNONYM_OWNER 
     , SYNONYM_SCHEMA 
     , SYNONYM_NAME 
     , OBJECT_SCHEMA_NAME
     , OBJECT_NAME
     , DB_LINK
)
AS
(
SELECT
       auth.AUTHORIZATION_NAME              -- SYNONYM_OWNER 
     , sch.SCHEMA_NAME                      -- SYNONYM_SCHEMA 
     , syn.SYNONYM_NAME                     -- SYNONYM_NAME 
     , syn.OBJECT_SCHEMA_NAME               -- OBJECT_SCHEMA_NAME 
     , syn.OBJECT_NAME                      -- OBJECT_NAME 
     , CAST( NULL AS VARCHAR(128 OCTETS) )  -- DB_LINK
  FROM
       DEFINITION_SCHEMA.SYNONYMS          AS syn
     , DEFINITION_SCHEMA.SCHEMATA          AS sch 
     , DEFINITION_SCHEMA.AUTHORIZATIONS    AS auth
 WHERE
       syn.SCHEMA_ID   = sch.SCHEMA_ID
   AND syn.OWNER_ID    = auth.AUTH_ID
   AND EXISTS ( SELECT GRANTEE_ID  
                  FROM DEFINITION_SCHEMA.DATABASE_PRIVILEGES pvdba 
                 WHERE pvdba.PRIVILEGE_TYPE IN ( 'ACCESS CONTROL' ) 
                   AND ( pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                 FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS audba 
                                                WHERE audba.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                             ) 
                      -- OR  
                      -- pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                      --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                       )  
               ) 
 ORDER BY 
       syn.SCHEMA_ID
     , syn.SYNONYM_ID
)
UNION ALL
(
SELECT
       CAST( 'PUBLIC' AS VARCHAR(128 OCTETS) )  -- SYNONYM_OWNER 
     , CAST( NULL AS VARCHAR(128 OCTETS) )      -- SYNONYM_SCHEMA 
     , psyn.SYNONYM_NAME                        -- SYNONYM_NAME 
     , psyn.OBJECT_SCHEMA_NAME                  -- OBJECT_SCHEMA_NAME 
     , psyn.OBJECT_NAME                         -- OBJECT_NAME 
     , CAST( NULL AS VARCHAR(128 OCTETS) )      -- DB_LINK
  FROM
       DEFINITION_SCHEMA.PUBLIC_SYNONYMS   AS psyn
 WHERE EXISTS ( SELECT GRANTEE_ID  
                  FROM DEFINITION_SCHEMA.DATABASE_PRIVILEGES pvdba 
                 WHERE pvdba.PRIVILEGE_TYPE IN ( 'ACCESS CONTROL' ) 
                   AND ( pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                 FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS audba 
                                                WHERE audba.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                             ) 
                      -- OR  
                      -- pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                      --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                       )  
               ) 
 ORDER BY 
       psyn.SYNONYM_ID
)
;

View created.

Elapsed time: 1.31800 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.DBA_SYNONYMS
        IS 'DBA_SYNONYMS describes all synonyms in the database.';

Comment created.

Elapsed time: 0.11800 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_SYNONYMS.SYNONYM_OWNER 
        IS 'Owner of the synonym';

Comment created.

Elapsed time: 0.15000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_SYNONYMS.SYNONYM_SCHEMA 
        IS 'Schema of the synonym';

Comment created.

Elapsed time: 0.13500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_SYNONYMS.SYNONYM_NAME 
        IS 'Synonym name';

Comment created.

Elapsed time: 0.13100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_SYNONYMS.OBJECT_SCHEMA_NAME 
        IS 'Schema name of the base object';

Comment created.

Elapsed time: 0.13300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_SYNONYMS.OBJECT_NAME 
        IS 'Name of the base object';

Comment created.

Elapsed time: 0.13000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_SYNONYMS.DB_LINK
        IS 'Reserved for future use';

Comment created.

Elapsed time: 0.13100 ms 


--#####################
--# grant view
--#####################

--GRANT SELECT ON TABLE DICTIONARY_SCHEMA.DBA_SYNONYMS TO DBA;
GRANT SELECT ON TABLE DICTIONARY_SCHEMA.DBA_SYNONYMS TO PUBLIC;

Grant succeeded.

Elapsed time: 0.11600 ms 


COMMIT;

Commit complete.

Elapsed time: 0.10200 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS DBA_SYNONYMS;

Synonym dropped.

Elapsed time: 0.07200 ms 

CREATE PUBLIC SYNONYM DBA_SYNONYMS FOR DICTIONARY_SCHEMA.DBA_SYNONYMS;

Synonym created.

Elapsed time: 0.08200 ms 

COMMIT;

Commit complete.

Elapsed time: 0.03700 ms 



--##############################################################
--# DICTIONARY_SCHEMA.ALL_SYNONYMS
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.ALL_SYNONYMS;

View dropped.

Elapsed time: 0.93700 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.ALL_SYNONYMS
(
       SYNONYM_OWNER 
     , SYNONYM_SCHEMA 
     , SYNONYM_NAME 
     , OBJECT_SCHEMA_NAME
     , OBJECT_NAME
     , DB_LINK
)
AS
(
SELECT
       auth.AUTHORIZATION_NAME              -- SYNONYM_OWNER 
     , sch.SCHEMA_NAME                      -- SYNONYM_SCHEMA 
     , syn.SYNONYM_NAME                     -- SYNONYM_NAME 
     , syn.OBJECT_SCHEMA_NAME               -- OBJECT_SCHEMA_NAME 
     , syn.OBJECT_NAME                      -- OBJECT_NAME 
     , CAST( NULL AS VARCHAR(128 OCTETS) )  -- DB_LINK
  FROM
       DEFINITION_SCHEMA.SYNONYMS          AS syn
     , DEFINITION_SCHEMA.SCHEMATA          AS sch 
     , DEFINITION_SCHEMA.AUTHORIZATIONS    AS auth
 WHERE
       syn.SCHEMA_ID   = sch.SCHEMA_ID
   AND syn.OWNER_ID    = auth.AUTH_ID
 ORDER BY 
       syn.SCHEMA_ID
     , syn.SYNONYM_ID
)
UNION ALL
(
SELECT
       CAST( 'PUBLIC' AS VARCHAR(128 OCTETS) )  -- SYNONYM_OWNER 
     , CAST( NULL AS VARCHAR(128 OCTETS) )      -- SYNONYM_SCHEMA 
     , psyn.SYNONYM_NAME                        -- SYNONYM_NAME 
     , psyn.OBJECT_SCHEMA_NAME                  -- OBJECT_SCHEMA_NAME 
     , psyn.OBJECT_NAME                         -- OBJECT_NAME 
     , CAST( NULL AS VARCHAR(128 OCTETS) )      -- DB_LINK
  FROM
       DEFINITION_SCHEMA.PUBLIC_SYNONYMS   AS psyn
 ORDER BY 
       psyn.SYNONYM_ID
)
;

View created.

Elapsed time: 1.16700 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.ALL_SYNONYMS
        IS 'DBA_SYNONYMS describes describes all synonyms accessible to the current user.';

Comment created.

Elapsed time: 0.12100 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_SYNONYMS.SYNONYM_OWNER 
        IS 'Owner of the synonym';

Comment created.

Elapsed time: 0.18200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_SYNONYMS.SYNONYM_SCHEMA 
        IS 'Schema of the synonym';

Comment created.

Elapsed time: 0.13900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_SYNONYMS.SYNONYM_NAME 
        IS 'Synonym name';

Comment created.

Elapsed time: 0.15800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_SYNONYMS.OBJECT_SCHEMA_NAME 
        IS 'Object Schema name';

Comment created.

Elapsed time: 0.13600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_SYNONYMS.OBJECT_NAME 
        IS 'Object name';

Comment created.

Elapsed time: 0.14600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_SYNONYMS.DB_LINK
        IS 'Reserved for future use';

Comment created.

Elapsed time: 0.13200 ms 


--#####################
--# grant view
--#####################

--GRANT SELECT ON TABLE DICTIONARY_SCHEMA.ALL_SYNONYMS TO DBA;
GRANT SELECT ON TABLE DICTIONARY_SCHEMA.ALL_SYNONYMS TO PUBLIC;

Grant succeeded.

Elapsed time: 0.12500 ms 


COMMIT;

Commit complete.

Elapsed time: 0.14300 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS ALL_SYNONYMS;

Synonym dropped.

Elapsed time: 0.07600 ms 

CREATE PUBLIC SYNONYM ALL_SYNONYMS FOR DICTIONARY_SCHEMA.ALL_SYNONYMS;

Synonym created.

Elapsed time: 0.11300 ms 

COMMIT;

Commit complete.

Elapsed time: 0.06000 ms 




--##############################################################
--# DICTIONARY_SCHEMA.USER_SYNONYMS
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.USER_SYNONYMS;

View dropped.

Elapsed time: 0.89800 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.USER_SYNONYMS
(
       SYNONYM_OWNER 
     , SYNONYM_SCHEMA 
     , SYNONYM_NAME 
     , OBJECT_SCHEMA_NAME
     , OBJECT_NAME
     , DB_LINK
)
AS
SELECT
       asyn.SYNONYM_OWNER 
     , asyn.SYNONYM_SCHEMA 
     , asyn.SYNONYM_NAME 
     , asyn.OBJECT_SCHEMA_NAME
     , asyn.OBJECT_NAME
     , asyn.DB_LINK
  FROM
       DICTIONARY_SCHEMA.ALL_SYNONYMS   AS asyn
 WHERE
       asyn.SYNONYM_OWNER = CURRENT_USER
;

View created.

Elapsed time: 1.26800 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.USER_SYNONYMS
        IS 'DBA_SYNONYMS describes all synonyms owned by the current user.';

Comment created.

Elapsed time: 0.13000 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_SYNONYMS.SYNONYM_OWNER 
        IS 'Owner of the synonym';

Comment created.

Elapsed time: 0.14400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_SYNONYMS.SYNONYM_SCHEMA 
        IS 'Schema of the synonym';

Comment created.

Elapsed time: 0.14400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_SYNONYMS.SYNONYM_NAME 
        IS 'Synonym name';

Comment created.

Elapsed time: 0.13600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_SYNONYMS.OBJECT_SCHEMA_NAME 
        IS 'Object Schema name';

Comment created.

Elapsed time: 0.13400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_SYNONYMS.OBJECT_NAME 
        IS 'Object name';

Comment created.

Elapsed time: 0.13200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_SYNONYMS.DB_LINK
        IS 'Reserved for future use';

Comment created.

Elapsed time: 0.13900 ms 


--#####################
--# grant view
--#####################

--GRANT SELECT ON TABLE DICTIONARY_SCHEMA.USER_SYNONYMS TO DBA;
GRANT SELECT ON TABLE DICTIONARY_SCHEMA.USER_SYNONYMS TO PUBLIC;

Grant succeeded.

Elapsed time: 0.11600 ms 


COMMIT;

Commit complete.

Elapsed time: 0.10300 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS USER_SYNONYMS;

Synonym dropped.

Elapsed time: 0.06800 ms 

CREATE PUBLIC SYNONYM USER_SYNONYMS FOR DICTIONARY_SCHEMA.USER_SYNONYMS;

Synonym created.

Elapsed time: 0.08400 ms 

COMMIT;

Commit complete.

Elapsed time: 0.03900 ms 




--##############################################################
--# DICTIONARY_SCHEMA.DBA_STAT_SYSTEM
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.DBA_STAT_SYSTEM;

View dropped.

Elapsed time: 0.73500 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.DBA_STAT_SYSTEM
(
       CPU_OPS
     , NETWORK_IOPS
     , NETWORK_BUFSIZE
     , LAST_ANALYZED
)
AS
SELECT
       stat.CPU_OPS           -- CPU_OPS
     , stat.NETWORK_IOPS      -- NETWORK_IOPS
     , stat.NETWORK_BUFSIZE   -- NETWORK_BUFSIZE
     , stat.ANALYZED_TIME     -- LAST_ANALYZED
  FROM
       DEFINITION_SCHEMA.STAT_SYSTEM       AS stat
 WHERE
       EXISTS ( SELECT GRANTEE_ID  
                  FROM DEFINITION_SCHEMA.DATABASE_PRIVILEGES pvdba 
                 WHERE pvdba.PRIVILEGE_TYPE IN ( 'ACCESS CONTROL' ) 
                   AND ( pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                 FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS audba 
                                                WHERE audba.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                             ) 
                      -- OR  
                      -- pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                      --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                       )  
               ) 
;

View created.

Elapsed time: 0.95600 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.DBA_STAT_SYSTEM
        IS 'DBA_STAT_SYSTEM describes analyzed system statistics.';

Comment created.

Elapsed time: 0.12700 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_STAT_SYSTEM.CPU_OPS
        IS 'OPS(operations per second) of CPU';

Comment created.

Elapsed time: 0.14100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_STAT_SYSTEM.NETWORK_IOPS
        IS 'N/A in stand-alone system';

Comment created.

Elapsed time: 0.13700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_STAT_SYSTEM.NETWORK_BUFSIZE
        IS 'N/A in stand-alone system';

Comment created.

Elapsed time: 0.14200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_STAT_SYSTEM.LAST_ANALYZED
        IS 'Date on which the table was most recently analyzed';

Comment created.

Elapsed time: 0.14400 ms 


--#####################
--# grant view
--#####################

--GRANT SELECT ON TABLE DICTIONARY_SCHEMA.DBA_STAT_SYSTEM TO DBA;
GRANT SELECT ON TABLE DICTIONARY_SCHEMA.DBA_STAT_SYSTEM TO PUBLIC;

Grant succeeded.

Elapsed time: 0.13100 ms 


COMMIT;

Commit complete.

Elapsed time: 0.08700 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS DBA_STAT_SYSTEM;

Synonym dropped.

Elapsed time: 0.06800 ms 

CREATE PUBLIC SYNONYM DBA_STAT_SYSTEM FOR DICTIONARY_SCHEMA.DBA_STAT_SYSTEM;

Synonym created.

Elapsed time: 0.08200 ms 

COMMIT;

Commit complete.

Elapsed time: 0.03800 ms 









--##############################################################
--# DICTIONARY_SCHEMA.DATABASE_PROPERTIES
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.DATABASE_PROPERTIES;

View dropped.

Elapsed time: 0.66100 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.DATABASE_PROPERTIES
(
       PROPERTY_NAME
     , PROPERTY_VALUE
     , DESCRIPTION
)
AS
SELECT
       xpro.PROPERTY_NAME
     , CAST( xpro.VALUE AS VARCHAR(4000 OCTETS) )
     , CAST( xpro.DESCRIPTION AS VARCHAR(4000 OCTETS) )
  FROM
       FIXED_TABLE_SCHEMA.X$PROPERTY AS xpro
 ORDER BY 
       xpro.PROPERTY_ID
;

View created.

Elapsed time: 0.80900 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.DATABASE_PROPERTIES
        IS 'DATABASE_PROPERTIES lists Permanent database properties.';

Comment created.

Elapsed time: 0.12100 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.DATABASE_PROPERTIES.PROPERTY_NAME
        IS 'Property name';

Comment created.

Elapsed time: 0.13900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DATABASE_PROPERTIES.PROPERTY_VALUE
        IS 'Property value';

Comment created.

Elapsed time: 0.14900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DATABASE_PROPERTIES.DESCRIPTION
        IS 'Property description';

Comment created.

Elapsed time: 0.14000 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.DATABASE_PROPERTIES TO PUBLIC;

Grant succeeded.

Elapsed time: 0.12800 ms 


COMMIT;

Commit complete.

Elapsed time: 0.11900 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS DATABASE_PROPERTIES;

Synonym dropped.

Elapsed time: 0.07700 ms 

CREATE PUBLIC SYNONYM DATABASE_PROPERTIES FOR DICTIONARY_SCHEMA.DATABASE_PROPERTIES;

Synonym created.

Elapsed time: 0.09500 ms 

COMMIT;

Commit complete.

Elapsed time: 0.04000 ms 


--##############################################################
--# DICTIONARY_SCHEMA.DBC_TABLE_TYPE_INFO
--##############################################################

--#####################
--# drop table
--#####################

DROP TABLE IF EXISTS DICTIONARY_SCHEMA.DBC_TABLE_TYPE_INFO;

Table dropped.

Elapsed time: 1.42300 ms 


--#####################
--# create table
--#####################

CREATE TABLE DICTIONARY_SCHEMA.DBC_TABLE_TYPE_INFO
(
       DBC_TABLE_TYPE_ID  NUMBER
     , DBC_TABLE_TYPE     VARCHAR(128 OCTETS)
     , IS_SUPPORTED       BOOLEAN
     , COMMENTS           VARCHAR(1024 OCTETS)
);

Table created.

Elapsed time: 1.60400 ms 


INSERT INTO DICTIONARY_SCHEMA.DBC_TABLE_TYPE_INFO VALUES ( 0, 'SYSTEM TABLE',     TRUE,  'viewed table of INFORMATION_SCHEMA' );

1 row created.

Elapsed time: 0.27900 ms 

INSERT INTO DICTIONARY_SCHEMA.DBC_TABLE_TYPE_INFO VALUES ( 1, 'TABLE',            TRUE,  'persistent base table' );

1 row created.

Elapsed time: 0.07400 ms 

INSERT INTO DICTIONARY_SCHEMA.DBC_TABLE_TYPE_INFO VALUES ( 2, 'VIEW',             TRUE,  'viewed table' );

1 row created.

Elapsed time: 0.06800 ms 

INSERT INTO DICTIONARY_SCHEMA.DBC_TABLE_TYPE_INFO VALUES ( 3, 'GLOBAL TEMPORARY', FALSE, 'global temporary table' );

1 row created.

Elapsed time: 0.06700 ms 

INSERT INTO DICTIONARY_SCHEMA.DBC_TABLE_TYPE_INFO VALUES ( 4, 'LOCAL TEMPORARY',  FALSE, 'local temporary table' );

1 row created.

Elapsed time: 0.06500 ms 

INSERT INTO DICTIONARY_SCHEMA.DBC_TABLE_TYPE_INFO VALUES ( 5, 'SYSTEM VERSIONED', FALSE, 'system versioned table' );

1 row created.

Elapsed time: 0.06500 ms 

INSERT INTO DICTIONARY_SCHEMA.DBC_TABLE_TYPE_INFO VALUES ( 6, 'FIXED TABLE',      TRUE,  'fixed table' );

1 row created.

Elapsed time: 0.06400 ms 

INSERT INTO DICTIONARY_SCHEMA.DBC_TABLE_TYPE_INFO VALUES ( 7, 'DUMP TABLE',       TRUE,  'dump table' );

1 row created.

Elapsed time: 0.06300 ms 

INSERT INTO DICTIONARY_SCHEMA.DBC_TABLE_TYPE_INFO VALUES ( 8, 'SYNONYM',          FALSE, 'synonym of an object' );

1 row created.

Elapsed time: 0.06500 ms 

COMMIT;

Commit complete.

Elapsed time: 0.14700 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.DBC_TABLE_TYPE_INFO
        IS 'Identify the ODBC/JDBC table types available in this database.';

Comment created.

Elapsed time: 0.13400 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBC_TABLE_TYPE_INFO.DBC_TABLE_TYPE_ID
        IS 'number identifier of the table type in ODBC/JDBC';

Comment created.

Elapsed time: 0.15700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBC_TABLE_TYPE_INFO.DBC_TABLE_TYPE
        IS 'name of the table type in ODBC/JDBC';

Comment created.

Elapsed time: 0.13300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBC_TABLE_TYPE_INFO.IS_SUPPORTED
        IS 'is supported feature';

Comment created.

Elapsed time: 0.13900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBC_TABLE_TYPE_INFO.COMMENTS
        IS 'comments of the table type';

Comment created.

Elapsed time: 0.12900 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.DBC_TABLE_TYPE_INFO TO PUBLIC;

Grant succeeded.

Elapsed time: 0.23400 ms 


COMMIT;

Commit complete.

Elapsed time: 0.04200 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS DBC_TABLE_TYPE_INFO;

Synonym dropped.

Elapsed time: 0.07400 ms 

CREATE PUBLIC SYNONYM DBC_TABLE_TYPE_INFO FOR DICTIONARY_SCHEMA.DBC_TABLE_TYPE_INFO;

Synonym created.

Elapsed time: 0.09100 ms 

COMMIT;

Commit complete.

Elapsed time: 0.03900 ms 


--##############################################################
--# DICTIONARY_SCHEMA.DICTIONARY
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.DICTIONARY;

View dropped.

Elapsed time: 0.70400 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.DICTIONARY
(
       TABLE_SCHEMA
     , TABLE_NAME
     , COMMENTS
)
AS
SELECT
       sch.SCHEMA_NAME
     , tab.TABLE_NAME
     , tab.COMMENTS
  FROM
       DICTIONARY_SCHEMA.WHOLE_TABLES AS tab
     , DEFINITION_SCHEMA.SCHEMATA          AS sch
 WHERE 
       sch.SCHEMA_NAME IN ( 'DICTIONARY_SCHEMA', 'INFORMATION_SCHEMA', 'DEFINITION_SCHEMA', 'PERFORMANCE_VIEW_SCHEMA', 'FIXED_TABLE_SCHEMA' )
   AND sch.SCHEMA_ID = tab.SCHEMA_ID
 ORDER BY 
       tab.SCHEMA_ID
     , tab.TABLE_ID
;

View created.

Elapsed time: 1.13900 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.DICTIONARY
        IS 'DICTIONARY contains descriptions of data dictionary tables and views.';

Comment created.

Elapsed time: 0.12000 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.DICTIONARY.TABLE_SCHEMA
        IS 'Schema of the object';

Comment created.

Elapsed time: 0.13900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DICTIONARY.TABLE_NAME
        IS 'Name of the object';

Comment created.

Elapsed time: 0.13500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DICTIONARY.COMMENTS
        IS 'Text comment on the object';

Comment created.

Elapsed time: 0.14700 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.DICTIONARY TO PUBLIC;

Grant succeeded.

Elapsed time: 0.12200 ms 


COMMIT;

Commit complete.

Elapsed time: 0.08000 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS DICTIONARY;

Synonym dropped.

Elapsed time: 0.07500 ms 

CREATE PUBLIC SYNONYM DICTIONARY FOR DICTIONARY_SCHEMA.DICTIONARY;

Synonym created.

Elapsed time: 0.08500 ms 

COMMIT;

Commit complete.

Elapsed time: 0.03700 ms 


DROP PUBLIC SYNONYM IF EXISTS DICT;

Synonym dropped.

Elapsed time: 0.06600 ms 

CREATE PUBLIC SYNONYM DICT FOR DICTIONARY_SCHEMA.DICTIONARY;

Synonym created.

Elapsed time: 0.08000 ms 

COMMIT;

Commit complete.

Elapsed time: 0.03700 ms 


--##############################################################
--# DICTIONARY_SCHEMA.DICT_COLUMNS
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.DICT_COLUMNS;

View dropped.

Elapsed time: 0.82700 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.DICT_COLUMNS
(
       TABLE_SCHEMA
     , TABLE_NAME
     , COLUMN_NAME
     , COMMENTS
)
AS
SELECT
       sch.SCHEMA_NAME
     , tab.TABLE_NAME
     , col.COLUMN_NAME
     , col.COMMENTS
  FROM
       DICTIONARY_SCHEMA.WHOLE_TABLES  AS tab
     , DICTIONARY_SCHEMA.WHOLE_COLUMNS AS col
     , DEFINITION_SCHEMA.SCHEMATA           AS sch
 WHERE 
       sch.SCHEMA_NAME IN ( 'DICTIONARY_SCHEMA', 'INFORMATION_SCHEMA', 'DEFINITION_SCHEMA', 'PERFORMANCE_VIEW_SCHEMA', 'FIXED_TABLE_SCHEMA' )
   AND col.SCHEMA_ID = sch.SCHEMA_ID
   AND col.TABLE_ID  = tab.TABLE_ID
 ORDER BY 
       col.SCHEMA_ID
     , col.TABLE_ID
     , col.LOGICAL_ORDINAL_POSITION
;

View created.

Elapsed time: 1.37400 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.DICT_COLUMNS
        IS 'DICT_COLUMNS contains descriptions of columns in data dictionary tables and views.';

Comment created.

Elapsed time: 0.12000 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.DICT_COLUMNS.TABLE_SCHEMA
        IS 'Schema of the object that contains the column';

Comment created.

Elapsed time: 0.14000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DICT_COLUMNS.TABLE_NAME
        IS 'Name of the object that contains the column';

Comment created.

Elapsed time: 0.13800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DICT_COLUMNS.COLUMN_NAME
        IS 'Name of the column';

Comment created.

Elapsed time: 0.14200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DICT_COLUMNS.COMMENTS
        IS 'Text comment on the column';

Comment created.

Elapsed time: 0.13100 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.DICT_COLUMNS TO PUBLIC;

Grant succeeded.

Elapsed time: 0.12000 ms 


COMMIT;

Commit complete.

Elapsed time: 0.09000 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS DICT_COLUMNS;

Synonym dropped.

Elapsed time: 0.07100 ms 

CREATE PUBLIC SYNONYM DICT_COLUMNS FOR DICTIONARY_SCHEMA.DICT_COLUMNS;

Synonym created.

Elapsed time: 0.08500 ms 

COMMIT;

Commit complete.

Elapsed time: 0.03700 ms 


--##############################################################
--# DICTIONARY_SCHEMA.JDBC_CLIENT_PROPS
--##############################################################

--#####################
--# drop view
--#####################

DROP TABLE IF EXISTS DICTIONARY_SCHEMA.JDBC_CLIENT_PROPS;

Table dropped.

Elapsed time: 1.14400 ms 


--#####################
--# create view
--#####################

CREATE TABLE DICTIONARY_SCHEMA.JDBC_CLIENT_PROPS
(
       NAME           VARCHAR(128 OCTETS),
       MAX_LEN        NATIVE_INTEGER,
       DEFAULT_VALUE  VARCHAR(128 OCTETS),
       DESCRIPTION    VARCHAR(256 OCTETS)
);

Table created.

Elapsed time: 1.31300 ms 


INSERT INTO DICTIONARY_SCHEMA.JDBC_CLIENT_PROPS VALUES ( 'USER',                 128,   NULL,      'db account' );

1 row created.

Elapsed time: 0.08800 ms 

INSERT INTO DICTIONARY_SCHEMA.JDBC_CLIENT_PROPS VALUES ( 'PASSWORD',             128,   NULL,      'db account password' );

1 row created.

Elapsed time: 0.07100 ms 

INSERT INTO DICTIONARY_SCHEMA.JDBC_CLIENT_PROPS VALUES ( 'ROLE',                 128,   '',        'db account role' );

1 row created.

Elapsed time: 0.06700 ms 

INSERT INTO DICTIONARY_SCHEMA.JDBC_CLIENT_PROPS VALUES ( 'GLOBAL_LOGGER',        65536, NULL,      'where to write the log' );

1 row created.

Elapsed time: 0.06600 ms 

INSERT INTO DICTIONARY_SCHEMA.JDBC_CLIENT_PROPS VALUES ( 'TRACE_LOG',            65536, NULL,      'logs about the jdbc api call (on/off)' );

1 row created.

Elapsed time: 0.06700 ms 

INSERT INTO DICTIONARY_SCHEMA.JDBC_CLIENT_PROPS VALUES ( 'QUERY_LOG',            65536, NULL,      'logs about the query string (on/off)' );

1 row created.

Elapsed time: 0.06500 ms 

INSERT INTO DICTIONARY_SCHEMA.JDBC_CLIENT_PROPS VALUES ( 'PROTOCOL_LOG',         65536, NULL,      'logs about the protocol message between server and client' );

1 row created.

Elapsed time: 0.06600 ms 

INSERT INTO DICTIONARY_SCHEMA.JDBC_CLIENT_PROPS VALUES ( 'PROGRAM',              256,   'Unnamed java program', 'client program name' );

1 row created.

Elapsed time: 0.06600 ms 

INSERT INTO DICTIONARY_SCHEMA.JDBC_CLIENT_PROPS VALUES ( 'SESSION_TYPE',         1,     '1',       'session type (dedicate-1/shared-2)' );

1 row created.

Elapsed time: 0.06500 ms 

INSERT INTO DICTIONARY_SCHEMA.JDBC_CLIENT_PROPS VALUES ( 'TZEROS',               10,    '6',       'maximum number of trailing zeros of a numeric value that will be converted to String value of the normal style, other than the exponent style' );

1 row created.

Elapsed time: 0.06700 ms 

INSERT INTO DICTIONARY_SCHEMA.JDBC_CLIENT_PROPS VALUES ( 'LZEROS',               10,    '2',       'maximum number of leading zeros of a numeric value that will be converted to String value of the normal style, other than the exponent style' );

1 row created.

Elapsed time: 0.06600 ms 

INSERT INTO DICTIONARY_SCHEMA.JDBC_CLIENT_PROPS VALUES ( 'DECODING_REPLACEMENT', 1,     '?',       'representative character for that cannot be decoded' );

1 row created.

Elapsed time: 0.06600 ms 

INSERT INTO DICTIONARY_SCHEMA.JDBC_CLIENT_PROPS VALUES ( 'BATCH_COUNT',          10,    '1000',    'maximum continuous batch count' );

1 row created.

Elapsed time: 0.06600 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.JDBC_CLIENT_PROPS
        IS 'JDBC_CLIENT_PROPS is the set of jdbc client properties.';

Comment created.

Elapsed time: 0.11900 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.JDBC_CLIENT_PROPS.NAME
        IS 'property name';

Comment created.

Elapsed time: 0.13900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.JDBC_CLIENT_PROPS.MAX_LEN
        IS 'max length of a value';

Comment created.

Elapsed time: 0.13300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.JDBC_CLIENT_PROPS.DEFAULT_VALUE
        IS 'default value';

Comment created.

Elapsed time: 0.13200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.JDBC_CLIENT_PROPS.DESCRIPTION
        IS 'descrption on that property';

Comment created.

Elapsed time: 0.13400 ms 

COMMIT;

Commit complete.

Elapsed time: 0.13400 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.JDBC_CLIENT_PROPS TO PUBLIC;

Grant succeeded.

Elapsed time: 0.24100 ms 


COMMIT;

Commit complete.

Elapsed time: 0.04000 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS JDBC_CLIENT_PROPS;

Synonym dropped.

Elapsed time: 0.08200 ms 

CREATE PUBLIC SYNONYM JDBC_CLIENT_PROPS FOR DICTIONARY_SCHEMA.JDBC_CLIENT_PROPS;

Synonym created.

Elapsed time: 0.09000 ms 

COMMIT;

Commit complete.

Elapsed time: 0.03700 ms 


--##############################################################
--# DICTIONARY_SCHEMA.PRODUCT
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.PRODUCT;

View dropped.

Elapsed time: 0.90900 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.PRODUCT
(
       NAME
     , VERSION
     , PRODUCT_VERSION
     , MAJOR_VERSION
     , MINOR_VERSION
     , PATCH_VERSION

)
AS
SELECT
       ( SELECT CHARACTER_VALUE 
           FROM DEFINITION_SCHEMA.SQL_IMPLEMENTATION_INFO
           WHERE IMPLEMENTATION_INFO_NAME = 'DBMS NAME' )                 -- NAME
     , CAST( VERSION() AS VARCHAR(128 OCTETS) )                                -- VERSION
     , CAST( SPLIT_PART( SPLIT_PART( VERSION(), ' ', 2 ), '.', 1 ) AS VARCHAR(32 OCTETS) ) -- PRODUCT_VERSION
     , CAST( SPLIT_PART( SPLIT_PART( VERSION(), ' ', 2 ), '.', 2 ) AS NUMBER ) -- MAJOR_VERSION
     , CAST( SPLIT_PART( SPLIT_PART( VERSION(), ' ', 2 ), '.', 3 ) AS NUMBER ) -- MINOR_VERSION
     , CAST( SPLIT_PART( SPLIT_PART( VERSION(), ' ', 2 ), '.', 4 ) AS NUMBER ) -- PATCH_VERSION
  FROM
       FIXED_TABLE_SCHEMA.DUAL
;

View created.

Elapsed time: 1.09200 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.PRODUCT
        IS 'PRODUCT is about the product name, version for ODBC, JDBC interface.';

Comment created.

Elapsed time: 0.13800 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.PRODUCT.NAME
        IS 'the product name';

Comment created.

Elapsed time: 0.13900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.PRODUCT.VERSION
        IS 'product full version infomation';

Comment created.

Elapsed time: 0.13500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.PRODUCT.PRODUCT_VERSION
        IS 'product version';

Comment created.

Elapsed time: 0.14800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.PRODUCT.MAJOR_VERSION
        IS 'major version';

Comment created.

Elapsed time: 0.13200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.PRODUCT.MINOR_VERSION
        IS 'minor version';

Comment created.

Elapsed time: 0.13200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.PRODUCT.PATCH_VERSION
        IS 'patch version';

Comment created.

Elapsed time: 0.13200 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.PRODUCT TO PUBLIC;

Grant succeeded.

Elapsed time: 0.11500 ms 


COMMIT;

Commit complete.

Elapsed time: 0.10400 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS PRODUCT;

Synonym dropped.

Elapsed time: 0.06900 ms 

CREATE PUBLIC SYNONYM PRODUCT FOR DICTIONARY_SCHEMA.PRODUCT;

Synonym created.

Elapsed time: 0.08400 ms 

COMMIT;

Commit complete.

Elapsed time: 0.03800 ms 


--##############################################################
--# DICTIONARY_SCHEMA.SESSION_PRIVS
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.SESSION_PRIVS;

View dropped.

Elapsed time: 0.60000 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.SESSION_PRIVS
(
       PRIVILEGE
)
AS
SELECT
       CAST( pvdba.PRIVILEGE || ' ON DATABASE ' AS VARCHAR(256 OCTETS) )
  FROM
       DICTIONARY_SCHEMA.ALL_DB_PRIVS AS pvdba
 WHERE 
       pvdba.GRANTEE = CURRENT_USER
UNION ALL
SELECT
       CAST( pvtbs.PRIVILEGE || ' ON TABLESPACE "' || pvtbs.TABLESPACE_NAME || '" ' AS VARCHAR(256 OCTETS) )
  FROM
       DICTIONARY_SCHEMA.ALL_TBS_PRIVS AS pvtbs
 WHERE 
       pvtbs.GRANTEE = CURRENT_USER
UNION ALL
SELECT
       CAST( pvsch.PRIVILEGE || ' ON SCHEMA "' || pvsch.SCHEMA_NAME || '" ' AS VARCHAR(256 OCTETS) )
  FROM
       DICTIONARY_SCHEMA.ALL_SCHEMA_PRIVS AS pvsch
 WHERE 
       pvsch.GRANTEE = CURRENT_USER
;

View created.

Elapsed time: 1.13200 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.SESSION_PRIVS
        IS 'SESSION_PRIVS describes the privileges that are currently available to the user.';

Comment created.

Elapsed time: 0.12000 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.SESSION_PRIVS.PRIVILEGE
        IS 'Name of the privilege';

Comment created.

Elapsed time: 0.13900 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.SESSION_PRIVS TO PUBLIC;

Grant succeeded.

Elapsed time: 0.11800 ms 


COMMIT;

Commit complete.

Elapsed time: 0.06600 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS SESSION_PRIVS;

Synonym dropped.

Elapsed time: 0.07900 ms 

CREATE PUBLIC SYNONYM SESSION_PRIVS FOR DICTIONARY_SCHEMA.SESSION_PRIVS;

Synonym created.

Elapsed time: 0.08200 ms 

COMMIT;

Commit complete.

Elapsed time: 0.03700 ms 


--##############################################################
--# DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE
--##############################################################

--#####################
--# drop table
--#####################

DROP TABLE IF EXISTS DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE;

Table dropped.

Elapsed time: 1.94400 ms 


--#####################
--# create table
--#####################

CREATE TABLE DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE
(
       ID              VARCHAR(32 OCTETS)
     , SUB_ID          VARCHAR(32 OCTETS)
     , NAME            VARCHAR(1024 OCTETS)
     , SUB_NAME        VARCHAR(1024 OCTETS)
     , IS_SUPPORTED    BOOLEAN
     , INTEGER_VALUE   NUMBER
     , CHARACTER_VALUE VARCHAR(1024 OCTETS)
     , COMMENTS        VARCHAR(1024 OCTETS)
);

Table created.

Elapsed time: 2.19500 ms 


INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('20', ' ',        'SQL_ACCESSIBLE_PROCEDURES', ' ', TRUE, NULL, 'Y', NULL);

1 row created.

Elapsed time: 0.10000 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('19', ' ',        'SQL_ACCESSIBLE_TABLES',     ' ', TRUE, NULL, 'Y', NULL);

1 row created.

Elapsed time: 0.08300 ms 

    
INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('169', ' ',       'SQL_AGGREGATE_FUNCTIONS', ' ',               TRUE,  0, NULL, NULL);

1 row created.

Elapsed time: 0.08800 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('169', '64',      'SQL_AGGREGATE_FUNCTIONS', 'SQL_AF_ALL',      TRUE, 64, NULL, NULL);

1 row created.

Elapsed time: 0.08000 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('169', '1',       'SQL_AGGREGATE_FUNCTIONS', 'SQL_AF_AVG',      TRUE,  1, NULL, NULL);

1 row created.

Elapsed time: 0.07900 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('169', '2',       'SQL_AGGREGATE_FUNCTIONS', 'SQL_AF_COUNT',    TRUE,  2, NULL, NULL);

1 row created.

Elapsed time: 0.07800 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('169', '32',      'SQL_AGGREGATE_FUNCTIONS', 'SQL_AF_DISTINCT', TRUE, 32, NULL, NULL);

1 row created.

Elapsed time: 0.07800 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('169', '4',       'SQL_AGGREGATE_FUNCTIONS', 'SQL_AF_MAX',      TRUE,  4, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('169', '8',       'SQL_AGGREGATE_FUNCTIONS', 'SQL_AF_MIN',      TRUE,  8, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('169', '16',      'SQL_AGGREGATE_FUNCTIONS', 'SQL_AF_SUM',      TRUE, 16, NULL, NULL);

1 row created.

Elapsed time: 0.08300 ms 

    
INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('117', ' ',       'SQL_ALTER_DOMAIN', ' ',                                         TRUE,    0, NULL, NULL);

1 row created.

Elapsed time: 0.07800 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('117', '2',       'SQL_ALTER_DOMAIN', 'SQL_AD_ADD_DOMAIN_CONSTRAINT',              FALSE,   2, NULL, NULL);

1 row created.

Elapsed time: 0.07800 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('117', '8',       'SQL_ALTER_DOMAIN', 'SQL_AD_ADD_DOMAIN_DEFAULT',                 FALSE,   8, NULL, NULL);

1 row created.

Elapsed time: 0.07800 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('117', '1',       'SQL_ALTER_DOMAIN', 'SQL_AD_CONSTRAINT_NAME_DEFINITION',         FALSE,   1, NULL, NULL);

1 row created.

Elapsed time: 0.07800 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('117', '4',       'SQL_ALTER_DOMAIN', 'SQL_AD_DROP_DOMAIN_CONSTRAINT',             FALSE,   4, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('117', '16',      'SQL_ALTER_DOMAIN', 'SQL_AD_DROP_DOMAIN_DEFAULT',                FALSE,  16, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('117', '128',     'SQL_ALTER_DOMAIN', 'SQL_AD_ADD_CONSTRAINT_DEFERRABLE',          FALSE, 128, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('117', '256',     'SQL_ALTER_DOMAIN', 'SQL_AD_ADD_CONSTRAINT_NON_DEFERRABLE',      FALSE, 256, NULL, NULL);

1 row created.

Elapsed time: 0.07800 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('117', '32',      'SQL_ALTER_DOMAIN', 'SQL_AD_ADD_CONSTRAINT_INITIALLY_DEFERRED',  FALSE,  32, NULL, NULL);

1 row created.

Elapsed time: 0.07800 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('117', '64',      'SQL_ALTER_DOMAIN', 'SQL_AD_ADD_CONSTRAINT_INITIALLY_IMMEDIATE', FALSE,  64, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 


INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('86', ' ',        'SQL_ALTER_TABLE', ' ',                                     TRUE,       0, NULL, NULL);

1 row created.

Elapsed time: 0.07800 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('86', '1',        'SQL_ALTER_TABLE', 'SQL_AT_ADD_COLUMN',                     TRUE,       1, NULL, NULL);

1 row created.

Elapsed time: 0.07800 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('86', '128',      'SQL_ALTER_TABLE', 'SQL_AT_ADD_COLUMN_COLLATION',           FALSE,    128, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('86', '32',       'SQL_ALTER_TABLE', 'SQL_AT_ADD_COLUMN_DEFAULT',             TRUE,      32, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('86', '64',       'SQL_ALTER_TABLE', 'SQL_AT_ADD_COLUMN_SINGLE',              TRUE,      64, NULL, NULL);

1 row created.

Elapsed time: 0.08300 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('86', '8',        'SQL_ALTER_TABLE', 'SQL_AT_ADD_CONSTRAINT',                 TRUE,       8, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('86', '4096',     'SQL_ALTER_TABLE', 'SQL_AT_ADD_TABLE_CONSTRAINT',           TRUE,    4096, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('86', '32768',    'SQL_ALTER_TABLE', 'SQL_AT_CONSTRAINT_NAME_DEFINITION',     TRUE,   32768, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('86', '2',        'SQL_ALTER_TABLE', 'SQL_AT_DROP_COLUMN',                    TRUE,       2, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('86', '1024',     'SQL_ALTER_TABLE', 'SQL_AT_DROP_COLUMN_CASCADE',            TRUE,    1024, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('86', '512',      'SQL_ALTER_TABLE', 'SQL_AT_DROP_COLUMN_DEFAULT',            TRUE,     512, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('86', '2048',     'SQL_ALTER_TABLE', 'SQL_AT_DROP_COLUMN_RESTRICT',           TRUE,    2048, NULL, NULL);

1 row created.

Elapsed time: 0.08300 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('86', '8192',     'SQL_ALTER_TABLE', 'SQL_AT_DROP_TABLE_CONSTRAINT_CASCADE',  TRUE,    8192, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('86', '16384',    'SQL_ALTER_TABLE', 'SQL_AT_DROP_TABLE_CONSTRAINT_RESTRICT', TRUE,   16384, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('86', '256',      'SQL_ALTER_TABLE', 'SQL_AT_SET_COLUMN_DEFAULT',             TRUE,     256, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('86', '65536',    'SQL_ALTER_TABLE', 'SQL_AT_CONSTRAINT_INITIALLY_DEFERRED',  FALSE,  65536, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('86', '131072',   'SQL_ALTER_TABLE', 'SQL_AT_CONSTRAINT_INITIALLY_IMMEDIATE', FALSE, 131072, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('86', '262144',   'SQL_ALTER_TABLE', 'SQL_AT_CONSTRAINT_DEFERRABLE',          FALSE, 262144, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('86', '524288',   'SQL_ALTER_TABLE', 'SQL_AT_CONSTRAINT_NON_DEFERRABLE',      FALSE, 524288, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 


INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('82', ' ',        'SQL_BOOKMARK_PERSISTENCE', ' ',                  TRUE,   0, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('82', '1',        'SQL_BOOKMARK_PERSISTENCE', 'SQL_BP_CLOSE',       FALSE,  1, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('82', '2',        'SQL_BOOKMARK_PERSISTENCE', 'SQL_BP_DELETE',      FALSE,  2, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('82', '4',        'SQL_BOOKMARK_PERSISTENCE', 'SQL_BP_DROP',        FALSE,  4, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('82', '8',        'SQL_BOOKMARK_PERSISTENCE', 'SQL_BP_TRANSACTION', FALSE,  8, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('82', '16',       'SQL_BOOKMARK_PERSISTENCE', 'SQL_BP_UPDATE',      FALSE, 16, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('82', '32',       'SQL_BOOKMARK_PERSISTENCE', 'SQL_BP_OTHER_HSTMT', FALSE, 32, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('82', '64',       'SQL_BOOKMARK_PERSISTENCE', 'SQL_BP_SCROLL',      FALSE, 64, NULL, NULL);

1 row created.

Elapsed time: 0.09700 ms 


INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('114', ' ',       'SQL_CATALOG_LOCATION', ' ',       TRUE,    1, NULL,       NULL);

1 row created.

Elapsed time: 0.08300 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('41', ' ',        'SQL_CATALOG_NAME_SEPARATOR', ' ', TRUE, NULL, '.',        NULL);

1 row created.

Elapsed time: 0.11800 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('42', ' ',        'SQL_CATALOG_TERM', ' ',           TRUE, NULL, 'catalog',  NULL);

1 row created.

Elapsed time: 0.08600 ms 


INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('92', ' ',        'SQL_CATALOG_USAGE', ' ',                           TRUE,   0, NULL, NULL);

1 row created.

Elapsed time: 0.09200 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('92', '1',        'SQL_CATALOG_USAGE', 'SQL_CU_DML_STATEMENTS',       FALSE,  1, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('92', '2',        'SQL_CATALOG_USAGE', 'SQL_CU_PROCEDURE_INVOCATION', FALSE,  2, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('92', '4',        'SQL_CATALOG_USAGE', 'SQL_CU_TABLE_DEFINITION',     FALSE,  4, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('92', '8',        'SQL_CATALOG_USAGE', 'SQL_CU_INDEX_DEFINITION',     FALSE,  8, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('92', '16',       'SQL_CATALOG_USAGE', 'SQL_CU_PRIVILEGE_DEFINITION', FALSE, 16, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 


INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('87', ' ',        'SQL_COLUMN_ALIAS', ' ',         TRUE, NULL, 'Y',    NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('22', ' ',        'SQL_CONCAT_NULL_BEHAVIOR', ' ', TRUE, 1,     NULL,  NULL);

1 row created.

Elapsed time: 0.07600 ms 


INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('53', ' ',        'SQL_CONVERT_BIGINT', ' ',                           TRUE,         0, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('53', '16384',    'SQL_CONVERT_BIGINT', 'SQL_CVT_BIGINT',              TRUE,     16384, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('53', '1024',     'SQL_CONVERT_BIGINT', 'SQL_CVT_BINARY',              FALSE,     1024, NULL, NULL);

1 row created.

Elapsed time: 0.08200 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('53', '4096',     'SQL_CONVERT_BIGINT', 'SQL_CVT_BIT',                 FALSE,     4096, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('53', '1',        'SQL_CONVERT_BIGINT', 'SQL_CVT_CHAR',                TRUE,         1, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('53', '32768',    'SQL_CONVERT_BIGINT', 'SQL_CVT_DATE',                FALSE,    32768, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('53', '4',        'SQL_CONVERT_BIGINT', 'SQL_CVT_DECIMAL',             FALSE,        4, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('53', '128',      'SQL_CONVERT_BIGINT', 'SQL_CVT_DOUBLE',              TRUE,       128, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('53', '32',       'SQL_CONVERT_BIGINT', 'SQL_CVT_FLOAT',               TRUE,        32, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('53', '16777216', 'SQL_CONVERT_BIGINT', 'SQL_CVT_GUID',                FALSE, 16777216, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('53', '8',        'SQL_CONVERT_BIGINT', 'SQL_CVT_INTEGER',             TRUE,         8, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('53', '524288',   'SQL_CONVERT_BIGINT', 'SQL_CVT_INTERVAL_YEAR_MONTH', TRUE,    524288, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('53', '1048576',  'SQL_CONVERT_BIGINT', 'SQL_CVT_INTERVAL_DAY_TIME',   TRUE,   1048576, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('53', '262144',   'SQL_CONVERT_BIGINT', 'SQL_CVT_LONGVARBINARY',       FALSE,   262144, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('53', '512',      'SQL_CONVERT_BIGINT', 'SQL_CVT_LONGVARCHAR',         TRUE,       512, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('53', '2',        'SQL_CONVERT_BIGINT', 'SQL_CVT_NUMERIC',             TRUE,         2, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('53', '64',       'SQL_CONVERT_BIGINT', 'SQL_CVT_REAL',                TRUE,        64, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('53', '16',       'SQL_CONVERT_BIGINT', 'SQL_CVT_SMALLINT',            TRUE,        16, NULL, NULL);

1 row created.

Elapsed time: 0.08300 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('53', '65536',    'SQL_CONVERT_BIGINT', 'SQL_CVT_TIME',                FALSE,    65536, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('53', '131072',   'SQL_CONVERT_BIGINT', 'SQL_CVT_TIMESTAMP',           FALSE,   131072, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('53', '8192',     'SQL_CONVERT_BIGINT', 'SQL_CVT_TINYINT',             TRUE,      8192, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('53', '2048',     'SQL_CONVERT_BIGINT', 'SQL_CVT_VARBINARY',           FALSE,     2048, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('53', '256',      'SQL_CONVERT_BIGINT', 'SQL_CVT_VARCHAR',             TRUE,       256, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('53', '2097152',  'SQL_CONVERT_BIGINT', 'SQL_CVT_WCHAR',               FALSE,  2097152, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('53', '4194304',  'SQL_CONVERT_BIGINT', 'SQL_CVT_WWLONGVARCHAR',       FALSE,  4194304, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('53', '8388608',  'SQL_CONVERT_BIGINT', 'SQL_CVT_WVARCHAR',            FALSE,  8388608, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

    
INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('54', ' ',        'SQL_CONVERT_BINARY', ' ',                           TRUE,         0, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('54', '16384',    'SQL_CONVERT_BINARY', 'SQL_CVT_BIGINT',              FALSE,    16384, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('54', '1024',     'SQL_CONVERT_BINARY', 'SQL_CVT_BINARY',              TRUE,      1024, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('54', '4096',     'SQL_CONVERT_BINARY', 'SQL_CVT_BIT',                 FALSE,     4096, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('54', '1',        'SQL_CONVERT_BINARY', 'SQL_CVT_CHAR',                FALSE,        1, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('54', '32768',    'SQL_CONVERT_BINARY', 'SQL_CVT_DATE',                FALSE,    32768, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('54', '4',        'SQL_CONVERT_BINARY', 'SQL_CVT_DECIMAL',             FALSE,        4, NULL, NULL);

1 row created.

Elapsed time: 0.08400 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('54', '128',      'SQL_CONVERT_BINARY', 'SQL_CVT_DOUBLE',              FALSE,      128, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('54', '32',       'SQL_CONVERT_BINARY', 'SQL_CVT_FLOAT',               FALSE,       32, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('54', '16777216', 'SQL_CONVERT_BINARY', 'SQL_CVT_GUID',                FALSE, 16777216, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('54', '8',        'SQL_CONVERT_BINARY', 'SQL_CVT_INTEGER',             FALSE,        8, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('54', '524288',   'SQL_CONVERT_BINARY', 'SQL_CVT_INTERVAL_YEAR_MONTH', FALSE,   524288, NULL, NULL);

1 row created.

Elapsed time: 0.08200 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('54', '1048576',  'SQL_CONVERT_BINARY', 'SQL_CVT_INTERVAL_DAY_TIME',   FALSE,  1048576, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('54', '262144',   'SQL_CONVERT_BINARY', 'SQL_CVT_LONGVARBINARY',       TRUE,    262144, NULL, NULL);

1 row created.

Elapsed time: 0.08300 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('54', '512',      'SQL_CONVERT_BINARY', 'SQL_CVT_LONGVARCHAR',         FALSE,      512, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('54', '2',        'SQL_CONVERT_BINARY', 'SQL_CVT_NUMERIC',             FALSE,        2, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('54', '64',       'SQL_CONVERT_BINARY', 'SQL_CVT_REAL',                FALSE,       64, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('54', '16',       'SQL_CONVERT_BINARY', 'SQL_CVT_SMALLINT',            FALSE,       16, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('54', '65536',    'SQL_CONVERT_BINARY', 'SQL_CVT_TIME',                FALSE,    65536, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('54', '131072',   'SQL_CONVERT_BINARY', 'SQL_CVT_TIMESTAMP',           FALSE,   131072, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('54', '8192',     'SQL_CONVERT_BINARY', 'SQL_CVT_TINYINT',             FALSE,     8192, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('54', '2048',     'SQL_CONVERT_BINARY', 'SQL_CVT_VARBINARY',           TRUE,      2048, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('54', '256',      'SQL_CONVERT_BINARY', 'SQL_CVT_VARCHAR',             FALSE,      256, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('54', '2097152',  'SQL_CONVERT_BINARY', 'SQL_CVT_WCHAR',               FALSE,  2097152, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('54', '4194304',  'SQL_CONVERT_BINARY', 'SQL_CVT_WWLONGVARCHAR',       FALSE,  4194304, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('54', '8388608',  'SQL_CONVERT_BINARY', 'SQL_CVT_WVARCHAR',            FALSE,  8388608, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

    
INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('55', ' ',        'SQL_CONVERT_BIT', ' ',                           TRUE,         0, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('55', '16384',    'SQL_CONVERT_BIT', 'SQL_CVT_BIGINT',              FALSE,    16384, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('55', '1024',     'SQL_CONVERT_BIT', 'SQL_CVT_BINARY',              FALSE,     1024, NULL, NULL);

1 row created.

Elapsed time: 0.08300 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('55', '4096',     'SQL_CONVERT_BIT', 'SQL_CVT_BIT',                 TRUE,      4096, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('55', '1',        'SQL_CONVERT_BIT', 'SQL_CVT_CHAR',                TRUE,         1, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('55', '32768',    'SQL_CONVERT_BIT', 'SQL_CVT_DATE',                FALSE,    32768, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('55', '4',        'SQL_CONVERT_BIT', 'SQL_CVT_DECIMAL',             FALSE,        4, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('55', '128',      'SQL_CONVERT_BIT', 'SQL_CVT_DOUBLE',              FALSE,      128, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('55', '32',       'SQL_CONVERT_BIT', 'SQL_CVT_FLOAT',               FALSE,       32, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('55', '16777216', 'SQL_CONVERT_BIT', 'SQL_CVT_GUID',                FALSE, 16777216, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('55', '8',        'SQL_CONVERT_BIT', 'SQL_CVT_INTEGER',             FALSE,        8, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('55', '524288',   'SQL_CONVERT_BIT', 'SQL_CVT_INTERVAL_YEAR_MONTH', FALSE,   524288, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('55', '1048576',  'SQL_CONVERT_BIT', 'SQL_CVT_INTERVAL_DAY_TIME',   FALSE,  1048576, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('55', '262144',   'SQL_CONVERT_BIT', 'SQL_CVT_LONGVARBINARY',       FALSE,   262144, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('55', '512',      'SQL_CONVERT_BIT', 'SQL_CVT_LONGVARCHAR',         TRUE,       512, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('55', '2',        'SQL_CONVERT_BIT', 'SQL_CVT_NUMERIC',             FALSE,        2, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('55', '64',       'SQL_CONVERT_BIT', 'SQL_CVT_REAL',                FALSE,       64, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('55', '16',       'SQL_CONVERT_BIT', 'SQL_CVT_SMALLINT',            FALSE,       16, NULL, NULL);

1 row created.

Elapsed time: 0.08200 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('55', '65536',    'SQL_CONVERT_BIT', 'SQL_CVT_TIME',                FALSE,    65536, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('55', '131072',   'SQL_CONVERT_BIT', 'SQL_CVT_TIMESTAMP',           FALSE,   131072, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('55', '8192',     'SQL_CONVERT_BIT', 'SQL_CVT_TINYINT',             FALSE,     8192, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('55', '2048',     'SQL_CONVERT_BIT', 'SQL_CVT_VARBINARY',           FALSE,     2048, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('55', '256',      'SQL_CONVERT_BIT', 'SQL_CVT_VARCHAR',             TRUE,       256, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('55', '2097152',  'SQL_CONVERT_BIT', 'SQL_CVT_WCHAR',               FALSE,  2097152, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('55', '4194304',  'SQL_CONVERT_BIT', 'SQL_CVT_WWLONGVARCHAR',       FALSE,  4194304, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('55', '8388608',  'SQL_CONVERT_BIT', 'SQL_CVT_WVARCHAR',            FALSE,  8388608, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

    
INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('56', ' ',        'SQL_CONVERT_CHAR', ' ',                           TRUE,         0, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('56', '16384',    'SQL_CONVERT_CHAR', 'SQL_CVT_BIGINT',              TRUE,     16384, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('56', '1024',     'SQL_CONVERT_CHAR', 'SQL_CVT_BINARY',              FALSE,     1024, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('56', '4096',     'SQL_CONVERT_CHAR', 'SQL_CVT_BIT',                 TRUE,      4096, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('56', '1',        'SQL_CONVERT_CHAR', 'SQL_CVT_CHAR',                TRUE,         1, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('56', '32768',    'SQL_CONVERT_CHAR', 'SQL_CVT_DATE',                TRUE,     32768, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('56', '4',        'SQL_CONVERT_CHAR', 'SQL_CVT_DECIMAL',             FALSE,        4, NULL, NULL);

1 row created.

Elapsed time: 0.08500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('56', '128',      'SQL_CONVERT_CHAR', 'SQL_CVT_DOUBLE',              TRUE,       128, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('56', '32',       'SQL_CONVERT_CHAR', 'SQL_CVT_FLOAT',               TRUE,        32, NULL, NULL);

1 row created.

Elapsed time: 0.08200 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('56', '16777216', 'SQL_CONVERT_CHAR', 'SQL_CVT_GUID',                FALSE, 16777216, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('56', '8',        'SQL_CONVERT_CHAR', 'SQL_CVT_INTEGER',             TRUE,         8, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('56', '524288',   'SQL_CONVERT_CHAR', 'SQL_CVT_INTERVAL_YEAR_MONTH', TRUE,    524288, NULL, NULL);

1 row created.

Elapsed time: 0.07900 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('56', '1048576',  'SQL_CONVERT_CHAR', 'SQL_CVT_INTERVAL_DAY_TIME',   TRUE,   1048576, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('56', '262144',   'SQL_CONVERT_CHAR', 'SQL_CVT_LONGVARBINARY',       FALSE,   262144, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('56', '512',      'SQL_CONVERT_CHAR', 'SQL_CVT_LONGVARCHAR',         TRUE,       512, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('56', '2',        'SQL_CONVERT_CHAR', 'SQL_CVT_NUMERIC',             TRUE,         2, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('56', '64',       'SQL_CONVERT_CHAR', 'SQL_CVT_REAL',                TRUE,        64, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('56', '16',       'SQL_CONVERT_CHAR', 'SQL_CVT_SMALLINT',            TRUE,        16, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('56', '65536',    'SQL_CONVERT_CHAR', 'SQL_CVT_TIME',                TRUE,     65536, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('56', '131072',   'SQL_CONVERT_CHAR', 'SQL_CVT_TIMESTAMP',           TRUE,    131072, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('56', '8192',     'SQL_CONVERT_CHAR', 'SQL_CVT_TINYINT',             TRUE,      8192, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('56', '2048',     'SQL_CONVERT_CHAR', 'SQL_CVT_VARBINARY',           FALSE,     2048, NULL, NULL);

1 row created.

Elapsed time: 0.08400 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('56', '256',      'SQL_CONVERT_CHAR', 'SQL_CVT_VARCHAR',             TRUE,       256, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('56', '2097152',  'SQL_CONVERT_CHAR', 'SQL_CVT_WCHAR',               FALSE,  2097152, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('56', '4194304',  'SQL_CONVERT_CHAR', 'SQL_CVT_WWLONGVARCHAR',       FALSE,  4194304, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('56', '8388608',  'SQL_CONVERT_CHAR', 'SQL_CVT_WVARCHAR',            FALSE,  8388608, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

    
INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('57', ' ',        'SQL_CONVERT_DATE', ' ',                           TRUE,         0, NULL, NULL);

1 row created.

Elapsed time: 0.08500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('57', '16384',    'SQL_CONVERT_DATE', 'SQL_CVT_BIGINT',              FALSE,    16384, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('57', '1024',     'SQL_CONVERT_DATE', 'SQL_CVT_BINARY',              FALSE,     1024, NULL, NULL);

1 row created.

Elapsed time: 0.08400 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('57', '4096',     'SQL_CONVERT_DATE', 'SQL_CVT_BIT',                 FALSE,     4096, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('57', '1',        'SQL_CONVERT_DATE', 'SQL_CVT_CHAR',                TRUE,         1, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('57', '32768',    'SQL_CONVERT_DATE', 'SQL_CVT_DATE',                TRUE,     32768, NULL, NULL);

1 row created.

Elapsed time: 0.07800 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('57', '4',        'SQL_CONVERT_DATE', 'SQL_CVT_DECIMAL',             FALSE,        4, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('57', '128',      'SQL_CONVERT_DATE', 'SQL_CVT_DOUBLE',              FALSE,      128, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('57', '32',       'SQL_CONVERT_DATE', 'SQL_CVT_FLOAT',               FALSE,       32, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('57', '16777216', 'SQL_CONVERT_DATE', 'SQL_CVT_GUID',                FALSE, 16777216, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('57', '8',        'SQL_CONVERT_DATE', 'SQL_CVT_INTEGER',             FALSE,        8, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('57', '524288',   'SQL_CONVERT_DATE', 'SQL_CVT_INTERVAL_YEAR_MONTH', FALSE,   524288, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('57', '1048576',  'SQL_CONVERT_DATE', 'SQL_CVT_INTERVAL_DAY_TIME',   FALSE,  1048576, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('57', '262144',   'SQL_CONVERT_DATE', 'SQL_CVT_LONGVARBINARY',       FALSE,   262144, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('57', '512',      'SQL_CONVERT_DATE', 'SQL_CVT_LONGVARCHAR',         TRUE,       512, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('57', '2',        'SQL_CONVERT_DATE', 'SQL_CVT_NUMERIC',             FALSE,        2, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('57', '64',       'SQL_CONVERT_DATE', 'SQL_CVT_REAL',                FALSE,       64, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('57', '16',       'SQL_CONVERT_DATE', 'SQL_CVT_SMALLINT',            FALSE,       16, NULL, NULL);

1 row created.

Elapsed time: 0.08200 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('57', '65536',    'SQL_CONVERT_DATE', 'SQL_CVT_TIME',                FALSE,    65536, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('57', '131072',   'SQL_CONVERT_DATE', 'SQL_CVT_TIMESTAMP',           TRUE,    131072, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('57', '8192',     'SQL_CONVERT_DATE', 'SQL_CVT_TINYINT',             FALSE,     8192, NULL, NULL);

1 row created.

Elapsed time: 0.07900 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('57', '2048',     'SQL_CONVERT_DATE', 'SQL_CVT_VARBINARY',           FALSE,     2048, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('57', '256',      'SQL_CONVERT_DATE', 'SQL_CVT_VARCHAR',             TRUE,       256, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('57', '2097152',  'SQL_CONVERT_DATE', 'SQL_CVT_WCHAR',               FALSE,  2097152, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('57', '4194304',  'SQL_CONVERT_DATE', 'SQL_CVT_WWLONGVARCHAR',       FALSE,  4194304, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('57', '8388608',  'SQL_CONVERT_DATE', 'SQL_CVT_WVARCHAR',            FALSE,  8388608, NULL, NULL);

1 row created.

Elapsed time: 0.08400 ms 

    
INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('58', ' ',        'SQL_CONVERT_DECIMAL', ' ',                           TRUE,         0, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('58', '16384',    'SQL_CONVERT_DECIMAL', 'SQL_CVT_BIGINT',              FALSE,    16384, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('58', '1024',     'SQL_CONVERT_DECIMAL', 'SQL_CVT_BINARY',              FALSE,     1024, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('58', '4096',     'SQL_CONVERT_DECIMAL', 'SQL_CVT_BIT',                 FALSE,     4096, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('58', '1',        'SQL_CONVERT_DECIMAL', 'SQL_CVT_CHAR',                FALSE,        1, NULL, NULL);

1 row created.

Elapsed time: 0.08100 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('58', '32768',    'SQL_CONVERT_DECIMAL', 'SQL_CVT_DATE',                FALSE,    32768, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('58', '4',        'SQL_CONVERT_DECIMAL', 'SQL_CVT_DECIMAL',             FALSE,        4, NULL, NULL);

1 row created.

Elapsed time: 0.07800 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('58', '128',      'SQL_CONVERT_DECIMAL', 'SQL_CVT_DOUBLE',              FALSE,      128, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('58', '32',       'SQL_CONVERT_DECIMAL', 'SQL_CVT_FLOAT',               FALSE,       32, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('58', '16777216', 'SQL_CONVERT_DECIMAL', 'SQL_CVT_GUID',                FALSE, 16777216, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('58', '8',        'SQL_CONVERT_DECIMAL', 'SQL_CVT_INTEGER',             FALSE,        8, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('58', '524288',   'SQL_CONVERT_DECIMAL', 'SQL_CVT_INTERVAL_YEAR_MONTH', FALSE,   524288, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('58', '1048576',  'SQL_CONVERT_DECIMAL', 'SQL_CVT_INTERVAL_DAY_TIME',   FALSE,  1048576, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('58', '262144',   'SQL_CONVERT_DECIMAL', 'SQL_CVT_LONGVARBINARY',       FALSE,   262144, NULL, NULL);

1 row created.

Elapsed time: 0.08200 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('58', '512',      'SQL_CONVERT_DECIMAL', 'SQL_CVT_LONGVARCHAR',         FALSE,      512, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('58', '2',        'SQL_CONVERT_DECIMAL', 'SQL_CVT_NUMERIC',             FALSE,        2, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('58', '64',       'SQL_CONVERT_DECIMAL', 'SQL_CVT_REAL',                FALSE,       64, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('58', '16',       'SQL_CONVERT_DECIMAL', 'SQL_CVT_SMALLINT',            FALSE,       16, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('58', '65536',    'SQL_CONVERT_DECIMAL', 'SQL_CVT_TIME',                FALSE,    65536, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('58', '131072',   'SQL_CONVERT_DECIMAL', 'SQL_CVT_TIMESTAMP',           FALSE,   131072, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('58', '8192',     'SQL_CONVERT_DECIMAL', 'SQL_CVT_TINYINT',             FALSE,     8192, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('58', '2048',     'SQL_CONVERT_DECIMAL', 'SQL_CVT_VARBINARY',           FALSE,     2048, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('58', '256',      'SQL_CONVERT_DECIMAL', 'SQL_CVT_VARCHAR',             FALSE,      256, NULL, NULL);

1 row created.

Elapsed time: 0.07800 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('58', '2097152',  'SQL_CONVERT_DECIMAL', 'SQL_CVT_WCHAR',               FALSE,  2097152, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('58', '4194304',  'SQL_CONVERT_DECIMAL', 'SQL_CVT_WWLONGVARCHAR',       FALSE,  4194304, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('58', '8388608',  'SQL_CONVERT_DECIMAL', 'SQL_CVT_WVARCHAR',            FALSE,  8388608, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

    
INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('59', ' ',        'SQL_CONVERT_DOUBLE', ' ',                           TRUE,         0, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('59', '16384',    'SQL_CONVERT_DOUBLE', 'SQL_CVT_BIGINT',              TRUE,     16384, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('59', '1024',     'SQL_CONVERT_DOUBLE', 'SQL_CVT_BINARY',              FALSE,     1024, NULL, NULL);

1 row created.

Elapsed time: 0.08100 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('59', '4096',     'SQL_CONVERT_DOUBLE', 'SQL_CVT_BIT',                 FALSE,     4096, NULL, NULL);

1 row created.

Elapsed time: 0.08100 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('59', '1',        'SQL_CONVERT_DOUBLE', 'SQL_CVT_CHAR',                TRUE,         1, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('59', '32768',    'SQL_CONVERT_DOUBLE', 'SQL_CVT_DATE',                FALSE,    32768, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('59', '4',        'SQL_CONVERT_DOUBLE', 'SQL_CVT_DECIMAL',             FALSE,        4, NULL, NULL);

1 row created.

Elapsed time: 0.08300 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('59', '128',      'SQL_CONVERT_DOUBLE', 'SQL_CVT_DOUBLE',              TRUE,       128, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('59', '32',       'SQL_CONVERT_DOUBLE', 'SQL_CVT_FLOAT',               TRUE,        32, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('59', '16777216', 'SQL_CONVERT_DOUBLE', 'SQL_CVT_GUID',                FALSE, 16777216, NULL, NULL);

1 row created.

Elapsed time: 0.08600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('59', '8',        'SQL_CONVERT_DOUBLE', 'SQL_CVT_INTEGER',             TRUE,         8, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('59', '524288',   'SQL_CONVERT_DOUBLE', 'SQL_CVT_INTERVAL_YEAR_MONTH', FALSE,   524288, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('59', '1048576',  'SQL_CONVERT_DOUBLE', 'SQL_CVT_INTERVAL_DAY_TIME',   FALSE,  1048576, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('59', '262144',   'SQL_CONVERT_DOUBLE', 'SQL_CVT_LONGVARBINARY',       FALSE,   262144, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('59', '512',      'SQL_CONVERT_DOUBLE', 'SQL_CVT_LONGVARCHAR',         TRUE,       512, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('59', '2',        'SQL_CONVERT_DOUBLE', 'SQL_CVT_NUMERIC',             TRUE,         2, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('59', '64',       'SQL_CONVERT_DOUBLE', 'SQL_CVT_REAL',                TRUE,        64, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('59', '16',       'SQL_CONVERT_DOUBLE', 'SQL_CVT_SMALLINT',            TRUE,        16, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('59', '65536',    'SQL_CONVERT_DOUBLE', 'SQL_CVT_TIME',                FALSE,    65536, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('59', '131072',   'SQL_CONVERT_DOUBLE', 'SQL_CVT_TIMESTAMP',           FALSE,   131072, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('59', '8192',     'SQL_CONVERT_DOUBLE', 'SQL_CVT_TINYINT',             TRUE,      8192, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('59', '2048',     'SQL_CONVERT_DOUBLE', 'SQL_CVT_VARBINARY',           FALSE,     2048, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('59', '256',      'SQL_CONVERT_DOUBLE', 'SQL_CVT_VARCHAR',             TRUE,       256, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('59', '2097152',  'SQL_CONVERT_DOUBLE', 'SQL_CVT_WCHAR',               FALSE,  2097152, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('59', '4194304',  'SQL_CONVERT_DOUBLE', 'SQL_CVT_WWLONGVARCHAR',       FALSE,  4194304, NULL, NULL);

1 row created.

Elapsed time: 0.08300 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('59', '8388608',  'SQL_CONVERT_DOUBLE', 'SQL_CVT_WVARCHAR',            FALSE,  8388608, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

    
INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('60', ' ',        'SQL_CONVERT_FLOAT', ' ',                           TRUE,         0, NULL, NULL);

1 row created.

Elapsed time: 0.07900 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('60', '16384',    'SQL_CONVERT_FLOAT', 'SQL_CVT_BIGINT',              TRUE,     16384, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('60', '1024',     'SQL_CONVERT_FLOAT', 'SQL_CVT_BINARY',              FALSE,     1024, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('60', '4096',     'SQL_CONVERT_FLOAT', 'SQL_CVT_BIT',                 FALSE,     4096, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('60', '1',        'SQL_CONVERT_FLOAT', 'SQL_CVT_CHAR',                TRUE,         1, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('60', '32768',    'SQL_CONVERT_FLOAT', 'SQL_CVT_DATE',                FALSE,    32768, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('60', '4',        'SQL_CONVERT_FLOAT', 'SQL_CVT_DECIMAL',             FALSE,        4, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('60', '128',      'SQL_CONVERT_FLOAT', 'SQL_CVT_DOUBLE',              TRUE,       128, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('60', '32',       'SQL_CONVERT_FLOAT', 'SQL_CVT_FLOAT',               TRUE,        32, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('60', '16777216', 'SQL_CONVERT_FLOAT', 'SQL_CVT_GUID',                FALSE, 16777216, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('60', '8',        'SQL_CONVERT_FLOAT', 'SQL_CVT_INTEGER',             TRUE,         8, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('60', '524288',   'SQL_CONVERT_FLOAT', 'SQL_CVT_INTERVAL_YEAR_MONTH', TRUE,    524288, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('60', '1048576',  'SQL_CONVERT_FLOAT', 'SQL_CVT_INTERVAL_DAY_TIME',   TRUE,   1048576, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('60', '262144',   'SQL_CONVERT_FLOAT', 'SQL_CVT_LONGVARBINARY',       FALSE,   262144, NULL, NULL);

1 row created.

Elapsed time: 0.08200 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('60', '512',      'SQL_CONVERT_FLOAT', 'SQL_CVT_LONGVARCHAR',         TRUE,       512, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('60', '2',        'SQL_CONVERT_FLOAT', 'SQL_CVT_NUMERIC',             TRUE,         2, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('60', '64',       'SQL_CONVERT_FLOAT', 'SQL_CVT_REAL',                TRUE,        64, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('60', '16',       'SQL_CONVERT_FLOAT', 'SQL_CVT_SMALLINT',            TRUE,        16, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('60', '65536',    'SQL_CONVERT_FLOAT', 'SQL_CVT_TIME',                FALSE,    65536, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('60', '131072',   'SQL_CONVERT_FLOAT', 'SQL_CVT_TIMESTAMP',           FALSE,   131072, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('60', '8192',     'SQL_CONVERT_FLOAT', 'SQL_CVT_TINYINT',             TRUE,      8192, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('60', '2048',     'SQL_CONVERT_FLOAT', 'SQL_CVT_VARBINARY',           FALSE,     2048, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('60', '256',      'SQL_CONVERT_FLOAT', 'SQL_CVT_VARCHAR',             TRUE,       256, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('60', '2097152',  'SQL_CONVERT_FLOAT', 'SQL_CVT_WCHAR',               FALSE,  2097152, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('60', '4194304',  'SQL_CONVERT_FLOAT', 'SQL_CVT_WWLONGVARCHAR',       FALSE,  4194304, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('60', '8388608',  'SQL_CONVERT_FLOAT', 'SQL_CVT_WVARCHAR',            FALSE,  8388608, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

    
INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('173', ' ',        'SQL_CONVERT_GUID', ' ',                           TRUE,         0, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('173', '16384',    'SQL_CONVERT_GUID', 'SQL_CVT_BIGINT',              FALSE,    16384, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('173', '1024',     'SQL_CONVERT_GUID', 'SQL_CVT_BINARY',              FALSE,     1024, NULL, NULL);

1 row created.

Elapsed time: 0.08200 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('173', '4096',     'SQL_CONVERT_GUID', 'SQL_CVT_BIT',                 FALSE,     4096, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('173', '1',        'SQL_CONVERT_GUID', 'SQL_CVT_CHAR',                FALSE,        1, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('173', '32768',    'SQL_CONVERT_GUID', 'SQL_CVT_DATE',                FALSE,    32768, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('173', '4',        'SQL_CONVERT_GUID', 'SQL_CVT_DECIMAL',             FALSE,        4, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('173', '128',      'SQL_CONVERT_GUID', 'SQL_CVT_DOUBLE',              FALSE,      128, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('173', '32',       'SQL_CONVERT_GUID', 'SQL_CVT_FLOAT',               FALSE,       32, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('173', '16777216', 'SQL_CONVERT_GUID', 'SQL_CVT_GUID',                FALSE, 16777216, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('173', '8',        'SQL_CONVERT_GUID', 'SQL_CVT_INTEGER',             FALSE,        8, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('173', '524288',   'SQL_CONVERT_GUID', 'SQL_CVT_INTERVAL_YEAR_MONTH', FALSE,   524288, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('173', '1048576',  'SQL_CONVERT_GUID', 'SQL_CVT_INTERVAL_DAY_TIME',   FALSE,  1048576, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('173', '262144',   'SQL_CONVERT_GUID', 'SQL_CVT_LONGVARBINARY',       FALSE,   262144, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('173', '512',      'SQL_CONVERT_GUID', 'SQL_CVT_LONGVARCHAR',         FALSE,      512, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('173', '2',        'SQL_CONVERT_GUID', 'SQL_CVT_NUMERIC',             FALSE,        2, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('173', '64',       'SQL_CONVERT_GUID', 'SQL_CVT_REAL',                FALSE,       64, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('173', '16',       'SQL_CONVERT_GUID', 'SQL_CVT_SMALLINT',            FALSE,       16, NULL, NULL);

1 row created.

Elapsed time: 0.08100 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('173', '65536',    'SQL_CONVERT_GUID', 'SQL_CVT_TIME',                FALSE,    65536, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('173', '131072',   'SQL_CONVERT_GUID', 'SQL_CVT_TIMESTAMP',           FALSE,   131072, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('173', '8192',     'SQL_CONVERT_GUID', 'SQL_CVT_TINYINT',             FALSE,     8192, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('173', '2048',     'SQL_CONVERT_GUID', 'SQL_CVT_VARBINARY',           FALSE,     2048, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('173', '256',      'SQL_CONVERT_GUID', 'SQL_CVT_VARCHAR',             FALSE,      256, NULL, NULL);

1 row created.

Elapsed time: 0.08000 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('173', '2097152',  'SQL_CONVERT_GUID', 'SQL_CVT_WCHAR',               FALSE,  2097152, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('173', '4194304',  'SQL_CONVERT_GUID', 'SQL_CVT_WWLONGVARCHAR',       FALSE,  4194304, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('173', '8388608',  'SQL_CONVERT_GUID', 'SQL_CVT_WVARCHAR',            FALSE,  8388608, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 


INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('61', ' ',        'SQL_CONVERT_INTEGER', ' ',                           TRUE,         0, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('61', '16384',    'SQL_CONVERT_INTEGER', 'SQL_CVT_BIGINT',              TRUE,     16384, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('61', '1024',     'SQL_CONVERT_INTEGER', 'SQL_CVT_BINARY',              FALSE,     1024, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('61', '4096',     'SQL_CONVERT_INTEGER', 'SQL_CVT_BIT',                 FALSE,     4096, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('61', '1',        'SQL_CONVERT_INTEGER', 'SQL_CVT_CHAR',                TRUE,         1, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('61', '32768',    'SQL_CONVERT_INTEGER', 'SQL_CVT_DATE',                FALSE,    32768, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('61', '4',        'SQL_CONVERT_INTEGER', 'SQL_CVT_DECIMAL',             FALSE,        4, NULL, NULL);

1 row created.

Elapsed time: 0.08300 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('61', '128',      'SQL_CONVERT_INTEGER', 'SQL_CVT_DOUBLE',              TRUE,       128, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('61', '32',       'SQL_CONVERT_INTEGER', 'SQL_CVT_FLOAT',               TRUE,        32, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('61', '16777216', 'SQL_CONVERT_INTEGER', 'SQL_CVT_GUID',                FALSE, 16777216, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('61', '8',        'SQL_CONVERT_INTEGER', 'SQL_CVT_INTEGER',             TRUE,         8, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('61', '524288',   'SQL_CONVERT_INTEGER', 'SQL_CVT_INTERVAL_YEAR_MONTH', TRUE,    524288, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('61', '1048576',  'SQL_CONVERT_INTEGER', 'SQL_CVT_INTERVAL_DAY_TIME',   TRUE,   1048576, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('61', '262144',   'SQL_CONVERT_INTEGER', 'SQL_CVT_LONGVARBINARY',       FALSE,   262144, NULL, NULL);

1 row created.

Elapsed time: 0.08300 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('61', '512',      'SQL_CONVERT_INTEGER', 'SQL_CVT_LONGVARCHAR',         TRUE,       512, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('61', '2',        'SQL_CONVERT_INTEGER', 'SQL_CVT_NUMERIC',             TRUE,         2, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('61', '64',       'SQL_CONVERT_INTEGER', 'SQL_CVT_REAL',                TRUE,        64, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('61', '16',       'SQL_CONVERT_INTEGER', 'SQL_CVT_SMALLINT',            TRUE,        16, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('61', '65536',    'SQL_CONVERT_INTEGER', 'SQL_CVT_TIME',                FALSE,    65536, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('61', '131072',   'SQL_CONVERT_INTEGER', 'SQL_CVT_TIMESTAMP',           FALSE,   131072, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('61', '8192',     'SQL_CONVERT_INTEGER', 'SQL_CVT_TINYINT',             TRUE,      8192, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('61', '2048',     'SQL_CONVERT_INTEGER', 'SQL_CVT_VARBINARY',           FALSE,     2048, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('61', '256',      'SQL_CONVERT_INTEGER', 'SQL_CVT_VARCHAR',             TRUE,       256, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('61', '2097152',  'SQL_CONVERT_INTEGER', 'SQL_CVT_WCHAR',               FALSE,  2097152, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('61', '4194304',  'SQL_CONVERT_INTEGER', 'SQL_CVT_WWLONGVARCHAR',       FALSE,  4194304, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('61', '8388608',  'SQL_CONVERT_INTEGER', 'SQL_CVT_WVARCHAR',            FALSE,  8388608, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

    
INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('124', ' ',        'SQL_CONVERT_INTERVAL_YEAR_MONTH', ' ',                           TRUE,         0, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('124', '16384',    'SQL_CONVERT_INTERVAL_YEAR_MONTH', 'SQL_CVT_BIGINT',              TRUE,     16384, NULL, NULL);

1 row created.

Elapsed time: 0.07800 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('124', '1024',     'SQL_CONVERT_INTERVAL_YEAR_MONTH', 'SQL_CVT_BINARY',              FALSE,     1024, NULL, NULL);

1 row created.

Elapsed time: 0.08300 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('124', '4096',     'SQL_CONVERT_INTERVAL_YEAR_MONTH', 'SQL_CVT_BIT',                 FALSE,     4096, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('124', '1',        'SQL_CONVERT_INTERVAL_YEAR_MONTH', 'SQL_CVT_CHAR',                TRUE,         1, NULL, NULL);

1 row created.

Elapsed time: 0.07800 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('124', '32768',    'SQL_CONVERT_INTERVAL_YEAR_MONTH', 'SQL_CVT_DATE',                FALSE,    32768, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('124', '4',        'SQL_CONVERT_INTERVAL_YEAR_MONTH', 'SQL_CVT_DECIMAL',             FALSE,        4, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('124', '128',      'SQL_CONVERT_INTERVAL_YEAR_MONTH', 'SQL_CVT_DOUBLE',              FALSE,      128, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('124', '32',       'SQL_CONVERT_INTERVAL_YEAR_MONTH', 'SQL_CVT_FLOAT',               TRUE,        32, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('124', '16777216', 'SQL_CONVERT_INTERVAL_YEAR_MONTH', 'SQL_CVT_GUID',                FALSE, 16777216, NULL, NULL);

1 row created.

Elapsed time: 0.08200 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('124', '8',        'SQL_CONVERT_INTERVAL_YEAR_MONTH', 'SQL_CVT_INTEGER',             TRUE,         8, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('124', '524288',   'SQL_CONVERT_INTERVAL_YEAR_MONTH', 'SQL_CVT_INTERVAL_YEAR_MONTH', TRUE,    524288, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('124', '1048576',  'SQL_CONVERT_INTERVAL_YEAR_MONTH', 'SQL_CVT_INTERVAL_DAY_TIME',   FALSE,  1048576, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('124', '262144',   'SQL_CONVERT_INTERVAL_YEAR_MONTH', 'SQL_CVT_LONGVARBINARY',       FALSE,   262144, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('124', '512',      'SQL_CONVERT_INTERVAL_YEAR_MONTH', 'SQL_CVT_LONGVARCHAR',         TRUE,       512, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('124', '2',        'SQL_CONVERT_INTERVAL_YEAR_MONTH', 'SQL_CVT_NUMERIC',             TRUE,         2, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('124', '64',       'SQL_CONVERT_INTERVAL_YEAR_MONTH', 'SQL_CVT_REAL',                FALSE,       64, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('124', '16',       'SQL_CONVERT_INTERVAL_YEAR_MONTH', 'SQL_CVT_SMALLINT',            TRUE,        16, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('124', '65536',    'SQL_CONVERT_INTERVAL_YEAR_MONTH', 'SQL_CVT_TIME',                FALSE,    65536, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('124', '131072',   'SQL_CONVERT_INTERVAL_YEAR_MONTH', 'SQL_CVT_TIMESTAMP',           FALSE,   131072, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('124', '8192',     'SQL_CONVERT_INTERVAL_YEAR_MONTH', 'SQL_CVT_TINYINT',             TRUE,      8192, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('124', '2048',     'SQL_CONVERT_INTERVAL_YEAR_MONTH', 'SQL_CVT_VARBINARY',           FALSE,     2048, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('124', '256',      'SQL_CONVERT_INTERVAL_YEAR_MONTH', 'SQL_CVT_VARCHAR',             TRUE,       256, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('124', '2097152',  'SQL_CONVERT_INTERVAL_YEAR_MONTH', 'SQL_CVT_WCHAR',               FALSE,  2097152, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('124', '4194304',  'SQL_CONVERT_INTERVAL_YEAR_MONTH', 'SQL_CVT_WWLONGVARCHAR',       FALSE,  4194304, NULL, NULL);

1 row created.

Elapsed time: 0.08200 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('124', '8388608',  'SQL_CONVERT_INTERVAL_YEAR_MONTH', 'SQL_CVT_WVARCHAR',            FALSE,  8388608, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

    
INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('123', ' ',        'SQL_CONVERT_INTERVAL_DAY_TIME', ' ',                           TRUE,         0, NULL, NULL);

1 row created.

Elapsed time: 0.07800 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('123', '16384',    'SQL_CONVERT_INTERVAL_DAY_TIME', 'SQL_CVT_BIGINT',              TRUE,     16384, NULL, NULL);

1 row created.

Elapsed time: 0.07800 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('123', '1024',     'SQL_CONVERT_INTERVAL_DAY_TIME', 'SQL_CVT_BINARY',              FALSE,     1024, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('123', '4096',     'SQL_CONVERT_INTERVAL_DAY_TIME', 'SQL_CVT_BIT',                 FALSE,     4096, NULL, NULL);

1 row created.

Elapsed time: 0.07800 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('123', '1',        'SQL_CONVERT_INTERVAL_DAY_TIME', 'SQL_CVT_CHAR',                TRUE,         1, NULL, NULL);

1 row created.

Elapsed time: 0.07800 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('123', '32768',    'SQL_CONVERT_INTERVAL_DAY_TIME', 'SQL_CVT_DATE',                FALSE,    32768, NULL, NULL);

1 row created.

Elapsed time: 0.08400 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('123', '4',        'SQL_CONVERT_INTERVAL_DAY_TIME', 'SQL_CVT_DECIMAL',             FALSE,        4, NULL, NULL);

1 row created.

Elapsed time: 0.07800 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('123', '128',      'SQL_CONVERT_INTERVAL_DAY_TIME', 'SQL_CVT_DOUBLE',              FALSE,      128, NULL, NULL);

1 row created.

Elapsed time: 0.07800 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('123', '32',       'SQL_CONVERT_INTERVAL_DAY_TIME', 'SQL_CVT_FLOAT',               TRUE,        32, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('123', '16777216', 'SQL_CONVERT_INTERVAL_DAY_TIME', 'SQL_CVT_GUID',                FALSE, 16777216, NULL, NULL);

1 row created.

Elapsed time: 0.07800 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('123', '8',        'SQL_CONVERT_INTERVAL_DAY_TIME', 'SQL_CVT_INTEGER',             TRUE,         8, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('123', '524288',   'SQL_CONVERT_INTERVAL_DAY_TIME', 'SQL_CVT_INTERVAL_YEAR_MONTH', FALSE,   524288, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('123', '1048576',  'SQL_CONVERT_INTERVAL_DAY_TIME', 'SQL_CVT_INTERVAL_DAY_TIME',   TRUE,   1048576, NULL, NULL);

1 row created.

Elapsed time: 0.08400 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('123', '262144',   'SQL_CONVERT_INTERVAL_DAY_TIME', 'SQL_CVT_LONGVARBINARY',       FALSE,   262144, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('123', '512',      'SQL_CONVERT_INTERVAL_DAY_TIME', 'SQL_CVT_LONGVARCHAR',         TRUE,       512, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('123', '2',        'SQL_CONVERT_INTERVAL_DAY_TIME', 'SQL_CVT_NUMERIC',             TRUE,         2, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('123', '64',       'SQL_CONVERT_INTERVAL_DAY_TIME', 'SQL_CVT_REAL',                FALSE,       64, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('123', '16',       'SQL_CONVERT_INTERVAL_DAY_TIME', 'SQL_CVT_SMALLINT',            TRUE,        16, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('123', '65536',    'SQL_CONVERT_INTERVAL_DAY_TIME', 'SQL_CVT_TIME',                FALSE,    65536, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('123', '131072',   'SQL_CONVERT_INTERVAL_DAY_TIME', 'SQL_CVT_TIMESTAMP',           FALSE,   131072, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('123', '8192',     'SQL_CONVERT_INTERVAL_DAY_TIME', 'SQL_CVT_TINYINT',             TRUE,      8192, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('123', '2048',     'SQL_CONVERT_INTERVAL_DAY_TIME', 'SQL_CVT_VARBINARY',           FALSE,     2048, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('123', '256',      'SQL_CONVERT_INTERVAL_DAY_TIME', 'SQL_CVT_VARCHAR',             TRUE,       256, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('123', '2097152',  'SQL_CONVERT_INTERVAL_DAY_TIME', 'SQL_CVT_WCHAR',               FALSE,  2097152, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('123', '4194304',  'SQL_CONVERT_INTERVAL_DAY_TIME', 'SQL_CVT_WWLONGVARCHAR',       FALSE,  4194304, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('123', '8388608',  'SQL_CONVERT_INTERVAL_DAY_TIME', 'SQL_CVT_WVARCHAR',            FALSE,  8388608, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

    
INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('71', ' ',        'SQL_CONVERT_LONGVARBINARY', ' ',                           TRUE,         0, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('71', '16384',    'SQL_CONVERT_LONGVARBINARY', 'SQL_CVT_BIGINT',              FALSE,    16384, NULL, NULL);

1 row created.

Elapsed time: 0.07800 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('71', '1024',     'SQL_CONVERT_LONGVARBINARY', 'SQL_CVT_BINARY',              TRUE,      1024, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('71', '4096',     'SQL_CONVERT_LONGVARBINARY', 'SQL_CVT_BIT',                 FALSE,     4096, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('71', '1',        'SQL_CONVERT_LONGVARBINARY', 'SQL_CVT_CHAR',                FALSE,        1, NULL, NULL);

1 row created.

Elapsed time: 0.08100 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('71', '32768',    'SQL_CONVERT_LONGVARBINARY', 'SQL_CVT_DATE',                FALSE,    32768, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('71', '4',        'SQL_CONVERT_LONGVARBINARY', 'SQL_CVT_DECIMAL',             FALSE,        4, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('71', '128',      'SQL_CONVERT_LONGVARBINARY', 'SQL_CVT_DOUBLE',              FALSE,      128, NULL, NULL);

1 row created.

Elapsed time: 0.08200 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('71', '32',       'SQL_CONVERT_LONGVARBINARY', 'SQL_CVT_FLOAT',               FALSE,       32, NULL, NULL);

1 row created.

Elapsed time: 0.08400 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('71', '16777216', 'SQL_CONVERT_LONGVARBINARY', 'SQL_CVT_GUID',                FALSE, 16777216, NULL, NULL);

1 row created.

Elapsed time: 0.07800 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('71', '8',        'SQL_CONVERT_LONGVARBINARY', 'SQL_CVT_INTEGER',             FALSE,        8, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('71', '524288',   'SQL_CONVERT_LONGVARBINARY', 'SQL_CVT_INTERVAL_YEAR_MONTH', FALSE,   524288, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('71', '1048576',  'SQL_CONVERT_LONGVARBINARY', 'SQL_CVT_INTERVAL_DAY_TIME',   FALSE,  1048576, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('71', '262144',   'SQL_CONVERT_LONGVARBINARY', 'SQL_CVT_LONGVARBINARY',       TRUE,    262144, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('71', '512',      'SQL_CONVERT_LONGVARBINARY', 'SQL_CVT_LONGVARCHAR',         FALSE,      512, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('71', '2',        'SQL_CONVERT_LONGVARBINARY', 'SQL_CVT_NUMERIC',             FALSE,        2, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('71', '64',       'SQL_CONVERT_LONGVARBINARY', 'SQL_CVT_REAL',                FALSE,       64, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('71', '16',       'SQL_CONVERT_LONGVARBINARY', 'SQL_CVT_SMALLINT',            FALSE,       16, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('71', '65536',    'SQL_CONVERT_LONGVARBINARY', 'SQL_CVT_TIME',                FALSE,    65536, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('71', '131072',   'SQL_CONVERT_LONGVARBINARY', 'SQL_CVT_TIMESTAMP',           FALSE,   131072, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('71', '8192',     'SQL_CONVERT_LONGVARBINARY', 'SQL_CVT_TINYINT',             FALSE,     8192, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('71', '2048',     'SQL_CONVERT_LONGVARBINARY', 'SQL_CVT_VARBINARY',           TRUE,      2048, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('71', '256',      'SQL_CONVERT_LONGVARBINARY', 'SQL_CVT_VARCHAR',             FALSE,      256, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('71', '2097152',  'SQL_CONVERT_LONGVARBINARY', 'SQL_CVT_WCHAR',               FALSE,  2097152, NULL, NULL);

1 row created.

Elapsed time: 0.07800 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('71', '4194304',  'SQL_CONVERT_LONGVARBINARY', 'SQL_CVT_WWLONGVARCHAR',       FALSE,  4194304, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('71', '8388608',  'SQL_CONVERT_LONGVARBINARY', 'SQL_CVT_WVARCHAR',            FALSE,  8388608, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

    
INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('62', ' ',        'SQL_CONVERT_LONGVARCHAR', ' ',                           TRUE,         0, NULL, NULL);

1 row created.

Elapsed time: 0.08400 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('62', '16384',    'SQL_CONVERT_LONGVARCHAR', 'SQL_CVT_BIGINT',              TRUE,     16384, NULL, NULL);

1 row created.

Elapsed time: 0.07800 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('62', '1024',     'SQL_CONVERT_LONGVARCHAR', 'SQL_CVT_BINARY',              FALSE,     1024, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('62', '4096',     'SQL_CONVERT_LONGVARCHAR', 'SQL_CVT_BIT',                 TRUE,      4096, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('62', '1',        'SQL_CONVERT_LONGVARCHAR', 'SQL_CVT_CHAR',                TRUE,         1, NULL, NULL);

1 row created.

Elapsed time: 0.08400 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('62', '32768',    'SQL_CONVERT_LONGVARCHAR', 'SQL_CVT_DATE',                TRUE,     32768, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('62', '4',        'SQL_CONVERT_LONGVARCHAR', 'SQL_CVT_DECIMAL',             FALSE,        4, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('62', '128',      'SQL_CONVERT_LONGVARCHAR', 'SQL_CVT_DOUBLE',              TRUE,       128, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('62', '32',       'SQL_CONVERT_LONGVARCHAR', 'SQL_CVT_FLOAT',               TRUE,        32, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('62', '16777216', 'SQL_CONVERT_LONGVARCHAR', 'SQL_CVT_GUID',                FALSE, 16777216, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('62', '8',        'SQL_CONVERT_LONGVARCHAR', 'SQL_CVT_INTEGER',             TRUE,         8, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('62', '524288',   'SQL_CONVERT_LONGVARCHAR', 'SQL_CVT_INTERVAL_YEAR_MONTH', TRUE,    524288, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('62', '1048576',  'SQL_CONVERT_LONGVARCHAR', 'SQL_CVT_INTERVAL_DAY_TIME',   TRUE,   1048576, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('62', '262144',   'SQL_CONVERT_LONGVARCHAR', 'SQL_CVT_LONGVARBINARY',       FALSE,   262144, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('62', '512',      'SQL_CONVERT_LONGVARCHAR', 'SQL_CVT_LONGVARCHAR',         TRUE,       512, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('62', '2',        'SQL_CONVERT_LONGVARCHAR', 'SQL_CVT_NUMERIC',             TRUE,         2, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('62', '64',       'SQL_CONVERT_LONGVARCHAR', 'SQL_CVT_REAL',                TRUE,        64, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('62', '16',       'SQL_CONVERT_LONGVARCHAR', 'SQL_CVT_SMALLINT',            TRUE,        16, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('62', '65536',    'SQL_CONVERT_LONGVARCHAR', 'SQL_CVT_TIME',                TRUE,     65536, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('62', '131072',   'SQL_CONVERT_LONGVARCHAR', 'SQL_CVT_TIMESTAMP',           TRUE,    131072, NULL, NULL);

1 row created.

Elapsed time: 0.07800 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('62', '8192',     'SQL_CONVERT_LONGVARCHAR', 'SQL_CVT_TINYINT',             TRUE,      8192, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('62', '2048',     'SQL_CONVERT_LONGVARCHAR', 'SQL_CVT_VARBINARY',           FALSE,     2048, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('62', '256',      'SQL_CONVERT_LONGVARCHAR', 'SQL_CVT_VARCHAR',             TRUE,       256, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('62', '2097152',  'SQL_CONVERT_LONGVARCHAR', 'SQL_CVT_WCHAR',               FALSE,  2097152, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('62', '4194304',  'SQL_CONVERT_LONGVARCHAR', 'SQL_CVT_WWLONGVARCHAR',       FALSE,  4194304, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('62', '8388608',  'SQL_CONVERT_LONGVARCHAR', 'SQL_CVT_WVARCHAR',            FALSE,  8388608, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 


INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('63', ' ',        'SQL_CONVERT_NUMERIC', ' ',                           TRUE,         0, NULL, NULL);

1 row created.

Elapsed time: 0.08300 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('63', '16384',    'SQL_CONVERT_NUMERIC', 'SQL_CVT_BIGINT',              TRUE,     16384, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('63', '1024',     'SQL_CONVERT_NUMERIC', 'SQL_CVT_BINARY',              FALSE,     1024, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('63', '4096',     'SQL_CONVERT_NUMERIC', 'SQL_CVT_BIT',                 FALSE,     4096, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('63', '1',        'SQL_CONVERT_NUMERIC', 'SQL_CVT_CHAR',                TRUE,         1, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('63', '32768',    'SQL_CONVERT_NUMERIC', 'SQL_CVT_DATE',                FALSE,    32768, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('63', '4',        'SQL_CONVERT_NUMERIC', 'SQL_CVT_DECIMAL',             FALSE,        4, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('63', '128',      'SQL_CONVERT_NUMERIC', 'SQL_CVT_DOUBLE',              TRUE,       128, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('63', '32',       'SQL_CONVERT_NUMERIC', 'SQL_CVT_FLOAT',               TRUE,        32, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('63', '16777216', 'SQL_CONVERT_NUMERIC', 'SQL_CVT_GUID',                FALSE, 16777216, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('63', '8',        'SQL_CONVERT_NUMERIC', 'SQL_CVT_INTEGER',             TRUE,         8, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('63', '524288',   'SQL_CONVERT_NUMERIC', 'SQL_CVT_INTERVAL_YEAR_MONTH', TRUE,    524288, NULL, NULL);

1 row created.

Elapsed time: 0.08200 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('63', '1048576',  'SQL_CONVERT_NUMERIC', 'SQL_CVT_INTERVAL_DAY_TIME',   TRUE,   1048576, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('63', '262144',   'SQL_CONVERT_NUMERIC', 'SQL_CVT_LONGVARBINARY',       FALSE,   262144, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('63', '512',      'SQL_CONVERT_NUMERIC', 'SQL_CVT_LONGVARCHAR',         TRUE,       512, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('63', '2',        'SQL_CONVERT_NUMERIC', 'SQL_CVT_NUMERIC',             TRUE,         2, NULL, NULL);

1 row created.

Elapsed time: 0.07800 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('63', '64',       'SQL_CONVERT_NUMERIC', 'SQL_CVT_REAL',                TRUE,        64, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('63', '16',       'SQL_CONVERT_NUMERIC', 'SQL_CVT_SMALLINT',            TRUE,        16, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('63', '65536',    'SQL_CONVERT_NUMERIC', 'SQL_CVT_TIME',                FALSE,    65536, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('63', '131072',   'SQL_CONVERT_NUMERIC', 'SQL_CVT_TIMESTAMP',           FALSE,   131072, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('63', '8192',     'SQL_CONVERT_NUMERIC', 'SQL_CVT_TINYINT',             TRUE,      8192, NULL, NULL);

1 row created.

Elapsed time: 0.07900 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('63', '2048',     'SQL_CONVERT_NUMERIC', 'SQL_CVT_VARBINARY',           FALSE,     2048, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('63', '256',      'SQL_CONVERT_NUMERIC', 'SQL_CVT_VARCHAR',             TRUE,       256, NULL, NULL);

1 row created.

Elapsed time: 0.08200 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('63', '2097152',  'SQL_CONVERT_NUMERIC', 'SQL_CVT_WCHAR',               FALSE,  2097152, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('63', '4194304',  'SQL_CONVERT_NUMERIC', 'SQL_CVT_WWLONGVARCHAR',       FALSE,  4194304, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('63', '8388608',  'SQL_CONVERT_NUMERIC', 'SQL_CVT_WVARCHAR',            FALSE,  8388608, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

    
INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('64', ' ',        'SQL_CONVERT_REAL', ' ',                           TRUE,         0, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('64', '16384',    'SQL_CONVERT_REAL', 'SQL_CVT_BIGINT',              TRUE,     16384, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('64', '1024',     'SQL_CONVERT_REAL', 'SQL_CVT_BINARY',              FALSE,     1024, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('64', '4096',     'SQL_CONVERT_REAL', 'SQL_CVT_BIT',                 FALSE,     4096, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('64', '1',        'SQL_CONVERT_REAL', 'SQL_CVT_CHAR',                TRUE,         1, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('64', '32768',    'SQL_CONVERT_REAL', 'SQL_CVT_DATE',                FALSE,    32768, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('64', '4',        'SQL_CONVERT_REAL', 'SQL_CVT_DECIMAL',             FALSE,        4, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('64', '128',      'SQL_CONVERT_REAL', 'SQL_CVT_DOUBLE',              TRUE,       128, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('64', '32',       'SQL_CONVERT_REAL', 'SQL_CVT_FLOAT',               TRUE,        32, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('64', '16777216', 'SQL_CONVERT_REAL', 'SQL_CVT_GUID',                FALSE, 16777216, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('64', '8',        'SQL_CONVERT_REAL', 'SQL_CVT_INTEGER',             TRUE,         8, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('64', '524288',   'SQL_CONVERT_REAL', 'SQL_CVT_INTERVAL_YEAR_MONTH', FALSE,   524288, NULL, NULL);

1 row created.

Elapsed time: 0.08400 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('64', '1048576',  'SQL_CONVERT_REAL', 'SQL_CVT_INTERVAL_DAY_TIME',   FALSE,  1048576, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('64', '262144',   'SQL_CONVERT_REAL', 'SQL_CVT_LONGVARBINARY',       FALSE,   262144, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('64', '512',      'SQL_CONVERT_REAL', 'SQL_CVT_LONGVARCHAR',         TRUE,       512, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('64', '2',        'SQL_CONVERT_REAL', 'SQL_CVT_NUMERIC',             TRUE,         2, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('64', '64',       'SQL_CONVERT_REAL', 'SQL_CVT_REAL',                TRUE,        64, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('64', '16',       'SQL_CONVERT_REAL', 'SQL_CVT_SMALLINT',            TRUE,        16, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('64', '65536',    'SQL_CONVERT_REAL', 'SQL_CVT_TIME',                FALSE,    65536, NULL, NULL);

1 row created.

Elapsed time: 0.08600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('64', '131072',   'SQL_CONVERT_REAL', 'SQL_CVT_TIMESTAMP',           FALSE,   131072, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('64', '8192',     'SQL_CONVERT_REAL', 'SQL_CVT_TINYINT',             TRUE,      8192, NULL, NULL);

1 row created.

Elapsed time: 0.07900 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('64', '2048',     'SQL_CONVERT_REAL', 'SQL_CVT_VARBINARY',           FALSE,     2048, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('64', '256',      'SQL_CONVERT_REAL', 'SQL_CVT_VARCHAR',             TRUE,       256, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('64', '2097152',  'SQL_CONVERT_REAL', 'SQL_CVT_WCHAR',               FALSE,  2097152, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('64', '4194304',  'SQL_CONVERT_REAL', 'SQL_CVT_WWLONGVARCHAR',       FALSE,  4194304, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('64', '8388608',  'SQL_CONVERT_REAL', 'SQL_CVT_WVARCHAR',            FALSE,  8388608, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

    
INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('65', ' ',        'SQL_CONVERT_SMALLINT', ' ',                           TRUE,         0, NULL, NULL);

1 row created.

Elapsed time: 0.07800 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('65', '16384',    'SQL_CONVERT_SMALLINT', 'SQL_CVT_BIGINT',              TRUE,     16384, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('65', '1024',     'SQL_CONVERT_SMALLINT', 'SQL_CVT_BINARY',              FALSE,     1024, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('65', '4096',     'SQL_CONVERT_SMALLINT', 'SQL_CVT_BIT',                 FALSE,     4096, NULL, NULL);

1 row created.

Elapsed time: 0.08200 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('65', '1',        'SQL_CONVERT_SMALLINT', 'SQL_CVT_CHAR',                TRUE,         1, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('65', '32768',    'SQL_CONVERT_SMALLINT', 'SQL_CVT_DATE',                FALSE,    32768, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('65', '4',        'SQL_CONVERT_SMALLINT', 'SQL_CVT_DECIMAL',             FALSE,        4, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('65', '128',      'SQL_CONVERT_SMALLINT', 'SQL_CVT_DOUBLE',              TRUE,       128, NULL, NULL);

1 row created.

Elapsed time: 0.08200 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('65', '32',       'SQL_CONVERT_SMALLINT', 'SQL_CVT_FLOAT',               TRUE,        32, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('65', '16777216', 'SQL_CONVERT_SMALLINT', 'SQL_CVT_GUID',                FALSE, 16777216, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('65', '8',        'SQL_CONVERT_SMALLINT', 'SQL_CVT_INTEGER',             TRUE,         8, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('65', '524288',   'SQL_CONVERT_SMALLINT', 'SQL_CVT_INTERVAL_YEAR_MONTH', TRUE,    524288, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('65', '1048576',  'SQL_CONVERT_SMALLINT', 'SQL_CVT_INTERVAL_DAY_TIME',   TRUE,   1048576, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('65', '262144',   'SQL_CONVERT_SMALLINT', 'SQL_CVT_LONGVARBINARY',       FALSE,   262144, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('65', '512',      'SQL_CONVERT_SMALLINT', 'SQL_CVT_LONGVARCHAR',         TRUE,       512, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('65', '2',        'SQL_CONVERT_SMALLINT', 'SQL_CVT_NUMERIC',             TRUE,         2, NULL, NULL);

1 row created.

Elapsed time: 0.07800 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('65', '64',       'SQL_CONVERT_SMALLINT', 'SQL_CVT_REAL',                TRUE,        64, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('65', '16',       'SQL_CONVERT_SMALLINT', 'SQL_CVT_SMALLINT',            TRUE,        16, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('65', '65536',    'SQL_CONVERT_SMALLINT', 'SQL_CVT_TIME',                FALSE,    65536, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('65', '131072',   'SQL_CONVERT_SMALLINT', 'SQL_CVT_TIMESTAMP',           FALSE,   131072, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('65', '8192',     'SQL_CONVERT_SMALLINT', 'SQL_CVT_TINYINT',             TRUE,      8192, NULL, NULL);

1 row created.

Elapsed time: 0.07900 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('65', '2048',     'SQL_CONVERT_SMALLINT', 'SQL_CVT_VARBINARY',           FALSE,     2048, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('65', '256',      'SQL_CONVERT_SMALLINT', 'SQL_CVT_VARCHAR',             TRUE,       256, NULL, NULL);

1 row created.

Elapsed time: 0.07800 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('65', '2097152',  'SQL_CONVERT_SMALLINT', 'SQL_CVT_WCHAR',               FALSE,  2097152, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('65', '4194304',  'SQL_CONVERT_SMALLINT', 'SQL_CVT_WWLONGVARCHAR',       FALSE,  4194304, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('65', '8388608',  'SQL_CONVERT_SMALLINT', 'SQL_CVT_WVARCHAR',            FALSE,  8388608, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

    
INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('66', ' ',        'SQL_CONVERT_TIME', ' ',                           TRUE,         0, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('66', '16384',    'SQL_CONVERT_TIME', 'SQL_CVT_BIGINT',              FALSE,    16384, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('66', '1024',     'SQL_CONVERT_TIME', 'SQL_CVT_BINARY',              FALSE,     1024, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('66', '4096',     'SQL_CONVERT_TIME', 'SQL_CVT_BIT',                 FALSE,     4096, NULL, NULL);

1 row created.

Elapsed time: 0.08200 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('66', '1',        'SQL_CONVERT_TIME', 'SQL_CVT_CHAR',                TRUE,         1, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('66', '32768',    'SQL_CONVERT_TIME', 'SQL_CVT_DATE',                FALSE,    32768, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('66', '4',        'SQL_CONVERT_TIME', 'SQL_CVT_DECIMAL',             FALSE,        4, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('66', '128',      'SQL_CONVERT_TIME', 'SQL_CVT_DOUBLE',              FALSE,      128, NULL, NULL);

1 row created.

Elapsed time: 0.07900 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('66', '32',       'SQL_CONVERT_TIME', 'SQL_CVT_FLOAT',               FALSE,       32, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('66', '16777216', 'SQL_CONVERT_TIME', 'SQL_CVT_GUID',                FALSE, 16777216, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('66', '8',        'SQL_CONVERT_TIME', 'SQL_CVT_INTEGER',             FALSE,        8, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('66', '524288',   'SQL_CONVERT_TIME', 'SQL_CVT_INTERVAL_YEAR_MONTH', FALSE,   524288, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('66', '1048576',  'SQL_CONVERT_TIME', 'SQL_CVT_INTERVAL_DAY_TIME',   FALSE,  1048576, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('66', '262144',   'SQL_CONVERT_TIME', 'SQL_CVT_LONGVARBINARY',       FALSE,   262144, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('66', '512',      'SQL_CONVERT_TIME', 'SQL_CVT_LONGVARCHAR',         TRUE,       512, NULL, NULL);

1 row created.

Elapsed time: 0.07900 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('66', '2',        'SQL_CONVERT_TIME', 'SQL_CVT_NUMERIC',             FALSE,        2, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('66', '64',       'SQL_CONVERT_TIME', 'SQL_CVT_REAL',                FALSE,       64, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('66', '16',       'SQL_CONVERT_TIME', 'SQL_CVT_SMALLINT',            FALSE,       16, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('66', '65536',    'SQL_CONVERT_TIME', 'SQL_CVT_TIME',                TRUE,     65536, NULL, NULL);

1 row created.

Elapsed time: 0.08300 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('66', '131072',   'SQL_CONVERT_TIME', 'SQL_CVT_TIMESTAMP',           FALSE,   131072, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('66', '8192',     'SQL_CONVERT_TIME', 'SQL_CVT_TINYINT',             FALSE,     8192, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('66', '2048',     'SQL_CONVERT_TIME', 'SQL_CVT_VARBINARY',           FALSE,     2048, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('66', '256',      'SQL_CONVERT_TIME', 'SQL_CVT_VARCHAR',             TRUE,       256, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('66', '2097152',  'SQL_CONVERT_TIME', 'SQL_CVT_WCHAR',               FALSE,  2097152, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('66', '4194304',  'SQL_CONVERT_TIME', 'SQL_CVT_WWLONGVARCHAR',       FALSE,  4194304, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('66', '8388608',  'SQL_CONVERT_TIME', 'SQL_CVT_WVARCHAR',            FALSE,  8388608, NULL, NULL);

1 row created.

Elapsed time: 0.08000 ms 

    
INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('67', ' ',        'SQL_CONVERT_TIMESTAMP', '0',                           TRUE,         0, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('67', '16384',    'SQL_CONVERT_TIMESTAMP', 'SQL_CVT_BIGINT',              FALSE,    16384, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('67', '1024',     'SQL_CONVERT_TIMESTAMP', 'SQL_CVT_BINARY',              FALSE,     1024, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('67', '4096',     'SQL_CONVERT_TIMESTAMP', 'SQL_CVT_BIT',                 FALSE,     4096, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('67', '1',        'SQL_CONVERT_TIMESTAMP', 'SQL_CVT_CHAR',                TRUE,         1, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('67', '32768',    'SQL_CONVERT_TIMESTAMP', 'SQL_CVT_DATE',                TRUE,     32768, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('67', '4',        'SQL_CONVERT_TIMESTAMP', 'SQL_CVT_DECIMAL',             FALSE,        4, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('67', '128',      'SQL_CONVERT_TIMESTAMP', 'SQL_CVT_DOUBLE',              FALSE,      128, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('67', '32',       'SQL_CONVERT_TIMESTAMP', 'SQL_CVT_FLOAT',               FALSE,       32, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('67', '16777216', 'SQL_CONVERT_TIMESTAMP', 'SQL_CVT_GUID',                FALSE, 16777216, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('67', '8',        'SQL_CONVERT_TIMESTAMP', 'SQL_CVT_INTEGER',             FALSE,        8, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('67', '524288',   'SQL_CONVERT_TIMESTAMP', 'SQL_CVT_INTERVAL_YEAR_MONTH', FALSE,   524288, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('67', '1048576',  'SQL_CONVERT_TIMESTAMP', 'SQL_CVT_INTERVAL_DAY_TIME',   FALSE,  1048576, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('67', '262144',   'SQL_CONVERT_TIMESTAMP', 'SQL_CVT_LONGVARBINARY',       FALSE,   262144, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('67', '512',      'SQL_CONVERT_TIMESTAMP', 'SQL_CVT_LONGVARCHAR',         TRUE,       512, NULL, NULL);

1 row created.

Elapsed time: 0.08200 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('67', '2',        'SQL_CONVERT_TIMESTAMP', 'SQL_CVT_NUMERIC',             FALSE,        2, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('67', '64',       'SQL_CONVERT_TIMESTAMP', 'SQL_CVT_REAL',                FALSE,       64, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('67', '16',       'SQL_CONVERT_TIMESTAMP', 'SQL_CVT_SMALLINT',            FALSE,       16, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('67', '65536',    'SQL_CONVERT_TIMESTAMP', 'SQL_CVT_TIME',                TRUE,     65536, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('67', '131072',   'SQL_CONVERT_TIMESTAMP', 'SQL_CVT_TIMESTAMP',           TRUE,    131072, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('67', '8192',     'SQL_CONVERT_TIMESTAMP', 'SQL_CVT_TINYINT',             FALSE,     8192, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('67', '2048',     'SQL_CONVERT_TIMESTAMP', 'SQL_CVT_VARBINARY',           FALSE,     2048, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('67', '256',      'SQL_CONVERT_TIMESTAMP', 'SQL_CVT_VARCHAR',             TRUE,       256, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('67', '2097152',  'SQL_CONVERT_TIMESTAMP', 'SQL_CVT_WCHAR',               FALSE,  2097152, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('67', '4194304',  'SQL_CONVERT_TIMESTAMP', 'SQL_CVT_WWLONGVARCHAR',       FALSE,  4194304, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('67', '8388608',  'SQL_CONVERT_TIMESTAMP', 'SQL_CVT_WVARCHAR',            FALSE,  8388608, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

    
INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('68', ' ',        'SQL_CONVERT_TINYINT', ' ',                           TRUE,         0, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('68', '16384',    'SQL_CONVERT_TINYINT', 'SQL_CVT_BIGINT',              TRUE,     16384, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('68', '1024',     'SQL_CONVERT_TINYINT', 'SQL_CVT_BINARY',              FALSE,     1024, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('68', '4096',     'SQL_CONVERT_TINYINT', 'SQL_CVT_BIT',                 FALSE,     4096, NULL, NULL);

1 row created.

Elapsed time: 0.08000 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('68', '1',        'SQL_CONVERT_TINYINT', 'SQL_CVT_CHAR',                TRUE,         1, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('68', '32768',    'SQL_CONVERT_TINYINT', 'SQL_CVT_DATE',                FALSE,    32768, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('68', '4',        'SQL_CONVERT_TINYINT', 'SQL_CVT_DECIMAL',             FALSE,        4, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('68', '128',      'SQL_CONVERT_TINYINT', 'SQL_CVT_DOUBLE',              TRUE,       128, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('68', '32',       'SQL_CONVERT_TINYINT', 'SQL_CVT_FLOAT',               TRUE,        32, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('68', '16777216', 'SQL_CONVERT_TINYINT', 'SQL_CVT_GUID',                FALSE, 16777216, NULL, NULL);

1 row created.

Elapsed time: 0.08100 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('68', '8',        'SQL_CONVERT_TINYINT', 'SQL_CVT_INTEGER',             TRUE,         8, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('68', '524288',   'SQL_CONVERT_TINYINT', 'SQL_CVT_INTERVAL_YEAR_MONTH', TRUE,    524288, NULL, NULL);

1 row created.

Elapsed time: 0.07800 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('68', '1048576',  'SQL_CONVERT_TINYINT', 'SQL_CVT_INTERVAL_DAY_TIME',   TRUE,   1048576, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('68', '262144',   'SQL_CONVERT_TINYINT', 'SQL_CVT_LONGVARBINARY',       FALSE,   262144, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('68', '512',      'SQL_CONVERT_TINYINT', 'SQL_CVT_LONGVARCHAR',         TRUE,       512, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('68', '2',        'SQL_CONVERT_TINYINT', 'SQL_CVT_NUMERIC',             TRUE,         2, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('68', '64',       'SQL_CONVERT_TINYINT', 'SQL_CVT_REAL',                TRUE,        64, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('68', '16',       'SQL_CONVERT_TINYINT', 'SQL_CVT_SMALLINT',            TRUE,        16, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('68', '65536',    'SQL_CONVERT_TINYINT', 'SQL_CVT_TIME',                FALSE,    65536, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('68', '131072',   'SQL_CONVERT_TINYINT', 'SQL_CVT_TIMESTAMP',           FALSE,   131072, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('68', '8192',     'SQL_CONVERT_TINYINT', 'SQL_CVT_TINYINT',             TRUE,      8192, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('68', '2048',     'SQL_CONVERT_TINYINT', 'SQL_CVT_VARBINARY',           FALSE,     2048, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('68', '256',      'SQL_CONVERT_TINYINT', 'SQL_CVT_VARCHAR',             TRUE,       256, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('68', '2097152',  'SQL_CONVERT_TINYINT', 'SQL_CVT_WCHAR',               FALSE,  2097152, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('68', '4194304',  'SQL_CONVERT_TINYINT', 'SQL_CVT_WWLONGVARCHAR',       FALSE,  4194304, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('68', '8388608',  'SQL_CONVERT_TINYINT', 'SQL_CVT_WVARCHAR',            FALSE,  8388608, NULL, NULL);

1 row created.

Elapsed time: 0.08200 ms 

    
INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('69', ' ',        'SQL_CONVERT_VARBINARY', ' ',                           TRUE,         0, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('69', '16384',    'SQL_CONVERT_VARBINARY', 'SQL_CVT_BIGINT',              FALSE,    16384, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('69', '1024',     'SQL_CONVERT_VARBINARY', 'SQL_CVT_BINARY',              TRUE,      1024, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('69', '4096',     'SQL_CONVERT_VARBINARY', 'SQL_CVT_BIT',                 FALSE,     4096, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('69', '1',        'SQL_CONVERT_VARBINARY', 'SQL_CVT_CHAR',                FALSE,        1, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('69', '32768',    'SQL_CONVERT_VARBINARY', 'SQL_CVT_DATE',                FALSE,    32768, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('69', '4',        'SQL_CONVERT_VARBINARY', 'SQL_CVT_DECIMAL',             FALSE,        4, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('69', '128',      'SQL_CONVERT_VARBINARY', 'SQL_CVT_DOUBLE',              FALSE,      128, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('69', '32',       'SQL_CONVERT_VARBINARY', 'SQL_CVT_FLOAT',               FALSE,       32, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('69', '16777216', 'SQL_CONVERT_VARBINARY', 'SQL_CVT_GUID',                FALSE, 16777216, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('69', '8',        'SQL_CONVERT_VARBINARY', 'SQL_CVT_INTEGER',             FALSE,        8, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('69', '524288',   'SQL_CONVERT_VARBINARY', 'SQL_CVT_INTERVAL_YEAR_MONTH', FALSE,   524288, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('69', '1048576',  'SQL_CONVERT_VARBINARY', 'SQL_CVT_INTERVAL_DAY_TIME',   FALSE,  1048576, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('69', '262144',   'SQL_CONVERT_VARBINARY', 'SQL_CVT_LONGVARBINARY',       TRUE,    262144, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('69', '512',      'SQL_CONVERT_VARBINARY', 'SQL_CVT_LONGVARCHAR',         FALSE,      512, NULL, NULL);

1 row created.

Elapsed time: 0.08100 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('69', '2',        'SQL_CONVERT_VARBINARY', 'SQL_CVT_NUMERIC',             FALSE,        2, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('69', '64',       'SQL_CONVERT_VARBINARY', 'SQL_CVT_REAL',                FALSE,       64, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('69', '16',       'SQL_CONVERT_VARBINARY', 'SQL_CVT_SMALLINT',            FALSE,       16, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('69', '65536',    'SQL_CONVERT_VARBINARY', 'SQL_CVT_TIME',                FALSE,    65536, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('69', '131072',   'SQL_CONVERT_VARBINARY', 'SQL_CVT_TIMESTAMP',           FALSE,   131072, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('69', '8192',     'SQL_CONVERT_VARBINARY', 'SQL_CVT_TINYINT',             FALSE,     8192, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('69', '2048',     'SQL_CONVERT_VARBINARY', 'SQL_CVT_VARBINARY',           TRUE,      2048, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('69', '256',      'SQL_CONVERT_VARBINARY', 'SQL_CVT_VARCHAR',             FALSE,      256, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('69', '2097152',  'SQL_CONVERT_VARBINARY', 'SQL_CVT_WCHAR',               FALSE,  2097152, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('69', '4194304',  'SQL_CONVERT_VARBINARY', 'SQL_CVT_WWLONGVARCHAR',       FALSE,  4194304, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('69', '8388608',  'SQL_CONVERT_VARBINARY', 'SQL_CVT_WVARCHAR',            FALSE,  8388608, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

    
INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('70', ' ',        'SQL_CONVERT_VARCHAR', ' ',                           TRUE,         0, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('70', '16384',    'SQL_CONVERT_VARCHAR', 'SQL_CVT_BIGINT',              TRUE,     16384, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('70', '1024',     'SQL_CONVERT_VARCHAR', 'SQL_CVT_BINARY',              FALSE,     1024, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('70', '4096',     'SQL_CONVERT_VARCHAR', 'SQL_CVT_BIT',                 TRUE,      4096, NULL, NULL);

1 row created.

Elapsed time: 0.08400 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('70', '1',        'SQL_CONVERT_VARCHAR', 'SQL_CVT_CHAR',                TRUE,         1, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('70', '32768',    'SQL_CONVERT_VARCHAR', 'SQL_CVT_DATE',                TRUE,     32768, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('70', '4',        'SQL_CONVERT_VARCHAR', 'SQL_CVT_DECIMAL',             FALSE,        4, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('70', '128',      'SQL_CONVERT_VARCHAR', 'SQL_CVT_DOUBLE',              TRUE,       128, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('70', '32',       'SQL_CONVERT_VARCHAR', 'SQL_CVT_FLOAT',               TRUE,        32, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('70', '16777216', 'SQL_CONVERT_VARCHAR', 'SQL_CVT_GUID',                FALSE, 16777216, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('70', '8',        'SQL_CONVERT_VARCHAR', 'SQL_CVT_INTEGER',             TRUE,         8, NULL, NULL);

1 row created.

Elapsed time: 0.08200 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('70', '524288',   'SQL_CONVERT_VARCHAR', 'SQL_CVT_INTERVAL_YEAR_MONTH', TRUE,    524288, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('70', '1048576',  'SQL_CONVERT_VARCHAR', 'SQL_CVT_INTERVAL_DAY_TIME',   TRUE,   1048576, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('70', '262144',   'SQL_CONVERT_VARCHAR', 'SQL_CVT_LONGVARBINARY',       FALSE,   262144, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('70', '512',      'SQL_CONVERT_VARCHAR', 'SQL_CVT_LONGVARCHAR',         TRUE,       512, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('70', '2',        'SQL_CONVERT_VARCHAR', 'SQL_CVT_NUMERIC',             TRUE,         2, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('70', '64',       'SQL_CONVERT_VARCHAR', 'SQL_CVT_REAL',                TRUE,        64, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('70', '16',       'SQL_CONVERT_VARCHAR', 'SQL_CVT_SMALLINT',            TRUE,        16, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('70', '65536',    'SQL_CONVERT_VARCHAR', 'SQL_CVT_TIME',                TRUE,     65536, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('70', '131072',   'SQL_CONVERT_VARCHAR', 'SQL_CVT_TIMESTAMP',           TRUE,    131072, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('70', '8192',     'SQL_CONVERT_VARCHAR', 'SQL_CVT_TINYINT',             TRUE,      8192, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('70', '2048',     'SQL_CONVERT_VARCHAR', 'SQL_CVT_VARBINARY',           FALSE,     2048, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('70', '256',      'SQL_CONVERT_VARCHAR', 'SQL_CVT_VARCHAR',             TRUE,       256, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('70', '2097152',  'SQL_CONVERT_VARCHAR', 'SQL_CVT_WCHAR',               FALSE,  2097152, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('70', '4194304',  'SQL_CONVERT_VARCHAR', 'SQL_CVT_WWLONGVARCHAR',       FALSE,  4194304, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('70', '8388608',  'SQL_CONVERT_VARCHAR', 'SQL_CVT_WVARCHAR',            FALSE,  8388608, NULL, NULL);

1 row created.

Elapsed time: 0.08100 ms 

    
INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('122', ' ',        'SQL_CONVERT_WCHAR', ' ',                           TRUE,         0, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('122', '16384',    'SQL_CONVERT_WCHAR', 'SQL_CVT_BIGINT',              FALSE,    16384, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('122', '1024',     'SQL_CONVERT_WCHAR', 'SQL_CVT_BINARY',              FALSE,     1024, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('122', '4096',     'SQL_CONVERT_WCHAR', 'SQL_CVT_BIT',                 FALSE,     4096, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('122', '1',        'SQL_CONVERT_WCHAR', 'SQL_CVT_CHAR',                FALSE,        1, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('122', '32768',    'SQL_CONVERT_WCHAR', 'SQL_CVT_DATE',                FALSE,    32768, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('122', '4',        'SQL_CONVERT_WCHAR', 'SQL_CVT_DECIMAL',             FALSE,        4, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('122', '128',      'SQL_CONVERT_WCHAR', 'SQL_CVT_DOUBLE',              FALSE,      128, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('122', '32',       'SQL_CONVERT_WCHAR', 'SQL_CVT_FLOAT',               FALSE,       32, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('122', '16777216', 'SQL_CONVERT_WCHAR', 'SQL_CVT_GUID',                FALSE, 16777216, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('122', '8',        'SQL_CONVERT_WCHAR', 'SQL_CVT_INTEGER',             FALSE,        8, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('122', '524288',   'SQL_CONVERT_WCHAR', 'SQL_CVT_INTERVAL_YEAR_MONTH', FALSE,   524288, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('122', '1048576',  'SQL_CONVERT_WCHAR', 'SQL_CVT_INTERVAL_DAY_TIME',   FALSE,  1048576, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('122', '262144',   'SQL_CONVERT_WCHAR', 'SQL_CVT_LONGVARBINARY',       FALSE,   262144, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('122', '512',      'SQL_CONVERT_WCHAR', 'SQL_CVT_LONGVARCHAR',         FALSE,      512, NULL, NULL);

1 row created.

Elapsed time: 0.08400 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('122', '2',        'SQL_CONVERT_WCHAR', 'SQL_CVT_NUMERIC',             FALSE,        2, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('122', '64',       'SQL_CONVERT_WCHAR', 'SQL_CVT_REAL',                FALSE,       64, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('122', '16',       'SQL_CONVERT_WCHAR', 'SQL_CVT_SMALLINT',            FALSE,       16, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('122', '65536',    'SQL_CONVERT_WCHAR', 'SQL_CVT_TIME',                FALSE,    65536, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('122', '131072',   'SQL_CONVERT_WCHAR', 'SQL_CVT_TIMESTAMP',           FALSE,   131072, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('122', '8192',     'SQL_CONVERT_WCHAR', 'SQL_CVT_TINYINT',             FALSE,     8192, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('122', '2048',     'SQL_CONVERT_WCHAR', 'SQL_CVT_VARBINARY',           FALSE,     2048, NULL, NULL);

1 row created.

Elapsed time: 0.08200 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('122', '256',      'SQL_CONVERT_WCHAR', 'SQL_CVT_VARCHAR',             FALSE,      256, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('122', '2097152',  'SQL_CONVERT_WCHAR', 'SQL_CVT_WCHAR',               FALSE,  2097152, NULL, NULL);

1 row created.

Elapsed time: 0.07900 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('122', '4194304',  'SQL_CONVERT_WCHAR', 'SQL_CVT_WWLONGVARCHAR',       FALSE,  4194304, NULL, NULL);

1 row created.

Elapsed time: 0.08000 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('122', '8388608',  'SQL_CONVERT_WCHAR', 'SQL_CVT_WVARCHAR',            FALSE,  8388608, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

    
INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('125', ' ',        'SQL_CONVERT_WLONGVARCHAR', ' ',                           TRUE,         0, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('125', '16384',    'SQL_CONVERT_WLONGVARCHAR', 'SQL_CVT_BIGINT',              FALSE,    16384, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('125', '1024',     'SQL_CONVERT_WLONGVARCHAR', 'SQL_CVT_BINARY',              FALSE,     1024, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('125', '4096',     'SQL_CONVERT_WLONGVARCHAR', 'SQL_CVT_BIT',                 FALSE,     4096, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('125', '1',        'SQL_CONVERT_WLONGVARCHAR', 'SQL_CVT_CHAR',                FALSE,        1, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('125', '32768',    'SQL_CONVERT_WLONGVARCHAR', 'SQL_CVT_DATE',                FALSE,    32768, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('125', '4',        'SQL_CONVERT_WLONGVARCHAR', 'SQL_CVT_DECIMAL',             FALSE,        4, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('125', '128',      'SQL_CONVERT_WLONGVARCHAR', 'SQL_CVT_DOUBLE',              FALSE,      128, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('125', '32',       'SQL_CONVERT_WLONGVARCHAR', 'SQL_CVT_FLOAT',               FALSE,       32, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('125', '16777216', 'SQL_CONVERT_WLONGVARCHAR', 'SQL_CVT_GUID',                FALSE, 16777216, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('125', '8',        'SQL_CONVERT_WLONGVARCHAR', 'SQL_CVT_INTEGER',             FALSE,        8, NULL, NULL);

1 row created.

Elapsed time: 0.08200 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('125', '524288',   'SQL_CONVERT_WLONGVARCHAR', 'SQL_CVT_INTERVAL_YEAR_MONTH', FALSE,   524288, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('125', '1048576',  'SQL_CONVERT_WLONGVARCHAR', 'SQL_CVT_INTERVAL_DAY_TIME',   FALSE,  1048576, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('125', '262144',   'SQL_CONVERT_WLONGVARCHAR', 'SQL_CVT_LONGVARBINARY',       FALSE,   262144, NULL, NULL);

1 row created.

Elapsed time: 0.08300 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('125', '512',      'SQL_CONVERT_WLONGVARCHAR', 'SQL_CVT_LONGVARCHAR',         FALSE,      512, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('125', '2',        'SQL_CONVERT_WLONGVARCHAR', 'SQL_CVT_NUMERIC',             FALSE,        2, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('125', '64',       'SQL_CONVERT_WLONGVARCHAR', 'SQL_CVT_REAL',                FALSE,       64, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('125', '16',       'SQL_CONVERT_WLONGVARCHAR', 'SQL_CVT_SMALLINT',            FALSE,       16, NULL, NULL);

1 row created.

Elapsed time: 0.08200 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('125', '65536',    'SQL_CONVERT_WLONGVARCHAR', 'SQL_CVT_TIME',                FALSE,    65536, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('125', '131072',   'SQL_CONVERT_WLONGVARCHAR', 'SQL_CVT_TIMESTAMP',           FALSE,   131072, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('125', '8192',     'SQL_CONVERT_WLONGVARCHAR', 'SQL_CVT_TINYINT',             FALSE,     8192, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('125', '2048',     'SQL_CONVERT_WLONGVARCHAR', 'SQL_CVT_VARBINARY',           FALSE,     2048, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('125', '256',      'SQL_CONVERT_WLONGVARCHAR', 'SQL_CVT_VARCHAR',             FALSE,      256, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('125', '2097152',  'SQL_CONVERT_WLONGVARCHAR', 'SQL_CVT_WCHAR',               FALSE,  2097152, NULL, NULL);

1 row created.

Elapsed time: 0.08000 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('125', '4194304',  'SQL_CONVERT_WLONGVARCHAR', 'SQL_CVT_WWLONGVARCHAR',       FALSE,  4194304, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('125', '8388608',  'SQL_CONVERT_WLONGVARCHAR', 'SQL_CVT_WVARCHAR',            FALSE,  8388608, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

    
INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('126', ' ',        'SQL_CONVERT_WVARCHAR', ' ',                           TRUE,         0, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('126', '16384',    'SQL_CONVERT_WVARCHAR', 'SQL_CVT_BIGINT',              FALSE,    16384, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('126', '1024',     'SQL_CONVERT_WVARCHAR', 'SQL_CVT_BINARY',              FALSE,     1024, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('126', '4096',     'SQL_CONVERT_WVARCHAR', 'SQL_CVT_BIT',                 FALSE,     4096, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('126', '1',        'SQL_CONVERT_WVARCHAR', 'SQL_CVT_CHAR',                FALSE,        1, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('126', '32768',    'SQL_CONVERT_WVARCHAR', 'SQL_CVT_DATE',                FALSE,    32768, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('126', '4',        'SQL_CONVERT_WVARCHAR', 'SQL_CVT_DECIMAL',             FALSE,        4, NULL, NULL);

1 row created.

Elapsed time: 0.08400 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('126', '128',      'SQL_CONVERT_WVARCHAR', 'SQL_CVT_DOUBLE',              FALSE,      128, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('126', '32',       'SQL_CONVERT_WVARCHAR', 'SQL_CVT_FLOAT',               FALSE,       32, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('126', '16777216', 'SQL_CONVERT_WVARCHAR', 'SQL_CVT_GUID',                FALSE, 16777216, NULL, NULL);

1 row created.

Elapsed time: 0.07900 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('126', '8',        'SQL_CONVERT_WVARCHAR', 'SQL_CVT_INTEGER',             FALSE,        8, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('126', '524288',   'SQL_CONVERT_WVARCHAR', 'SQL_CVT_INTERVAL_YEAR_MONTH', FALSE,   524288, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('126', '1048576',  'SQL_CONVERT_WVARCHAR', 'SQL_CVT_INTERVAL_DAY_TIME',   FALSE,  1048576, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('126', '262144',   'SQL_CONVERT_WVARCHAR', 'SQL_CVT_LONGVARBINARY',       FALSE,   262144, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('126', '512',      'SQL_CONVERT_WVARCHAR', 'SQL_CVT_LONGVARCHAR',         FALSE,      512, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('126', '2',        'SQL_CONVERT_WVARCHAR', 'SQL_CVT_NUMERIC',             FALSE,        2, NULL, NULL);

1 row created.

Elapsed time: 0.08200 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('126', '64',       'SQL_CONVERT_WVARCHAR', 'SQL_CVT_REAL',                FALSE,       64, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('126', '16',       'SQL_CONVERT_WVARCHAR', 'SQL_CVT_SMALLINT',            FALSE,       16, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('126', '65536',    'SQL_CONVERT_WVARCHAR', 'SQL_CVT_TIME',                FALSE,    65536, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('126', '131072',   'SQL_CONVERT_WVARCHAR', 'SQL_CVT_TIMESTAMP',           FALSE,   131072, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('126', '8192',     'SQL_CONVERT_WVARCHAR', 'SQL_CVT_TINYINT',             FALSE,     8192, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('126', '2048',     'SQL_CONVERT_WVARCHAR', 'SQL_CVT_VARBINARY',           FALSE,     2048, NULL, NULL);

1 row created.

Elapsed time: 0.08200 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('126', '256',      'SQL_CONVERT_WVARCHAR', 'SQL_CVT_VARCHAR',             FALSE,      256, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('126', '2097152',  'SQL_CONVERT_WVARCHAR', 'SQL_CVT_WCHAR',               FALSE,  2097152, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('126', '4194304',  'SQL_CONVERT_WVARCHAR', 'SQL_CVT_WWLONGVARCHAR',       FALSE,  4194304, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('126', '8388608',  'SQL_CONVERT_WVARCHAR', 'SQL_CVT_WVARCHAR',            FALSE,  8388608, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

    
INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('48', ' ',        'SQL_CONVERT_FUNCTIONS', ' ',                  TRUE,  0, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('48', '2',        'SQL_CONVERT_FUNCTIONS', 'SQL_FN_CVT_CAST',    TRUE,  2, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('48', '1',        'SQL_CONVERT_FUNCTIONS', 'SQL_FN_CVT_CONVERT', FALSE, 1, NULL, NULL);

1 row created.

Elapsed time: 0.08200 ms 

    
INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('74', ' ',        'SQL_CORRELATION_NAME', ' ', TRUE, 2, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

    
INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('127', ' ',       'SQL_CREATE_ASSERTION', ' ',                                     TRUE,    0, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('127', '1',       'SQL_CREATE_ASSERTION', 'SQL_CA_CREATE_ASSERTION',               FALSE,   1, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('127', '16',      'SQL_CREATE_ASSERTION', 'SQL_CA_CONSTRAINT_INITIALLY_DEFERRED',  FALSE,  16, NULL, NULL);

1 row created.

Elapsed time: 0.08000 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('127', '32',      'SQL_CREATE_ASSERTION', 'SQL_CA_CONSTRAINT_INITIALLY_IMMEDIATE', FALSE,  32, NULL, NULL);

1 row created.

Elapsed time: 0.07800 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('127', '64',      'SQL_CREATE_ASSERTION', 'SQL_CA_CONSTRAINT_DEFERRABLE',          FALSE,  64, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('127', '128',     'SQL_CREATE_ASSERTION', 'SQL_CA_CONSTRAINT_NON_DEFERRABLE',      FALSE, 128, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 


INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('128', ' ',       'SQL_CREATE_CHARACTER_SET', ' ',                            TRUE,  0, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('128', '1',       'SQL_CREATE_CHARACTER_SET', 'SQL_CCS_CREATE_CHARACTER_SET', FALSE, 1, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('128', '2',       'SQL_CREATE_CHARACTER_SET', 'SQL_CCS_COLLATE_CLAUSE',       FALSE, 2, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('128', '4',       'SQL_CREATE_CHARACTER_SET', 'SQL_CCS_LIMITED_COLLATION',    FALSE, 4, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 


INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('129', ' ',       'SQL_CREATE_COLLATION', ' ',                         TRUE,  0, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('129', '1',       'SQL_CREATE_COLLATION', 'SQL_CCOL_CREATE_COLLATION', FALSE, 1, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 


INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('130', ' ',       'SQL_CREATE_DOMAIN', ' ',                                      TRUE,    0, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('130', '1',       'SQL_CREATE_DOMAIN', 'SQL_CDO_CREATE_DOMAIN',                  FALSE,   1, NULL, NULL);

1 row created.

Elapsed time: 0.08200 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('130', '16',      'SQL_CREATE_DOMAIN', 'SQL_CDO_CONSTRAINT_NAME_DEFINITION',     FALSE,  16, NULL, NULL);

1 row created.

Elapsed time: 0.07800 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('130', '2',       'SQL_CREATE_DOMAIN', 'SQL_CDO_DEFAULT',                        FALSE,   2, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('130', '4',       'SQL_CREATE_DOMAIN', 'SQL_CDO_CONSTRAINT',                     FALSE,   4, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('130', '8',       'SQL_CREATE_DOMAIN', 'SQL_CDO_COLLATION',                      FALSE,   8, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('130', '32',      'SQL_CREATE_DOMAIN', 'SQL_CDO_CONSTRAINT_INITIALLY_DEFERRED',  FALSE,  32, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('130', '64',      'SQL_CREATE_DOMAIN', 'SQL_CDO_CONSTRAINT_INITIALLY_IMMEDIATE', FALSE,  64, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('130', '128',     'SQL_CREATE_DOMAIN', 'SQL_CDO_CONSTRAINT_DEFERRABLE',          FALSE, 128, NULL, NULL);

1 row created.

Elapsed time: 0.08300 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('130', '256',     'SQL_CREATE_DOMAIN', 'SQL_CDO_CONSTRAINT_NON_DEFERRABLE',      FALSE, 256, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 


INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('131', ' ',       'SQL_CREATE_SCHEMA', ' ',                            TRUE,  0, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('131', '1',       'SQL_CREATE_SCHEMA', 'SQL_CS_CREATE_SCHEMA',         TRUE,  1, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('131', '2',       'SQL_CREATE_SCHEMA', 'SQL_CS_AUTHORIZATION',         TRUE,  2, NULL, NULL);

1 row created.

Elapsed time: 0.08500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('131', '4',       'SQL_CREATE_SCHEMA', 'SQL_CS_DEFAULT_CHARACTER_SET', FALSE, 4, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 


INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('132', ' ',       'SQL_CREATE_TABLE', ' ',                                     TRUE,     0, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('132', '1',       'SQL_CREATE_TABLE', 'SQL_CT_CREATE_TABLE',                   TRUE,     1, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('132', '4096',    'SQL_CREATE_TABLE', 'SQL_CT_TABLE_CONSTRAINT',               TRUE,  4096, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('132', '8192',    'SQL_CREATE_TABLE', 'SQL_CT_CONSTRAINT_NAME_DEFINITION',     TRUE,  8192, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('132', '2',       'SQL_CREATE_TABLE', 'SQL_CT_COMMIT_PRESERVE',                FALSE,    2, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('132', '4',       'SQL_CREATE_TABLE', 'SQL_CT_COMMIT_DELETE',                  FALSE,    4, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('132', '8',       'SQL_CREATE_TABLE', 'SQL_CT_GLOBAL_TEMPORARY',               FALSE,    8, NULL, NULL);

1 row created.

Elapsed time: 0.08100 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('132', '16',      'SQL_CREATE_TABLE', 'SQL_CT_LOCAL_TEMPORARY',                FALSE,   16, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('132', '512',     'SQL_CREATE_TABLE', 'SQL_CT_COLUMN_CONSTRAINT',              TRUE,   512, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('132', '1024',    'SQL_CREATE_TABLE', 'SQL_CT_COLUMN_DEFAULT',                 TRUE,  1024, NULL, NULL);

1 row created.

Elapsed time: 0.08300 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('132', '2048',    'SQL_CREATE_TABLE', 'SQL_CT_COLUMN_COLLATION',               FALSE, 2048, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('132', '32',      'SQL_CREATE_TABLE', 'SQL_CT_CONSTRAINT_INITIALLY_DEFERRED',  FALSE,   32, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('132', '64',      'SQL_CREATE_TABLE', 'SQL_CT_CONSTRAINT_INITIALLY_IMMEDIATE', FALSE,   64, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('132', '128',     'SQL_CREATE_TABLE', 'SQL_CT_CONSTRAINT_DEFERRABLE',          FALSE,  128, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('132', '256',     'SQL_CREATE_TABLE', 'SQL_CT_CONSTRAINT_NON_DEFERRABLE',      FALSE,  256, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

    
INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('133', ' ',       'SQL_CREATE_TRANSLATION', ' ',                          TRUE,  0, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('133', '1',       'SQL_CREATE_TRANSLATION', 'SQL_CTR_CREATE_TRANSLATION', FALSE, 1, NULL, NULL);

1 row created.

Elapsed time: 0.08600 ms 


INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('134', ' ',       'SQL_CREATE_VIEW', ' ',                   TRUE,  0, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('134', '1',       'SQL_CREATE_VIEW', 'SQL_CV_CREATE_VIEW',  TRUE,  1, NULL, NULL);

1 row created.

Elapsed time: 0.07900 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('134', '2',       'SQL_CREATE_VIEW', 'SQL_CV_CHECK_OPTION', FALSE, 2, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('134', '4',       'SQL_CREATE_VIEW', 'SQL_CV_CASCADED',     FALSE, 4, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('134', '8',       'SQL_CREATE_VIEW', 'SQL_CV_LOCAL',        FALSE, 8, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 


INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('24', ' ',        'SQL_CURSOR_ROLLBACK_BEHAVIOR', ' ', TRUE, 2,    NULL,     NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('10001', ' ',     'SQL_CURSOR_SENSITIVITY', ' ',       TRUE, 2,    NULL,     NULL);

1 row created.

Elapsed time: 0.07600 ms 


INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('119', ' ',       'SQL_DATETIME_LITERALS', ' ',                                      TRUE,      0, NULL, NULL);

1 row created.

Elapsed time: 0.07800 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('119', '1',       'SQL_DATETIME_LITERALS', 'SQL_DL_SQL92_DATE',                      TRUE,      1, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('119', '2',       'SQL_DATETIME_LITERALS', 'SQL_DL_SQL92_TIME',                      TRUE,      2, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('119', '4',       'SQL_DATETIME_LITERALS', 'SQL_DL_SQL92_TIMESTAMP',                 TRUE,      4, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('119', '8',       'SQL_DATETIME_LITERALS', 'SQL_DL_SQL92_INTERVAL_YEAR',             TRUE,      8, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('119', '16',      'SQL_DATETIME_LITERALS', 'SQL_DL_SQL92_INTERVAL_MONTH',            TRUE,     16, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('119', '32',      'SQL_DATETIME_LITERALS', 'SQL_DL_SQL92_INTERVAL_DAY',              TRUE,     32, NULL, NULL);

1 row created.

Elapsed time: 0.07800 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('119', '64',      'SQL_DATETIME_LITERALS', 'SQL_DL_SQL92_INTERVAL_HOUR',             TRUE,     64, NULL, NULL);

1 row created.

Elapsed time: 0.08100 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('119', '128',     'SQL_DATETIME_LITERALS', 'SQL_DL_SQL92_INTERVAL_MINUTE',           TRUE,    128, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('119', '256',     'SQL_DATETIME_LITERALS', 'SQL_DL_SQL92_INTERVAL_SECOND',           TRUE,    256, NULL, NULL);

1 row created.

Elapsed time: 0.08500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('119', '512',     'SQL_DATETIME_LITERALS', 'SQL_DL_SQL92_INTERVAL_YEAR_TO_MONTH',    TRUE,    512, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('119', '1024',    'SQL_DATETIME_LITERALS', 'SQL_DL_SQL92_INTERVAL_DAY_TO_HOUR',      TRUE,   1024, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('119', '2048',    'SQL_DATETIME_LITERALS', 'SQL_DL_SQL92_INTERVAL_DAY_TO_MINUTE',    TRUE,   2048, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('119', '4096',    'SQL_DATETIME_LITERALS', 'SQL_DL_SQL92_INTERVAL_DAY_TO_SECOND',    TRUE,   4096, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('119', '8192',    'SQL_DATETIME_LITERALS', 'SQL_DL_SQL92_INTERVAL_HOUR_TO_MINUTE',   TRUE,   8192, NULL, NULL);

1 row created.

Elapsed time: 0.08300 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('119', '16384',   'SQL_DATETIME_LITERALS', 'SQL_DL_SQL92_INTERVAL_HOUR_TO_SECOND',   TRUE,  16384, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('119', '32768',   'SQL_DATETIME_LITERALS', 'SQL_DL_SQL92_INTERVAL_MINUTE_TO_SECOND', TRUE,  32768, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 


INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('170', ' ',       'SQL_DDL_INDEX', ' ',                   TRUE, 0, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('170', '1',       'SQL_DDL_INDEX', 'SQL_DI_CREATE_INDEX', TRUE, 1, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('170', '2',       'SQL_DDL_INDEX', 'SQL_DI_DROP_INDEX',   TRUE, 2, NULL, NULL);

1 row created.

Elapsed time: 0.08300 ms 


INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('10002', ' ',     'SQL_DESCRIBE_PARAMETER', ' ',    TRUE, NULL, 'Y', NULL);

1 row created.

Elapsed time: 0.07700 ms 


INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('136', ' ',       'SQL_DROP_ASSERTION', ' ',                     TRUE,  0, NULL, NULL);

1 row created.

Elapsed time: 0.09400 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('136', '1',       'SQL_DROP_ASSERTION', 'SQL_DA_DROP_ASSERTION', FALSE, 1, NULL, NULL);

1 row created.

Elapsed time: 0.08300 ms 

    
INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('137', ' ',       'SQL_DROP_CHARACTER_SET', ' ',                          TRUE,  0, NULL, NULL);

1 row created.

Elapsed time: 0.09300 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('137', '1',       'SQL_DROP_CHARACTER_SET', 'SQL_DCS_DROP_CHARACTER_SET', FALSE, 1, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

    
INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('138', ' ',       'SQL_DROP_COLLATION', ' ',                     TRUE,  0, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('138', '1',       'SQL_DROP_COLLATION', 'SQL_DC_DROP_COLLATION', FALSE, 1, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

    
INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('139', ' ',       'SQL_DROP_DOMAIN', ' ',                  TRUE,  0, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('139', '1',       'SQL_DROP_DOMAIN', 'SQL_DD_DROP_DOMAIN', FALSE, 1, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('139', '2',       'SQL_DROP_DOMAIN', 'SQL_DD_RESTRICT',    FALSE, 2, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('139', '4',       'SQL_DROP_DOMAIN', 'SQL_DD_CASCADE',     FALSE, 4, NULL, NULL);

1 row created.

Elapsed time: 0.07400 ms 


INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('140', ' ',       'SQL_DROP_SCHEMA', ' ',                  TRUE, 0, NULL, NULL);

1 row created.

Elapsed time: 0.07400 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('140', '1',       'SQL_DROP_SCHEMA', 'SQL_DS_DROP_SCHEMA', TRUE, 1, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('140', '2',       'SQL_DROP_SCHEMA', 'SQL_DS_RESTRICT',    TRUE, 2, NULL, NULL);

1 row created.

Elapsed time: 0.07400 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('140', '4',       'SQL_DROP_SCHEMA', 'SQL_DS_CASCADE',     TRUE, 4, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 


INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('141', ' ',       'SQL_DROP_TABLE', ' ',                 TRUE, 0, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('141', '1',       'SQL_DROP_TABLE', 'SQL_DT_DROP_TABLE', TRUE, 1, NULL, NULL);

1 row created.

Elapsed time: 0.08000 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('141', '2',       'SQL_DROP_TABLE', 'SQL_DT_RESTRICT',   TRUE, 2, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('141', '4',       'SQL_DROP_TABLE', 'SQL_DT_CASCADE',    TRUE, 4, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

    
INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('142', ' ',       'SQL_DROP_TRANSLATION', ' ',                        TRUE,  0, NULL, NULL);

1 row created.

Elapsed time: 0.08500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('142', '1',       'SQL_DROP_TRANSLATION', 'SQL_DTR_DROP_TRANSLATION', FALSE, 1, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 


INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('143', ' ',       'SQL_DROP_VIEW', ' ',                TRUE,  0, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('143', '1',       'SQL_DROP_VIEW', 'SQL_DV_DROP_VIEW', TRUE,  1, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('143', '2',       'SQL_DROP_VIEW', 'SQL_DV_RESTRICT',  FALSE, 2, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('143', '4',       'SQL_DROP_VIEW', 'SQL_DV_CASCADE',   FALSE, 4, NULL, NULL);

1 row created.

Elapsed time: 0.08100 ms 


INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('144', ' ',       'SQL_DYNAMIC_CURSOR_ATTRIBUTES1', ' ',                               TRUE,       0, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('144', '1',       'SQL_DYNAMIC_CURSOR_ATTRIBUTES1', 'SQL_CA1_NEXT',                    FALSE,      1, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('144', '2',       'SQL_DYNAMIC_CURSOR_ATTRIBUTES1', 'SQL_CA1_ABSOLUTE',                FALSE,      2, NULL, NULL);

1 row created.

Elapsed time: 0.07800 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('144', '4',       'SQL_DYNAMIC_CURSOR_ATTRIBUTES1', 'SQL_CA1_RELATIVE',                FALSE,      4, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('144', '8',       'SQL_DYNAMIC_CURSOR_ATTRIBUTES1', 'SQL_CA1_BOOKMARK',                FALSE,      8, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('144', '64',      'SQL_DYNAMIC_CURSOR_ATTRIBUTES1', 'SQL_CA1_LOCK_NO_CHANGE',          FALSE,     64, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('144', '128',     'SQL_DYNAMIC_CURSOR_ATTRIBUTES1', 'SQL_CA1_LOCK_EXCLUSIVE',          FALSE,    128, NULL, NULL);

1 row created.

Elapsed time: 0.08200 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('144', '256',     'SQL_DYNAMIC_CURSOR_ATTRIBUTES1', 'SQL_CA1_LOCK_UNLOCK',             FALSE,    256, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('144', '512',     'SQL_DYNAMIC_CURSOR_ATTRIBUTES1', 'SQL_CA1_POS_POSITION',            FALSE,    512, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('144', '1024',    'SQL_DYNAMIC_CURSOR_ATTRIBUTES1', 'SQL_CA1_POS_UPDATE',              FALSE,   1024, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('144', '2048',    'SQL_DYNAMIC_CURSOR_ATTRIBUTES1', 'SQL_CA1_POS_DELETE',              FALSE,   2048, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('144', '4096',    'SQL_DYNAMIC_CURSOR_ATTRIBUTES1', 'SQL_CA1_POS_REFRESH',             FALSE,   4096, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('144', '8192',    'SQL_DYNAMIC_CURSOR_ATTRIBUTES1', 'SQL_CA1_POSITIONED_UPDATE',       FALSE,   8192, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('144', '16384',   'SQL_DYNAMIC_CURSOR_ATTRIBUTES1', 'SQL_CA1_POSITIONED_DELETE',       FALSE,  16384, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('144', '32768',   'SQL_DYNAMIC_CURSOR_ATTRIBUTES1', 'SQL_CA1_SELECT_FOR_UPDATE',       FALSE,  32768, NULL, NULL);

1 row created.

Elapsed time: 0.07800 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('144', '65536',   'SQL_DYNAMIC_CURSOR_ATTRIBUTES1', 'SQL_CA1_BULK_ADD',                FALSE,  65536, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('144', '131072',  'SQL_DYNAMIC_CURSOR_ATTRIBUTES1', 'SQL_CA1_BULK_UPDATE_BY_BOOKMARK', FALSE, 131072, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('144', '262144',  'SQL_DYNAMIC_CURSOR_ATTRIBUTES1', 'SQL_CA1_BULK_DELETE_BY_BOOKMARK', FALSE, 262144, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('144', '524288',  'SQL_DYNAMIC_CURSOR_ATTRIBUTES1', 'SQL_CA1_BULK_FETCH_BY_BOOKMARK',  FALSE, 524288, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 


INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('145', ' ',       'SQL_DYNAMIC_CURSOR_ATTRIBUTES2', ' ',                              TRUE,      0, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('145', '1',       'SQL_DYNAMIC_CURSOR_ATTRIBUTES2', 'SQL_CA2_READ_ONLY_CONCURRENCY',  FALSE,     1, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('145', '2',       'SQL_DYNAMIC_CURSOR_ATTRIBUTES2', 'SQL_CA2_LOCK_CONCURRENCY',       FALSE,     2, NULL, NULL);

1 row created.

Elapsed time: 0.08800 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('145', '4',       'SQL_DYNAMIC_CURSOR_ATTRIBUTES2', 'SQL_CA2_OPT_ROWVER_CONCURRENCY', FALSE,     4, NULL, NULL);

1 row created.

Elapsed time: 0.09800 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('145', '8',       'SQL_DYNAMIC_CURSOR_ATTRIBUTES2', 'SQL_CA2_OPT_VALUES_CONCURRENCY', FALSE,     8, NULL, NULL);

1 row created.

Elapsed time: 0.08900 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('145', '16',      'SQL_DYNAMIC_CURSOR_ATTRIBUTES2', 'SQL_CA2_SENSITIVITY_ADDITIONS',  FALSE,    16, NULL, NULL);

1 row created.

Elapsed time: 0.10500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('145', '32',      'SQL_DYNAMIC_CURSOR_ATTRIBUTES2', 'SQL_CA2_SENSITIVITY_DELETIONS',  FALSE,    32, NULL, NULL);

1 row created.

Elapsed time: 0.07800 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('145', '64',      'SQL_DYNAMIC_CURSOR_ATTRIBUTES2', 'SQL_CA2_SENSITIVITY_UPDATES',    FALSE,    64, NULL, NULL);

1 row created.

Elapsed time: 0.08100 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('145', '128',     'SQL_DYNAMIC_CURSOR_ATTRIBUTES2', 'SQL_CA2_MAX_ROWS_SELECT',        FALSE,   128, NULL, NULL);

1 row created.

Elapsed time: 0.08300 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('145', '256',     'SQL_DYNAMIC_CURSOR_ATTRIBUTES2', 'SQL_CA2_MAX_ROWS_INSERT',        FALSE,   256, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('145', '512',     'SQL_DYNAMIC_CURSOR_ATTRIBUTES2', 'SQL_CA2_MAX_ROWS_DELETE',        FALSE,   512, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('145', '1024',    'SQL_DYNAMIC_CURSOR_ATTRIBUTES2', 'SQL_CA2_MAX_ROWS_UPDATE',        FALSE,  1024, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('145', '2048',    'SQL_DYNAMIC_CURSOR_ATTRIBUTES2', 'SQL_CA2_MAX_ROWS_CATALOG',       FALSE,  2048, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('145', '4096',    'SQL_DYNAMIC_CURSOR_ATTRIBUTES2', 'SQL_CA2_CRC_EXACT',              FALSE,  4096, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('145', '8192',    'SQL_DYNAMIC_CURSOR_ATTRIBUTES2', 'SQL_CA2_CRC_APPROXIMATE',        FALSE,  8192, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('145', '16384',   'SQL_DYNAMIC_CURSOR_ATTRIBUTES2', 'SQL_CA2_SIMULATE_NON_UNIQUE',    FALSE, 16384, NULL, NULL);

1 row created.

Elapsed time: 0.08300 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('145', '32768',   'SQL_DYNAMIC_CURSOR_ATTRIBUTES2', 'SQL_CA2_SIMULATE_TRY_UNIQUE',    FALSE, 32768, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('145', '65536',   'SQL_DYNAMIC_CURSOR_ATTRIBUTES2', 'SQL_CA2_SIMULATE_UNIQUE',        FALSE, 65536, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 


INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('27', ' ',        'SQL_EXPRESSIONS_IN_ORDERBY', ' ', TRUE, NULL, 'Y', NULL);

1 row created.

Elapsed time: 0.07700 ms 


INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('8', ' ',         'SQL_FETCH_DIRECTION', ' ',                     TRUE,    0, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('8', '1',         'SQL_FETCH_DIRECTION', 'SQL_FD_FETCH_NEXT',     TRUE,    1, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('8', '2',         'SQL_FETCH_DIRECTION', 'SQL_FD_FETCH_FIRST',    TRUE,    2, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('8', '4',         'SQL_FETCH_DIRECTION', 'SQL_FD_FETCH_LAST',     TRUE,    4, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('8', '8',         'SQL_FETCH_DIRECTION', 'SQL_FD_FETCH_PRIOR',    TRUE,    8, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('8', '16',        'SQL_FETCH_DIRECTION', 'SQL_FD_FETCH_ABSOLUTE', TRUE,   16, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('8', '32',        'SQL_FETCH_DIRECTION', 'SQL_FD_FETCH_RELATIVE', TRUE,   32, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('8', '64',        'SQL_FETCH_DIRECTION', 'SQL_FD_FETCH_RESUME',   FALSE,  64, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('8', '128',       'SQL_FETCH_DIRECTION', 'SQL_FD_FETCH_BOOKMARK', FALSE, 128, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 


INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('146', ' ',       'SQL_FORWARD_ONLY_CURSOR_ATTRIBUTES1', ' ',                               TRUE,       0, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('146', '1',       'SQL_FORWARD_ONLY_CURSOR_ATTRIBUTES1', 'SQL_CA1_NEXT',                    TRUE,       1, NULL, NULL);

1 row created.

Elapsed time: 0.07800 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('146', '2',       'SQL_FORWARD_ONLY_CURSOR_ATTRIBUTES1', 'SQL_CA1_ABSOLUTE',                FALSE,      2, NULL, NULL);

1 row created.

Elapsed time: 0.08300 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('146', '4',       'SQL_FORWARD_ONLY_CURSOR_ATTRIBUTES1', 'SQL_CA1_RELATIVE',                FALSE,      4, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('146', '8',       'SQL_FORWARD_ONLY_CURSOR_ATTRIBUTES1', 'SQL_CA1_BOOKMARK',                FALSE,      8, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('146', '64',      'SQL_FORWARD_ONLY_CURSOR_ATTRIBUTES1', 'SQL_CA1_LOCK_NO_CHANGE',          TRUE,      64, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('146', '128',     'SQL_FORWARD_ONLY_CURSOR_ATTRIBUTES1', 'SQL_CA1_LOCK_EXCLUSIVE',          FALSE,    128, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('146', '256',     'SQL_FORWARD_ONLY_CURSOR_ATTRIBUTES1', 'SQL_CA1_LOCK_UNLOCK',             FALSE,    256, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('146', '512',     'SQL_FORWARD_ONLY_CURSOR_ATTRIBUTES1', 'SQL_CA1_POS_POSITION',            FALSE,    512, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('146', '1024',    'SQL_FORWARD_ONLY_CURSOR_ATTRIBUTES1', 'SQL_CA1_POS_UPDATE',              FALSE,   1024, NULL, NULL);

1 row created.

Elapsed time: 0.08000 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('146', '2048',    'SQL_FORWARD_ONLY_CURSOR_ATTRIBUTES1', 'SQL_CA1_POS_DELETE',              FALSE,   2048, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('146', '4096',    'SQL_FORWARD_ONLY_CURSOR_ATTRIBUTES1', 'SQL_CA1_POS_REFRESH',             FALSE,   4096, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('146', '8192',    'SQL_FORWARD_ONLY_CURSOR_ATTRIBUTES1', 'SQL_CA1_POSITIONED_UPDATE',       FALSE,   8192, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('146', '16384',   'SQL_FORWARD_ONLY_CURSOR_ATTRIBUTES1', 'SQL_CA1_POSITIONED_DELETE',       FALSE,  16384, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('146', '32768',   'SQL_FORWARD_ONLY_CURSOR_ATTRIBUTES1', 'SQL_CA1_SELECT_FOR_UPDATE',       TRUE,   32768, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('146', '65536',   'SQL_FORWARD_ONLY_CURSOR_ATTRIBUTES1', 'SQL_CA1_BULK_ADD',                FALSE,  65536, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('146', '131072',  'SQL_FORWARD_ONLY_CURSOR_ATTRIBUTES1', 'SQL_CA1_BULK_UPDATE_BY_BOOKMARK', FALSE, 131072, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('146', '262144',  'SQL_FORWARD_ONLY_CURSOR_ATTRIBUTES1', 'SQL_CA1_BULK_DELETE_BY_BOOKMARK', FALSE, 262144, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('146', '524288',  'SQL_FORWARD_ONLY_CURSOR_ATTRIBUTES1', 'SQL_CA1_BULK_FETCH_BY_BOOKMARK',  FALSE, 524288, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 


INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('147', ' ',       'SQL_FORWARD_ONLY_CURSOR_ATTRIBUTES2', ' ',                              TRUE,      0, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('147', '1',       'SQL_FORWARD_ONLY_CURSOR_ATTRIBUTES2', 'SQL_CA2_READ_ONLY_CONCURRENCY',  TRUE,      1, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('147', '2',       'SQL_FORWARD_ONLY_CURSOR_ATTRIBUTES2', 'SQL_CA2_LOCK_CONCURRENCY',       TRUE,      2, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('147', '4',       'SQL_FORWARD_ONLY_CURSOR_ATTRIBUTES2', 'SQL_CA2_OPT_ROWVER_CONCURRENCY', TRUE,      4, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('147', '8',       'SQL_FORWARD_ONLY_CURSOR_ATTRIBUTES2', 'SQL_CA2_OPT_VALUES_CONCURRENCY', FALSE,     8, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('147', '16',      'SQL_FORWARD_ONLY_CURSOR_ATTRIBUTES2', 'SQL_CA2_SENSITIVITY_ADDITIONS',  FALSE,    16, NULL, NULL);

1 row created.

Elapsed time: 0.07800 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('147', '32',      'SQL_FORWARD_ONLY_CURSOR_ATTRIBUTES2', 'SQL_CA2_SENSITIVITY_DELETIONS',  FALSE,    32, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('147', '64',      'SQL_FORWARD_ONLY_CURSOR_ATTRIBUTES2', 'SQL_CA2_SENSITIVITY_UPDATES',    FALSE,    64, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('147', '128',     'SQL_FORWARD_ONLY_CURSOR_ATTRIBUTES2', 'SQL_CA2_MAX_ROWS_SELECT',        TRUE ,   128, NULL, NULL);

1 row created.

Elapsed time: 0.07800 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('147', '256',     'SQL_FORWARD_ONLY_CURSOR_ATTRIBUTES2', 'SQL_CA2_MAX_ROWS_INSERT',        FALSE,   256, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('147', '512',     'SQL_FORWARD_ONLY_CURSOR_ATTRIBUTES2', 'SQL_CA2_MAX_ROWS_DELETE',        FALSE,   512, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('147', '1024',    'SQL_FORWARD_ONLY_CURSOR_ATTRIBUTES2', 'SQL_CA2_MAX_ROWS_UPDATE',        FALSE,  1024, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('147', '2048',    'SQL_FORWARD_ONLY_CURSOR_ATTRIBUTES2', 'SQL_CA2_MAX_ROWS_CATALOG',       TRUE,   2048, NULL, NULL);

1 row created.

Elapsed time: 0.08200 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('147', '4096',    'SQL_FORWARD_ONLY_CURSOR_ATTRIBUTES2', 'SQL_CA2_CRC_EXACT',              FALSE,  4096, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('147', '8192',    'SQL_FORWARD_ONLY_CURSOR_ATTRIBUTES2', 'SQL_CA2_CRC_APPROXIMATE',        FALSE,  8192, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('147', '16384',   'SQL_FORWARD_ONLY_CURSOR_ATTRIBUTES2', 'SQL_CA2_SIMULATE_NON_UNIQUE',    FALSE, 16384, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('147', '32768',   'SQL_FORWARD_ONLY_CURSOR_ATTRIBUTES2', 'SQL_CA2_SIMULATE_TRY_UNIQUE',    FALSE, 32768, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('147', '65536',   'SQL_FORWARD_ONLY_CURSOR_ATTRIBUTES2', 'SQL_CA2_SIMULATE_UNIQUE',        FALSE, 65536, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

    
INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('88', ' ',        'SQL_GROUP_BY', ' ',              TRUE, 2,    NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('29', ' ',        'SQL_IDENTIFIER_QUOTE_CHAR', ' ', TRUE, NULL, '"',  NULL);

1 row created.

Elapsed time: 0.08200 ms 


INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('148', ' ',       'SQL_INDEX_KEYWORDS', ' ',           TRUE, 0, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('148', '1',       'SQL_INDEX_KEYWORDS', 'SQL_IK_ASC',  TRUE, 1, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('148', '2',       'SQL_INDEX_KEYWORDS', 'SQL_IK_DESC', TRUE, 2, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

    
INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('149', ' ',       'SQL_INFO_SCHEMA_VIEWS', ' ',                               TRUE,        0, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('149', '1',       'SQL_INFO_SCHEMA_VIEWS', 'SQL_ISV_ASSERTIONS',              FALSE,       1, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('149', '2',       'SQL_INFO_SCHEMA_VIEWS', 'SQL_ISV_CHARACTER_SETS',          FALSE,       2, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('149', '4',       'SQL_INFO_SCHEMA_VIEWS', 'SQL_ISV_CHECK_CONSTRAINTS',       FALSE,       4, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('149', '8',       'SQL_INFO_SCHEMA_VIEWS', 'SQL_ISV_COLLATIONS',              FALSE,       8, NULL, NULL);

1 row created.

Elapsed time: 0.07800 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('149', '16',      'SQL_INFO_SCHEMA_VIEWS', 'SQL_ISV_COLUMN_DOMAIN_USAGE',     FALSE,      16, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('149', '32',      'SQL_INFO_SCHEMA_VIEWS', 'SQL_ISV_COLUMN_PRIVILEGES',       TRUE,       32, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('149', '64',      'SQL_INFO_SCHEMA_VIEWS', 'SQL_ISV_COLUMNS',                 TRUE,       64, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('149', '128',     'SQL_INFO_SCHEMA_VIEWS', 'SQL_ISV_CONSTRAINT_COLUMN_USAGE', TRUE,      128, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('149', '256',     'SQL_INFO_SCHEMA_VIEWS', 'SQL_ISV_CONSTRAINT_TABLE_USAGE',  TRUE,      256, NULL, NULL);

1 row created.

Elapsed time: 0.10600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('149', '512',     'SQL_INFO_SCHEMA_VIEWS', 'SQL_ISV_DOMAIN_CONSTRAINTS',      FALSE,     512, NULL, NULL);

1 row created.

Elapsed time: 0.09800 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('149', '1024',    'SQL_INFO_SCHEMA_VIEWS', 'SQL_ISV_DOMAINS',                 FALSE,    1024, NULL, NULL);

1 row created.

Elapsed time: 0.10000 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('149', '2048',    'SQL_INFO_SCHEMA_VIEWS', 'SQL_ISV_KEY_COLUMN_USAGE',        TRUE,     2048, NULL, NULL);

1 row created.

Elapsed time: 0.08600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('149', '4096',    'SQL_INFO_SCHEMA_VIEWS', 'SQL_ISV_REFERENTIAL_CONSTRAINTS', TRUE,     4096, NULL, NULL);

1 row created.

Elapsed time: 0.12400 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('149', '8192',    'SQL_INFO_SCHEMA_VIEWS', 'SQL_ISV_SCHEMATA',                TRUE,     8192, NULL, NULL);

1 row created.

Elapsed time: 0.10500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('149', '16384',   'SQL_INFO_SCHEMA_VIEWS', 'SQL_ISV_SQL_LANGUAGES',           FALSE,   16384, NULL, NULL);

1 row created.

Elapsed time: 0.10800 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('149', '32768',   'SQL_INFO_SCHEMA_VIEWS', 'SQL_ISV_TABLE_CONSTRAINTS',       TRUE,    32768, NULL, NULL);

1 row created.

Elapsed time: 0.07800 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('149', '65536',   'SQL_INFO_SCHEMA_VIEWS', 'SQL_ISV_TABLE_PRIVILEGES',        TRUE,    65536, NULL, NULL);

1 row created.

Elapsed time: 0.08200 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('149', '131072',  'SQL_INFO_SCHEMA_VIEWS', 'SQL_ISV_TABLES',                  TRUE,   131072, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('149', '262144',  'SQL_INFO_SCHEMA_VIEWS', 'SQL_ISV_TRANSLATIONS',            FALSE,  262114, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('149', '524288',  'SQL_INFO_SCHEMA_VIEWS', 'SQL_ISV_USAGE_PRIVILEGES',        TRUE,   524288, NULL, NULL);

1 row created.

Elapsed time: 0.09200 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('149', '1048576', 'SQL_INFO_SCHEMA_VIEWS', 'SQL_ISV_VIEW_COLUMN_USAGE',       FALSE, 1048576, NULL, NULL);

1 row created.

Elapsed time: 0.09100 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('149', '2097152', 'SQL_INFO_SCHEMA_VIEWS', 'SQL_ISV_VIEW_TABLE_USAGE',        TRUE,  2097152, NULL, NULL);

1 row created.

Elapsed time: 0.12900 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('149', '4194304', 'SQL_INFO_SCHEMA_VIEWS', 'SQL_ISV_VIEWS',                   TRUE,  4194304, NULL, NULL);

1 row created.

Elapsed time: 0.08300 ms 


INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('172', ' ',      'SQL_INSERT_STATEMENT', ' ',                      TRUE,  0, NULL, NULL);

1 row created.

Elapsed time: 0.09200 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('172', '1',      'SQL_INSERT_STATEMENT', 'SQL_IS_INSERT_LITERALS', TRUE,  1, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('172', '2',      'SQL_INSERT_STATEMENT', 'SQL_IS_INSERT_SEARCHED', TRUE,  2, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('172', '4',      'SQL_INSERT_STATEMENT', 'SQL_IS_SELECT_INTO',     FALSE, 4, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 


INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('73', ' ',       'SQL_INTEGRITY', ' ', TRUE, NULL, 'N', NULL);

1 row created.

Elapsed time: 0.07700 ms 


INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('150', ' ',       'SQL_KEYSET_CURSOR_ATTRIBUTES1', ' ',                               TRUE,       0, NULL, NULL);

1 row created.

Elapsed time: 0.08500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('150', '1',       'SQL_KEYSET_CURSOR_ATTRIBUTES1', 'SQL_CA1_NEXT',                    TRUE,       1, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('150', '2',       'SQL_KEYSET_CURSOR_ATTRIBUTES1', 'SQL_CA1_ABSOLUTE',                TRUE,       2, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('150', '4',       'SQL_KEYSET_CURSOR_ATTRIBUTES1', 'SQL_CA1_RELATIVE',                TRUE,       4, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('150', '8',       'SQL_KEYSET_CURSOR_ATTRIBUTES1', 'SQL_CA1_BOOKMARK',                FALSE,      8, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('150', '64',      'SQL_KEYSET_CURSOR_ATTRIBUTES1', 'SQL_CA1_LOCK_NO_CHANGE',          TRUE,      64, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('150', '128',     'SQL_KEYSET_CURSOR_ATTRIBUTES1', 'SQL_CA1_LOCK_EXCLUSIVE',          FALSE,    128, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('150', '256',     'SQL_KEYSET_CURSOR_ATTRIBUTES1', 'SQL_CA1_LOCK_UNLOCK',             FALSE,    256, NULL, NULL);

1 row created.

Elapsed time: 0.08200 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('150', '512',     'SQL_KEYSET_CURSOR_ATTRIBUTES1', 'SQL_CA1_POS_POSITION',            TRUE,     512, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('150', '1024',    'SQL_KEYSET_CURSOR_ATTRIBUTES1', 'SQL_CA1_POS_UPDATE',              FALSE,   1024, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('150', '2048',    'SQL_KEYSET_CURSOR_ATTRIBUTES1', 'SQL_CA1_POS_DELETE',              FALSE,   2048, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('150', '4096',    'SQL_KEYSET_CURSOR_ATTRIBUTES1', 'SQL_CA1_POS_REFRESH',             FALSE,   4096, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('150', '8192',    'SQL_KEYSET_CURSOR_ATTRIBUTES1', 'SQL_CA1_POSITIONED_UPDATE',       TRUE,    8192, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('150', '16384',   'SQL_KEYSET_CURSOR_ATTRIBUTES1', 'SQL_CA1_POSITIONED_DELETE',       TRUE,   16384, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('150', '32768',   'SQL_KEYSET_CURSOR_ATTRIBUTES1', 'SQL_CA1_SELECT_FOR_UPDATE',       TRUE,   32768, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('150', '65536',   'SQL_KEYSET_CURSOR_ATTRIBUTES1', 'SQL_CA1_BULK_ADD',                FALSE,  65536, NULL, NULL);

1 row created.

Elapsed time: 0.08500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('150', '131072',  'SQL_KEYSET_CURSOR_ATTRIBUTES1', 'SQL_CA1_BULK_UPDATE_BY_BOOKMARK', FALSE, 131072, NULL, NULL);

1 row created.

Elapsed time: 0.08300 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('150', '262144',  'SQL_KEYSET_CURSOR_ATTRIBUTES1', 'SQL_CA1_BULK_DELETE_BY_BOOKMARK', FALSE, 262144, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('150', '524288',  'SQL_KEYSET_CURSOR_ATTRIBUTES1', 'SQL_CA1_BULK_FETCH_BY_BOOKMARK',  FALSE, 524288, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 


INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('151', ' ',       'SQL_KEYSET_CURSOR_ATTRIBUTES2', ' ',                              TRUE,      0, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('151', '1',       'SQL_KEYSET_CURSOR_ATTRIBUTES2', 'SQL_CA2_READ_ONLY_CONCURRENCY',  TRUE,      1, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('151', '2',       'SQL_KEYSET_CURSOR_ATTRIBUTES2', 'SQL_CA2_LOCK_CONCURRENCY',       TRUE,      2, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('151', '4',       'SQL_KEYSET_CURSOR_ATTRIBUTES2', 'SQL_CA2_OPT_ROWVER_CONCURRENCY', FALSE,     4, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('151', '8',       'SQL_KEYSET_CURSOR_ATTRIBUTES2', 'SQL_CA2_OPT_VALUES_CONCURRENCY', FALSE,     8, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('151', '16',      'SQL_KEYSET_CURSOR_ATTRIBUTES2', 'SQL_CA2_SENSITIVITY_ADDITIONS',  FALSE,    16, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('151', '32',      'SQL_KEYSET_CURSOR_ATTRIBUTES2', 'SQL_CA2_SENSITIVITY_DELETIONS',  FALSE,    32, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('151', '64',      'SQL_KEYSET_CURSOR_ATTRIBUTES2', 'SQL_CA2_SENSITIVITY_UPDATES',    TRUE,     64, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('151', '128',     'SQL_KEYSET_CURSOR_ATTRIBUTES2', 'SQL_CA2_MAX_ROWS_SELECT',        TRUE,     128, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('151', '256',     'SQL_KEYSET_CURSOR_ATTRIBUTES2', 'SQL_CA2_MAX_ROWS_INSERT',        FALSE,   256, NULL, NULL);

1 row created.

Elapsed time: 0.08600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('151', '512',     'SQL_KEYSET_CURSOR_ATTRIBUTES2', 'SQL_CA2_MAX_ROWS_DELETE',        FALSE,   512, NULL, NULL);

1 row created.

Elapsed time: 0.08600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('151', '1024',    'SQL_KEYSET_CURSOR_ATTRIBUTES2', 'SQL_CA2_MAX_ROWS_UPDATE',        FALSE,  1024, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('151', '2048',    'SQL_KEYSET_CURSOR_ATTRIBUTES2', 'SQL_CA2_MAX_ROWS_CATALOG',       TRUE,   2048, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('151', '4096',    'SQL_KEYSET_CURSOR_ATTRIBUTES2', 'SQL_CA2_CRC_EXACT',              FALSE,  4096, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('151', '8192',    'SQL_KEYSET_CURSOR_ATTRIBUTES2', 'SQL_CA2_CRC_APPROXIMATE',        FALSE,  8192, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('151', '16384',   'SQL_KEYSET_CURSOR_ATTRIBUTES2', 'SQL_CA2_SIMULATE_NON_UNIQUE',    FALSE, 16384, NULL, NULL);

1 row created.

Elapsed time: 0.08200 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('151', '32768',   'SQL_KEYSET_CURSOR_ATTRIBUTES2', 'SQL_CA2_SIMULATE_TRY_UNIQUE',    FALSE, 32768, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('151', '65536',   'SQL_KEYSET_CURSOR_ATTRIBUTES2', 'SQL_CA2_SIMULATE_UNIQUE',        FALSE, 65536, NULL, NULL);

1 row created.

Elapsed time: 0.08400 ms 

    
INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('89', ' ',       'SQL_KEYWORDS', ' ',                   TRUE, NULL, 'ACCESS,ASYMMETRIC,CALL,COMMENT,CURRENT_CATALOG,CURRENT_DEFAULT_TRANSFORM_GROUP,CURRENT_PATH,CURRENT_ROLE,CURRENT_ROW,CURRENT_SCHEMA,CURRENT_TRANSFORM_GROUP_FOR_TYPE,DATABASE,DEREF,DETERMINISTIC,FILTER,FREE,FUNCTION,HOLD,IDENTIFIED,IF,INOUT,LIMIT,LOCALTIME,LOCALTIMESTAMP,MEMBER,MERGE,MINUS,NEW,OFFSET,OLD,OUT,REF,RELEASE,RENAME,RETURN,RETURNING,RETURNS,ROW,ROWID,ROW_NUMBER,SAVEPOINT,SOME,SQLEXCEPTION,START,SYMMETRIC,SYSDATE,SYSTEM,SYSTIME,SYSTIMESTAMP,TRIGGER,TRUNCATE,WINDOW,WITHOUT', NULL);

1 row created.

Elapsed time: 0.08500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('113', ' ',      'SQL_LIKE_ESCAPE_CLAUSE', ' ',         TRUE, NULL,  'Y',  NULL);

1 row created.

Elapsed time: 0.07800 ms 


INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('78', ' ',       'SQL_LOCK_TYPES', ' ',                 TRUE,  0, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('78', '1',       'SQL_LOCK_TYPES', 'SQL_LCK_NO_CHANGE', TRUE,  1, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('78', '2',       'SQL_LOCK_TYPES', 'SQL_LCK_EXCLUSIVE', FALSE, 2, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('78', '4',       'SQL_LOCK_TYPES', 'SQL_LCK_UNLOCK',    FALSE, 4, NULL, NULL);

1 row created.

Elapsed time: 0.10100 ms 


INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('112', ' ',      'SQL_MAX_BINARY_LITERAL_LEN', ' ',     TRUE, 0,     NULL, NULL);

1 row created.

Elapsed time: 0.08200 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('108', ' ',      'SQL_MAX_CHAR_LITERAL_LEN', ' ',       TRUE, 0,     NULL, NULL);

1 row created.

Elapsed time: 0.08800 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('98', ' ',       'SQL_MAX_COLUMNS_IN_INDEX', ' ',       TRUE, 32,    NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('102', ' ',      'SQL_MAX_INDEX_SIZE', ' ',             TRUE, 3000,  NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('33', ' ',       'SQL_MAX_PROCEDURE_NAME_LEN', ' ',     TRUE, 128,   NULL, NULL);

1 row created.

Elapsed time: 0.08100 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('104', ' ',      'SQL_MAX_ROW_SIZE', ' ',               TRUE, 0,     NULL, NULL);

1 row created.

Elapsed time: 0.08200 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('103', ' ',      'SQL_MAX_ROW_SIZE_INCLUDES_LONG', ' ', TRUE, NULL,  'N',  NULL);

1 row created.

Elapsed time: 0.09400 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('105', ' ',      'SQL_MAX_STATEMENT_LEN', ' ',          TRUE, 0,     NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('36', ' ',       'SQL_MULT_RESULT_SETS', ' ',           TRUE, NULL,  'N',  NULL);

1 row created.

Elapsed time: 0.08800 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('37', ' ',       'SQL_MULTIPLE_ACTIVE_TXN', ' ',        TRUE, NULL,  'N',  NULL);

1 row created.

Elapsed time: 0.09000 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('111', ' ',      'SQL_NEED_LONG_DATA_LEN', ' ',         TRUE, NULL,  'N',  NULL);

1 row created.

Elapsed time: 0.11000 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('75', ' ',       'SQL_NON_NULLABLE_COLUMNS', ' ',       TRUE, 1,     NULL, NULL);

1 row created.

Elapsed time: 0.08700 ms 


INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('49', ' ',       'SQL_NUMERIC_FUNCTIONS', ' ',                   TRUE,       0, NULL, NULL);

1 row created.

Elapsed time: 0.09300 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('49', '1',       'SQL_NUMERIC_FUNCTIONS', 'SQL_FN_NUM_ABS',      TRUE,       1, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('49', '2',       'SQL_NUMERIC_FUNCTIONS', 'SQL_FN_NUM_ACOS',     TRUE,       2, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('49', '4',       'SQL_NUMERIC_FUNCTIONS', 'SQL_FN_NUM_ASIN',     TRUE,       4, NULL, NULL);

1 row created.

Elapsed time: 0.10000 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('49', '8',       'SQL_NUMERIC_FUNCTIONS', 'SQL_FN_NUM_ATAN',     TRUE,       8, NULL, NULL);

1 row created.

Elapsed time: 0.09000 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('49', '16',      'SQL_NUMERIC_FUNCTIONS', 'SQL_FN_NUM_ATAN2',    TRUE,      16, NULL, NULL);

1 row created.

Elapsed time: 0.09100 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('49', '32',      'SQL_NUMERIC_FUNCTIONS', 'SQL_FN_NUM_CEILING',  TRUE,      32, NULL, NULL);

1 row created.

Elapsed time: 0.08700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('49', '64',      'SQL_NUMERIC_FUNCTIONS', 'SQL_FN_NUM_COS',      TRUE,      64, NULL, NULL);

1 row created.

Elapsed time: 0.09900 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('49', '128',     'SQL_NUMERIC_FUNCTIONS', 'SQL_FN_NUM_COT',      TRUE,     128, NULL, NULL);

1 row created.

Elapsed time: 0.09800 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('49', '262144',  'SQL_NUMERIC_FUNCTIONS', 'SQL_FN_NUM_DEGREES',  TRUE,  262144, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('49', '256',     'SQL_NUMERIC_FUNCTIONS', 'SQL_FN_NUM_EXP',      TRUE,     256, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('49', '512',     'SQL_NUMERIC_FUNCTIONS', 'SQL_FN_NUM_FLOOR',    TRUE,     512, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('49', '1024',    'SQL_NUMERIC_FUNCTIONS', 'SQL_FN_NUM_LOG',      TRUE,    1024, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('49', '524288',  'SQL_NUMERIC_FUNCTIONS', 'SQL_FN_NUM_LOG10',    TRUE,  524288, NULL, NULL);

1 row created.

Elapsed time: 0.09900 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('49', '2048',    'SQL_NUMERIC_FUNCTIONS', 'SQL_FN_NUM_MOD',      TRUE,    2048, NULL, NULL);

1 row created.

Elapsed time: 0.08400 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('49', '65536',   'SQL_NUMERIC_FUNCTIONS', 'SQL_FN_NUM_PI',       TRUE,   65536, NULL, NULL);

1 row created.

Elapsed time: 0.09500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('49', '1048576', 'SQL_NUMERIC_FUNCTIONS', 'SQL_FN_NUM_POWER',    TRUE, 1048576, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('49', '2097152', 'SQL_NUMERIC_FUNCTIONS', 'SQL_FN_NUM_RADIANS',  TRUE, 2097152, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('49', '131072',  'SQL_NUMERIC_FUNCTIONS', 'SQL_FN_NUM_RAND',     FALSE, 131072, NULL, NULL);

1 row created.

Elapsed time: 0.09000 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('49', '4194304', 'SQL_NUMERIC_FUNCTIONS', 'SQL_FN_NUM_ROUND',    TRUE, 4194304, NULL, NULL);

1 row created.

Elapsed time: 0.10600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('49', '4096',    'SQL_NUMERIC_FUNCTIONS', 'SQL_FN_NUM_SIGN',     TRUE,    4096, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('49', '8192',    'SQL_NUMERIC_FUNCTIONS', 'SQL_FN_NUM_SIN',      TRUE,    8192, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('49', '16384',   'SQL_NUMERIC_FUNCTIONS', 'SQL_FN_NUM_SQRT',     TRUE,   16384, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('49', '32768',   'SQL_NUMERIC_FUNCTIONS', 'SQL_FN_NUM_TAN',      TRUE,   32768, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('49', '8388608', 'SQL_NUMERIC_FUNCTIONS', 'SQL_FN_NUM_TRUNCATE', TRUE, 8388608, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 


INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('9', ' ',        'SQL_ODBC_API_CONFORMANCE', ' ',              TRUE,  0, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('9', '1',        'SQL_ODBC_API_CONFORMANCE', 'SQL_OAC_LEVEL1', TRUE,  1, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('9', '2',        'SQL_ODBC_API_CONFORMANCE', 'SQL_OAC_LEVEL2', FALSE, 2, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 


INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('15', ' ',       'SQL_ODBC_SQL_CONFORMANCE', ' ',                TRUE,  0, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('15', '1',       'SQL_ODBC_SQL_CONFORMANCE', 'SQL_OSC_CORE',     TRUE,  1, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('15', '2',       'SQL_ODBC_SQL_CONFORMANCE', 'SQL_OSC_EXTENDED', FALSE, 2, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 


INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('115', ' ',      'SQL_OJ_CAPABILITIES', ' ',                         TRUE,  0, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('115', '1',      'SQL_OJ_CAPABILITIES', 'SQL_OJ_LEFT',               TRUE,  1, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('115', '2',      'SQL_OJ_CAPABILITIES', 'SQL_OJ_RIGHT',              TRUE,  2, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('115', '4',      'SQL_OJ_CAPABILITIES', 'SQL_OJ_FULL',               TRUE,  4, NULL, NULL);

1 row created.

Elapsed time: 0.09400 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('115', '8',      'SQL_OJ_CAPABILITIES', 'SQL_OJ_NESTED',             TRUE,  8, NULL, NULL);

1 row created.

Elapsed time: 0.08200 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('115', '16',     'SQL_OJ_CAPABILITIES', 'SQL_OJ_NOT_ORDERED',        TRUE, 16, NULL, NULL);

1 row created.

Elapsed time: 0.08200 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('115', '32',     'SQL_OJ_CAPABILITIES', 'SQL_OJ_INNER',              TRUE, 32, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('115', '64',     'SQL_OJ_CAPABILITIES', 'SQL_OJ_ALL_COMPARISON_OPS', TRUE, 64, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

    
INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('90', ' ',       'SQL_ORDER_BY_COLUMNS_IN_SELECT', ' ', TRUE, NULL, 'N',         NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('38', ' ',       'SQL_OUTER_JOINS',                ' ', TRUE, NULL, 'Y',         NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('40', ' ',       'SQL_PROCEDURE_TERM', ' ',             TRUE, NULL, 'procedure', NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('21', ' ',       'SQL_PROCEDURES', ' ',                 TRUE, NULL, 'N',         NULL);

1 row created.

Elapsed time: 0.07600 ms 


INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('79', ' ',       'SQL_POS_OPERATIONS', ' ',                TRUE,   0, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('79', '1',       'SQL_POS_OPERATIONS', 'SQL_POS_POSITION', TRUE,   1, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('79', '2',       'SQL_POS_OPERATIONS', 'SQL_POS_REFRESH',  FALSE,  2, NULL, NULL);

1 row created.

Elapsed time: 0.07900 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('79', '4',       'SQL_POS_OPERATIONS', 'SQL_POS_UPDATE',   FALSE,  4, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('79', '8',       'SQL_POS_OPERATIONS', 'SQL_POS_DELETE',   FALSE,  8, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('79', '16',      'SQL_POS_OPERATIONS', 'SQL_POS_ADD',      FALSE, 16, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 


INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('80', ' ',       'SQL_POSITIONED_STATEMENTS', ' ',                        TRUE,   0, NULL, NULL);

1 row created.

Elapsed time: 0.08200 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('80', '1',       'SQL_POSITIONED_STATEMENTS', 'SQL_PS_POSITIONED_DELETE', TRUE,   1, NULL, NULL);

1 row created.

Elapsed time: 0.08300 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('80', '2',       'SQL_POSITIONED_STATEMENTS', 'SQL_PS_POSITIONED_UPDATE', TRUE,   2, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('80', '4',       'SQL_POSITIONED_STATEMENTS', 'SQL_PS_SELECT_FOR_UPDATE', TRUE,   4, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

    
INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('93', ' ',       'SQL_QUOTED_IDENTIFIER_CASE', ' ', TRUE, 3,    NULL,     NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('11', ' ',       'SQL_ROW_UPDATES', ' ',            TRUE, NULL, 'Y',      NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('39', ' ',       'SQL_SCHEMA_TERM', ' ',            TRUE, NULL, 'schema', NULL);

1 row created.

Elapsed time: 0.07500 ms 

    
INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('91', ' ',       'SQL_SCHEMA_USAGE', ' ',                           TRUE,  0, NULL, NULL);

1 row created.

Elapsed time: 0.09500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('91', '1',       'SQL_SCHEMA_USAGE', 'SQL_SU_DML_STATEMENTS',       TRUE,  1, NULL, NULL);

1 row created.

Elapsed time: 0.08300 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('91', '2',       'SQL_SCHEMA_USAGE', 'SQL_SU_PROCEDURE_INVOCATION', FALSE, 2, NULL, NULL);

1 row created.

Elapsed time: 0.08400 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('91', '4',       'SQL_SCHEMA_USAGE', 'SQL_SU_TABLE_DEFINITION',     TRUE,  4, NULL, NULL);

1 row created.

Elapsed time: 0.07900 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('91', '8',       'SQL_SCHEMA_USAGE', 'SQL_SU_INDEX_DEFINITION',     TRUE,  8, NULL, NULL);

1 row created.

Elapsed time: 0.08000 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('91', '16',      'SQL_SCHEMA_USAGE', 'SQL_SU_PRIVILEGE_DEFINITION', TRUE, 16, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 


INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('43', ' ',       'SQL_SCROLL_CONCURRENCY', ' ',                   TRUE,  0, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('43', '1',       'SQL_SCROLL_CONCURRENCY', 'SQL_SCCO_READ_ONLY',  TRUE,  1, NULL, NULL);

1 row created.

Elapsed time: 0.08000 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('43', '2',       'SQL_SCROLL_CONCURRENCY', 'SQL_SCCO_LOCK',       TRUE,  2, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('43', '4',       'SQL_SCROLL_CONCURRENCY', 'SQL_SCCO_OPT_ROWVER', FALSE, 4, NULL, NULL);

1 row created.

Elapsed time: 0.08500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('43', '8',       'SQL_SCROLL_CONCURRENCY', 'SQL_SCCO_OPT_VALUES', FALSE, 8, NULL, NULL);

1 row created.

Elapsed time: 0.08000 ms 


INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('44', ' ',      'SQL_SCROLL_OPTIONS', ' ',                    TRUE,   0, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('44', '1',      'SQL_SCROLL_OPTIONS', 'SQL_SO_FORWARD_ONLY',  TRUE,   1, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('44', '16',     'SQL_SCROLL_OPTIONS', 'SQL_SO_STATIC',        TRUE,  16, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('44', '2',      'SQL_SCROLL_OPTIONS', 'SQL_SO_KEYSET_DRIVEN', TRUE,   2, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('44', '4',      'SQL_SCROLL_OPTIONS', 'SQL_SO_DYNAMIC',       FALSE,  4, NULL, NULL);

1 row created.

Elapsed time: 0.08200 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('44', '8',      'SQL_SCROLL_OPTIONS', 'SQL_SO_MIXED',         FALSE,  8, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

    
INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('14', ' ',      'SQL_SEARCH_PATTERN_ESCAPE', ' ', TRUE, NULL, '\',  NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('118', ' ',     'SQL_SQL_CONFORMANCE', ' ',       TRUE, 1,    NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 


INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('155', ' ',     'SQL_SQL92_DATETIME_FUNCTIONS', ' ',                         TRUE, 0, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('155', '1',     'SQL_SQL92_DATETIME_FUNCTIONS', 'SQL_SDF_CURRENT_DATE',      TRUE, 1, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('155', '2',     'SQL_SQL92_DATETIME_FUNCTIONS', 'SQL_SDF_CURRENT_TIME',      TRUE, 2, NULL, NULL);

1 row created.

Elapsed time: 0.07800 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('155', '4',     'SQL_SQL92_DATETIME_FUNCTIONS', 'SQL_SDF_CURRENT_TIMESTAMP', TRUE, 4, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

    
INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('156', ' ',     'SQL_SQL92_FOREIGN_KEY_DELETE_RULE', ' ',                    TRUE,  0, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('156', '1',     'SQL_SQL92_FOREIGN_KEY_DELETE_RULE', 'SQL_SFKD_CASCADE',     FALSE, 1, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('156', '2',     'SQL_SQL92_FOREIGN_KEY_DELETE_RULE', 'SQL_SFKD_NO_ACTION',   TRUE,  2, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('156', '4',     'SQL_SQL92_FOREIGN_KEY_DELETE_RULE', 'SQL_SFKD_SET_DEFAULT', FALSE, 4, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('156', '8',     'SQL_SQL92_FOREIGN_KEY_DELETE_RULE', 'SQL_SFKD_SET_NULL',    FALSE, 8, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 


INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('157', ' ',     'SQL_SQL92_FOREIGN_KEY_UPDATE_RULE', ' ',                    TRUE,  0, NULL, NULL);

1 row created.

Elapsed time: 0.08600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('157', '1',     'SQL_SQL92_FOREIGN_KEY_UPDATE_RULE', 'SQL_SFKU_CASCADE',     FALSE, 1, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('157', '2',     'SQL_SQL92_FOREIGN_KEY_UPDATE_RULE', 'SQL_SFKU_NO_ACTION',   TRUE,  2, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('157', '4',     'SQL_SQL92_FOREIGN_KEY_UPDATE_RULE', 'SQL_SFKU_SET_DEFAULT', FALSE, 4, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('157', '8',     'SQL_SQL92_FOREIGN_KEY_UPDATE_RULE', 'SQL_SFKU_SET_NULL',    FALSE, 8, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 


INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('158', ' ',     'SQL_SQL92_GRANT', ' ',                             TRUE,    0, NULL, NULL);

1 row created.

Elapsed time: 0.08500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('158', '32',    'SQL_SQL92_GRANT', 'SQL_SG_DELETE_TABLE',           TRUE,   32, NULL, NULL);

1 row created.

Elapsed time: 0.07900 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('158', '128',   'SQL_SQL92_GRANT', 'SQL_SG_INSERT_COLUMN',          TRUE,  128, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('158', '64',    'SQL_SQL92_GRANT', 'SQL_SG_INSERT_TABLE',           TRUE,   64, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('158', '256',   'SQL_SQL92_GRANT', 'SQL_SG_REFERENCES_TABLE',       TRUE,  256, NULL, NULL);

1 row created.

Elapsed time: 0.09300 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('158', '512',   'SQL_SQL92_GRANT', 'SQL_SG_REFERENCES_COLUMN',      TRUE,  512, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('158', '1024',  'SQL_SQL92_GRANT', 'SQL_SG_SELECT_TABLE',           TRUE, 1024, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('158', '2048',  'SQL_SQL92_GRANT', 'SQL_SG_UPDATE_TABLE',           TRUE, 2048, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('158', '4096',  'SQL_SQL92_GRANT', 'SQL_SG_UPDATE_COLUMN',          TRUE, 4096, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('158', '1',     'SQL_SQL92_GRANT', 'SQL_SG_USAGE_ON_DOMAIN',        FALSE,   1, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('158', '2',     'SQL_SQL92_GRANT', 'SQL_SG_USAGE_ON_CHARACTER_SET', FALSE,   2, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('158', '4',     'SQL_SQL92_GRANT', 'SQL_SG_USAGE_ON_COLLATION',     FALSE,   4, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('158', '8',     'SQL_SQL92_GRANT', 'SQL_SG_USAGE_ON_TRANSLATION',   FALSE,   8, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('158', '16',    'SQL_SQL92_GRANT', 'SQL_SG_WITH_GRANT_OPTION',      TRUE,   16, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

    
INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('159', ' ',     'SQL_SQL92_NUMERIC_VALUE_FUNCTIONS', ' ',                         TRUE,  0, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('159', '1',     'SQL_SQL92_NUMERIC_VALUE_FUNCTIONS', 'SQL_SNVF_BIT_LENGTH',       TRUE,  1, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('159', '2',     'SQL_SQL92_NUMERIC_VALUE_FUNCTIONS', 'SQL_SNVF_CHAR_LENGTH',      TRUE,  2, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('159', '4',     'SQL_SQL92_NUMERIC_VALUE_FUNCTIONS', 'SQL_SNVF_CHARACTER_LENGTH', TRUE,  4, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('159', '8',     'SQL_SQL92_NUMERIC_VALUE_FUNCTIONS', 'SQL_SNVF_EXTRACT',          TRUE,  8, NULL, NULL);

1 row created.

Elapsed time: 0.07800 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('159', '16',    'SQL_SQL92_NUMERIC_VALUE_FUNCTIONS', 'SQL_SNVF_OCTET_LENGTH',     TRUE, 16, NULL, NULL);

1 row created.

Elapsed time: 0.08200 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('159', '32',    'SQL_SQL92_NUMERIC_VALUE_FUNCTIONS', 'SQL_SNVF_POSITION',         TRUE, 32, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 


INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('160', ' ',     'SQL_SQL92_PREDICATES', ' ',                            TRUE,    0, NULL, NULL);

1 row created.

Elapsed time: 0.09000 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('160', '2048',  'SQL_SQL92_PREDICATES', 'SQL_SP_BETWEEN',               TRUE, 2048, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('160', '4096',  'SQL_SQL92_PREDICATES', 'SQL_SP_COMPARISON',            TRUE, 4096, NULL, NULL);

1 row created.

Elapsed time: 0.08600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('160', '1',     'SQL_SQL92_PREDICATES', 'SQL_SP_EXISTS',                TRUE,    1, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('160', '1024',  'SQL_SQL92_PREDICATES', 'SQL_SP_IN',                    TRUE, 1024, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('160', '2',     'SQL_SQL92_PREDICATES', 'SQL_SP_ISNOTNULL',             TRUE,    2, NULL, NULL);

1 row created.

Elapsed time: 0.08200 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('160', '4',     'SQL_SQL92_PREDICATES', 'SQL_SP_ISNULL',                TRUE,    4, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('160', '512',   'SQL_SQL92_PREDICATES', 'SQL_SP_LIKE',                  TRUE,  512, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('160', '8',     'SQL_SQL92_PREDICATES', 'SQL_SP_MATCH_FULL',            FALSE,   8, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('160', '16',    'SQL_SQL92_PREDICATES', 'SQL_SP_MATCH_PARTIAL',         FALSE,  16, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('160', '32',    'SQL_SQL92_PREDICATES', 'SQL_SP_MATCH_UNIQUE_FULL',     FALSE,  32, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('160', '64',    'SQL_SQL92_PREDICATES', 'SQL_SP_MATCH_UNIQUE_PARTIAL',  FALSE,  64, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('160', '128',   'SQL_SQL92_PREDICATES', 'SQL_SP_OVERLAPS',              FALSE, 128, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('160', '256',   'SQL_SQL92_PREDICATES', 'SQL_SP_UNIQUE',                TRUE,  256, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('160', '8192',  'SQL_SQL92_PREDICATES', 'SQL_SP_QUANTIFIED_COMPARISON', TRUE, 8192, NULL, NULL);

1 row created.

Elapsed time: 0.09100 ms 


INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('161', ' ',     'SQL_SQL92_RELATIONAL_JOIN_OPERATORS', ' ',                             TRUE,    0, NULL, NULL);

1 row created.

Elapsed time: 0.08400 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('161', '1',     'SQL_SQL92_RELATIONAL_JOIN_OPERATORS', 'SQL_SRJO_CORRESPONDING_CLAUSE', FALSE,   1, NULL, NULL);

1 row created.

Elapsed time: 0.09000 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('161', '2',     'SQL_SQL92_RELATIONAL_JOIN_OPERATORS', 'SQL_SRJO_CROSS_JOIN',           TRUE,    2, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('161', '4',     'SQL_SQL92_RELATIONAL_JOIN_OPERATORS', 'SQL_SRJO_EXCEPT_JOIN',          TRUE,    4, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('161', '8',     'SQL_SQL92_RELATIONAL_JOIN_OPERATORS', 'SQL_SRJO_FULL_OUTER_JOIN',      TRUE,    8, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('161', '16',    'SQL_SQL92_RELATIONAL_JOIN_OPERATORS', 'SQL_SRJO_INNER_JOIN',           TRUE,   16, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('161', '32',    'SQL_SQL92_RELATIONAL_JOIN_OPERATORS', 'SQL_SRJO_INTERSECT_JOIN',       TRUE,   32, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('161', '64',    'SQL_SQL92_RELATIONAL_JOIN_OPERATORS', 'SQL_SRJO_LEFT_OUTER_JOIN',      TRUE,   64, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('161', '128',   'SQL_SQL92_RELATIONAL_JOIN_OPERATORS', 'SQL_SRJO_NATURAL_JOIN',         TRUE,  128, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('161', '256',   'SQL_SQL92_RELATIONAL_JOIN_OPERATORS', 'SQL_SRJO_RIGHT_OUTER_JOIN',     TRUE,  256, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('161', '512',   'SQL_SQL92_RELATIONAL_JOIN_OPERATORS', 'SQL_SRJO_UNION_JOIN',           TRUE,  512, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 


INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('162', ' ',     'SQL_SQL92_REVOKE', ' ',                             TRUE,     0, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('162', '32',    'SQL_SQL92_REVOKE', 'SQL_SR_CASCADE',                TRUE,    32, NULL, NULL);

1 row created.

Elapsed time: 0.08300 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('162', '128',   'SQL_SQL92_REVOKE', 'SQL_SR_DELETE_TABLE',           TRUE,   128, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('162', '16',    'SQL_SQL92_REVOKE', 'SQL_SR_GRANT_OPTION_FOR',       TRUE,    16, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('162', '512',   'SQL_SQL92_REVOKE', 'SQL_SR_INSERT_COLUMN',          TRUE,   512, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('162', '256',   'SQL_SQL92_REVOKE', 'SQL_SR_INSERT_TABLE',           TRUE,   256, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('162', '1024',  'SQL_SQL92_REVOKE', 'SQL_SR_REFERENCES_TABLE',       TRUE,  1024, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('162', '2048',  'SQL_SQL92_REVOKE', 'SQL_SR_REFERENCES_COLUMN',      TRUE,  2048, NULL, NULL);

1 row created.

Elapsed time: 0.09300 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('162', '64',    'SQL_SQL92_REVOKE', 'SQL_SR_RESTRICT',               TRUE,    64, NULL, NULL);

1 row created.

Elapsed time: 0.08900 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('162', '4096',  'SQL_SQL92_REVOKE', 'SQL_SR_SELECT_TABLE',           TRUE,  4096, NULL, NULL);

1 row created.

Elapsed time: 0.09000 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('162', '16384', 'SQL_SQL92_REVOKE', 'SQL_SR_UPDATE_COLUMN',          TRUE, 16384, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('162', '8192',  'SQL_SQL92_REVOKE', 'SQL_SR_UPDATE_TABLE',           TRUE,  8192, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('162', '1',     'SQL_SQL92_REVOKE', 'SQL_SR_USAGE_ON_DOMAIN',        FALSE,    1, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('162', '2',     'SQL_SQL92_REVOKE', 'SQL_SR_USAGE_ON_CHARACTER_SET', FALSE,    2, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('162', '4',     'SQL_SQL92_REVOKE', 'SQL_SR_USAGE_ON_COLLATION',     FALSE,    4, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('162', '8',     'SQL_SQL92_REVOKE', 'SQL_SR_USAGE_ON_TRANSLATION',   FALSE,    8, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 


INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('163', ' ',     'SQL_SQL92_ROW_VALUE_CONSTRUCTOR', ' ',                         TRUE,  0, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('163', '1',     'SQL_SQL92_ROW_VALUE_CONSTRUCTOR', 'SQL_SRVC_VALUE_EXPRESSION', FALSE, 1, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('163', '2',     'SQL_SQL92_ROW_VALUE_CONSTRUCTOR', 'SQL_SRVC_NULL',             FALSE, 2, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('163', '4',     'SQL_SQL92_ROW_VALUE_CONSTRUCTOR', 'SQL_SRVC_DEFAULT',          FALSE, 4, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('163', '8',     'SQL_SQL92_ROW_VALUE_CONSTRUCTOR', 'SQL_SRVC_ROW_SUBQUERY',     FALSE, 8, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 


INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('164', ' ',     'SQL_SQL92_STRING_FUNCTIONS', ' ',                     TRUE,   0, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('164', '1',     'SQL_SQL92_STRING_FUNCTIONS', 'SQL_SSF_CONVERT',       FALSE,  1, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('164', '2',     'SQL_SQL92_STRING_FUNCTIONS', 'SQL_SSF_LOWER',         TRUE,   2, NULL, NULL);

1 row created.

Elapsed time: 0.08100 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('164', '4',     'SQL_SQL92_STRING_FUNCTIONS', 'SQL_SSF_UPPER',         TRUE,   4, NULL, NULL);

1 row created.

Elapsed time: 0.08100 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('164', '8',     'SQL_SQL92_STRING_FUNCTIONS', 'SQL_SSF_SUBSTRING',     TRUE,   8, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('164', '16',    'SQL_SQL92_STRING_FUNCTIONS', 'SQL_SSF_TRANSLATE',     TRUE,  16, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('164', '32',    'SQL_SQL92_STRING_FUNCTIONS', 'SQL_SSF_TRIM_BOTH',     TRUE,  32, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('164', '64',    'SQL_SQL92_STRING_FUNCTIONS', 'SQL_SSF_TRIM_LEADING',  TRUE , 64, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('164', '128',   'SQL_SQL92_STRING_FUNCTIONS', 'SQL_SSF_TRIM_TRAILING', TRUE, 128, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 


INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('165', ' ',     'SQL_SQL92_VALUE_EXPRESSIONS', ' ',                TRUE, 0, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('165', '1',     'SQL_SQL92_VALUE_EXPRESSIONS', 'SQL_SVE_CASE',     TRUE, 1, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('165', '2',     'SQL_SQL92_VALUE_EXPRESSIONS', 'SQL_SVE_CAST',     TRUE, 2, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('165', '4',     'SQL_SQL92_VALUE_EXPRESSIONS', 'SQL_SVE_COALESCE', TRUE, 4, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('165', '8',     'SQL_SQL92_VALUE_EXPRESSIONS', 'SQL_SVE_NULLIF',   TRUE, 8, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 


INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('167', ' ',      'SQL_STATIC_CURSOR_ATTRIBUTES1', ' ',                               TRUE,       0, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('167', '1',      'SQL_STATIC_CURSOR_ATTRIBUTES1', 'SQL_CA1_NEXT',                    TRUE,       1, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('167', '2',      'SQL_STATIC_CURSOR_ATTRIBUTES1', 'SQL_CA1_ABSOLUTE',                TRUE,       2, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('167', '4',      'SQL_STATIC_CURSOR_ATTRIBUTES1', 'SQL_CA1_RELATIVE',                TRUE,       4, NULL, NULL);

1 row created.

Elapsed time: 0.08100 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('167', '8',      'SQL_STATIC_CURSOR_ATTRIBUTES1', 'SQL_CA1_BOOKMARK',                FALSE,      8, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('167', '64',     'SQL_STATIC_CURSOR_ATTRIBUTES1', 'SQL_CA1_LOCK_NO_CHANGE',          TRUE,      64, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('167', '128',    'SQL_STATIC_CURSOR_ATTRIBUTES1', 'SQL_CA1_LOCK_EXCLUSIVE',          FALSE,    128, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('167', '256',    'SQL_STATIC_CURSOR_ATTRIBUTES1', 'SQL_CA1_LOCK_UNLOCK',             FALSE,    256, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('167', '512',    'SQL_STATIC_CURSOR_ATTRIBUTES1', 'SQL_CA1_POS_POSITION',            TRUE,     512, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('167', '1024',   'SQL_STATIC_CURSOR_ATTRIBUTES1', 'SQL_CA1_POS_UPDATE',              FALSE,   1024, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('167', '2048',   'SQL_STATIC_CURSOR_ATTRIBUTES1', 'SQL_CA1_POS_DELETE',              FALSE,   2048, NULL, NULL);

1 row created.

Elapsed time: 0.08300 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('167', '4096',   'SQL_STATIC_CURSOR_ATTRIBUTES1', 'SQL_CA1_POS_REFRESH',             FALSE,   4096, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('167', '8192',   'SQL_STATIC_CURSOR_ATTRIBUTES1', 'SQL_CA1_POSITIONED_UPDATE',       TRUE,    8192, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('167', '16384',  'SQL_STATIC_CURSOR_ATTRIBUTES1', 'SQL_CA1_POSITIONED_DELETE',       TRUE,   16384, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('167', '32768',  'SQL_STATIC_CURSOR_ATTRIBUTES1', 'SQL_CA1_SELECT_FOR_UPDATE',       TRUE,   32768, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('167', '65536',  'SQL_STATIC_CURSOR_ATTRIBUTES1', 'SQL_CA1_BULK_ADD',                FALSE,  65536, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('167', '131072', 'SQL_STATIC_CURSOR_ATTRIBUTES1', 'SQL_CA1_BULK_UPDATE_BY_BOOKMARK', FALSE, 131072, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('167', '262144', 'SQL_STATIC_CURSOR_ATTRIBUTES1', 'SQL_CA1_BULK_DELETE_BY_BOOKMARK', FALSE, 262144, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('167', '524288', 'SQL_STATIC_CURSOR_ATTRIBUTES1', 'SQL_CA1_BULK_FETCH_BY_BOOKMARK',  FALSE, 524288, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 


INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('168', ' ',      'SQL_STATIC_CURSOR_ATTRIBUTES2', ' ',                              TRUE,      0, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('168', '1',      'SQL_STATIC_CURSOR_ATTRIBUTES2', 'SQL_CA2_READ_ONLY_CONCURRENCY',  TRUE,      1, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('168', '2',      'SQL_STATIC_CURSOR_ATTRIBUTES2', 'SQL_CA2_LOCK_CONCURRENCY',       TRUE,      2, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('168', '4',      'SQL_STATIC_CURSOR_ATTRIBUTES2', 'SQL_CA2_OPT_ROWVER_CONCURRENCY', FALSE,     4, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('168', '8',      'SQL_STATIC_CURSOR_ATTRIBUTES2', 'SQL_CA2_OPT_VALUES_CONCURRENCY', FALSE,     8, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('168', '16',     'SQL_STATIC_CURSOR_ATTRIBUTES2', 'SQL_CA2_SENSITIVITY_ADDITIONS',  FALSE,    16, NULL, NULL);

1 row created.

Elapsed time: 0.08100 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('168', '32',     'SQL_STATIC_CURSOR_ATTRIBUTES2', 'SQL_CA2_SENSITIVITY_DELETIONS',  FALSE,    32, NULL, NULL);

1 row created.

Elapsed time: 0.07800 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('168', '64',     'SQL_STATIC_CURSOR_ATTRIBUTES2', 'SQL_CA2_SENSITIVITY_UPDATES',    FALSE,    64, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('168', '128',    'SQL_STATIC_CURSOR_ATTRIBUTES2', 'SQL_CA2_MAX_ROWS_SELECT',        TRUE,    128, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('168', '256',    'SQL_STATIC_CURSOR_ATTRIBUTES2', 'SQL_CA2_MAX_ROWS_INSERT',        FALSE,   256, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('168', '512',    'SQL_STATIC_CURSOR_ATTRIBUTES2', 'SQL_CA2_MAX_ROWS_DELETE',        FALSE,   512, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('168', '1024',   'SQL_STATIC_CURSOR_ATTRIBUTES2', 'SQL_CA2_MAX_ROWS_UPDATE',        FALSE,  1024, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('168', '2048',   'SQL_STATIC_CURSOR_ATTRIBUTES2', 'SQL_CA2_MAX_ROWS_CATALOG',       TRUE,   2048, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('168', '4096',   'SQL_STATIC_CURSOR_ATTRIBUTES2', 'SQL_CA2_CRC_EXACT',              FALSE,  4096, NULL, NULL);

1 row created.

Elapsed time: 0.08200 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('168', '8192',   'SQL_STATIC_CURSOR_ATTRIBUTES2', 'SQL_CA2_CRC_APPROXIMATE',        FALSE,  8192, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('168', '16384',  'SQL_STATIC_CURSOR_ATTRIBUTES2', 'SQL_CA2_SIMULATE_NON_UNIQUE',    FALSE, 16384, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('168', '32768',  'SQL_STATIC_CURSOR_ATTRIBUTES2', 'SQL_CA2_SIMULATE_TRY_UNIQUE',    FALSE, 32768, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('168', '65536',  'SQL_STATIC_CURSOR_ATTRIBUTES2', 'SQL_CA2_SIMULATE_UNIQUE',        FALSE, 65536, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 


INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('83', ' ',      'SQL_STATIC_SENSITIVITY', ' ',                TRUE,  0, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('83', '1',      'SQL_STATIC_SENSITIVITY', 'SQL_SS_ADDITIONS', FALSE, 1, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('83', '2',      'SQL_STATIC_SENSITIVITY', 'SQL_SS_DELETIONS', FALSE, 2, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('83', '4',      'SQL_STATIC_SENSITIVITY', 'SQL_SS_UPDATES',   FALSE, 4, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

    
INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('50', ' ',       'SQL_STRING_FUNCTIONS', ' ',                           TRUE,        0, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('50', '8192',    'SQL_STRING_FUNCTIONS', 'SQL_FN_STR_ASCII',            FALSE,    8192, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('50', '524288',  'SQL_STRING_FUNCTIONS', 'SQL_FN_STR_BIT_LENGTH',       TRUE,   524288, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('50', '16384',   'SQL_STRING_FUNCTIONS', 'SQL_FN_STR_CHAR',             FALSE,   16384, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('50', '1048576', 'SQL_STRING_FUNCTIONS', 'SQL_FN_STR_CHAR_LENGTH',      TRUE,  1048576, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('50', '2097152', 'SQL_STRING_FUNCTIONS', 'SQL_FN_STR_CHARACTER_LENGTH', TRUE,  2097152, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('50', '1',       'SQL_STRING_FUNCTIONS', 'SQL_FN_STR_CONCAT',           TRUE,        1, NULL, NULL);

1 row created.

Elapsed time: 0.08200 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('50', '32768',   'SQL_STRING_FUNCTIONS', 'SQL_FN_STR_DIFFERENCE',       FALSE,   32768, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('50', '2',       'SQL_STRING_FUNCTIONS', 'SQL_FN_STR_INSERT',           TRUE,        2, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('50', '64',      'SQL_STRING_FUNCTIONS', 'SQL_FN_STR_LCASE',            TRUE,       64, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('50', '4',       'SQL_STRING_FUNCTIONS', 'SQL_FN_STR_LEFT',             FALSE,       4, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('50', '16',      'SQL_STRING_FUNCTIONS', 'SQL_FN_STR_LENGTH',           TRUE,       16, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('50', '32',      'SQL_STRING_FUNCTIONS', 'SQL_FN_STR_LOCATE',           FALSE,      32, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('50', '65536',   'SQL_STRING_FUNCTIONS', 'SQL_FN_STR_LOCATE_2',         TRUE,    65536, NULL, NULL);

1 row created.

Elapsed time: 0.08100 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('50', '8',       'SQL_STRING_FUNCTIONS', 'SQL_FN_STR_LTRIM',            TRUE,        8, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('50', '4194304', 'SQL_STRING_FUNCTIONS', 'SQL_FN_STR_OCTET_LENGTH',     TRUE,  4194304, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('50', '8388608', 'SQL_STRING_FUNCTIONS', 'SQL_FN_STR_POSITION',         TRUE,  8388608, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('50', '128',     'SQL_STRING_FUNCTIONS', 'SQL_FN_STR_REPEAT',           TRUE,      128, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('50', '256',     'SQL_STRING_FUNCTIONS', 'SQL_FN_STR_REPLACE',          TRUE,      256, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('50', '512',     'SQL_STRING_FUNCTIONS', 'SQL_FN_STR_RIGHT',            FALSE,     512, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('50', '1024',    'SQL_STRING_FUNCTIONS', 'SQL_FN_STR_RTRIM',            TRUE,     1024, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('50', '131072',  'SQL_STRING_FUNCTIONS', 'SQL_FN_STR_SOUNDEX',          FALSE,  131072, NULL, NULL);

1 row created.

Elapsed time: 0.11100 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('50', '262144',  'SQL_STRING_FUNCTIONS', 'SQL_FN_STR_SPACE',            FALSE,  262144, NULL, NULL);

1 row created.

Elapsed time: 0.08400 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('50', '2048',    'SQL_STRING_FUNCTIONS', 'SQL_FN_STR_SUBSTRING',        TRUE,     2048, NULL, NULL);

1 row created.

Elapsed time: 0.10200 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('50', '4096',    'SQL_STRING_FUNCTIONS', 'SQL_FN_STR_UCASE',            TRUE,     4096, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 


INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('95', ' ',      'SQL_SUBQUERIES', ' ',                            TRUE,   0, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('95', '16',     'SQL_SUBQUERIES', 'SQL_SQ_CORRELATED_SUBQUERIES', TRUE,  16, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('95', '1',      'SQL_SUBQUERIES', 'SQL_SQ_COMPARISON',            TRUE,   1, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('95', '2',      'SQL_SUBQUERIES', 'SQL_SQ_EXISTS',                TRUE,   2, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('95', '4',      'SQL_SUBQUERIES', 'SQL_SQ_IN',                    TRUE,   4, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('95', '8',      'SQL_SUBQUERIES', 'SQL_SQ_QUANTIFIED',            TRUE,   8, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 


INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('51', ' ',      'SQL_SYSTEM_FUNCTIONS', ' ',                   TRUE, 0, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('51', '2',      'SQL_SYSTEM_FUNCTIONS', 'SQL_FN_SYS_DBNAME',   TRUE, 2, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('51', '4',      'SQL_SYSTEM_FUNCTIONS', 'SQL_FN_SYS_IFNULL',   TRUE, 4, NULL, NULL);

1 row created.

Elapsed time: 0.07800 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('51', '1',      'SQL_SYSTEM_FUNCTIONS', 'SQL_FN_SYS_USERNAME', TRUE, 1, NULL, NULL);

1 row created.

Elapsed time: 0.08800 ms 


INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('45', ' ',      'SQL_TABLE_TERM', ' ', TRUE, NULL, 'table', NULL);

1 row created.

Elapsed time: 0.09100 ms 

    
INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('109', ' ',     'SQL_TIMEDATE_ADD_INTERVALS', ' ',                      TRUE,    0, NULL, NULL);

1 row created.

Elapsed time: 0.09300 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('109', '1',     'SQL_TIMEDATE_ADD_INTERVALS', 'SQL_FN_TSI_FRAC_SECOND', TRUE,    1, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('109', '2',     'SQL_TIMEDATE_ADD_INTERVALS', 'SQL_FN_TSI_SECOND',      TRUE,    2, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('109', '4',     'SQL_TIMEDATE_ADD_INTERVALS', 'SQL_FN_TSI_MINUTE',      TRUE,    4, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('109', '8',     'SQL_TIMEDATE_ADD_INTERVALS', 'SQL_FN_TSI_HOUR',        TRUE,    8, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('109', '16',    'SQL_TIMEDATE_ADD_INTERVALS', 'SQL_FN_TSI_DAY',         TRUE,   16, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('109', '32',    'SQL_TIMEDATE_ADD_INTERVALS', 'SQL_FN_TSI_WEEK',        TRUE,   32, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('109', '64',    'SQL_TIMEDATE_ADD_INTERVALS', 'SQL_FN_TSI_MONTH',       TRUE,   64, NULL, NULL);

1 row created.

Elapsed time: 0.08300 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('109', '128',   'SQL_TIMEDATE_ADD_INTERVALS', 'SQL_FN_TSI_QUARTER',     TRUE,  128, NULL, NULL);

1 row created.

Elapsed time: 0.08300 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('109', '256',   'SQL_TIMEDATE_ADD_INTERVALS', 'SQL_FN_TSI_YEAR',        TRUE,  256, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 


INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('110', ' ',     'SQL_TIMEDATE_DIFF_INTERVALS', ' ',                      TRUE,    0, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('110', '1',     'SQL_TIMEDATE_DIFF_INTERVALS', 'SQL_FN_TSI_FRAC_SECOND', TRUE,    1, NULL, NULL);

1 row created.

Elapsed time: 0.07800 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('110', '2',     'SQL_TIMEDATE_DIFF_INTERVALS', 'SQL_FN_TSI_SECOND',      TRUE,    2, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('110', '4',     'SQL_TIMEDATE_DIFF_INTERVALS', 'SQL_FN_TSI_MINUTE',      TRUE,    4, NULL, NULL);

1 row created.

Elapsed time: 0.07800 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('110', '8',     'SQL_TIMEDATE_DIFF_INTERVALS', 'SQL_FN_TSI_HOUR',        TRUE,    8, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('110', '16',    'SQL_TIMEDATE_DIFF_INTERVALS', 'SQL_FN_TSI_DAY',         TRUE,   16, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('110', '32',    'SQL_TIMEDATE_DIFF_INTERVALS', 'SQL_FN_TSI_WEEK',        FALSE,  32, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('110', '64',    'SQL_TIMEDATE_DIFF_INTERVALS', 'SQL_FN_TSI_MONTH',       TRUE,   64, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('110', '128',   'SQL_TIMEDATE_DIFF_INTERVALS', 'SQL_FN_TSI_QUARTER',     TRUE,  128, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('110', '256',   'SQL_TIMEDATE_DIFF_INTERVALS', 'SQL_FN_TSI_YEAR',        TRUE,  256, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 


INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('52', ' ',       'SQL_TIMEDATE_FUNCTIONS', ' ',                           TRUE,       0, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('52', '131072',  'SQL_TIMEDATE_FUNCTIONS', 'SQL_FN_TD_CURRENT_DATE',      TRUE,  131072, NULL, NULL);

1 row created.

Elapsed time: 0.08300 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('52', '262144',  'SQL_TIMEDATE_FUNCTIONS', 'SQL_FN_TD_CURRENT_TIME',      TRUE,  262144, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('52', '524288',  'SQL_TIMEDATE_FUNCTIONS', 'SQL_FN_TD_CURRENT_TIMESTAMP', TRUE,  524288, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('52', '2',       'SQL_TIMEDATE_FUNCTIONS', 'SQL_FN_TD_CURDATE',           TRUE,       2, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('52', '512',     'SQL_TIMEDATE_FUNCTIONS', 'SQL_FN_TD_CURTIME',           TRUE,     512, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('52', '32768',   'SQL_TIMEDATE_FUNCTIONS', 'SQL_FN_TD_DAYNAME',           TRUE,   32768, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('52', '4',       'SQL_TIMEDATE_FUNCTIONS', 'SQL_FN_TD_DAYOFMONTH',        TRUE,       4, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('52', '8',       'SQL_TIMEDATE_FUNCTIONS', 'SQL_FN_TD_DAYOFWEEK',         TRUE,       8, NULL, NULL);

1 row created.

Elapsed time: 0.09200 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('52', '16',      'SQL_TIMEDATE_FUNCTIONS', 'SQL_FN_TD_DAYOFYEAR',         TRUE,      16, NULL, NULL);

1 row created.

Elapsed time: 0.08200 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('52', '1048576', 'SQL_TIMEDATE_FUNCTIONS', 'SQL_FN_TD_EXTRACT',           TRUE, 1048576, NULL, NULL);

1 row created.

Elapsed time: 0.08200 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('52', '1024',    'SQL_TIMEDATE_FUNCTIONS', 'SQL_FN_TD_HOUR',              TRUE,    1024, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('52', '2048',    'SQL_TIMEDATE_FUNCTIONS', 'SQL_FN_TD_MINUTE',            TRUE,    2048, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('52', '32',      'SQL_TIMEDATE_FUNCTIONS', 'SQL_FN_TD_MONTH',             TRUE,      32, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('52', '65536',   'SQL_TIMEDATE_FUNCTIONS', 'SQL_FN_TD_MONTHNAME',         TRUE,   65536, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('52', '1',       'SQL_TIMEDATE_FUNCTIONS', 'SQL_FN_TD_NOW',               TRUE,       1, NULL, NULL);

1 row created.

Elapsed time: 0.08300 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('52', '64',      'SQL_TIMEDATE_FUNCTIONS', 'SQL_FN_TD_QUARTER',           TRUE,      64, NULL, NULL);

1 row created.

Elapsed time: 0.08200 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('52', '4096',    'SQL_TIMEDATE_FUNCTIONS', 'SQL_FN_TD_SECOND',            TRUE,    4096, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('52', '8192',    'SQL_TIMEDATE_FUNCTIONS', 'SQL_FN_TD_TIMESTAMPADD',      TRUE,    8192, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('52', '16384',   'SQL_TIMEDATE_FUNCTIONS', 'SQL_FN_TD_TIMESTAMPDIFF',     TRUE,   16384, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('52', '128',     'SQL_TIMEDATE_FUNCTIONS', 'SQL_FN_TD_WEEK',              TRUE,     128, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('52', '256',     'SQL_TIMEDATE_FUNCTIONS', 'SQL_FN_TD_YEAR',              TRUE,     256, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 


INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('72', ' ',      'SQL_TXN_ISOLATION_OPTION', ' ',                        TRUE,  0, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('72', '1',      'SQL_TXN_ISOLATION_OPTION', 'SQL_TXN_READ_UNCOMMITTED', FALSE, 1, NULL, NULL);

1 row created.

Elapsed time: 0.07900 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('72', '2',      'SQL_TXN_ISOLATION_OPTION', 'SQL_TXN_READ_COMMITTED',   TRUE,  2, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('72', '4',      'SQL_TXN_ISOLATION_OPTION', 'SQL_TXN_REPEATABLE_READ',  FALSE, 4, NULL, NULL);

1 row created.

Elapsed time: 0.07700 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('72', '8',      'SQL_TXN_ISOLATION_OPTION', 'SQL_TXN_SERIALIZABLE',     TRUE,  8, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

    
INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('96', ' ',      'SQL_UNION', ' ',               TRUE, 0, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('96', '1',      'SQL_UNION', 'SQL_U_UNION',     TRUE, 1, NULL, NULL);

1 row created.

Elapsed time: 0.07600 ms 

INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('96', '2',      'SQL_UNION', 'SQL_U_UNION_ALL', TRUE, 2, NULL, NULL);

1 row created.

Elapsed time: 0.07500 ms 


INSERT INTO DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE VALUES ('10000', ' ',   'SQL_XOPEN_CLI_YEAR', ' ', TRUE, NULL, '1995', NULL);

1 row created.

Elapsed time: 0.07700 ms 

COMMIT;

Commit complete.

Elapsed time: 0.21300 ms 


--#####################
--# comment table
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE
        IS 'The IMPLEMENTATION_INFO_BASE table has one row for each implementation information item.';

Comment created.

Elapsed time: 0.13500 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE.ID
        IS 'identifier string of the implementation item';

Comment created.

Elapsed time: 0.17700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE.SUB_ID
        IS 'identifier string of the implementation item';

Comment created.

Elapsed time: 0.16900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE.NAME
        IS 'descriptive name of the implementation item';

Comment created.

Elapsed time: 0.19200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE.SUB_NAME
        IS 'descriptive name of the implementation item';

Comment created.

Elapsed time: 0.17800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE.IS_SUPPORTED
        IS 'TRUE if the implementation item is supported, FALSE if not';

Comment created.

Elapsed time: 0.13400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE.INTEGER_VALUE
        IS 'Value of the implementation item, or null if the value is contained in the column CHARACTER_VALUE';

Comment created.

Elapsed time: 0.14200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE.CHARACTER_VALUE
        IS 'Value of the implementation item, or null if the value is contained in the column INTEGER_VALUE';

Comment created.

Elapsed time: 0.15200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE.COMMENTS
        IS 'possibly a comment pertaining to the implementation item';

Comment created.

Elapsed time: 0.13200 ms 


--#####################
--# grant table
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE TO PUBLIC;

Grant succeeded.

Elapsed time: 0.34700 ms 


COMMIT;

Commit complete.

Elapsed time: 0.05000 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS IMPLEMENTATION_INFO_BASE;

Synonym dropped.

Elapsed time: 0.07400 ms 

CREATE PUBLIC SYNONYM IMPLEMENTATION_INFO_BASE FOR DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE;

Synonym created.

Elapsed time: 0.08900 ms 

COMMIT;

Commit complete.

Elapsed time: 0.04600 ms 


--##############################################################
--# DICTIONARY_SCHEMA.IMPLEMENTATION_INFO
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.IMPLEMENTATION_INFO;

View dropped.

Elapsed time: 0.91400 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.IMPLEMENTATION_INFO
(
       IMPLEMENTATION_INFO_ID
     , IMPLEMENTATION_INFO_NAME
     , INTEGER_VALUE
     , CHARACTER_VALUE
     , COMMENTS
)
AS
(
SELECT
       CAST(ID AS NUMBER) AS ID              -- IMPLEMENTATION_INFO_ID
     , NAME                                  -- IMPLEMENTATION_INFO_NAME
     , SUM(INTEGER_VALUE)                    -- INTEGER_VALUE
     , NULL                                  -- CHARACTER_VALUE
     , CAST(NULL AS VARCHAR(1024 OCTETS))    -- COMMENTS
  FROM 
       DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE
 WHERE 
       IS_SUPPORTED = TRUE
   AND INTEGER_VALUE IS NOT NULL
 GROUP BY
       ID
     , NAME
)
UNION ALL
(
SELECT
       CAST(ID AS NUMBER)                    -- IMPLEMENTATION_INFO_ID
     , NAME                                  -- IMPLEMENTATION_INFO_NAME
     , NULL                                  -- INTEGER_VALUE
     , CHARACTER_VALUE                       -- CHARACTER_VALUE
     , NULL                                  -- COMMENTS
  FROM 
       DICTIONARY_SCHEMA.IMPLEMENTATION_INFO_BASE
 WHERE 
       IS_SUPPORTED = TRUE
   AND CHARACTER_VALUE IS NOT NULL
)
UNION ALL
(
SELECT
      0                                      -- IMPLEMENTATION_INFO_ID
     , 'SQL_MAX_DRIVER_CONNECTIONS'          -- IMPLEMENTATION_INFO_NAME
     , CAST(VALUE AS NUMBER)                 -- INTEGER_VALUE
     , NULL                                  -- CHARACTER_VALUE
     , NULL                                  -- COMMENTS
  FROM 
       FIXED_TABLE_SCHEMA.X$PROPERTY
  WHERE 
       PROPERTY_NAME = 'CLIENT_MAX_COUNT'
)
UNION ALL
(
SELECT
      1                                      -- IMPLEMENTATION_INFO_ID
     , 'SQL_MAX_CONCURRENT_ACTIVITIES'       -- IMPLEMENTATION_INFO_NAME
     , CAST(VALUE AS NUMBER)                 -- INTEGER_VALUE
     , NULL                                  -- CHARACTER_VALUE
     , NULL                                  -- COMMENTS
  FROM 
       FIXED_TABLE_SCHEMA.X$PROPERTY
  WHERE 
       PROPERTY_NAME = 'MAXIMUM_CONCURRENT_ACTIVITIES'
)
UNION ALL
(
SELECT
      25                                     -- IMPLEMENTATION_INFO_ID
     , 'SQL_DATA_SOURCE_READ_ONLY'           -- IMPLEMENTATION_INFO_NAME
     , NULL                                  -- INTEGER_VALUE
     , CASE VALUE                            -- CHARACTER_VALUE
           WHEN '0' THEN 'Y'
           WHEN '1' THEN 'N'
           END
     , NULL                                  -- COMMENTS
  FROM 
       FIXED_TABLE_SCHEMA.X$PROPERTY
  WHERE 
       PROPERTY_NAME = 'DATABASE_ACCESS_MODE'
)
UNION ALL
(
SELECT
      16                                     -- IMPLEMENTATION_INFO_ID
     , 'SQL_DATABASE_NAME'                   -- IMPLEMENTATION_INFO_NAME          
     , NULL                                  -- INTEGER_VALUE
     , CURRENT_CATALOG()                     -- CHARACTER_VALUE
     , NULL                                  -- COMMENTS
  FROM 
       FIXED_TABLE_SCHEMA.DUAL
)
UNION ALL
(
SELECT
      47                                     -- IMPLEMENTATION_INFO_ID
     , 'SQL_USER_NAME'                       -- IMPLEMENTATION_INFO_NAME          
     , NULL                                  -- INTEGER_VALUE
     , CURRENT_USER()                        -- CHARACTER_VALUE
     , NULL                                  -- COMMENTS
  FROM 
       FIXED_TABLE_SCHEMA.DUAL
)
UNION ALL
(
SELECT
      17                                     -- IMPLEMENTATION_INFO_ID
     , 'SQL_DBMS_NAME'                       -- IMPLEMENTATION_INFO_NAME          
     , NULL                                  -- INTEGER_VALUE
     , CHARACTER_VALUE                       -- CHARACTER_VALUE
     , NULL                                  -- COMMENTS
  FROM 
       DEFINITION_SCHEMA.SQL_IMPLEMENTATION_INFO
 WHERE
       IMPLEMENTATION_INFO_NAME = 'DBMS NAME'
)
UNION ALL
(
SELECT
      18                                     -- IMPLEMENTATION_INFO_ID
     , 'SQL_DBMS_VER'                        -- IMPLEMENTATION_INFO_NAME          
     , NULL                                  -- INTEGER_VALUE
     , CHARACTER_VALUE                       -- CHARACTER_VALUE
     , NULL                                  -- COMMENTS
  FROM 
       DEFINITION_SCHEMA.SQL_IMPLEMENTATION_INFO
 WHERE
       IMPLEMENTATION_INFO_NAME = 'DBMS VERSION'
)
UNION ALL
(
SELECT
      23                                     -- IMPLEMENTATION_INFO_ID
     , 'SQL_CURSOR_COMMIT_BEHAVIOR'          -- IMPLEMENTATION_INFO_NAME          
     , INTEGER_VALUE                         -- INTEGER_VALUE
     , NULL                                  -- CHARACTER_VALUE
     , NULL                                  -- COMMENTS
  FROM 
       DEFINITION_SCHEMA.SQL_IMPLEMENTATION_INFO
 WHERE
       IMPLEMENTATION_INFO_NAME = 'CURSOR COMMIT BEHAVIOR'
)
UNION ALL
(
SELECT
      26                                     -- IMPLEMENTATION_INFO_ID
     , 'SQL_DEFAULT_TXN_ISOLATION'           -- IMPLEMENTATION_INFO_NAME          
     , INTEGER_VALUE                         -- INTEGER_VALUE
     , NULL                                  -- CHARACTER_VALUE
     , NULL                                  -- COMMENTS
  FROM 
       DEFINITION_SCHEMA.SQL_IMPLEMENTATION_INFO
 WHERE
       IMPLEMENTATION_INFO_NAME = 'DEFAULT TRANSACTION ISOLATION'
)
UNION ALL
(
SELECT
      28                                     -- IMPLEMENTATION_INFO_ID
     , 'SQL_IDENTIFIER_CASE'                 -- IMPLEMENTATION_INFO_NAME          
     , INTEGER_VALUE                         -- INTEGER_VALUE
     , NULL                                  -- CHARACTER_VALUE
     , NULL                                  -- COMMENTS
  FROM 
       DEFINITION_SCHEMA.SQL_IMPLEMENTATION_INFO
 WHERE
       IMPLEMENTATION_INFO_NAME = 'IDENTIFIER CASE'
)
UNION ALL
(
SELECT
      46                                     -- IMPLEMENTATION_INFO_ID
     , 'SQL_TXN_CAPABLE'                     -- IMPLEMENTATION_INFO_NAME          
     , INTEGER_VALUE                         -- INTEGER_VALUE
     , NULL                                  -- CHARACTER_VALUE
     , NULL                                  -- COMMENTS
  FROM 
       DEFINITION_SCHEMA.SQL_IMPLEMENTATION_INFO
 WHERE
       IMPLEMENTATION_INFO_NAME = 'TRANSACTION CAPABLE'
)
UNION ALL
(
SELECT
      85                                     -- IMPLEMENTATION_INFO_ID
     , 'SQL_NULL_COLLATION'                  -- IMPLEMENTATION_INFO_NAME          
     , INTEGER_VALUE                         -- INTEGER_VALUE
     , NULL                                  -- CHARACTER_VALUE
     , 'TODO'                                -- COMMENTS
  FROM 
       DEFINITION_SCHEMA.SQL_IMPLEMENTATION_INFO
 WHERE
       IMPLEMENTATION_INFO_NAME = 'NULL COLLATION'
)
UNION ALL
(
SELECT
      94                                     -- IMPLEMENTATION_INFO_ID
     , 'SQL_SPECIAL_CHARACTERS'              -- IMPLEMENTATION_INFO_NAME          
     , NULL                                  -- INTEGER_VALUE
     , CHARACTER_VALUE                       -- CHARACTER_VALUE
     , NULL                                  -- COMMENTS
  FROM 
       DEFINITION_SCHEMA.SQL_IMPLEMENTATION_INFO
 WHERE
       IMPLEMENTATION_INFO_NAME = 'SPECIAL CHARACTERS'
)
UNION ALL
(
SELECT
      10003                                  -- IMPLEMENTATION_INFO_ID
     , 'SQL_CATALOG_NAME'                    -- IMPLEMENTATION_INFO_NAME          
     , NULL                                  -- INTEGER_VALUE
     , CHARACTER_VALUE                       -- CHARACTER_VALUE
     , NULL                                  -- COMMENTS
  FROM 
       DEFINITION_SCHEMA.SQL_IMPLEMENTATION_INFO
 WHERE
       IMPLEMENTATION_INFO_NAME = 'CATALOG NAME'
)
UNION ALL
(
SELECT
      10004                                  -- IMPLEMENTATION_INFO_ID
     , 'SQL_COLLATION_SEQ'                   -- IMPLEMENTATION_INFO_NAME          
     , NULL                                  -- INTEGER_VALUE
     , CHARACTER_VALUE                       -- CHARACTER_VALUE
     , NULL                                  -- COMMENTS
  FROM 
       DEFINITION_SCHEMA.SQL_IMPLEMENTATION_INFO
 WHERE
       IMPLEMENTATION_INFO_NAME = 'COLLATING SEQUENCE'
)
UNION ALL
(
SELECT
      30                                     -- IMPLEMENTATION_INFO_ID
     , 'SQL_MAX_COLUMN_NAME_LEN'             -- IMPLEMENTATION_INFO_NAME          
     , SUPPORTED_VALUE                       -- INTEGER_VALUE
     , NULL                                  -- CHARACTER_VALUE
     , NULL                                  -- COMMENTS
  FROM 
       DEFINITION_SCHEMA.SQL_SIZING
 WHERE
       SIZING_NAME = 'MAXIMUM COLUMN NAME LENGTH'
)
UNION ALL
(
SELECT
      31                                     -- IMPLEMENTATION_INFO_ID
     , 'SQL_MAX_CURSOR_NAME_LEN'             -- IMPLEMENTATION_INFO_NAME          
     , SUPPORTED_VALUE                       -- INTEGER_VALUE
     , NULL                                  -- CHARACTER_VALUE
     , NULL                                  -- COMMENTS
  FROM 
       DEFINITION_SCHEMA.SQL_SIZING
 WHERE
       SIZING_NAME = 'MAXIMUM CURSOR NAME LENGTH'
)
UNION ALL
(
SELECT
      32                                     -- IMPLEMENTATION_INFO_ID
     , 'SQL_MAX_SCHEMA_NAME_LEN'             -- IMPLEMENTATION_INFO_NAME          
     , SUPPORTED_VALUE                       -- INTEGER_VALUE
     , NULL                                  -- CHARACTER_VALUE
     , NULL                                  -- COMMENTS
  FROM 
       DEFINITION_SCHEMA.SQL_SIZING
 WHERE
       SIZING_NAME = 'MAXIMUM SCHEMA NAME LENGTH'
)
UNION ALL
(
SELECT
      34                                     -- IMPLEMENTATION_INFO_ID
     , 'SQL_MAX_CATALOG_NAME_LEN'            -- IMPLEMENTATION_INFO_NAME          
     , SUPPORTED_VALUE                       -- INTEGER_VALUE
     , NULL                                  -- CHARACTER_VALUE
     , NULL                                  -- COMMENTS
  FROM 
       DEFINITION_SCHEMA.SQL_SIZING
 WHERE
       SIZING_NAME = 'MAXIMUM CATALOG NAME LENGTH'
)
UNION ALL
(
SELECT
      35                                     -- IMPLEMENTATION_INFO_ID
     , 'SQL_MAX_TABLE_NAME_LEN'              -- IMPLEMENTATION_INFO_NAME          
     , SUPPORTED_VALUE                       -- INTEGER_VALUE
     , NULL                                  -- CHARACTER_VALUE
     , NULL                                  -- COMMENTS
  FROM 
       DEFINITION_SCHEMA.SQL_SIZING
 WHERE
       SIZING_NAME = 'MAXIMUM TABLE NAME LENGTH'
)
UNION ALL
(
SELECT
      97                                     -- IMPLEMENTATION_INFO_ID
     , 'SQL_MAX_COLUMNS_IN_GROUP_BY'         -- IMPLEMENTATION_INFO_NAME          
     , SUPPORTED_VALUE                       -- INTEGER_VALUE
     , NULL                                  -- CHARACTER_VALUE
     , NULL                                  -- COMMENTS
  FROM 
       DEFINITION_SCHEMA.SQL_SIZING
 WHERE
       SIZING_NAME = 'MAXIMUM COLUMNS IN GROUP BY'
)
UNION ALL
(
SELECT
      99                                     -- IMPLEMENTATION_INFO_ID
     , 'SQL_MAX_COLUMNS_IN_ORDER_BY'         -- IMPLEMENTATION_INFO_NAME          
     , SUPPORTED_VALUE                       -- INTEGER_VALUE
     , NULL                                  -- CHARACTER_VALUE
     , NULL                                  -- COMMENTS
  FROM 
       DEFINITION_SCHEMA.SQL_SIZING
 WHERE
       SIZING_NAME = 'MAXIMUM COLUMNS IN ORDER BY'
)
UNION ALL
(
SELECT
      100                                    -- IMPLEMENTATION_INFO_ID
     , 'SQL_MAX_COLUMNS_IN_SELECT'           -- IMPLEMENTATION_INFO_NAME          
     , SUPPORTED_VALUE                       -- INTEGER_VALUE
     , NULL                                  -- CHARACTER_VALUE
     , NULL                                  -- COMMENTS
  FROM 
       DEFINITION_SCHEMA.SQL_SIZING
 WHERE
       SIZING_NAME = 'MAXIMUM COLUMNS IN SELECT'
)
UNION ALL
(
SELECT
      101                                    -- IMPLEMENTATION_INFO_ID
     , 'SQL_MAX_COLUMNS_IN_TABLE'            -- IMPLEMENTATION_INFO_NAME          
     , SUPPORTED_VALUE                       -- INTEGER_VALUE
     , NULL                                  -- CHARACTER_VALUE
     , NULL                                  -- COMMENTS
  FROM 
       DEFINITION_SCHEMA.SQL_SIZING
 WHERE
       SIZING_NAME = 'MAXIMUM COLUMNS IN TABLE'
)
UNION ALL
(
SELECT
      106                                    -- IMPLEMENTATION_INFO_ID
     , 'SQL_MAX_TABLES_IN_SELECT'            -- IMPLEMENTATION_INFO_NAME          
     , SUPPORTED_VALUE                       -- INTEGER_VALUE
     , NULL                                  -- CHARACTER_VALUE
     , NULL                                  -- COMMENTS
  FROM 
       DEFINITION_SCHEMA.SQL_SIZING
 WHERE
       SIZING_NAME = 'MAXIMUM TABLES IN SELECT'
)
UNION ALL
(
SELECT
      107                                    -- IMPLEMENTATION_INFO_ID
     , 'SQL_MAX_USER_NAME_LEN'               -- IMPLEMENTATION_INFO_NAME          
     , SUPPORTED_VALUE                       -- INTEGER_VALUE
     , NULL                                  -- CHARACTER_VALUE
     , NULL                                  -- COMMENTS
  FROM 
       DEFINITION_SCHEMA.SQL_SIZING
 WHERE
       SIZING_NAME = 'MAXIMUM USER NAME LENGTH'
)
UNION ALL
(
SELECT
      10005                                  -- IMPLEMENTATION_INFO_ID
     , 'SQL_MAX_IDENTIFIER_LEN'              -- IMPLEMENTATION_INFO_NAME          
     , SUPPORTED_VALUE                       -- INTEGER_VALUE
     , NULL                                  -- CHARACTER_VALUE
     , NULL                                  -- COMMENTS
  FROM 
       DEFINITION_SCHEMA.SQL_SIZING
 WHERE
       SIZING_NAME = 'MAXIMUM IDENTIFIER LENGTH'
)
;

View created.

Elapsed time: 1.78900 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.IMPLEMENTATION_INFO
        IS 'IMPLEMENTATION_INFO contains information about various aspects that are left implementation-defined.';

Comment created.

Elapsed time: 0.14600 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.IMPLEMENTATION_INFO.IMPLEMENTATION_INFO_ID
        IS 'identifier of the implementation item';

Comment created.

Elapsed time: 0.15800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.IMPLEMENTATION_INFO.IMPLEMENTATION_INFO_NAME
        IS 'descriptive name of the implementation item';

Comment created.

Elapsed time: 0.15200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.IMPLEMENTATION_INFO.INTEGER_VALUE
        IS 'Value of the implementation item, or null if the value is contained in the column CHARACTER_VALUE';

Comment created.

Elapsed time: 0.14100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.IMPLEMENTATION_INFO.CHARACTER_VALUE
        IS 'Value of the implementation item, or null if the value is contained in the column INTEGER_VALUE';

Comment created.

Elapsed time: 0.13900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.IMPLEMENTATION_INFO.COMMENTS
        IS 'possibly a comment pertaining to the implementation item';

Comment created.

Elapsed time: 0.15300 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.IMPLEMENTATION_INFO TO PUBLIC;

Grant succeeded.

Elapsed time: 0.12600 ms 


COMMIT;

Commit complete.

Elapsed time: 0.11300 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS IMPLEMENTATION_INFO;

Synonym dropped.

Elapsed time: 0.07000 ms 

CREATE PUBLIC SYNONYM IMPLEMENTATION_INFO FOR DICTIONARY_SCHEMA.IMPLEMENTATION_INFO;

Synonym created.

Elapsed time: 0.08300 ms 

COMMIT;

Commit complete.

Elapsed time: 0.03800 ms 


--##############################################################
--# DICTIONARY_SCHEMA.SUPPLEMENTAL_LOG_TABLE_INFO
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.SUPPLEMENTAL_LOG_TABLE_INFO;

View dropped.

Elapsed time: 0.76800 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.SUPPLEMENTAL_LOG_TABLE_INFO
(
    TABLE_SCHEMA,
    TABLE_NAME,
    SUPPLEMENTAL_LOG_DATA_PK   
)
AS
SELECT 
       sch.SCHEMA_NAME                        -- TABLE_SCHEMA 
     , tab.TABLE_NAME                         -- TABLE_NAME 
     , CASE WHEN tab.IS_SET_SUPPLOG_PK = TRUE 
            THEN CAST( 'EXPLICIT' AS VARCHAR(32 OCTETS) )
            ELSE CASE WHEN ( ( ( SELECT VALUE 
                                   FROM FIXED_TABLE_SCHEMA.X$PROPERTY
                                  WHERE PROPERTY_NAME = 'SUPPLEMENTAL_LOG_DATA_PRIMARY_KEY' ) = 'YES' )
                             AND 
                             ( ( SELECT COUNT(*)
                                   FROM DEFINITION_SCHEMA.TABLE_CONSTRAINTS tct
                                  WHERE tct.TABLE_ID = tab.TABLE_ID
                                    AND tct.CONSTRAINT_TYPE = 'PRIMARY KEY' ) = 1 ) )
                      THEN CAST( 'IMPLICIT' AS VARCHAR(32 OCTETS) )
                      ELSE CAST( 'NO' AS VARCHAR(32 OCTETS) )
                      END                     -- SUPPLEMENTAL_LOG_DATA_PK 
            END
  FROM
       DEFINITION_SCHEMA.TABLES           AS tab 
     , DEFINITION_SCHEMA.SCHEMATA         AS sch 
     , DEFINITION_SCHEMA.AUTHORIZATIONS   AS auth 
 WHERE
       tab.TABLE_TYPE IN ( 'BASE TABLE' )
   AND tab.SCHEMA_ID     = sch.SCHEMA_ID
   AND sch.OWNER_ID      = auth.AUTH_ID
   AND ( auth.AUTHORIZATION_NAME != '_SYSTEM' OR sch.SCHEMA_NAME = 'PUBLIC' )

 ORDER BY 
       tab.SCHEMA_ID
     , tab.TABLE_ID
;

View created.

Elapsed time: 0.97300 ms 

       

--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.SUPPLEMENTAL_LOG_TABLE_INFO
        IS 'SUPPLEMENTAL_LOG_TABLE_INFO describes table-level supplemental logging status.';

Comment created.

Elapsed time: 0.12600 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.SUPPLEMENTAL_LOG_TABLE_INFO.TABLE_SCHEMA
        IS 'Schema of the object';

Comment created.

Elapsed time: 0.14300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.SUPPLEMENTAL_LOG_TABLE_INFO.TABLE_NAME
        IS 'Name of the object';

Comment created.

Elapsed time: 0.13900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.SUPPLEMENTAL_LOG_TABLE_INFO.SUPPLEMENTAL_LOG_DATA_PK
        IS 'Status of table-level PRIMARY KEY COLUMNS supplemental logging: IMPLICIT, EXPLICIT, NO';

Comment created.

Elapsed time: 0.14100 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.SUPPLEMENTAL_LOG_TABLE_INFO TO PUBLIC;

Grant succeeded.

Elapsed time: 0.11500 ms 


COMMIT;

Commit complete.

Elapsed time: 0.09000 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS SUPPLEMENTAL_LOG_TABLE_INFO;

Synonym dropped.

Elapsed time: 0.07700 ms 

CREATE PUBLIC SYNONYM SUPPLEMENTAL_LOG_TABLE_INFO FOR DICTIONARY_SCHEMA.SUPPLEMENTAL_LOG_TABLE_INFO;

Synonym created.

Elapsed time: 0.09700 ms 

COMMIT;

Commit complete.

Elapsed time: 0.03800 ms 






--##############################################################
--# DICTIONARY_SCHEMA.DBA_PROCEDURES
--##############################################################


--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.DBA_PROCEDURES;

View dropped.

Elapsed time: 1.92200 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.DBA_PROCEDURES
(
    OWNER
  , SCHEMA_NAME
  , OBJECT_NAME
  , PROCEDURE_NAME
  , OBJECT_ID
  , SUBPROGRAM_ID
  , OVERLOAD
  , OBJECT_TYPE
  , AGGREGATE
  , PIPELINED
  , IMPLTYPEOWNER
  , IMPLTYPENAME
  , PARALLEL
  , INTERFACE
  , DETERMINISTIC
  , AUTHID
  , COMMENTS
)
AS
SELECT 
        auth.AUTHORIZATION_NAME                         -- OWNER
      , sch.SCHEMA_NAME                                 -- SCHEMA_NAME
      , rout.ROUTINE_NAME                               -- OBJECT_NAME
      , CAST( NULL AS VARCHAR(128 OCTETS) )             -- PROCEDURE_NAME
      , CAST( rout.SPECIFIC_ID AS NUMBER )              -- OBJECT_ID
      , CAST( 1 AS NUMBER )                             -- SUBPROGRAM_ID
      , CAST( NULL AS VARCHAR(32 OCTETS) )              -- OVERLOAD
      , CAST( rout.ROUTINE_TYPE AS VARCHAR(32 OCTETS) ) -- OBJECT_TYPE
      , CAST( 'NO' AS VARCHAR(3 OCTETS) )               -- AGGREGATE
      , CAST( 'NO' AS VARCHAR(3 OCTETS) )               -- PIPELINED
      , CAST( NULL AS VARCHAR(128 OCTETS) )             -- IMPLTYPEOWNER
      , CAST( NULL AS VARCHAR(128 OCTETS) )             -- IMPLTYPENAME
      , CAST( 'NO' AS VARCHAR(3 OCTETS) )               -- PARALLEL
      , CAST( 'NO' AS VARCHAR(3 OCTETS) )               -- INTERFACE
      , CAST( CASE rout.IS_DETERMINISTIC                -- DETERMINISTIC
              WHEN TRUE THEN 'YES' 
              ELSE 'NO' END 
              AS VARCHAR(3 OCTETS) )
      , CAST(rout.SECURITY_TYPE AS VARCHAR(32 OCTETS) ) -- AUTHID
      , rout.COMMENTS                                   -- COMMENTS
FROM 
        DEFINITION_SCHEMA.SCHEMATA sch
      , DEFINITION_SCHEMA.AUTHORIZATIONS auth
      , DEFINITION_SCHEMA.ROUTINES rout
WHERE
      auth.AUTH_ID   = rout.ROUTINE_OWNER_ID
  AND sch.SCHEMA_ID  = rout.ROUTINE_SCHEMA_ID
  AND EXISTS ( SELECT GRANTEE_ID  
                 FROM DEFINITION_SCHEMA.DATABASE_PRIVILEGES pvdba 
                WHERE pvdba.PRIVILEGE_TYPE IN ( 'ACCESS CONTROL' ) 
                  AND ( pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS audba 
                                                WHERE audba.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                             ) 
                      -- OR  
                      -- pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                      --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                       )  
               );

View created.

Elapsed time: 2.16000 ms 

 


--#####################
--# comment view
--#####################
COMMENT ON TABLE DICTIONARY_SCHEMA.DBA_PROCEDURES
        IS 'DBA_PROCEDURES lists all function, procedures or pacakage';

Comment created.

Elapsed time: 0.12600 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_PROCEDURES.OWNER
        IS 'Owner of function, procedures or pacakage';

Comment created.

Elapsed time: 0.18200 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_PROCEDURES.SCHEMA_NAME
        IS 'Schema Name of function, procedures or package';

Comment created.

Elapsed time: 0.16500 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_PROCEDURES.OBJECT_NAME
        IS 'Name of function, procedures or pacakage';

Comment created.

Elapsed time: 0.15200 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_PROCEDURES.PROCEDURE_NAME
        IS 'Name when a procedures in pacakage';

Comment created.

Elapsed time: 0.13600 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_PROCEDURES.OBJECT_ID
        IS 'ID of a function, procedures or pacakage';

Comment created.

Elapsed time: 0.13500 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_PROCEDURES.SUBPROGRAM_ID
        IS 'ID of procedures in pacakage';

Comment created.

Elapsed time: 0.13600 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_PROCEDURES.OVERLOAD
        IS 'ID of overloading procedure in pacakage';

Comment created.

Elapsed time: 0.14500 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_PROCEDURES.OBJECT_TYPE
        IS 'Type of function, procedures or package';

Comment created.

Elapsed time: 0.13400 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_PROCEDURES.AGGREGATE
        IS 'Indicate whether the procedure is an aggreage function(YES) or not(NO)';

Comment created.

Elapsed time: 0.13400 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_PROCEDURES.PIPELINED
        IS 'Indicate whether the procedure is a pipelined table function(YES) or not(NO)';

Comment created.

Elapsed time: 0.13600 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_PROCEDURES.IMPLTYPEOWNER
        IS 'Name of the owner of the implementation type, if any';

Comment created.

Elapsed time: 0.14100 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_PROCEDURES.IMPLTYPENAME
        IS 'Name of the implementation type, if any';

Comment created.

Elapsed time: 0.14100 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_PROCEDURES.PIPELINED
        IS 'Indicate whether the procedure is a pipelined table function(YES) or not(NO)';

Comment created.

Elapsed time: 0.14100 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_PROCEDURES.PARALLEL
        IS 'Indicates whether the procedure or function is parallel-enabled (YES) or not (NO)';

Comment created.

Elapsed time: 0.13800 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_PROCEDURES.INTERFACE
        IS 'YES, if the procedure/function is a table function implemented using the SQLCLI interface; otherwise NO';

Comment created.

Elapsed time: 0.28800 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_PROCEDURES."DETERMINISTIC"
        IS 'YES, if the procedure/function is declared to be deterministic; otherwise NO';

Comment created.

Elapsed time: 0.13800 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_PROCEDURES.AUTHID
        IS 'Indicates whether the procedure/function is declared to execute as DEFINER or CURRENT_USER (invoker)';

Comment created.

Elapsed time: 0.20100 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_PROCEDURES.COMMENTS
        IS 'Comments of the procedure/function';

Comment created.

Elapsed time: 0.15000 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.DBA_PROCEDURES TO PUBLIC;

Grant succeeded.

Elapsed time: 0.11800 ms 


COMMIT;

Commit complete.

Elapsed time: 0.18300 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS DBA_PROCEDURES;

Synonym dropped.

Elapsed time: 0.08000 ms 

CREATE PUBLIC SYNONYM DBA_PROCEDURES FOR DICTIONARY_SCHEMA.DBA_PROCEDURES;

Synonym created.

Elapsed time: 0.10700 ms 

COMMIT;

Commit complete.

Elapsed time: 0.04000 ms 




--##############################################################
--# DICTIONARY_SCHEMA.ALL_PROCEDURES
--##############################################################


--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.ALL_PROCEDURES;

View dropped.

Elapsed time: 1.80200 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.ALL_PROCEDURES
(
    OWNER
  , SCHEMA_NAME
  , OBJECT_NAME
  , PROCEDURE_NAME
  , OBJECT_ID
  , SUBPROGRAM_ID
  , OVERLOAD
  , OBJECT_TYPE
  , AGGREGATE
  , PIPELINED
  , IMPLTYPEOWNER
  , IMPLTYPENAME
  , PARALLEL
  , INTERFACE
  , DETERMINISTIC
  , AUTHID
  , COMMENTS
)
AS
SELECT 
        auth.AUTHORIZATION_NAME                         -- OWNER
      , sch.SCHEMA_NAME                                 -- SCHEMA_NAME
      , rout.ROUTINE_NAME                               -- OBJECT_NAME
      , CAST( NULL AS VARCHAR(128 OCTETS) )             -- PROCEDURE_NAME
      , CAST( rout.SPECIFIC_ID AS NUMBER )              -- OBJECT_ID
      , CAST( 1 AS NUMBER )                             -- SUBPROGRAM_ID
      , CAST( NULL AS VARCHAR(32 OCTETS) )              -- OVERLOAD
      , CAST( rout.ROUTINE_TYPE AS VARCHAR(32 OCTETS) ) -- OBJECT_TYPE
      , CAST( 'NO' AS VARCHAR(3 OCTETS) )               -- AGGREGATE
      , CAST( 'NO' AS VARCHAR(3 OCTETS) )               -- PIPELINED
      , CAST( NULL AS VARCHAR(128 OCTETS) )             -- IMPLTYPEOWNER
      , CAST( NULL AS VARCHAR(128 OCTETS) )             -- IMPLTYPENAME
      , CAST( 'NO' AS VARCHAR(3 OCTETS) )               -- PARALLEL
      , CAST( 'NO' AS VARCHAR(3 OCTETS) )               -- INTERFACE
      , CAST( CASE rout.IS_DETERMINISTIC                -- DETERMINISTIC
              WHEN TRUE THEN 'YES' 
              ELSE 'NO' END 
              AS VARCHAR(3 OCTETS) )
      , CAST(rout.SECURITY_TYPE AS VARCHAR(32 OCTETS) ) -- AUTHID
      , rout.COMMENTS                                   -- COMMENTS
FROM 
        DEFINITION_SCHEMA.SCHEMATA sch
      , DEFINITION_SCHEMA.AUTHORIZATIONS auth
      , DEFINITION_SCHEMA.ROUTINES rout
WHERE
      auth.AUTH_ID   = rout.ROUTINE_OWNER_ID
  AND sch.SCHEMA_ID  = rout.ROUTINE_SCHEMA_ID
  AND ( rout.SPECIFIC_ID IN ( SELECT pvcol.SPECIFIC_ID
                                FROM DEFINITION_SCHEMA.ROUTINE_PRIVILEGES AS pvcol
                               WHERE ( pvcol.GRANTEE_ID IN ( SELECT AUTH_ID
                                                               FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS aucol
                                                              WHERE aucol.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )
                                                           )
                                  -- OR  
                                  -- pvcol.GRANTEE_ID IN ( SELECT AUTH_ID 
                                  --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                   )
                          )
         OR
         rout.SPECIFIC_SCHEMA_ID IN ( SELECT pvsch.SCHEMA_ID
                                        FROM DEFINITION_SCHEMA.SCHEMA_PRIVILEGES AS pvsch
                                       WHERE pvsch.PRIVILEGE_TYPE IN ( 'CONTROL SCHEMA', 'ALTER PROCEDURE', 'DROP PROCEDURE', 
                                                                       'EXECUTE PROCEDURE' 
                                                                     )
                                         AND ( pvsch.GRANTEE_ID IN ( SELECT AUTH_ID
                                                                       FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS ausch
                                                                      WHERE ausch.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )
                                                                   )
                                            -- OR  
                                            -- pvsch.GRANTEE_ID IN ( SELECT AUTH_ID 
                                            --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                             )
                                    )
         OR
         EXISTS ( SELECT GRANTEE_ID
                    FROM DEFINITION_SCHEMA.DATABASE_PRIVILEGES pvdba
                   WHERE pvdba.PRIVILEGE_TYPE IN ( 'ALTER ANY PROCEDURE', 'DROP ANY PROCEDURE', 'EXECUTE ANY PROCEDURE' )
                     AND ( pvdba.GRANTEE_ID IN ( SELECT AUTH_ID
                                                   FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS audba
                                                  WHERE audba.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )
                                                )
                        -- OR  
                        -- pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                        --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                         )
                )
       );

View created.

Elapsed time: 2.46500 ms 




--#####################
--# comment view
--#####################
COMMENT ON TABLE DICTIONARY_SCHEMA.ALL_PROCEDURES
        IS 'ALL_PROCEDURES lists all function, procedures or pacakage';

Comment created.

Elapsed time: 0.14600 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_PROCEDURES.OWNER
        IS 'Owner of function, procedures or pacakage';

Comment created.

Elapsed time: 0.15900 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_PROCEDURES.SCHEMA_NAME
        IS 'Schema Name of function, procedures or package';

Comment created.

Elapsed time: 0.14700 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_PROCEDURES.OBJECT_NAME
        IS 'Name of function, procedures or pacakage';

Comment created.

Elapsed time: 0.13800 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_PROCEDURES.PROCEDURE_NAME
        IS 'Name when a procedures in pacakage';

Comment created.

Elapsed time: 0.13700 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_PROCEDURES.OBJECT_ID
        IS 'ID of a function, procedures or pacakage';

Comment created.

Elapsed time: 0.16200 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_PROCEDURES.SUBPROGRAM_ID
        IS 'ID of procedures in pacakage';

Comment created.

Elapsed time: 0.14600 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_PROCEDURES.OVERLOAD
        IS 'ID of overloading procedure in pacakage';

Comment created.

Elapsed time: 0.19100 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_PROCEDURES.OBJECT_TYPE
        IS 'Type of function, procedures or package';

Comment created.

Elapsed time: 0.13400 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_PROCEDURES.AGGREGATE
        IS 'Indicate whether the procedure is an aggreage function(YES) or not(NO)';

Comment created.

Elapsed time: 0.13500 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_PROCEDURES.PIPELINED
        IS 'Indicate whether the procedure is a pipelined table function(YES) or not(NO)';

Comment created.

Elapsed time: 0.16600 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_PROCEDURES.IMPLTYPEOWNER
        IS 'Name of the owner of the implementation type, if any';

Comment created.

Elapsed time: 0.16000 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_PROCEDURES.IMPLTYPENAME
        IS 'Name of the implementation type, if any';

Comment created.

Elapsed time: 0.13700 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_PROCEDURES.PIPELINED
        IS 'Indicate whether the procedure is a pipelined table function(YES) or not(NO)';

Comment created.

Elapsed time: 0.13900 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_PROCEDURES.PARALLEL
        IS 'Indicates whether the procedure or function is parallel-enabled (YES) or not (NO)';

Comment created.

Elapsed time: 0.13900 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_PROCEDURES.INTERFACE
        IS 'YES, if the procedure/function is a table function implemented using the SQLCLI interface; otherwise NO';

Comment created.

Elapsed time: 0.15000 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_PROCEDURES."DETERMINISTIC"
        IS 'YES, if the procedure/function is declared to be deterministic; otherwise NO';

Comment created.

Elapsed time: 0.14900 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_PROCEDURES.AUTHID
        IS 'Indicates whether the procedure/function is declared to execute as DEFINER or CURRENT_USER (invoker)';

Comment created.

Elapsed time: 0.14300 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_PROCEDURES.COMMENTS
        IS 'Comments of the procedure/function';

Comment created.

Elapsed time: 0.13400 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.ALL_PROCEDURES TO PUBLIC;

Grant succeeded.

Elapsed time: 0.12400 ms 


COMMIT;

Commit complete.

Elapsed time: 0.21900 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS ALL_PROCEDURES;

Synonym dropped.

Elapsed time: 0.08700 ms 

CREATE PUBLIC SYNONYM ALL_PROCEDURES FOR DICTIONARY_SCHEMA.ALL_PROCEDURES;

Synonym created.

Elapsed time: 0.08400 ms 

COMMIT;

Commit complete.

Elapsed time: 0.03700 ms 







--##############################################################
--# DICTIONARY_SCHEMA.USER_PROCEDURES
--##############################################################


--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.USER_PROCEDURES;

View dropped.

Elapsed time: 1.74100 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.USER_PROCEDURES
(
    SCHEMA_NAME
  , OBJECT_NAME
  , PROCEDURE_NAME
  , OBJECT_ID
  , SUBPROGRAM_ID
  , OVERLOAD
  , OBJECT_TYPE
  , AGGREGATE
  , PIPELINED
  , IMPLTYPEOWNER
  , IMPLTYPENAME
  , PARALLEL
  , INTERFACE
  , DETERMINISTIC
  , AUTHID
  , COMMENTS
)
AS
SELECT 
          SCHEMA_NAME
        , OBJECT_NAME
        , PROCEDURE_NAME
        , OBJECT_ID
        , SUBPROGRAM_ID
        , OVERLOAD
        , OBJECT_TYPE
        , AGGREGATE
        , PIPELINED
        , IMPLTYPEOWNER
        , IMPLTYPENAME
        , PARALLEL
        , INTERFACE
        , DETERMINISTIC
        , AUTHID
        , COMMENTS
FROM 
        DICTIONARY_SCHEMA.ALL_PROCEDURES
WHERE   OWNER = CURRENT_USER;

View created.

Elapsed time: 2.32000 ms 

 


--#####################
--# comment view
--#####################
COMMENT ON TABLE DICTIONARY_SCHEMA.USER_PROCEDURES
        IS 'USER_PROCEDURES lists all function, procedures or pacakage';

Comment created.

Elapsed time: 0.13700 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_PROCEDURES.SCHEMA_NAME
        IS 'Schema Name of function, procedures or package';

Comment created.

Elapsed time: 0.15900 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_PROCEDURES.OBJECT_NAME
        IS 'Name of function, procedures or pacakage';

Comment created.

Elapsed time: 0.13900 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_PROCEDURES.PROCEDURE_NAME
        IS 'Name when a procedures in pacakage';

Comment created.

Elapsed time: 0.13700 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_PROCEDURES.OBJECT_ID
        IS 'ID of a function, procedures or pacakage';

Comment created.

Elapsed time: 0.14300 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_PROCEDURES.SUBPROGRAM_ID
        IS 'ID of procedures in pacakage';

Comment created.

Elapsed time: 0.13800 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_PROCEDURES.OVERLOAD
        IS 'ID of overloading procedure in pacakage';

Comment created.

Elapsed time: 0.13400 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_PROCEDURES.OBJECT_TYPE
        IS 'Type of function, procedures or package';

Comment created.

Elapsed time: 0.13600 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_PROCEDURES.AGGREGATE
        IS 'Indicate whether the procedure is an aggreage function(YES) or not(NO)';

Comment created.

Elapsed time: 0.14100 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_PROCEDURES.PIPELINED
        IS 'Indicate whether the procedure is a pipelined table function(YES) or not(NO)';

Comment created.

Elapsed time: 0.13400 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_PROCEDURES.IMPLTYPEOWNER
        IS 'Name of the owner of the implementation type, if any';

Comment created.

Elapsed time: 0.16700 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_PROCEDURES.IMPLTYPENAME
        IS 'Name of the implementation type, if any';

Comment created.

Elapsed time: 0.13600 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_PROCEDURES.PIPELINED
        IS 'Indicate whether the procedure is a pipelined table function(YES) or not(NO)';

Comment created.

Elapsed time: 0.13800 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_PROCEDURES.PARALLEL
        IS 'Indicates whether the procedure or function is parallel-enabled (YES) or not (NO)';

Comment created.

Elapsed time: 0.14600 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_PROCEDURES.INTERFACE
        IS 'YES, if the procedure/function is a table function implemented using the SQLCLI interface; otherwise NO';

Comment created.

Elapsed time: 0.16100 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_PROCEDURES."DETERMINISTIC"
        IS 'YES, if the procedure/function is declared to be deterministic; otherwise NO';

Comment created.

Elapsed time: 0.16800 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_PROCEDURES.AUTHID
        IS 'Indicates whether the procedure/function is declared to execute as DEFINER or CURRENT_USER (invoker)';

Comment created.

Elapsed time: 0.15400 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_PROCEDURES.COMMENTS
        IS 'Comments of the procedure/function';

Comment created.

Elapsed time: 0.13900 ms 



--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.USER_PROCEDURES TO PUBLIC;

Grant succeeded.

Elapsed time: 0.12600 ms 


COMMIT;

Commit complete.

Elapsed time: 0.27800 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS USER_PROCEDURES;

Synonym dropped.

Elapsed time: 0.07700 ms 

CREATE PUBLIC SYNONYM USER_PROCEDURES FOR DICTIONARY_SCHEMA.USER_PROCEDURES;

Synonym created.

Elapsed time: 0.09500 ms 

COMMIT;

Commit complete.

Elapsed time: 0.04700 ms 





--##############################################################
--# DICTIONARY_SCHEMA.DBA_ARGUMENTS
--##############################################################


--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.DBA_ARGUMENTS;

View dropped.

Elapsed time: 2.84500 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.DBA_ARGUMENTS
(
    OWNER
  , SCHEMA_NAME
  , OBJECT_NAME
  , PACKAGE_NAME
  , OBJECT_ID
  , SUBPROGRAM_ID
  , ARGUMENT_NAME
  , POSITION
  , SEQUENCE
  , DATA_LEVEL
  , DATA_TYPE
  , DEFAULTED
  , DEFAULT_VALUE
  , DEFAULT_LENGTH
  , IN_OUT
  , DATA_LENGTH
  , DATA_PRECISION
  , DATA_SCALE
  , RADIX
  , CHARACTER_SET_NAME
  , TYPE_OWNER
  , TYPE_NAME
  , TYPE_SUBNAME
  , TYPE_LINK
  , PLS_TYPE
  , CHAR_LENGTH
  , CHAR_USED
  , ORIGIN_CON_ID
)
AS
SELECT 
        auth1.AUTHORIZATION_NAME                        -- OWNER
      , sch1.SCHEMA_NAME                                -- SCHEMA_NAME
      , rtn1.SPECIFIC_NAME                              -- OBJECT_NAME
      , CAST( NULL AS VARCHAR(128 OCTETS) )             -- PACKAGE_NAME
      , CAST( rtn1.SPECIFIC_ID AS NUMBER )              -- OBJECT_ID
      , CAST( 1 AS NUMBER )                             -- SUBPROGRAM_ID
      , par1.PARAMETER_NAME                             -- ARGUMENT_NAME
      , CAST( par1.ORDINAL_POSITION AS NUMBER )         -- POSITION
      , CASE WHEN par1.ORDINAL_POSITION = 1 THEN 0
             ELSE( SELECT SUM( CASE WHEN dtd.ATTR_TYPE_TABLE_NAME IS NOT NULL AND dtd.ATTR_TYPE_COLUMN_NAME IS NULL
                                        THEN ( SELECT COUNT(*) 
                                                FROM DICTIONARY_SCHEMA.WHOLE_COLUMNS col,
                                                     DEFINITION_SCHEMA.SCHEMATA sch,
                                                     DICTIONARY_SCHEMA.WHOLE_TABLES tab 
                                               WHERE sch.SCHEMA_NAME = dtd.ATTR_TYPE_SCHEMA_NAME
                                                 AND tab.TABLE_NAME = dtd.ATTR_TYPE_TABLE_NAME
                                                 AND sch.SCHEMA_ID = col.SCHEMA_ID 
                                                 AND tab.TABLE_ID = col.TABLE_ID 
                                                 AND col.IS_UNUSED = FALSE )
                                   ELSE 0
                                   END ) AS FIELD_CNT
                     FROM DEFINITION_SCHEMA.ROUTINES             rtn,
                          DEFINITION_SCHEMA.PARAMETERS           par, 
                          DICTIONARY_SCHEMA.WHOLE_DTDS           dtd 
                    WHERE rtn.SPECIFIC_SCHEMA_ID = par.SPECIFIC_SCHEMA_ID
                      AND rtn.SPECIFIC_ID = par.SPECIFIC_ID
                      AND par.SPECIFIC_SCHEMA_ID = par1.SPECIFIC_SCHEMA_ID
                      AND par.SPECIFIC_ID = par1.SPECIFIC_ID
                      AND par.ORDINAL_POSITION < par1.ORDINAL_POSITION
                      AND par.DTD_IDENTIFIER = dtd.DTD_IDENTIFIER )
             END
        + par1.ORDINAL_POSITION                         -- SEQUENCE
      , 0                                               -- DATA_LEVEL
      , CAST( CASE WHEN dtd1.DATA_TYPE IN ( 'INTERVAL YEAR TO MONTH', 'INTERVAL DAY TO SECOND' )
                        THEN 'INTERVAL ' || dtd1.INTERVAL_TYPE 
                   WHEN ( dtd1.DATA_TYPE = 'NUMBER' AND dtd1.NUMERIC_PRECISION_RADIX = 2 )
                        THEN 'FLOAT'
                   ELSE dtd1.DATA_TYPE
                   END
              AS VARCHAR(128 OCTETS) )                  -- DATA_TYPE
      , CAST( NVL2(par1.PARAMETER_DEFAULT, 'Y', 'N') AS VARCHAR(1 OCTETS) ) -- DEFAULTED
      , NULL                                                                -- DEFAULT_VALUE
      , NULL                                                                -- DEFAULT_LENGTH
      , CAST( CASE par1.PARAMETER_MODE
                  WHEN 'INOUT' THEN 'IN/OUT'
                  ELSE par1.PARAMETER_MODE
                  END  AS VARCHAR(32 OCTETS) )          -- IN_OUT
      , CAST( dtd1.PHYSICAL_MAXIMUM_LENGTH AS NUMBER )  -- DATA_LENGTH
      , CAST( dtd1.NUMERIC_PRECISION AS NUMBER )        -- DATA_PRECISION
      , CAST( (CASE WHEN dtd1.NUMERIC_SCALE > 0 THEN dtd1.NUMERIC_SCALE
                    ELSE NULL END) AS NUMBER )          -- DATA_SCALE
      , CAST( dtd1.NUMERIC_PRECISION_RADIX AS NUMBER )  -- RADIX
      , CAST( NULL AS VARCHAR(128 OCTETS) )             -- CHARACTER_SET_NAME
      , CAST( NULL AS VARCHAR(128 OCTETS) )             -- TYPE_OWER
      , CAST( NULL AS VARCHAR(128 OCTETS) )             -- TYPE_NAME
      , CAST( NULL AS VARCHAR(128 OCTETS) )             -- TYPE_SUBNAME
      , CAST( NULL AS VARCHAR(128 OCTETS) )             -- TYPE_LINK
      , CAST( CASE WHEN dtd1.DATA_TYPE IN ( 'INTERVAL YEAR TO MONTH', 'INTERVAL DAY TO SECOND' )
                        THEN 'INTERVAL ' || dtd1.INTERVAL_TYPE 
                   WHEN ( dtd1.DATA_TYPE = 'NUMBER' AND dtd1.NUMERIC_PRECISION_RADIX = 2 )
                        THEN 'FLOAT'
                   ELSE dtd1.DATA_TYPE
                   END
              AS VARCHAR(128 OCTETS) )                  -- PLS_TYPE
      , CAST( dtd1.CHARACTER_MAXIMUM_LENGTH AS NUMBER ) -- CHAR_LENGTH
      , CAST( CASE dtd1.STRING_LENGTH_UNIT
                   WHEN 'CHARACTERS' THEN 'C'
                   WHEN 'OCTETS'     THEN 'B'
                   ELSE NULL
                   END
              AS VARCHAR(1 OCTETS) )                    -- CHAR_USED
      , CAST( '0' AS VARCHAR(256 OCTETS) )              -- ORIGIN_CON_ID
FROM 
        DEFINITION_SCHEMA.SCHEMATA        sch1
      , DEFINITION_SCHEMA.AUTHORIZATIONS  auth1
      , DEFINITION_SCHEMA.ROUTINES        rtn1
      , DEFINITION_SCHEMA.PARAMETERS      par1
      , DICTIONARY_SCHEMA.WHOLE_DTDS      dtd1
WHERE
      auth1.AUTH_ID   = rtn1.ROUTINE_OWNER_ID
  AND sch1.SCHEMA_ID  = rtn1.ROUTINE_SCHEMA_ID
  AND rtn1.SPECIFIC_ID = par1.SPECIFIC_ID
  AND par1.DTD_IDENTIFIER  = dtd1.DTD_IDENTIFIER
  AND dtd1.ATTR_TYPE_COLUMN_NAME IS NULL
  AND EXISTS ( SELECT GRANTEE_ID  
                 FROM DEFINITION_SCHEMA.DATABASE_PRIVILEGES pvdba 
                WHERE pvdba.PRIVILEGE_TYPE IN ( 'ACCESS CONTROL' ) 
                  AND ( pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS audba 
                                                WHERE audba.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                             ) 
                      -- OR  
                      -- pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                      --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                       )  
               )
UNION ALL
SELECT 
        auth1.AUTHORIZATION_NAME                        -- OWNER
      , sch1.SCHEMA_NAME                                -- SCHEMA_NAME
      , rtn1.SPECIFIC_NAME                              -- OBJECT_NAME
      , CAST( NULL AS VARCHAR(128 OCTETS) )             -- PACKAGE_NAME
      , CAST( rtn1.SPECIFIC_ID AS NUMBER )              -- OBJECT_ID
      , CAST( 1 AS NUMBER )                             -- SUBPROGRAM_ID
      , par1.PARAMETER_NAME                             -- ARGUMENT_NAME
      , CAST( par1.ORDINAL_POSITION AS NUMBER )         -- POSITION
      , CASE WHEN par1.ORDINAL_POSITION = 1 THEN 0
             ELSE( SELECT SUM( CASE WHEN dtd.ATTR_TYPE_TABLE_NAME IS NOT NULL AND dtd.ATTR_TYPE_COLUMN_NAME IS NULL
                                        THEN ( SELECT COUNT(*) 
                                                FROM DICTIONARY_SCHEMA.WHOLE_COLUMNS col,
                                                     DEFINITION_SCHEMA.SCHEMATA sch,
                                                     DICTIONARY_SCHEMA.WHOLE_TABLES tab 
                                               WHERE sch.SCHEMA_NAME = dtd.ATTR_TYPE_SCHEMA_NAME
                                                 AND tab.TABLE_NAME = dtd.ATTR_TYPE_TABLE_NAME
                                                 AND sch.SCHEMA_ID = col.SCHEMA_ID 
                                                 AND tab.TABLE_ID = col.TABLE_ID 
                                                 AND col.IS_UNUSED = FALSE )
                                   ELSE 0
                                   END ) AS FIELD_CNT
                     FROM DEFINITION_SCHEMA.ROUTINES             rtn,
                          DEFINITION_SCHEMA.PARAMETERS           par, 
                          DICTIONARY_SCHEMA.WHOLE_DTDS           dtd 
                    WHERE rtn.SPECIFIC_SCHEMA_ID = par.SPECIFIC_SCHEMA_ID
                      AND rtn.SPECIFIC_ID = par.SPECIFIC_ID
                      AND par.SPECIFIC_SCHEMA_ID = par1.SPECIFIC_SCHEMA_ID
                      AND par.SPECIFIC_ID = par1.SPECIFIC_ID
                      AND par.ORDINAL_POSITION < par1.ORDINAL_POSITION
                      AND par.DTD_IDENTIFIER = dtd.DTD_IDENTIFIER )
             END
        + par1.ORDINAL_POSITION                         -- SEQUENCE
      , 0                                               -- DATA_LEVEL
      , CAST( CASE WHEN dtd2.DATA_TYPE IN ( 'INTERVAL YEAR TO MONTH', 'INTERVAL DAY TO SECOND' )
                        THEN 'INTERVAL ' || dtd2.INTERVAL_TYPE 
                   WHEN ( dtd2.DATA_TYPE = 'NUMBER' AND dtd2.NUMERIC_PRECISION_RADIX = 2 )
                        THEN 'FLOAT'
                   ELSE dtd2.DATA_TYPE
                   END
              AS VARCHAR(128 OCTETS) )                  -- DATA_TYPE
      , CAST( NVL2(par1.PARAMETER_DEFAULT, 'Y', 'N') AS VARCHAR(1 OCTETS) ) -- DEFAULTED
      , NULL                                                                -- DEFAULT_VALUE
      , NULL                                                                -- DEFAULT_LENGTH
      , CAST( CASE par1.PARAMETER_MODE
                  WHEN 'INOUT' THEN 'IN/OUT'
                  ELSE par1.PARAMETER_MODE
                  END  AS VARCHAR(32 OCTETS) )            -- IN_OUT
      , CAST( dtd2.PHYSICAL_MAXIMUM_LENGTH AS NUMBER )  -- DATA_LENGTH
      , CAST( dtd2.NUMERIC_PRECISION AS NUMBER )        -- DATA_PRECISION
      , CAST( (CASE WHEN dtd2.NUMERIC_SCALE > 0 THEN dtd2.NUMERIC_SCALE
                    ELSE NULL END) AS NUMBER )            -- DATA_SCALE
      , CAST( dtd2.NUMERIC_PRECISION_RADIX AS NUMBER )  -- RADIX
      , CAST( NULL AS VARCHAR(128 OCTETS) )             -- CHARACTER_SET_NAME
      , CAST( NULL AS VARCHAR(128 OCTETS) )             -- TYPE_OWER
      , CAST( NULL AS VARCHAR(128 OCTETS) )             -- TYPE_NAME
      , CAST( NULL AS VARCHAR(128 OCTETS) )             -- TYPE_SUBNAME
      , CAST( NULL AS VARCHAR(128 OCTETS) )             -- TYPE_LINK
      , CAST( CASE WHEN dtd2.DATA_TYPE IN ( 'INTERVAL YEAR TO MONTH', 'INTERVAL DAY TO SECOND' )
                        THEN 'INTERVAL ' || dtd2.INTERVAL_TYPE 
                   WHEN ( dtd2.DATA_TYPE = 'NUMBER' AND dtd2.NUMERIC_PRECISION_RADIX = 2 )
                        THEN 'FLOAT'
                   ELSE dtd2.DATA_TYPE
                   END
              AS VARCHAR(128 OCTETS) )                  -- PLS_TYPE
      , CAST( dtd2.CHARACTER_MAXIMUM_LENGTH AS NUMBER ) -- CHAR_LENGTH
      , CAST( CASE dtd2.STRING_LENGTH_UNIT
                   WHEN 'CHARACTERS' THEN 'C'
                   WHEN 'OCTETS'     THEN 'B'
                   ELSE NULL
                   END
              AS VARCHAR(1 OCTETS) )                    -- CHAR_USED
      , CAST( '0' AS VARCHAR(256 OCTETS) )                -- ORIGIN_CON_ID
FROM 
        DEFINITION_SCHEMA.SCHEMATA        sch1
      , DEFINITION_SCHEMA.AUTHORIZATIONS  auth1
      , DEFINITION_SCHEMA.ROUTINES        rtn1
      , DEFINITION_SCHEMA.PARAMETERS      par1
      , DICTIONARY_SCHEMA.WHOLE_DTDS      dtd1
      , DEFINITION_SCHEMA.SCHEMATA        sch2
      , DICTIONARY_SCHEMA.WHOLE_TABLES    tab2
      , DICTIONARY_SCHEMA.WHOLE_COLUMNS   col2
      , DICTIONARY_SCHEMA.WHOLE_DTDS      dtd2
WHERE
      auth1.AUTH_ID   = rtn1.ROUTINE_OWNER_ID
  AND sch1.SCHEMA_ID  = rtn1.ROUTINE_SCHEMA_ID
  AND rtn1.SPECIFIC_ID = par1.SPECIFIC_ID
  AND par1.DTD_IDENTIFIER  = dtd1.DTD_IDENTIFIER
  AND dtd1.ATTR_TYPE_COLUMN_NAME IS NOT NULL
  AND sch2.SCHEMA_NAME = dtd1.ATTR_TYPE_SCHEMA_NAME
  AND tab2.TABLE_NAME = dtd1.ATTR_TYPE_TABLE_NAME
  AND col2.SCHEMA_ID = sch2.SCHEMA_ID
  AND col2.TABLE_ID = tab2.TABLE_ID
  AND col2.COLUMN_NAME = dtd1.ATTR_TYPE_COLUMN_NAME
  AND dtd2.DTD_IDENTIFIER = col2.DTD_IDENTIFIER
  AND EXISTS ( SELECT GRANTEE_ID  
                 FROM DEFINITION_SCHEMA.DATABASE_PRIVILEGES pvdba 
                WHERE pvdba.PRIVILEGE_TYPE IN ( 'ACCESS CONTROL' ) 
                  AND ( pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS audba 
                                                WHERE audba.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                             ) 
                      -- OR  
                      -- pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                      --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                       )  
               )

UNION ALL
SELECT 
        auth1.AUTHORIZATION_NAME                        -- OWNER
      , sch1.SCHEMA_NAME                                -- SCHEMA_NAME
      , rtn1.SPECIFIC_NAME                              -- OBJECT_NAME
      , CAST( NULL AS VARCHAR(128 OCTETS) )             -- PACKAGE_NAME
      , CAST( rtn1.SPECIFIC_ID AS NUMBER )              -- OBJECT_ID
      , CAST( 1 AS NUMBER )                             -- SUBPROGRAM_ID
      , col2.COLUMN_NAME                                -- ARGUMENT_NAME
      , CAST( col2.LOGICAL_ORDINAL_POSITION AS NUMBER ) -- POSITION
      , CASE WHEN par1.ORDINAL_POSITION = 1 THEN 0
             ELSE( SELECT SUM( CASE WHEN dtd.ATTR_TYPE_TABLE_NAME IS NOT NULL AND dtd.ATTR_TYPE_COLUMN_NAME IS NULL
                                        THEN ( SELECT COUNT(*)
                                                FROM DICTIONARY_SCHEMA.WHOLE_COLUMNS col,
                                                     DEFINITION_SCHEMA.SCHEMATA sch,
                                                     DICTIONARY_SCHEMA.WHOLE_TABLES tab
                                               WHERE sch.SCHEMA_NAME = dtd.ATTR_TYPE_SCHEMA_NAME
                                                 AND tab.TABLE_NAME = dtd.ATTR_TYPE_TABLE_NAME
                                                 AND sch.SCHEMA_ID = col.SCHEMA_ID
                                                 AND tab.TABLE_ID = col.TABLE_ID
                                                 AND col.IS_UNUSED = FALSE )
                                   ELSE 0
                                   END ) AS FIELD_CNT
                     FROM DEFINITION_SCHEMA.ROUTINES             rtn,
                          DEFINITION_SCHEMA.PARAMETERS           par,
                          DICTIONARY_SCHEMA.WHOLE_DTDS           dtd
                    WHERE rtn.SPECIFIC_SCHEMA_ID = par.SPECIFIC_SCHEMA_ID
                      AND rtn.SPECIFIC_ID = par.SPECIFIC_ID
                      AND par.SPECIFIC_SCHEMA_ID = par1.SPECIFIC_SCHEMA_ID
                      AND par.SPECIFIC_ID = par1.SPECIFIC_ID
                      AND par.ORDINAL_POSITION < par1.ORDINAL_POSITION
                      AND par.DTD_IDENTIFIER = dtd.DTD_IDENTIFIER )
             END
        + par1.ORDINAL_POSITION + col2.logical_ordinal_position  -- SEQUENCE
      , 1                                               -- DATA_LEVEL
      , CAST( CASE WHEN dtd2.DATA_TYPE IN ( 'INTERVAL YEAR TO MONTH', 'INTERVAL DAY TO SECOND' )
                        THEN 'INTERVAL ' || dtd2.INTERVAL_TYPE 
                   WHEN ( dtd2.DATA_TYPE = 'NUMBER' AND dtd2.NUMERIC_PRECISION_RADIX = 2 )
                        THEN 'FLOAT'
                   ELSE dtd2.DATA_TYPE
                   END
              AS VARCHAR(128 OCTETS) )                  -- DATA_TYPE
      , CAST( NVL2(par1.PARAMETER_DEFAULT, 'Y', 'N') AS VARCHAR(1 OCTETS) ) -- DEFAULTED
      , NULL                                                                -- DEFAULT_VALUE
      , NULL                                                                -- DEFAULT_LENGTH
      , CAST( CASE par1.PARAMETER_MODE
                  WHEN 'INOUT' THEN 'IN/OUT'
                  ELSE par1.PARAMETER_MODE
                  END  AS VARCHAR(32 OCTETS) )          -- IN_OUT
      , CAST( dtd2.PHYSICAL_MAXIMUM_LENGTH AS NUMBER )  -- DATA_LENGTH
      , CAST( dtd2.NUMERIC_PRECISION AS NUMBER )        -- DATA_PRECISION
      , CAST( (CASE WHEN dtd2.NUMERIC_SCALE > 0 THEN dtd2.NUMERIC_SCALE
                    ELSE NULL END) AS NUMBER )          -- DATA_SCALE
      , CAST( dtd2.NUMERIC_PRECISION_RADIX AS NUMBER )  -- RADIX
      , CAST( NULL AS VARCHAR(128 OCTETS) )             -- CHARACTER_SET_NAME
      , CAST( NULL AS VARCHAR(128 OCTETS) )             -- TYPE_OWER
      , CAST( NULL AS VARCHAR(128 OCTETS) )             -- TYPE_NAME
      , CAST( NULL AS VARCHAR(128 OCTETS) )             -- TYPE_SUBNAME
      , CAST( NULL AS VARCHAR(128 OCTETS) )             -- TYPE_LINK
      , CAST( CASE WHEN dtd2.DATA_TYPE IN ( 'INTERVAL YEAR TO MONTH', 'INTERVAL DAY TO SECOND' )
                        THEN 'INTERVAL ' || dtd2.INTERVAL_TYPE 
                   WHEN ( dtd2.DATA_TYPE = 'NUMBER' AND dtd2.NUMERIC_PRECISION_RADIX = 2 )
                        THEN 'FLOAT'
                   ELSE dtd2.DATA_TYPE
                   END
              AS VARCHAR(128 OCTETS) )                  -- PLS_TYPE
      , CAST( dtd2.CHARACTER_MAXIMUM_LENGTH AS NUMBER ) -- CHAR_LENGTH
      , CAST( CASE dtd2.STRING_LENGTH_UNIT
                   WHEN 'CHARACTERS' THEN 'C'
                   WHEN 'OCTETS'     THEN 'B'
                   ELSE NULL
                   END
              AS VARCHAR(1 OCTETS) )                    -- CHAR_USED
      , CAST( '0' AS VARCHAR(256 OCTETS) )                -- ORIGIN_CON_ID
FROM 
        DEFINITION_SCHEMA.SCHEMATA             sch1
      , DEFINITION_SCHEMA.AUTHORIZATIONS       auth1
      , DEFINITION_SCHEMA.ROUTINES             rtn1
      , DEFINITION_SCHEMA.PARAMETERS           par1
      , DICTIONARY_SCHEMA.WHOLE_DTDS           dtd1
      , DEFINITION_SCHEMA.SCHEMATA             sch2
      , DICTIONARY_SCHEMA.WHOLE_TABLES         tab2
      , DEFINITION_SCHEMA.COLUMNS              col2
      , DICTIONARY_SCHEMA.WHOLE_DTDS           dtd2
WHERE
      auth1.AUTH_ID   = rtn1.ROUTINE_OWNER_ID
  AND sch1.SCHEMA_ID  = rtn1.ROUTINE_SCHEMA_ID
  AND rtn1.SPECIFIC_ID = par1.SPECIFIC_ID
  AND par1.DTD_IDENTIFIER  = dtd1.DTD_IDENTIFIER
  AND dtd1.ATTR_TYPE_COLUMN_NAME IS NULL
  AND dtd1.ATTR_TYPE_TABLE_NAME IS NOT NULL
  AND sch2.SCHEMA_NAME = dtd1.ATTR_TYPE_SCHEMA_NAME
  AND tab2.TABLE_NAME = dtd1.ATTR_TYPE_TABLE_NAME
  AND col2.SCHEMA_ID = sch2.SCHEMA_ID 
  AND col2.TABLE_ID = tab2.TABLE_ID
  AND col2.IS_UNUSED = FALSE
  AND col2.DTD_IDENTIFIER  = dtd2.DTD_IDENTIFIER
  AND EXISTS ( SELECT GRANTEE_ID  
                 FROM DEFINITION_SCHEMA.DATABASE_PRIVILEGES pvdba 
                WHERE pvdba.PRIVILEGE_TYPE IN ( 'ACCESS CONTROL' ) 
                  AND ( pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS audba 
                                                WHERE audba.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                             ) 
                      -- OR  
                      -- pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                      --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                       )  
               )

;

View created.

Elapsed time: 9.09800 ms 


 


--#####################
--# comment view
--#####################
COMMENT ON TABLE DICTIONARY_SCHEMA.DBA_ARGUMENTS
        IS 'DBA_ARGUMENTS lists all arguments of functions, procedures';

Comment created.

Elapsed time: 0.15600 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_ARGUMENTS.OWNER
        IS 'Owner of function, procedures or pacakage';

Comment created.

Elapsed time: 0.16000 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_ARGUMENTS.SCHEMA_NAME
        IS 'Schema Name of function, procedures or package';

Comment created.

Elapsed time: 0.14800 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_ARGUMENTS.OBJECT_NAME
        IS 'Name of function, procedures';

Comment created.

Elapsed time: 0.13600 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_ARGUMENTS.PACKAGE_NAME
        IS 'Package Name of function, procedures';

Comment created.

Elapsed time: 0.14100 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_ARGUMENTS.OBJECT_ID
        IS 'ID of a function, procedures';

Comment created.

Elapsed time: 0.13600 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_ARGUMENTS.SUBPROGRAM_ID
        IS 'ID of procedures in pacakage';

Comment created.

Elapsed time: 0.13400 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_ARGUMENTS.ARGUMENT_NAME
        IS 'Name of argument or attribute name of record type argument';

Comment created.

Elapsed time: 0.13400 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_ARGUMENTS.POSITION
        IS 'Position of argument or position of attribute in record type';

Comment created.

Elapsed time: 0.13400 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_ARGUMENTS.SEQUENCE
        IS 'Sequential order of argument and its attributes';

Comment created.

Elapsed time: 0.13500 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_ARGUMENTS.DATA_LEVEL
        IS 'Nesting depth of the argument for composite types';

Comment created.

Elapsed time: 0.13600 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_ARGUMENTS.DATA_TYPE
        IS 'Data Type of the argument';

Comment created.

Elapsed time: 0.13200 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_ARGUMENTS.DEFAULTED
        IS 'Whether or not the argument is defaulted';

Comment created.

Elapsed time: 0.13800 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_ARGUMENTS.DEFAULT_VALUE
        IS 'Reserved for future use';

Comment created.

Elapsed time: 0.13300 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_ARGUMENTS.DEFAULT_LENGTH
        IS 'Reserved for future use';

Comment created.

Elapsed time: 0.13800 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_ARGUMENTS.IN_OUT
        IS 'Direction of the argument (IN, OUT, IN/OUT)';

Comment created.

Elapsed time: 0.15700 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_ARGUMENTS.DATA_LENGTH
        IS 'Length of the column(in bytes)';

Comment created.

Elapsed time: 0.15000 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_ARGUMENTS.DATA_PRECISION
        IS 'Length in decimal digits(NUMBER) or binary digits(FLOAT)';

Comment created.

Elapsed time: 0.13600 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_ARGUMENTS.DATA_SCALE
        IS 'Digits to the right of the decimal point in a number';

Comment created.

Elapsed time: 0.13500 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_ARGUMENTS.RADIX
        IS 'Argument radix for a number';

Comment created.

Elapsed time: 0.13800 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_ARGUMENTS.CHARACTER_SET_NAME
        IS 'Character set name for the argument';

Comment created.

Elapsed time: 0.13900 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_ARGUMENTS.TYPE_OWNER
        IS 'Owner of the type of the argument';

Comment created.

Elapsed time: 0.13600 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_ARGUMENTS.TYPE_NAME
        IS 'Name of the type of the argument';

Comment created.

Elapsed time: 0.13700 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_ARGUMENTS.TYPE_SUBNAME
        IS 'Name of the type of the argument declared in package ';

Comment created.

Elapsed time: 0.13400 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_ARGUMENTS.TYPE_LINK
        IS 'Name of the type of the argument declared in a remote package';

Comment created.

Elapsed time: 0.13300 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_ARGUMENTS.PLS_TYPE
        IS 'Name of the type of the argument at PSM';

Comment created.

Elapsed time: 0.13300 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_ARGUMENTS.CHAR_LENGTH
        IS 'Character limit for string datatypes';

Comment created.

Elapsed time: 0.13600 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_ARGUMENTS.CHAR_USED
        IS 'Whether the byte limit(B) or char limit(C) is official for the string';

Comment created.

Elapsed time: 0.13300 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_ARGUMENTS.ORIGIN_CON_ID
        IS 'ID of the container where the data originates';

Comment created.

Elapsed time: 0.13400 ms 





        
--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.DBA_ARGUMENTS TO PUBLIC;

Grant succeeded.

Elapsed time: 0.11800 ms 


COMMIT;

Commit complete.

Elapsed time: 0.28800 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS DBA_ARGUMENTS;

Synonym dropped.

Elapsed time: 0.07800 ms 

CREATE PUBLIC SYNONYM DBA_ARGUMENTS FOR DICTIONARY_SCHEMA.DBA_ARGUMENTS;

Synonym created.

Elapsed time: 0.08900 ms 

COMMIT;

Commit complete.

Elapsed time: 0.04900 ms 





--##############################################################
--# DICTIONARY_SCHEMA.ALL_ARGUMENTS
--##############################################################


--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.ALL_ARGUMENTS;

View dropped.

Elapsed time: 2.69100 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.ALL_ARGUMENTS
(
    OWNER
  , SCHEMA_NAME
  , OBJECT_NAME
  , PACKAGE_NAME
  , OBJECT_ID
  , SUBPROGRAM_ID
  , ARGUMENT_NAME
  , POSITION
  , SEQUENCE
  , DATA_LEVEL
  , DATA_TYPE
  , DEFAULTED
  , DEFAULT_VALUE
  , DEFAULT_LENGTH
  , IN_OUT
  , DATA_LENGTH
  , DATA_PRECISION
  , DATA_SCALE
  , RADIX
  , CHARACTER_SET_NAME
  , TYPE_OWNER
  , TYPE_NAME
  , TYPE_SUBNAME
  , TYPE_LINK
  , PLS_TYPE
  , CHAR_LENGTH
  , CHAR_USED
  , ORIGIN_CON_ID
)
AS
SELECT 
        auth1.AUTHORIZATION_NAME                        -- OWNER
      , sch1.SCHEMA_NAME                                -- SCHEMA_NAME
      , rtn1.SPECIFIC_NAME                              -- OBJECT_NAME
      , CAST( NULL AS VARCHAR(128 OCTETS) )             -- PACKAGE_NAME
      , CAST( rtn1.SPECIFIC_ID AS NUMBER )              -- OBJECT_ID
      , CAST( 1 AS NUMBER )                             -- SUBPROGRAM_ID
      , par1.PARAMETER_NAME                             -- ARGUMENT_NAME
      , CAST( par1.ORDINAL_POSITION AS NUMBER )         -- POSITION
      , CASE WHEN par1.ORDINAL_POSITION = 1 THEN 0
             ELSE( SELECT SUM( CASE WHEN dtd.ATTR_TYPE_TABLE_NAME IS NOT NULL AND dtd.ATTR_TYPE_COLUMN_NAME IS NULL
                                        THEN ( SELECT COUNT(*) 
                                                FROM DICTIONARY_SCHEMA.WHOLE_COLUMNS col,
                                                     DEFINITION_SCHEMA.SCHEMATA sch,
                                                     DICTIONARY_SCHEMA.WHOLE_TABLES tab 
                                               WHERE sch.SCHEMA_NAME = dtd.ATTR_TYPE_SCHEMA_NAME
                                                 AND tab.TABLE_NAME = dtd.ATTR_TYPE_TABLE_NAME
                                                 AND sch.SCHEMA_ID = col.SCHEMA_ID 
                                                 AND tab.TABLE_ID = col.TABLE_ID 
                                                 AND col.IS_UNUSED = FALSE )
                                   ELSE 0
                                   END ) AS FIELD_CNT
                     FROM DEFINITION_SCHEMA.ROUTINES             rtn,
                          DEFINITION_SCHEMA.PARAMETERS           par, 
                          DICTIONARY_SCHEMA.WHOLE_DTDS           dtd 
                    WHERE rtn.SPECIFIC_SCHEMA_ID = par.SPECIFIC_SCHEMA_ID
                      AND rtn.SPECIFIC_ID = par.SPECIFIC_ID
                      AND par.SPECIFIC_SCHEMA_ID = par1.SPECIFIC_SCHEMA_ID
                      AND par.SPECIFIC_ID = par1.SPECIFIC_ID
                      AND par.ORDINAL_POSITION < par1.ORDINAL_POSITION
                      AND par.DTD_IDENTIFIER = dtd.DTD_IDENTIFIER )
             END
        + par1.ORDINAL_POSITION                         -- SEQUENCE
      , 0                                               -- DATA_LEVEL
      , CAST( CASE WHEN dtd1.DATA_TYPE IN ( 'INTERVAL YEAR TO MONTH', 'INTERVAL DAY TO SECOND' )
                        THEN 'INTERVAL ' || dtd1.INTERVAL_TYPE 
                   WHEN ( dtd1.DATA_TYPE = 'NUMBER' AND dtd1.NUMERIC_PRECISION_RADIX = 2 )
                        THEN 'FLOAT'
                   ELSE dtd1.DATA_TYPE
                   END
              AS VARCHAR(128 OCTETS) )                  -- DATA_TYPE
      , CAST( NVL2(par1.PARAMETER_DEFAULT, 'Y', 'N') AS VARCHAR(1 OCTETS) ) -- DEFAULTED
      , NULL                                                                -- DEFAULT_VALUE
      , NULL                                                                -- DEFAULT_LENGTH
      , CAST( CASE par1.PARAMETER_MODE
                  WHEN 'INOUT' THEN 'IN/OUT'
                  ELSE par1.PARAMETER_MODE
                  END  AS VARCHAR(32 OCTETS) )          -- IN_OUT
      , CAST( dtd1.PHYSICAL_MAXIMUM_LENGTH AS NUMBER )  -- DATA_LENGTH
      , CAST( dtd1.NUMERIC_PRECISION AS NUMBER )        -- DATA_PRECISION
      , CAST( (CASE WHEN dtd1.NUMERIC_SCALE > 0 THEN dtd1.NUMERIC_SCALE
                    ELSE NULL END) AS NUMBER )          -- DATA_SCALE
      , CAST( dtd1.NUMERIC_PRECISION_RADIX AS NUMBER )  -- RADIX
      , CAST( NULL AS VARCHAR(128 OCTETS) )             -- CHARACTER_SET_NAME
      , CAST( NULL AS VARCHAR(128 OCTETS) )             -- TYPE_OWER
      , CAST( NULL AS VARCHAR(128 OCTETS) )             -- TYPE_NAME
      , CAST( NULL AS VARCHAR(128 OCTETS) )             -- TYPE_SUBNAME
      , CAST( NULL AS VARCHAR(128 OCTETS) )             -- TYPE_LINK
      , CAST( CASE WHEN dtd1.DATA_TYPE IN ( 'INTERVAL YEAR TO MONTH', 'INTERVAL DAY TO SECOND' )
                        THEN 'INTERVAL ' || dtd1.INTERVAL_TYPE 
                   WHEN ( dtd1.DATA_TYPE = 'NUMBER' AND dtd1.NUMERIC_PRECISION_RADIX = 2 )
                        THEN 'FLOAT'
                   ELSE dtd1.DATA_TYPE
                   END
              AS VARCHAR(128 OCTETS) )                  -- PLS_TYPE
      , CAST( dtd1.CHARACTER_MAXIMUM_LENGTH AS NUMBER ) -- CHAR_LENGTH
      , CAST( CASE dtd1.STRING_LENGTH_UNIT
                   WHEN 'CHARACTERS' THEN 'C'
                   WHEN 'OCTETS'     THEN 'B'
                   ELSE NULL
                   END
              AS VARCHAR(1 OCTETS) )                    -- CHAR_USED
      , CAST( '0' AS VARCHAR(256 OCTETS) )              -- ORIGIN_CON_ID
FROM 
        DEFINITION_SCHEMA.SCHEMATA        sch1
      , DEFINITION_SCHEMA.AUTHORIZATIONS  auth1
      , DEFINITION_SCHEMA.ROUTINES        rtn1
      , DEFINITION_SCHEMA.PARAMETERS      par1
      , DICTIONARY_SCHEMA.WHOLE_DTDS      dtd1
WHERE
      auth1.AUTH_ID   = rtn1.ROUTINE_OWNER_ID
  AND sch1.SCHEMA_ID  = rtn1.ROUTINE_SCHEMA_ID
  AND rtn1.SPECIFIC_ID = par1.SPECIFIC_ID
  AND par1.DTD_IDENTIFIER  = dtd1.DTD_IDENTIFIER
  AND dtd1.ATTR_TYPE_COLUMN_NAME IS NULL
  AND ( rtn1.SPECIFIC_ID IN ( SELECT pvcol.SPECIFIC_ID
                                FROM DEFINITION_SCHEMA.ROUTINE_PRIVILEGES AS pvcol
                               WHERE ( pvcol.GRANTEE_ID IN ( SELECT AUTH_ID
                                                               FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS aucol
                                                              WHERE aucol.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )
                                                           )
                                  -- OR  
                                  -- pvcol.GRANTEE_ID IN ( SELECT AUTH_ID 
                                  --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                   )
                          )
        OR
        rtn1.SPECIFIC_SCHEMA_ID IN ( SELECT pvsch.SCHEMA_ID
                                       FROM DEFINITION_SCHEMA.SCHEMA_PRIVILEGES AS pvsch
                                      WHERE pvsch.PRIVILEGE_TYPE IN ( 'CONTROL SCHEMA', 'ALTER PROCEDURE', 'DROP PROCEDURE', 
                                                                      'EXECUTE PROCEDURE' 
                                                                    )
                                        AND ( pvsch.GRANTEE_ID IN ( SELECT AUTH_ID
                                                                      FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS ausch
                                                                     WHERE ausch.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )
                                                                  )
                                           -- OR  
                                           -- pvsch.GRANTEE_ID IN ( SELECT AUTH_ID 
                                           --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                            )
                                   )
        OR
        EXISTS ( SELECT GRANTEE_ID
                   FROM DEFINITION_SCHEMA.DATABASE_PRIVILEGES pvdba
                  WHERE pvdba.PRIVILEGE_TYPE IN ( 'ALTER ANY PROCEDURE', 'DROP ANY PROCEDURE', 'EXECUTE ANY PROCEDURE' )
                    AND ( pvdba.GRANTEE_ID IN ( SELECT AUTH_ID
                                                  FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS audba
                                                 WHERE audba.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )
                                               )
                       -- OR  
                       -- pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                       --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                        )
               )
      )
UNION ALL
SELECT 
        auth1.AUTHORIZATION_NAME                        -- OWNER
      , sch1.SCHEMA_NAME                                -- SCHEMA_NAME
      , rtn1.SPECIFIC_NAME                              -- OBJECT_NAME
      , CAST( NULL AS VARCHAR(128 OCTETS) )             -- PACKAGE_NAME
      , CAST( rtn1.SPECIFIC_ID AS NUMBER )              -- OBJECT_ID
      , CAST( 1 AS NUMBER )                             -- SUBPROGRAM_ID
      , par1.PARAMETER_NAME                             -- ARGUMENT_NAME
      , CAST( par1.ORDINAL_POSITION AS NUMBER )         -- POSITION
      , CASE WHEN par1.ORDINAL_POSITION = 1 THEN 0
             ELSE( SELECT SUM( CASE WHEN dtd.ATTR_TYPE_TABLE_NAME IS NOT NULL AND dtd.ATTR_TYPE_COLUMN_NAME IS NULL
                                        THEN ( SELECT COUNT(*) 
                                                FROM DICTIONARY_SCHEMA.WHOLE_COLUMNS col,
                                                     DEFINITION_SCHEMA.SCHEMATA sch,
                                                     DICTIONARY_SCHEMA.WHOLE_TABLES tab 
                                               WHERE sch.SCHEMA_NAME = dtd.ATTR_TYPE_SCHEMA_NAME
                                                 AND tab.TABLE_NAME = dtd.ATTR_TYPE_TABLE_NAME
                                                 AND sch.SCHEMA_ID = col.SCHEMA_ID 
                                                 AND tab.TABLE_ID = col.TABLE_ID 
                                                 AND col.IS_UNUSED = FALSE )
                                   ELSE 0
                                   END ) AS FIELD_CNT
                     FROM DEFINITION_SCHEMA.ROUTINES             rtn,
                          DEFINITION_SCHEMA.PARAMETERS           par, 
                          DICTIONARY_SCHEMA.WHOLE_DTDS           dtd 
                    WHERE rtn.SPECIFIC_SCHEMA_ID = par.SPECIFIC_SCHEMA_ID
                      AND rtn.SPECIFIC_ID = par.SPECIFIC_ID
                      AND par.SPECIFIC_SCHEMA_ID = par1.SPECIFIC_SCHEMA_ID
                      AND par.SPECIFIC_ID = par1.SPECIFIC_ID
                      AND par.ORDINAL_POSITION < par1.ORDINAL_POSITION
                      AND par.DTD_IDENTIFIER = dtd.DTD_IDENTIFIER )
             END
        + par1.ORDINAL_POSITION                         -- SEQUENCE
      , 0                                               -- DATA_LEVEL
      , CAST( CASE WHEN dtd2.DATA_TYPE IN ( 'INTERVAL YEAR TO MONTH', 'INTERVAL DAY TO SECOND' )
                        THEN 'INTERVAL ' || dtd2.INTERVAL_TYPE 
                   WHEN ( dtd2.DATA_TYPE = 'NUMBER' AND dtd2.NUMERIC_PRECISION_RADIX = 2 )
                        THEN 'FLOAT'
                   ELSE dtd2.DATA_TYPE
                   END
              AS VARCHAR(128 OCTETS) )                  -- DATA_TYPE
      , CAST( NVL2(par1.PARAMETER_DEFAULT, 'Y', 'N') AS VARCHAR(1 OCTETS) ) -- DEFAULTED
      , NULL                                                                -- DEFAULT_VALUE
      , NULL                                                                -- DEFAULT_LENGTH
      , CAST( CASE par1.PARAMETER_MODE
                  WHEN 'INOUT' THEN 'IN/OUT'
                  ELSE par1.PARAMETER_MODE
                  END  AS VARCHAR(32 OCTETS) )            -- IN_OUT
      , CAST( dtd2.PHYSICAL_MAXIMUM_LENGTH AS NUMBER )  -- DATA_LENGTH
      , CAST( dtd2.NUMERIC_PRECISION AS NUMBER )        -- DATA_PRECISION
      , CAST( (CASE WHEN dtd2.NUMERIC_SCALE > 0 THEN dtd2.NUMERIC_SCALE
                    ELSE NULL END) AS NUMBER )            -- DATA_SCALE
      , CAST( dtd2.NUMERIC_PRECISION_RADIX AS NUMBER )  -- RADIX
      , CAST( NULL AS VARCHAR(128 OCTETS) )             -- CHARACTER_SET_NAME
      , CAST( NULL AS VARCHAR(128 OCTETS) )             -- TYPE_OWER
      , CAST( NULL AS VARCHAR(128 OCTETS) )             -- TYPE_NAME
      , CAST( NULL AS VARCHAR(128 OCTETS) )             -- TYPE_SUBNAME
      , CAST( NULL AS VARCHAR(128 OCTETS) )             -- TYPE_LINK
      , CAST( CASE WHEN dtd2.DATA_TYPE IN ( 'INTERVAL YEAR TO MONTH', 'INTERVAL DAY TO SECOND' )
                        THEN 'INTERVAL ' || dtd2.INTERVAL_TYPE 
                   WHEN ( dtd2.DATA_TYPE = 'NUMBER' AND dtd2.NUMERIC_PRECISION_RADIX = 2 )
                        THEN 'FLOAT'
                   ELSE dtd2.DATA_TYPE
                   END
              AS VARCHAR(128 OCTETS) )                  -- PLS_TYPE
      , CAST( dtd2.CHARACTER_MAXIMUM_LENGTH AS NUMBER ) -- CHAR_LENGTH
      , CAST( CASE dtd2.STRING_LENGTH_UNIT
                   WHEN 'CHARACTERS' THEN 'C'
                   WHEN 'OCTETS'     THEN 'B'
                   ELSE NULL
                   END
              AS VARCHAR(1 OCTETS) )                    -- CHAR_USED
      , CAST( '0' AS VARCHAR(256 OCTETS) )                -- ORIGIN_CON_ID
FROM 
        DEFINITION_SCHEMA.SCHEMATA        sch1
      , DEFINITION_SCHEMA.AUTHORIZATIONS  auth1
      , DEFINITION_SCHEMA.ROUTINES        rtn1
      , DEFINITION_SCHEMA.PARAMETERS      par1
      , DICTIONARY_SCHEMA.WHOLE_DTDS      dtd1
      , DEFINITION_SCHEMA.SCHEMATA        sch2
      , DICTIONARY_SCHEMA.WHOLE_TABLES    tab2
      , DICTIONARY_SCHEMA.WHOLE_COLUMNS   col2
      , DICTIONARY_SCHEMA.WHOLE_DTDS      dtd2
WHERE
      auth1.AUTH_ID   = rtn1.ROUTINE_OWNER_ID
  AND sch1.SCHEMA_ID  = rtn1.ROUTINE_SCHEMA_ID
  AND rtn1.SPECIFIC_ID = par1.SPECIFIC_ID
  AND par1.DTD_IDENTIFIER  = dtd1.DTD_IDENTIFIER
  AND dtd1.ATTR_TYPE_COLUMN_NAME IS NOT NULL
  AND sch2.SCHEMA_NAME = dtd1.ATTR_TYPE_SCHEMA_NAME
  AND tab2.TABLE_NAME = dtd1.ATTR_TYPE_TABLE_NAME
  AND col2.SCHEMA_ID = sch2.SCHEMA_ID
  AND col2.TABLE_ID = tab2.TABLE_ID
  AND col2.COLUMN_NAME = dtd1.ATTR_TYPE_COLUMN_NAME
  AND dtd2.DTD_IDENTIFIER = col2.DTD_IDENTIFIER
  AND ( rtn1.SPECIFIC_ID IN ( SELECT pvcol.SPECIFIC_ID
                                FROM DEFINITION_SCHEMA.ROUTINE_PRIVILEGES AS pvcol
                               WHERE ( pvcol.GRANTEE_ID IN ( SELECT AUTH_ID
                                                               FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS aucol
                                                              WHERE aucol.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )
                                                           )
                                  -- OR  
                                  -- pvcol.GRANTEE_ID IN ( SELECT AUTH_ID 
                                  --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                   )
                          )
        OR
        rtn1.SPECIFIC_SCHEMA_ID IN ( SELECT pvsch.SCHEMA_ID
                                       FROM DEFINITION_SCHEMA.SCHEMA_PRIVILEGES AS pvsch
                                      WHERE pvsch.PRIVILEGE_TYPE IN ( 'CONTROL SCHEMA', 'ALTER PROCEDURE', 'DROP PROCEDURE', 
                                                                      'EXECUTE PROCEDURE' 
                                                                    )
                                        AND ( pvsch.GRANTEE_ID IN ( SELECT AUTH_ID
                                                                      FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS ausch
                                                                     WHERE ausch.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )
                                                                  )
                                           -- OR  
                                           -- pvsch.GRANTEE_ID IN ( SELECT AUTH_ID 
                                           --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                            )
                                   )
        OR
        EXISTS ( SELECT GRANTEE_ID
                   FROM DEFINITION_SCHEMA.DATABASE_PRIVILEGES pvdba
                  WHERE pvdba.PRIVILEGE_TYPE IN ( 'ALTER ANY PROCEDURE', 'DROP ANY PROCEDURE', 'EXECUTE ANY PROCEDURE' )
                    AND ( pvdba.GRANTEE_ID IN ( SELECT AUTH_ID
                                                  FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS audba
                                                 WHERE audba.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )
                                               )
                       -- OR  
                       -- pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                       --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                        )
               )
      )
UNION ALL
SELECT 
        auth1.AUTHORIZATION_NAME                        -- OWNER
      , sch1.SCHEMA_NAME                                -- SCHEMA_NAME
      , rtn1.SPECIFIC_NAME                              -- OBJECT_NAME
      , CAST( NULL AS VARCHAR(128 OCTETS) )             -- PACKAGE_NAME
      , CAST( rtn1.SPECIFIC_ID AS NUMBER )              -- OBJECT_ID
      , CAST( 1 AS NUMBER )                             -- SUBPROGRAM_ID
      , col2.COLUMN_NAME                                -- ARGUMENT_NAME
      , CAST( col2.LOGICAL_ORDINAL_POSITION AS NUMBER ) -- POSITION
      , CASE WHEN par1.ORDINAL_POSITION = 1 THEN 0
             ELSE( SELECT SUM( CASE WHEN dtd.ATTR_TYPE_TABLE_NAME IS NOT NULL AND dtd.ATTR_TYPE_COLUMN_NAME IS NULL
                                        THEN ( SELECT COUNT(*)
                                                FROM DICTIONARY_SCHEMA.WHOLE_COLUMNS col,
                                                     DEFINITION_SCHEMA.SCHEMATA sch,
                                                     DICTIONARY_SCHEMA.WHOLE_TABLES tab
                                               WHERE sch.SCHEMA_NAME = dtd.ATTR_TYPE_SCHEMA_NAME
                                                 AND tab.TABLE_NAME = dtd.ATTR_TYPE_TABLE_NAME
                                                 AND sch.SCHEMA_ID = col.SCHEMA_ID
                                                 AND tab.TABLE_ID = col.TABLE_ID
                                                 AND col.IS_UNUSED = FALSE )
                                   ELSE 0
                                   END ) AS FIELD_CNT
                     FROM DEFINITION_SCHEMA.ROUTINES             rtn,
                          DEFINITION_SCHEMA.PARAMETERS           par,
                          DICTIONARY_SCHEMA.WHOLE_DTDS           dtd
                    WHERE rtn.SPECIFIC_SCHEMA_ID = par.SPECIFIC_SCHEMA_ID
                      AND rtn.SPECIFIC_ID = par.SPECIFIC_ID
                      AND par.SPECIFIC_SCHEMA_ID = par1.SPECIFIC_SCHEMA_ID
                      AND par.SPECIFIC_ID = par1.SPECIFIC_ID
                      AND par.ORDINAL_POSITION < par1.ORDINAL_POSITION
                      AND par.DTD_IDENTIFIER = dtd.DTD_IDENTIFIER )
             END
        + par1.ORDINAL_POSITION + col2.logical_ordinal_position  -- SEQUENCE
      , 1                                               -- DATA_LEVEL
      , CAST( CASE WHEN dtd2.DATA_TYPE IN ( 'INTERVAL YEAR TO MONTH', 'INTERVAL DAY TO SECOND' )
                        THEN 'INTERVAL ' || dtd2.INTERVAL_TYPE 
                   WHEN ( dtd2.DATA_TYPE = 'NUMBER' AND dtd2.NUMERIC_PRECISION_RADIX = 2 )
                        THEN 'FLOAT'
                   ELSE dtd2.DATA_TYPE
                   END
              AS VARCHAR(128 OCTETS) )                  -- DATA_TYPE
      , CAST( NVL2(par1.PARAMETER_DEFAULT, 'Y', 'N') AS VARCHAR(1 OCTETS) ) -- DEFAULTED
      , NULL                                                                -- DEFAULT_VALUE
      , NULL                                                                -- DEFAULT_LENGTH
      , CAST( CASE par1.PARAMETER_MODE
                  WHEN 'INOUT' THEN 'IN/OUT'
                  ELSE par1.PARAMETER_MODE
                  END  AS VARCHAR(32 OCTETS) )          -- IN_OUT
      , CAST( dtd2.PHYSICAL_MAXIMUM_LENGTH AS NUMBER )  -- DATA_LENGTH
      , CAST( dtd2.NUMERIC_PRECISION AS NUMBER )        -- DATA_PRECISION
      , CAST( (CASE WHEN dtd2.NUMERIC_SCALE > 0 THEN dtd2.NUMERIC_SCALE
                    ELSE NULL END) AS NUMBER )          -- DATA_SCALE
      , CAST( dtd2.NUMERIC_PRECISION_RADIX AS NUMBER )  -- RADIX
      , CAST( NULL AS VARCHAR(128 OCTETS) )             -- CHARACTER_SET_NAME
      , CAST( NULL AS VARCHAR(128 OCTETS) )             -- TYPE_OWER
      , CAST( NULL AS VARCHAR(128 OCTETS) )             -- TYPE_NAME
      , CAST( NULL AS VARCHAR(128 OCTETS) )             -- TYPE_SUBNAME
      , CAST( NULL AS VARCHAR(128 OCTETS) )             -- TYPE_LINK
      , CAST( CASE WHEN dtd2.DATA_TYPE IN ( 'INTERVAL YEAR TO MONTH', 'INTERVAL DAY TO SECOND' )
                        THEN 'INTERVAL ' || dtd2.INTERVAL_TYPE 
                   WHEN ( dtd2.DATA_TYPE = 'NUMBER' AND dtd2.NUMERIC_PRECISION_RADIX = 2 )
                        THEN 'FLOAT'
                   ELSE dtd2.DATA_TYPE
                   END
              AS VARCHAR(128 OCTETS) )                  -- PLS_TYPE
      , CAST( dtd2.CHARACTER_MAXIMUM_LENGTH AS NUMBER ) -- CHAR_LENGTH
      , CAST( CASE dtd2.STRING_LENGTH_UNIT
                   WHEN 'CHARACTERS' THEN 'C'
                   WHEN 'OCTETS'     THEN 'B'
                   ELSE NULL
                   END
              AS VARCHAR(1 OCTETS) )                    -- CHAR_USED
      , CAST( '0' AS VARCHAR(256 OCTETS) )                -- ORIGIN_CON_ID
FROM 
        DEFINITION_SCHEMA.SCHEMATA             sch1
      , DEFINITION_SCHEMA.AUTHORIZATIONS       auth1
      , DEFINITION_SCHEMA.ROUTINES             rtn1
      , DEFINITION_SCHEMA.PARAMETERS           par1
      , DICTIONARY_SCHEMA.WHOLE_DTDS           dtd1
      , DEFINITION_SCHEMA.SCHEMATA             sch2
      , DICTIONARY_SCHEMA.WHOLE_TABLES         tab2
      , DEFINITION_SCHEMA.COLUMNS              col2
      , DICTIONARY_SCHEMA.WHOLE_DTDS           dtd2
WHERE
      auth1.AUTH_ID   = rtn1.ROUTINE_OWNER_ID
  AND sch1.SCHEMA_ID  = rtn1.ROUTINE_SCHEMA_ID
  AND rtn1.SPECIFIC_ID = par1.SPECIFIC_ID
  AND par1.DTD_IDENTIFIER  = dtd1.DTD_IDENTIFIER
  AND dtd1.ATTR_TYPE_COLUMN_NAME IS NULL
  AND dtd1.ATTR_TYPE_TABLE_NAME IS NOT NULL
  AND sch2.SCHEMA_NAME = dtd1.ATTR_TYPE_SCHEMA_NAME
  AND tab2.TABLE_NAME = dtd1.ATTR_TYPE_TABLE_NAME
  AND col2.SCHEMA_ID = sch2.SCHEMA_ID 
  AND col2.TABLE_ID = tab2.TABLE_ID
  AND col2.IS_UNUSED = FALSE
  AND col2.DTD_IDENTIFIER  = dtd2.DTD_IDENTIFIER
  AND ( rtn1.SPECIFIC_ID IN ( SELECT pvcol.SPECIFIC_ID
                                FROM DEFINITION_SCHEMA.ROUTINE_PRIVILEGES AS pvcol
                               WHERE ( pvcol.GRANTEE_ID IN ( SELECT AUTH_ID
                                                               FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS aucol
                                                              WHERE aucol.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )
                                                           )
                                  -- OR  
                                  -- pvcol.GRANTEE_ID IN ( SELECT AUTH_ID 
                                  --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                   )
                          )
        OR
        rtn1.SPECIFIC_SCHEMA_ID IN ( SELECT pvsch.SCHEMA_ID
                                       FROM DEFINITION_SCHEMA.SCHEMA_PRIVILEGES AS pvsch
                                      WHERE pvsch.PRIVILEGE_TYPE IN ( 'CONTROL SCHEMA', 'ALTER PROCEDURE', 'DROP PROCEDURE', 
                                                                      'EXECUTE PROCEDURE' 
                                                                    )
                                        AND ( pvsch.GRANTEE_ID IN ( SELECT AUTH_ID
                                                                      FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS ausch
                                                                     WHERE ausch.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )
                                                                  )
                                           -- OR  
                                           -- pvsch.GRANTEE_ID IN ( SELECT AUTH_ID 
                                           --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                            )
                                   )
        OR
        EXISTS ( SELECT GRANTEE_ID
                   FROM DEFINITION_SCHEMA.DATABASE_PRIVILEGES pvdba
                  WHERE pvdba.PRIVILEGE_TYPE IN ( 'ALTER ANY PROCEDURE', 'DROP ANY PROCEDURE', 'EXECUTE ANY PROCEDURE' )
                    AND ( pvdba.GRANTEE_ID IN ( SELECT AUTH_ID
                                                  FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS audba
                                                 WHERE audba.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )
                                               )
                       -- OR  
                       -- pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                       --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                        )
               )
      )
;

View created.

Elapsed time: 8.65900 ms 

 


--#####################
--# comment view
--#####################
COMMENT ON TABLE DICTIONARY_SCHEMA.ALL_ARGUMENTS
        IS 'ALL_ARGUMENTS lists all arguments of functions, procedures';

Comment created.

Elapsed time: 0.14500 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_ARGUMENTS.OWNER
        IS 'Owner of function, procedures or pacakage';

Comment created.

Elapsed time: 0.16000 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_ARGUMENTS.SCHEMA_NAME
        IS 'Schema Name of function, procedures or package';

Comment created.

Elapsed time: 0.15400 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_ARGUMENTS.OBJECT_NAME
        IS 'Name of function, procedures';

Comment created.

Elapsed time: 0.14900 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_ARGUMENTS.PACKAGE_NAME
        IS 'Package Name of function, procedures';

Comment created.

Elapsed time: 0.14000 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_ARGUMENTS.OBJECT_ID
        IS 'ID of a function, procedures';

Comment created.

Elapsed time: 0.14400 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_ARGUMENTS.SUBPROGRAM_ID
        IS 'ID of procedures in pacakage';

Comment created.

Elapsed time: 0.15200 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_ARGUMENTS.ARGUMENT_NAME
        IS 'Name of argument or attribute name of record type argument';

Comment created.

Elapsed time: 0.19000 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_ARGUMENTS.POSITION
        IS 'Position of argument or position of attribute in record type';

Comment created.

Elapsed time: 0.13700 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_ARGUMENTS.SEQUENCE
        IS 'Sequential order of argument and its attributes';

Comment created.

Elapsed time: 0.13700 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_ARGUMENTS.DATA_LEVEL
        IS 'Nesting depth of the argument for composite types';

Comment created.

Elapsed time: 0.14400 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_ARGUMENTS.DATA_TYPE
        IS 'Data Type of the argument';

Comment created.

Elapsed time: 0.13700 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_ARGUMENTS.DEFAULTED
        IS 'Whether or not the argument is defaulted';

Comment created.

Elapsed time: 0.13400 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_ARGUMENTS.DEFAULT_VALUE
        IS 'Reserved for future use';

Comment created.

Elapsed time: 0.15700 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_ARGUMENTS.DEFAULT_LENGTH
        IS 'Reserved for future use';

Comment created.

Elapsed time: 0.13500 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_ARGUMENTS.IN_OUT
        IS 'Direction of the argument (IN, OUT, IN/OUT)';

Comment created.

Elapsed time: 0.15500 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_ARGUMENTS.DATA_LENGTH
        IS 'Length of the column(in bytes)';

Comment created.

Elapsed time: 0.14400 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_ARGUMENTS.DATA_PRECISION
        IS 'Length in decimal digits(NUMBER) or binary digits(FLOAT)';

Comment created.

Elapsed time: 0.14600 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_ARGUMENTS.DATA_SCALE
        IS 'Digits to the right of the decimal point in a number';

Comment created.

Elapsed time: 0.13500 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_ARGUMENTS.RADIX
        IS 'Argument radix for a number';

Comment created.

Elapsed time: 0.17500 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_ARGUMENTS.CHARACTER_SET_NAME
        IS 'Character set name for the argument';

Comment created.

Elapsed time: 0.15100 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_ARGUMENTS.TYPE_OWNER
        IS 'Owner of the type of the argument';

Comment created.

Elapsed time: 0.15400 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_ARGUMENTS.TYPE_NAME
        IS 'Name of the type of the argument';

Comment created.

Elapsed time: 0.17400 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_ARGUMENTS.TYPE_SUBNAME
        IS 'Name of the type of the argument declared in package ';

Comment created.

Elapsed time: 0.13500 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_ARGUMENTS.TYPE_LINK
        IS 'Name of the type of the argument declared in a remote package';

Comment created.

Elapsed time: 0.14200 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_ARGUMENTS.PLS_TYPE
        IS 'Name of the type of the argument at PSM';

Comment created.

Elapsed time: 0.14300 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_ARGUMENTS.CHAR_LENGTH
        IS 'Character limit for string datatypes';

Comment created.

Elapsed time: 0.14400 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_ARGUMENTS.CHAR_USED
        IS 'Whether the byte limit(B) or char limit(C) is official for the string';

Comment created.

Elapsed time: 0.14400 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_ARGUMENTS.ORIGIN_CON_ID
        IS 'ID of the container where the data originates';

Comment created.

Elapsed time: 0.15100 ms 





        
--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.ALL_ARGUMENTS TO PUBLIC;

Grant succeeded.

Elapsed time: 0.11800 ms 


COMMIT;

Commit complete.

Elapsed time: 0.30000 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS ALL_ARGUMENTS;

Synonym dropped.

Elapsed time: 0.08600 ms 

CREATE PUBLIC SYNONYM ALL_ARGUMENTS FOR DICTIONARY_SCHEMA.ALL_ARGUMENTS;

Synonym created.

Elapsed time: 0.08300 ms 

COMMIT;

Commit complete.

Elapsed time: 0.03700 ms 





--##############################################################
--# DICTIONARY_SCHEMA.USER_ARGUMENTS
--##############################################################


--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.USER_ARGUMENTS;

View dropped.

Elapsed time: 2.56800 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.USER_ARGUMENTS
(
    SCHEMA_NAME
  , OBJECT_NAME
  , PACKAGE_NAME
  , OBJECT_ID
  , SUBPROGRAM_ID
  , ARGUMENT_NAME
  , POSITION
  , SEQUENCE
  , DATA_LEVEL
  , DATA_TYPE
  , DEFAULTED
  , DEFAULT_VALUE
  , DEFAULT_LENGTH
  , IN_OUT
  , DATA_LENGTH
  , DATA_PRECISION
  , DATA_SCALE
  , RADIX
  , CHARACTER_SET_NAME
  , TYPE_OWNER
  , TYPE_NAME
  , TYPE_SUBNAME
  , TYPE_LINK
  , PLS_TYPE
  , CHAR_LENGTH
  , CHAR_USED
  , ORIGIN_CON_ID
)
AS
SELECT 
    SCHEMA_NAME
  , OBJECT_NAME
  , PACKAGE_NAME
  , OBJECT_ID
  , SUBPROGRAM_ID
  , ARGUMENT_NAME
  , POSITION
  , SEQUENCE
  , DATA_LEVEL
  , DATA_TYPE
  , DEFAULTED
  , DEFAULT_VALUE
  , DEFAULT_LENGTH
  , IN_OUT
  , DATA_LENGTH
  , DATA_PRECISION
  , DATA_SCALE
  , RADIX
  , CHARACTER_SET_NAME
  , TYPE_OWNER
  , TYPE_NAME
  , TYPE_SUBNAME
  , TYPE_LINK
  , PLS_TYPE
  , CHAR_LENGTH
  , CHAR_USED
  , ORIGIN_CON_ID
FROM 
        DICTIONARY_SCHEMA.ALL_ARGUMENTS
WHERE   OWNER = CURRENT_USER;

View created.

Elapsed time: 8.14900 ms 



--#####################
--# comment view
--#####################
COMMENT ON TABLE DICTIONARY_SCHEMA.USER_ARGUMENTS
        IS 'USER_ARGUMENTS lists all arguments of functions, procedures';

Comment created.

Elapsed time: 0.12800 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_ARGUMENTS.SCHEMA_NAME
        IS 'Schema Name of function, procedures or package';

Comment created.

Elapsed time: 0.16000 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_ARGUMENTS.OBJECT_NAME
        IS 'Name of function, procedures';

Comment created.

Elapsed time: 0.15900 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_ARGUMENTS.PACKAGE_NAME
        IS 'Package Name of function, procedures';

Comment created.

Elapsed time: 0.17700 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_ARGUMENTS.OBJECT_ID
        IS 'ID of a function, procedures';

Comment created.

Elapsed time: 0.13900 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_ARGUMENTS.SUBPROGRAM_ID
        IS 'ID of procedures in pacakage';

Comment created.

Elapsed time: 0.15900 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_ARGUMENTS.ARGUMENT_NAME
        IS 'Name of argument or attribute name of record type argument';

Comment created.

Elapsed time: 0.15100 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_ARGUMENTS.POSITION
        IS 'Position of argument or position of attribute in record type';

Comment created.

Elapsed time: 0.15200 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_ARGUMENTS.SEQUENCE
        IS 'Sequential order of argument and its attributes';

Comment created.

Elapsed time: 0.13700 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_ARGUMENTS.DATA_LEVEL
        IS 'Nesting depth of the argument for composite types';

Comment created.

Elapsed time: 0.13400 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_ARGUMENTS.DATA_TYPE
        IS 'Data Type of the argument';

Comment created.

Elapsed time: 0.14200 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_ARGUMENTS.DEFAULTED
        IS 'Whether or not the argument is defaulted';

Comment created.

Elapsed time: 0.13600 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_ARGUMENTS.DEFAULT_VALUE
        IS 'Reserved for future use';

Comment created.

Elapsed time: 0.13400 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_ARGUMENTS.DEFAULT_LENGTH
        IS 'Reserved for future use';

Comment created.

Elapsed time: 0.15000 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_ARGUMENTS.IN_OUT
        IS 'Direction of the argument (IN, OUT, IN/OUT)';

Comment created.

Elapsed time: 0.14100 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_ARGUMENTS.DATA_LENGTH
        IS 'Length of the column(in bytes)';

Comment created.

Elapsed time: 0.13500 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_ARGUMENTS.DATA_PRECISION
        IS 'Length in decimal digits(NUMBER) or binary digits(FLOAT)';

Comment created.

Elapsed time: 0.14200 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_ARGUMENTS.DATA_SCALE
        IS 'Digits to the right of the decimal point in a number';

Comment created.

Elapsed time: 0.14300 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_ARGUMENTS.RADIX
        IS 'Argument radix for a number';

Comment created.

Elapsed time: 0.13500 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_ARGUMENTS.CHARACTER_SET_NAME
        IS 'Character set name for the argument';

Comment created.

Elapsed time: 0.13700 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_ARGUMENTS.TYPE_OWNER
        IS 'Owner of the type of the argument';

Comment created.

Elapsed time: 0.13500 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_ARGUMENTS.TYPE_NAME
        IS 'Name of the type of the argument';

Comment created.

Elapsed time: 0.16000 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_ARGUMENTS.TYPE_SUBNAME
        IS 'Name of the type of the argument declared in package ';

Comment created.

Elapsed time: 0.14500 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_ARGUMENTS.TYPE_LINK
        IS 'Name of the type of the argument declared in a remote package';

Comment created.

Elapsed time: 0.13400 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_ARGUMENTS.PLS_TYPE
        IS 'Name of the type of the argument at PSM';

Comment created.

Elapsed time: 0.14600 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_ARGUMENTS.CHAR_LENGTH
        IS 'Character limit for string datatypes';

Comment created.

Elapsed time: 0.15200 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_ARGUMENTS.CHAR_USED
        IS 'Whether the byte limit(B) or char limit(C) is official for the string';

Comment created.

Elapsed time: 0.20500 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_ARGUMENTS.ORIGIN_CON_ID
        IS 'ID of the container where the data originates';

Comment created.

Elapsed time: 0.13600 ms 






--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.USER_ARGUMENTS TO PUBLIC;

Grant succeeded.

Elapsed time: 0.11700 ms 


COMMIT;

Commit complete.

Elapsed time: 0.26300 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS USER_ARGUMENTS;

Synonym dropped.

Elapsed time: 0.07400 ms 

CREATE PUBLIC SYNONYM USER_ARGUMENTS FOR DICTIONARY_SCHEMA.USER_ARGUMENTS;

Synonym created.

Elapsed time: 0.09200 ms 

COMMIT;

Commit complete.

Elapsed time: 0.03800 ms 




--##############################################################
--# DICTIONARY_SCHEMA.DBA_SOURCE
--##############################################################


--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.DBA_SOURCE;

View dropped.

Elapsed time: 1.00300 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.DBA_SOURCE
(
    OWNER
  , SCHEMA_NAME
  , NAME
  , TYPE
  , LINE
  , TEXT
  , ORIGIN_CON_ID
)
AS
SELECT 
        auth.AUTHORIZATION_NAME                         -- OWNER
      , sch.SCHEMA_NAME                                 -- SCHEMA_NAME
      , rtn.ROUTINE_NAME                                -- OBJECT_NAME
      , CAST( rtn.ROUTINE_TYPE AS VARCHAR(32 OCTETS) )  -- TYPE
      , CAST( NULL AS NUMBER )                          -- LINE
      , rtn.ROUTINE_DEFINITION                          -- TEXT
      , CAST( '0' AS VARCHAR(256 OCTETS) )              -- ORIGIN_CON_ID
FROM 
        DEFINITION_SCHEMA.SCHEMATA sch
      , DEFINITION_SCHEMA.AUTHORIZATIONS auth
      , DEFINITION_SCHEMA.ROUTINES rtn
WHERE
      auth.AUTH_ID   = rtn.ROUTINE_OWNER_ID
  AND sch.SCHEMA_ID  = rtn.ROUTINE_SCHEMA_ID
  AND EXISTS ( SELECT GRANTEE_ID  
                 FROM DEFINITION_SCHEMA.DATABASE_PRIVILEGES pvdba 
                WHERE pvdba.PRIVILEGE_TYPE IN ( 'ACCESS CONTROL' ) 
                  AND ( pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS audba 
                                                WHERE audba.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                             ) 
                      -- OR  
                      -- pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                      --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                       )  
               )
;

View created.

Elapsed time: 1.28100 ms 

 


--#####################
--# comment view
--#####################
COMMENT ON TABLE DICTIONARY_SCHEMA.DBA_SOURCE
        IS 'DBA_SOURCE describes the text source of all stored objects in the database';

Comment created.

Elapsed time: 0.12200 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_SOURCE.OWNER
        IS 'Owner of object';

Comment created.

Elapsed time: 0.14200 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_SOURCE.SCHEMA_NAME
        IS 'Schema Name of object';

Comment created.

Elapsed time: 0.14600 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_SOURCE.NAME
        IS 'Name of object';

Comment created.

Elapsed time: 0.13800 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_SOURCE.TYPE
        IS 'Type of object: FUNCTION, PROCEDURE, PACKAGE, PACKAGE BODY, TRIGGER';

Comment created.

Elapsed time: 0.13500 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_SOURCE.LINE
        IS 'Line number of this line of source';

Comment created.

Elapsed time: 0.14600 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_SOURCE.TEXT
        IS 'Text source of the strored object';

Comment created.

Elapsed time: 0.15000 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_SOURCE.ORIGIN_CON_ID
        IS 'ID of the container where the data originates';

Comment created.

Elapsed time: 0.13500 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.DBA_SOURCE TO PUBLIC;

Grant succeeded.

Elapsed time: 0.11900 ms 


COMMIT;

Commit complete.

Elapsed time: 0.11000 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS DBA_SOURCE;

Synonym dropped.

Elapsed time: 0.07400 ms 

CREATE PUBLIC SYNONYM DBA_SOURCE FOR DICTIONARY_SCHEMA.DBA_SOURCE;

Synonym created.

Elapsed time: 0.08300 ms 

COMMIT;

Commit complete.

Elapsed time: 0.03700 ms 




--##############################################################
--# DICTIONARY_SCHEMA.ALL_SOURCE
--##############################################################


--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.ALL_SOURCE;

View dropped.

Elapsed time: 1.12200 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.ALL_SOURCE
(
    OWNER
  , SCHEMA_NAME
  , NAME
  , TYPE
  , LINE
  , TEXT
  , ORIGIN_CON_ID
)
AS
SELECT 
        auth.AUTHORIZATION_NAME                         -- OWNER
      , sch.SCHEMA_NAME                                 -- SCHEMA_NAME
      , rtn.ROUTINE_NAME                                -- OBJECT_NAME
      , CAST( rtn.ROUTINE_TYPE AS VARCHAR(32 OCTETS) )  -- TYPE
      , CAST( NULL AS NUMBER )                          -- LINE
      , rtn.ROUTINE_DEFINITION                          -- TEXT
      , CAST( '0' AS VARCHAR(256 OCTETS) )              -- ORIGIN_CON_ID
FROM 
        DEFINITION_SCHEMA.SCHEMATA sch
      , DEFINITION_SCHEMA.AUTHORIZATIONS auth
      , DEFINITION_SCHEMA.ROUTINES rtn
WHERE
      auth.AUTH_ID   = rtn.ROUTINE_OWNER_ID
  AND sch.SCHEMA_ID  = rtn.ROUTINE_SCHEMA_ID
  AND ( rtn.SPECIFIC_ID IN ( SELECT pvcol.SPECIFIC_ID
                               FROM DEFINITION_SCHEMA.ROUTINE_PRIVILEGES AS pvcol
                              WHERE ( pvcol.GRANTEE_ID IN ( SELECT AUTH_ID
                                                              FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS aucol
                                                             WHERE aucol.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )
                                                          )
                                 -- OR  
                                 -- pvcol.GRANTEE_ID IN ( SELECT AUTH_ID 
                                 --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                  )
                         )
        OR
        rtn.SPECIFIC_SCHEMA_ID IN ( SELECT pvsch.SCHEMA_ID
                                      FROM DEFINITION_SCHEMA.SCHEMA_PRIVILEGES AS pvsch
                                     WHERE pvsch.PRIVILEGE_TYPE IN ( 'CONTROL SCHEMA', 'ALTER PROCEDURE', 'DROP PROCEDURE', 
                                                                     'EXECUTE PROCEDURE' 
                                                                   )
                                       AND ( pvsch.GRANTEE_ID IN ( SELECT AUTH_ID
                                                                     FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS ausch
                                                                    WHERE ausch.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )
                                                                 )
                                          -- OR  
                                          -- pvsch.GRANTEE_ID IN ( SELECT AUTH_ID 
                                          --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                           )
                                  )
        OR
        EXISTS ( SELECT GRANTEE_ID
                   FROM DEFINITION_SCHEMA.DATABASE_PRIVILEGES pvdba
                  WHERE pvdba.PRIVILEGE_TYPE IN ( 'ALTER ANY PROCEDURE', 'DROP ANY PROCEDURE', 'EXECUTE ANY PROCEDURE' )
                    AND ( pvdba.GRANTEE_ID IN ( SELECT AUTH_ID
                                                  FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS audba
                                                 WHERE audba.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )
                                               )
                       -- OR  
                       -- pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                       --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                        )
               )
      )
;

View created.

Elapsed time: 1.61500 ms 

 


--#####################
--# comment view
--#####################
COMMENT ON TABLE DICTIONARY_SCHEMA.ALL_SOURCE
        IS 'ALL_SOURCE describes the text source of the stored objects accessible to the current user.';

Comment created.

Elapsed time: 0.12400 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_SOURCE.OWNER
        IS 'Owner of object';

Comment created.

Elapsed time: 0.14200 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_SOURCE.SCHEMA_NAME
        IS 'Schema Name of object';

Comment created.

Elapsed time: 0.14500 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_SOURCE.NAME
        IS 'Name of object';

Comment created.

Elapsed time: 0.16200 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_SOURCE.TYPE
        IS 'Type of object: FUNCTION, PROCEDURE, PACKAGE, PACKAGE BODY, TRIGGER';

Comment created.

Elapsed time: 0.13500 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_SOURCE.LINE
        IS 'Line number of this line of source';

Comment created.

Elapsed time: 0.13600 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_SOURCE.TEXT
        IS 'Text source of the strored object';

Comment created.

Elapsed time: 0.19800 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_SOURCE.ORIGIN_CON_ID
        IS 'ID of the container where the data originates';

Comment created.

Elapsed time: 0.13700 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.ALL_SOURCE TO PUBLIC;

Grant succeeded.

Elapsed time: 0.11700 ms 


COMMIT;

Commit complete.

Elapsed time: 0.11300 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS ALL_SOURCE;

Synonym dropped.

Elapsed time: 0.07800 ms 

CREATE PUBLIC SYNONYM ALL_SOURCE FOR DICTIONARY_SCHEMA.ALL_SOURCE;

Synonym created.

Elapsed time: 0.08300 ms 

COMMIT;

Commit complete.

Elapsed time: 0.03800 ms 




--##############################################################
--# DICTIONARY_SCHEMA.USER_SOURCE
--##############################################################


--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.USER_SOURCE;

View dropped.

Elapsed time: 1.00100 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.USER_SOURCE
(
    SCHEMA_NAME
  , NAME
  , TYPE
  , LINE
  , TEXT
  , ORIGIN_CON_ID
)
AS
SELECT 
        SCHEMA_NAME
      , NAME
      , TYPE
      , LINE
      , TEXT
      , ORIGIN_CON_ID
FROM 
        DICTIONARY_SCHEMA.ALL_SOURCE
WHERE   OWNER = CURRENT_USER;

View created.

Elapsed time: 1.39300 ms 

;
 


--#####################
--# comment view
--#####################
COMMENT ON TABLE DICTIONARY_SCHEMA.USER_SOURCE
        IS 'USER_SOURCE describes the text source of the stored objects owned by the current user.';

Comment created.

Elapsed time: 0.12800 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_SOURCE.SCHEMA_NAME
        IS 'Schema Name of object';

Comment created.

Elapsed time: 0.14200 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_SOURCE.NAME
        IS 'Name of object';

Comment created.

Elapsed time: 0.16700 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_SOURCE.TYPE
        IS 'Type of object: FUNCTION, PROCEDURE, PACKAGE, PACKAGE BODY, TRIGGER';

Comment created.

Elapsed time: 0.13900 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_SOURCE.LINE
        IS 'Line number of this line of source';

Comment created.

Elapsed time: 0.13500 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_SOURCE.TEXT
        IS 'Text source of the strored object';

Comment created.

Elapsed time: 0.15600 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_SOURCE.ORIGIN_CON_ID
        IS 'ID of the container where the data originates';

Comment created.

Elapsed time: 0.15700 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.USER_SOURCE TO PUBLIC;

Grant succeeded.

Elapsed time: 0.12500 ms 


COMMIT;

Commit complete.

Elapsed time: 0.10200 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS USER_SOURCE;

Synonym dropped.

Elapsed time: 0.07100 ms 

CREATE PUBLIC SYNONYM USER_SOURCE FOR DICTIONARY_SCHEMA.USER_SOURCE;

Synonym created.

Elapsed time: 0.08300 ms 

COMMIT;

Commit complete.

Elapsed time: 0.03800 ms 




--##############################################################
--# DICTIONARY_SCHEMA.DBA_DEPENDENCIES
--##############################################################


--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.DBA_DEPENDENCIES;

View dropped.

Elapsed time: 1.38500 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.DBA_DEPENDENCIES
(
    OWNER
  , SCHEMA_NAME
  , NAME
  , TYPE
  , REFERENCED_OWNER
  , REFERENCED_SCHEMA_NAME
  , REFERENCED_TYPE
  , REFERENCED_LINK_NAME
  , REFERENCED_NAME
  , DEPENDENCY_TYPE
)
AS
SELECT
        auth1.AUTHORIZATION_NAME                         -- OWNER
      , sch1.SCHEMA_NAME                                 -- SCHEMA_NAME
      , tab1.TABLE_NAME                                  -- NAME
      , CAST( 'VIEW' AS VARCHAR(32 OCTETS) )             -- TYPE
      , auth2.AUTHORIZATION_NAME                         -- REFERENCED_OWNER
      , sch2.SCHEMA_NAME                                 -- REFERENCED_SCHEMA_NAME
      , rtn2.ROUTINE_TYPE                                -- REFERENCED_TYPE
      , CAST( NULL AS VARCHAR(128 OCTETS) )              -- REFERENCED_LINK_NAME
      , rtn2.SPECIFIC_NAME                               -- REFERENCED_NAME
      , CAST( 'HARD' AS VARCHAR(32 OCTETS) )             -- DEPENDENCY_TYPE
FROM 
        DEFINITION_SCHEMA.SCHEMATA            sch1
      , DEFINITION_SCHEMA.AUTHORIZATIONS      auth1
      , DEFINITION_SCHEMA.VIEW_ROUTINE_USAGE  vru1
      , DEFINITION_SCHEMA.TABLES              tab1
      , DEFINITION_SCHEMA.SCHEMATA            sch2
      , DEFINITION_SCHEMA.AUTHORIZATIONS      auth2
      , DEFINITION_SCHEMA.ROUTINES            rtn2
WHERE
      auth1.AUTH_ID   = vru1.TABLE_OWNER_ID
  AND sch1.SCHEMA_ID  = vru1.TABLE_SCHEMA_ID
  AND vru1.TABLE_SCHEMA_ID  = tab1.SCHEMA_ID
  AND vru1.TABLE_ID  = tab1.TABLE_ID
  AND vru1.SPECIFIC_SCHEMA_ID  = rtn2.SPECIFIC_SCHEMA_ID
  AND vru1.SPECIFIC_ID  = rtn2.SPECIFIC_ID
  AND auth2.AUTH_ID   = rtn2.ROUTINE_OWNER_ID
  AND sch2.SCHEMA_ID  = rtn2.ROUTINE_SCHEMA_ID
  AND EXISTS ( SELECT GRANTEE_ID  
                 FROM DEFINITION_SCHEMA.DATABASE_PRIVILEGES pvdba 
                WHERE pvdba.PRIVILEGE_TYPE IN ( 'ACCESS CONTROL' ) 
                  AND ( pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS audba 
                                                WHERE audba.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                             ) 
                      -- OR  
                      -- pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                      --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                       )
               )
UNION ALL
SELECT
        auth1.AUTHORIZATION_NAME                         -- OWNER
      , sch1.SCHEMA_NAME                                 -- SCHEMA_NAME
      , tab1.TABLE_NAME                                  -- NAME
      , CAST( 'VIEW' AS VARCHAR(32 OCTETS) )             -- TYPE
      , auth2.AUTHORIZATION_NAME                         -- REFERENCED_OWNER
      , sch2.SCHEMA_NAME                                 -- REFERENCED_SCHEMA_NAME
      , CAST( CASE tab2.TABLE_TYPE WHEN 'VIEW' THEN 'VIEW'
                                   ELSE 'TABLE'
                                   END
              AS VARCHAR(32 OCTETS) )                    -- REFERENCED_TYPE
      , CAST( NULL AS VARCHAR(128 OCTETS) )              -- REFERENCED_LINK_NAME
      , tab2.TABLE_NAME                                  -- REFERENCED_NAME
      , CAST( 'HARD' AS VARCHAR(32 OCTETS) )             -- DEPENDENCY_TYPE
FROM
        DEFINITION_SCHEMA.SCHEMATA          sch1
      , DEFINITION_SCHEMA.AUTHORIZATIONS    auth1
      , DEFINITION_SCHEMA.VIEW_TABLE_USAGE  vtu1
      , DEFINITION_SCHEMA.TABLES            tab1
      , DEFINITION_SCHEMA.SCHEMATA          sch2
      , DEFINITION_SCHEMA.AUTHORIZATIONS    auth2
      , DICTIONARY_SCHEMA.WHOLE_TABLES      tab2
WHERE
      auth1.AUTH_ID   = vtu1.VIEW_OWNER_ID
  AND sch1.SCHEMA_ID  = vtu1.VIEW_SCHEMA_ID
  AND vtu1.VIEW_SCHEMA_ID  = tab1.SCHEMA_ID
  AND vtu1.VIEW_ID  = tab1.TABLE_ID
  AND vtu1.TABLE_SCHEMA_ID  = tab2.SCHEMA_ID
  AND vtu1.TABLE_ID  = tab2.TABLE_ID
  AND auth2.AUTH_ID   = tab2.OWNER_ID
  AND sch2.SCHEMA_ID  = tab2.SCHEMA_ID
  AND EXISTS ( SELECT GRANTEE_ID
                 FROM DEFINITION_SCHEMA.DATABASE_PRIVILEGES pvdba
                WHERE pvdba.PRIVILEGE_TYPE IN ( 'ACCESS CONTROL' )
                  AND ( pvdba.GRANTEE_ID IN ( SELECT AUTH_ID
                                                FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS audba
                                                WHERE audba.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )
                                             )
                      -- OR  
                      -- pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                      --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                       )
               )
UNION ALL
SELECT
        auth1.AUTHORIZATION_NAME                         -- OWNER
      , sch1.SCHEMA_NAME                                 -- SCHEMA_NAME
      , rtn1.SPECIFIC_NAME                               -- NAME
      , CAST( rtn1.ROUTINE_TYPE AS VARCHAR(32 OCTETS) )  -- TYPE
      , auth2.AUTHORIZATION_NAME                         -- REFERENCED_OWNER
      , sch2.SCHEMA_NAME                                 -- REFERENCED_SCHEMA_NAME
      , rtn2.ROUTINE_TYPE                                -- REFERENCED_TYPE
      , CAST( NULL AS VARCHAR(128 OCTETS) )              -- REFERENCED_LINK_NAME
      , rtn2.SPECIFIC_NAME                               -- REFERENCED_NAME
      , CAST( 'HARD' AS VARCHAR(32 OCTETS) )             -- DEPENDENCY_TYPE
FROM 
        DEFINITION_SCHEMA.SCHEMATA               sch1
      , DEFINITION_SCHEMA.AUTHORIZATIONS         auth1
      , DEFINITION_SCHEMA.ROUTINE_ROUTINE_USAGE  rru1
      , DEFINITION_SCHEMA.ROUTINES               rtn1
      , DEFINITION_SCHEMA.SCHEMATA               sch2
      , DEFINITION_SCHEMA.AUTHORIZATIONS         auth2
      , DEFINITION_SCHEMA.ROUTINES               rtn2
WHERE
      auth1.AUTH_ID   = rru1.SPECIFIC_OWNER_ID
  AND sch1.SCHEMA_ID  = rru1.SPECIFIC_SCHEMA_ID
  AND rru1.SPECIFIC_SCHEMA_ID  = rtn1.SPECIFIC_SCHEMA_ID
  AND rru1.SPECIFIC_ID  = rtn1.SPECIFIC_ID
  AND rru1.ROUTINE_SCHEMA_ID  = rtn2.SPECIFIC_SCHEMA_ID
  AND rru1.ROUTINE_ID  = rtn2.SPECIFIC_ID
  AND auth2.AUTH_ID   = rtn2.ROUTINE_OWNER_ID
  AND sch2.SCHEMA_ID  = rtn2.ROUTINE_SCHEMA_ID
  AND EXISTS ( SELECT GRANTEE_ID  
                 FROM DEFINITION_SCHEMA.DATABASE_PRIVILEGES pvdba 
                WHERE pvdba.PRIVILEGE_TYPE IN ( 'ACCESS CONTROL' ) 
                  AND ( pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS audba 
                                                WHERE audba.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                             ) 
                      -- OR  
                      -- pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                      --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                       )
               )
UNION ALL
SELECT
        auth1.AUTHORIZATION_NAME                         -- OWNER
      , sch1.SCHEMA_NAME                                 -- SCHEMA_NAME
      , rtn1.SPECIFIC_NAME                               -- NAME
      , CAST( rtn1.ROUTINE_TYPE AS VARCHAR(32 OCTETS) )  -- TYPE
      , auth2.AUTHORIZATION_NAME                         -- REFERENCED_OWNER
      , sch2.SCHEMA_NAME                                 -- REFERENCED_SCHEMA_NAME
      , CAST( 'SEQUENCE' AS VARCHAR(32 OCTETS) )         -- REFERENCED_TYPE
      , CAST( NULL AS VARCHAR(128 OCTETS) )              -- REFERENCED_LINK_NAME
      , seq2.SEQUENCE_NAME                               -- REFERENCED_NAME
      , CAST( 'HARD' AS VARCHAR(32 OCTETS) )             -- DEPENDENCY_TYPE
FROM 
        DEFINITION_SCHEMA.SCHEMATA                sch1
      , DEFINITION_SCHEMA.AUTHORIZATIONS          auth1
      , DEFINITION_SCHEMA.ROUTINE_SEQUENCE_USAGE  rsu1
      , DEFINITION_SCHEMA.ROUTINES                rtn1
      , DEFINITION_SCHEMA.SCHEMATA                sch2
      , DEFINITION_SCHEMA.AUTHORIZATIONS          auth2
      , DEFINITION_SCHEMA.SEQUENCES               seq2
WHERE
      auth1.AUTH_ID   = rsu1.SPECIFIC_OWNER_ID
  AND sch1.SCHEMA_ID  = rsu1.SPECIFIC_SCHEMA_ID
  AND rsu1.SPECIFIC_SCHEMA_ID  = rtn1.SPECIFIC_SCHEMA_ID
  AND rsu1.SPECIFIC_ID  = rtn1.SPECIFIC_ID
  AND rsu1.SEQUENCE_SCHEMA_ID  = seq2.SCHEMA_ID
  AND rsu1.SEQUENCE_ID  = seq2.SEQUENCE_ID
  AND auth2.AUTH_ID   = seq2.OWNER_ID
  AND sch2.SCHEMA_ID  = seq2.SCHEMA_ID
  AND EXISTS ( SELECT GRANTEE_ID  
                 FROM DEFINITION_SCHEMA.DATABASE_PRIVILEGES pvdba 
                WHERE pvdba.PRIVILEGE_TYPE IN ( 'ACCESS CONTROL' ) 
                  AND ( pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS audba 
                                                WHERE audba.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                             ) 
                      -- OR  
                      -- pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                      --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                       )
               )
UNION ALL
SELECT
        auth1.AUTHORIZATION_NAME                         -- OWNER
      , sch1.SCHEMA_NAME                                 -- SCHEMA_NAME
      , rtn1.SPECIFIC_NAME                               -- NAME
      , CAST( rtn1.ROUTINE_TYPE AS VARCHAR(32 OCTETS) )  -- TYPE
      , auth2.AUTHORIZATION_NAME                         -- REFERENCED_OWNER
      , sch2.SCHEMA_NAME                                 -- REFERENCED_SCHEMA_NAME
      , CAST( CASE tab2.TABLE_TYPE WHEN 'VIEW' THEN 'VIEW'
                                   ELSE 'TABLE'
                                   END
              AS VARCHAR(32 OCTETS) )                    -- REFERENCED_TYPE
      , CAST( NULL AS VARCHAR(128 OCTETS) )              -- REFERENCED_LINK_NAME
      , tab2.TABLE_NAME                                  -- REFERENCED_NAME
      , CAST( 'HARD' AS VARCHAR(32 OCTETS) )             -- DEPENDENCY_TYPE
FROM 
        DEFINITION_SCHEMA.SCHEMATA             sch1
      , DEFINITION_SCHEMA.AUTHORIZATIONS       auth1
      , DEFINITION_SCHEMA.ROUTINE_TABLE_USAGE  rtu1
      , DEFINITION_SCHEMA.ROUTINES             rtn1
      , DEFINITION_SCHEMA.SCHEMATA             sch2
      , DEFINITION_SCHEMA.AUTHORIZATIONS       auth2
      , DICTIONARY_SCHEMA.WHOLE_TABLES         tab2
WHERE
      auth1.AUTH_ID   = rtu1.SPECIFIC_OWNER_ID
  AND sch1.SCHEMA_ID  = rtu1.SPECIFIC_SCHEMA_ID
  AND rtu1.SPECIFIC_SCHEMA_ID  = rtn1.SPECIFIC_SCHEMA_ID
  AND rtu1.SPECIFIC_ID  = rtn1.SPECIFIC_ID
  AND rtu1.TABLE_SCHEMA_ID  = tab2.SCHEMA_ID
  AND rtu1.TABLE_ID  = tab2.TABLE_ID
  AND auth2.AUTH_ID   = tab2.OWNER_ID
  AND sch2.SCHEMA_ID  = tab2.SCHEMA_ID
  AND EXISTS ( SELECT GRANTEE_ID  
                 FROM DEFINITION_SCHEMA.DATABASE_PRIVILEGES pvdba 
                WHERE pvdba.PRIVILEGE_TYPE IN ( 'ACCESS CONTROL' ) 
                  AND ( pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS audba 
                                                WHERE audba.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                             ) 
                      -- OR  
                      -- pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                      --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                       )
               )

;

View created.

Elapsed time: 2.89300 ms 

 


--#####################
--# comment view
--#####################
COMMENT ON TABLE DICTIONARY_SCHEMA.DBA_DEPENDENCIES
        IS 'DBA_DEPENDENCIES describes all dependencies between objects in the database';

Comment created.

Elapsed time: 0.12400 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_DEPENDENCIES.OWNER
        IS 'Owner of object';

Comment created.

Elapsed time: 0.16500 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_DEPENDENCIES.SCHEMA_NAME
        IS 'Schema Name of object';

Comment created.

Elapsed time: 0.14800 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_DEPENDENCIES.NAME
        IS 'Name of object';

Comment created.

Elapsed time: 0.13500 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_DEPENDENCIES.TYPE
        IS 'Type of object: FUNCTION, PROCEDURE, VIEW, PACKAGE, PACKAGE BODY, TRIGGER';

Comment created.

Elapsed time: 0.13500 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_DEPENDENCIES.REFERENCED_OWNER
        IS 'Owner of the referenced object';

Comment created.

Elapsed time: 0.13600 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_DEPENDENCIES.REFERENCED_SCHEMA_NAME
        IS 'Schema Name of the referenced object';

Comment created.

Elapsed time: 0.15600 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_DEPENDENCIES.REFERENCED_NAME
        IS 'Name of the referenced object';

Comment created.

Elapsed time: 0.14700 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_DEPENDENCIES.REFERENCED_TYPE
        IS 'Type of the referenced object: FUNCTION, PROCEDURE, TABLE, VIEW, SEQUENCE, PACKAGE, PACKAGE BODY, TRIGGER';

Comment created.

Elapsed time: 0.13500 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_DEPENDENCIES.REFERENCED_LINK_NAME
        IS 'Name of the link to the parent object';

Comment created.

Elapsed time: 0.13300 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_DEPENDENCIES.DEPENDENCY_TYPE
        IS 'Indicates whether the dependency is a REF dependency (REF) or not (HARD)';

Comment created.

Elapsed time: 0.14000 ms 



--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.DBA_DEPENDENCIES TO PUBLIC;

Grant succeeded.

Elapsed time: 0.12300 ms 


COMMIT;

Commit complete.

Elapsed time: 0.13600 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS DBA_DEPENDENCIES;

Synonym dropped.

Elapsed time: 0.07600 ms 

CREATE PUBLIC SYNONYM DBA_DEPENDENCIES FOR DICTIONARY_SCHEMA.DBA_DEPENDENCIES;

Synonym created.

Elapsed time: 0.08300 ms 

COMMIT;

Commit complete.

Elapsed time: 0.03800 ms 




--##############################################################
--# DICTIONARY_SCHEMA.ALL_DEPENDENCIES
--##############################################################


--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.ALL_DEPENDENCIES;

View dropped.

Elapsed time: 1.43200 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.ALL_DEPENDENCIES
(
    OWNER
  , SCHEMA_NAME
  , NAME
  , TYPE
  , REFERENCED_OWNER
  , REFERENCED_SCHEMA_NAME
  , REFERENCED_TYPE
  , REFERENCED_LINK_NAME
  , REFERENCED_NAME
  , DEPENDENCY_TYPE
)
AS
SELECT
        auth1.AUTHORIZATION_NAME                         -- OWNER
      , sch1.SCHEMA_NAME                                 -- SCHEMA_NAME
      , tab1.TABLE_NAME                                  -- NAME
      , CAST( 'VIEW' AS VARCHAR(32 OCTETS) )             -- TYPE
      , auth2.AUTHORIZATION_NAME                         -- REFERENCED_OWNER
      , sch2.SCHEMA_NAME                                 -- REFERENCED_SCHEMA_NAME
      , rtn2.ROUTINE_TYPE                                -- REFERENCED_TYPE
      , CAST( NULL AS VARCHAR(128 OCTETS) )              -- REFERENCED_LINK_NAME
      , rtn2.SPECIFIC_NAME                               -- REFERENCED_NAME
      , CAST( 'HARD' AS VARCHAR(32 OCTETS) )             -- DEPENDENCY_TYPE
FROM 
        DEFINITION_SCHEMA.SCHEMATA            sch1
      , DEFINITION_SCHEMA.AUTHORIZATIONS      auth1
      , DEFINITION_SCHEMA.VIEW_ROUTINE_USAGE  vru1
      , DEFINITION_SCHEMA.TABLES              tab1
      , DEFINITION_SCHEMA.SCHEMATA            sch2
      , DEFINITION_SCHEMA.AUTHORIZATIONS      auth2
      , DEFINITION_SCHEMA.ROUTINES            rtn2
WHERE
      auth1.AUTH_ID   = vru1.TABLE_OWNER_ID
  AND sch1.SCHEMA_ID  = vru1.TABLE_SCHEMA_ID
  AND vru1.TABLE_SCHEMA_ID  = tab1.SCHEMA_ID
  AND vru1.TABLE_ID  = tab1.TABLE_ID
  AND vru1.SPECIFIC_SCHEMA_ID  = rtn2.SPECIFIC_SCHEMA_ID
  AND vru1.SPECIFIC_ID  = rtn2.SPECIFIC_ID
  AND auth2.AUTH_ID   = rtn2.ROUTINE_OWNER_ID
  AND sch2.SCHEMA_ID  = rtn2.ROUTINE_SCHEMA_ID
  AND ( tab1.TABLE_ID IN ( SELECT pvcol.TABLE_ID
                             FROM DEFINITION_SCHEMA.TABLE_PRIVILEGES AS pvcol
                            WHERE ( pvcol.GRANTEE_ID IN ( SELECT AUTH_ID
                                                           FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS aucol
                                                          WHERE aucol.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )
                                                        )
                               -- OR  
                               -- pvcol.GRANTEE_ID IN ( SELECT AUTH_ID 
                               --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                  )
                         )
        OR 
        tab1.TABLE_ID IN ( SELECT pvtab.TABLE_ID 
                             FROM DEFINITION_SCHEMA.TABLE_PRIVILEGES AS pvtab 
                            WHERE ( pvtab.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                            FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS autab 
                                                           WHERE autab.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                        ) 
                                 -- OR  
                                 -- pvtab.GRANTEE_ID IN ( SELECT AUTH_ID 
                                 --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                  )
                          ) 
        OR
        tab1.SCHEMA_ID IN ( SELECT pvsch.SCHEMA_ID
                              FROM DEFINITION_SCHEMA.SCHEMA_PRIVILEGES AS pvsch
                             WHERE pvsch.PRIVILEGE_TYPE IN ( 'CONTROL SCHEMA', 'ALTER TABLE', 'DROP TABLE', 
                                                             'SELECT TABLE', 'INSERT TABLE', 'DELETE TABLE', 'UPDATE TABLE', 'LOCK TABLE' ) 
                               AND ( pvsch.GRANTEE_ID IN ( SELECT AUTH_ID
                                                             FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS ausch
                                                            WHERE ausch.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )
                                                         )
                                  -- OR  
                                  -- pvsch.GRANTEE_ID IN ( SELECT AUTH_ID 
                                  --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                   )
                          )
        OR
        EXISTS ( SELECT GRANTEE_ID
                   FROM DEFINITION_SCHEMA.DATABASE_PRIVILEGES pvdba
                  WHERE pvdba.PRIVILEGE_TYPE IN ( 'ALTER ANY TABLE', 'DROP ANY TABLE', 
                                                   'SELECT ANY TABLE', 'INSERT ANY TABLE', 'DELETE ANY TABLE', 'UPDATE ANY TABLE', 'LOCK ANY TABLE' ) 
                    AND ( pvdba.GRANTEE_ID IN ( SELECT AUTH_ID
                                                  FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS audba
                                                 WHERE audba.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )
                                               )
                       -- OR  
                       -- pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                       --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                        )
               )
      )
UNION ALL
SELECT
        auth1.AUTHORIZATION_NAME                         -- OWNER
      , sch1.SCHEMA_NAME                                 -- SCHEMA_NAME
      , tab1.TABLE_NAME                                  -- NAME
      , CAST( 'VIEW' AS VARCHAR(32 OCTETS) )             -- TYPE
      , auth2.AUTHORIZATION_NAME                         -- REFERENCED_OWNER
      , sch2.SCHEMA_NAME                                 -- REFERENCED_SCHEMA_NAME
      , CAST( CASE tab2.TABLE_TYPE WHEN 'VIEW' THEN 'VIEW'
                                   ELSE 'TABLE'
                                   END
              AS VARCHAR(32 OCTETS) )                    -- REFERENCED_TYPE
      , CAST( NULL AS VARCHAR(128 OCTETS) )              -- REFERENCED_LINK_NAME
      , tab2.TABLE_NAME                                  -- REFERENCED_NAME
      , CAST( 'HARD' AS VARCHAR(32 OCTETS) )             -- DEPENDENCY_TYPE
FROM
        DEFINITION_SCHEMA.SCHEMATA          sch1
      , DEFINITION_SCHEMA.AUTHORIZATIONS    auth1
      , DEFINITION_SCHEMA.VIEW_TABLE_USAGE  vtu1
      , DEFINITION_SCHEMA.TABLES            tab1
      , DEFINITION_SCHEMA.SCHEMATA          sch2
      , DEFINITION_SCHEMA.AUTHORIZATIONS    auth2
      , DICTIONARY_SCHEMA.WHOLE_TABLES      tab2
WHERE
      auth1.AUTH_ID   = vtu1.VIEW_OWNER_ID
  AND sch1.SCHEMA_ID  = vtu1.VIEW_SCHEMA_ID
  AND vtu1.VIEW_SCHEMA_ID  = tab1.SCHEMA_ID
  AND vtu1.VIEW_ID  = tab1.TABLE_ID
  AND vtu1.TABLE_SCHEMA_ID  = tab2.SCHEMA_ID
  AND vtu1.TABLE_ID  = tab2.TABLE_ID
  AND auth2.AUTH_ID   = tab2.OWNER_ID
  AND sch2.SCHEMA_ID  = tab2.SCHEMA_ID
  AND ( tab1.TABLE_ID IN ( SELECT pvcol.TABLE_ID
                             FROM DEFINITION_SCHEMA.TABLE_PRIVILEGES AS pvcol
                            WHERE ( pvcol.GRANTEE_ID IN ( SELECT AUTH_ID
                                                           FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS aucol
                                                          WHERE aucol.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )
                                                        )
                               -- OR  
                               -- pvcol.GRANTEE_ID IN ( SELECT AUTH_ID 
                               --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                  )
                         )
        OR 
        tab1.TABLE_ID IN ( SELECT pvtab.TABLE_ID 
                             FROM DEFINITION_SCHEMA.TABLE_PRIVILEGES AS pvtab 
                            WHERE ( pvtab.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                            FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS autab 
                                                           WHERE autab.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                        ) 
                                 -- OR  
                                 -- pvtab.GRANTEE_ID IN ( SELECT AUTH_ID 
                                 --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                  )
                          ) 
        OR
        tab1.SCHEMA_ID IN ( SELECT pvsch.SCHEMA_ID
                              FROM DEFINITION_SCHEMA.SCHEMA_PRIVILEGES AS pvsch
                             WHERE pvsch.PRIVILEGE_TYPE IN ( 'CONTROL SCHEMA', 'ALTER TABLE', 'DROP TABLE', 
                                                             'SELECT TABLE', 'INSERT TABLE', 'DELETE TABLE', 'UPDATE TABLE', 'LOCK TABLE' ) 
                               AND ( pvsch.GRANTEE_ID IN ( SELECT AUTH_ID
                                                             FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS ausch
                                                            WHERE ausch.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )
                                                         )
                                  -- OR  
                                  -- pvsch.GRANTEE_ID IN ( SELECT AUTH_ID 
                                  --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                   )
                          )
        OR
        EXISTS ( SELECT GRANTEE_ID
                   FROM DEFINITION_SCHEMA.DATABASE_PRIVILEGES pvdba
                  WHERE pvdba.PRIVILEGE_TYPE IN ( 'ALTER ANY TABLE', 'DROP ANY TABLE', 
                                                   'SELECT ANY TABLE', 'INSERT ANY TABLE', 'DELETE ANY TABLE', 'UPDATE ANY TABLE', 'LOCK ANY TABLE' ) 
                    AND ( pvdba.GRANTEE_ID IN ( SELECT AUTH_ID
                                                  FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS audba
                                                 WHERE audba.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )
                                               )
                       -- OR  
                       -- pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                       --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                        )
               )
      )
UNION ALL
SELECT
        auth1.AUTHORIZATION_NAME                         -- OWNER
      , sch1.SCHEMA_NAME                                 -- SCHEMA_NAME
      , rtn1.SPECIFIC_NAME                               -- NAME
      , CAST( rtn1.ROUTINE_TYPE AS VARCHAR(32 OCTETS) )  -- TYPE
      , auth2.AUTHORIZATION_NAME                         -- REFERENCED_OWNER
      , sch2.SCHEMA_NAME                                 -- REFERENCED_SCHEMA_NAME
      , rtn2.ROUTINE_TYPE                                -- REFERENCED_TYPE
      , CAST( NULL AS VARCHAR(128 OCTETS) )              -- REFERENCED_LINK_NAME
      , rtn2.SPECIFIC_NAME                               -- REFERENCED_NAME
      , CAST( 'HARD' AS VARCHAR(32 OCTETS) )             -- DEPENDENCY_TYPE
FROM 
        DEFINITION_SCHEMA.SCHEMATA               sch1
      , DEFINITION_SCHEMA.AUTHORIZATIONS         auth1
      , DEFINITION_SCHEMA.ROUTINE_ROUTINE_USAGE  rru1
      , DEFINITION_SCHEMA.ROUTINES               rtn1
      , DEFINITION_SCHEMA.SCHEMATA               sch2
      , DEFINITION_SCHEMA.AUTHORIZATIONS         auth2
      , DEFINITION_SCHEMA.ROUTINES               rtn2
WHERE
      auth1.AUTH_ID   = rru1.SPECIFIC_OWNER_ID
  AND sch1.SCHEMA_ID  = rru1.SPECIFIC_SCHEMA_ID
  AND rru1.SPECIFIC_SCHEMA_ID  = rtn1.SPECIFIC_SCHEMA_ID
  AND rru1.SPECIFIC_ID  = rtn1.SPECIFIC_ID
  AND rru1.ROUTINE_SCHEMA_ID  = rtn2.SPECIFIC_SCHEMA_ID
  AND rru1.ROUTINE_ID  = rtn2.SPECIFIC_ID
  AND auth2.AUTH_ID   = rtn2.ROUTINE_OWNER_ID
  AND sch2.SCHEMA_ID  = rtn2.ROUTINE_SCHEMA_ID
  AND ( rtn1.SPECIFIC_ID IN ( SELECT pvcol.SPECIFIC_ID
                                FROM DEFINITION_SCHEMA.ROUTINE_PRIVILEGES AS pvcol
                               WHERE ( pvcol.GRANTEE_ID IN ( SELECT AUTH_ID
                                                               FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS aucol
                                                              WHERE aucol.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )
                                                           )
                                  -- OR  
                                  -- pvcol.GRANTEE_ID IN ( SELECT AUTH_ID 
                                  --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                     )
                            )
        OR
        rtn1.SPECIFIC_SCHEMA_ID IN ( SELECT pvsch.SCHEMA_ID
                                       FROM DEFINITION_SCHEMA.SCHEMA_PRIVILEGES AS pvsch
                                      WHERE pvsch.PRIVILEGE_TYPE IN ( 'CONTROL SCHEMA', 'ALTER PROCEDURE', 'DROP PROCEDURE', 
                                                                      'EXECUTE PROCEDURE' 
                                                                    )
                                        AND ( pvsch.GRANTEE_ID IN ( SELECT AUTH_ID
                                                                      FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS ausch
                                                                     WHERE ausch.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )
                                                                  )
                                           -- OR  
                                           -- pvsch.GRANTEE_ID IN ( SELECT AUTH_ID 
                                           --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                            )
                                   )
        OR
        EXISTS ( SELECT GRANTEE_ID
                   FROM DEFINITION_SCHEMA.DATABASE_PRIVILEGES pvdba
                  WHERE pvdba.PRIVILEGE_TYPE IN ( 'ALTER ANY PROCEDURE', 'DROP ANY PROCEDURE', 'EXECUTE ANY PROCEDURE' )
                    AND ( pvdba.GRANTEE_ID IN ( SELECT AUTH_ID
                                                  FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS audba
                                                 WHERE audba.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )
                                               )
                       -- OR  
                       -- pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                       --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                        )
               )
      )
UNION ALL
SELECT
        auth1.AUTHORIZATION_NAME                         -- OWNER
      , sch1.SCHEMA_NAME                                 -- SCHEMA_NAME
      , rtn1.SPECIFIC_NAME                               -- NAME
      , CAST( rtn1.ROUTINE_TYPE AS VARCHAR(32 OCTETS) )  -- TYPE
      , auth2.AUTHORIZATION_NAME                         -- REFERENCED_OWNER
      , sch2.SCHEMA_NAME                                 -- REFERENCED_SCHEMA_NAME
      , CAST( 'SEQUENCE' AS VARCHAR(32 OCTETS) )         -- REFERENCED_TYPE
      , CAST( NULL AS VARCHAR(128 OCTETS) )              -- REFERENCED_LINK_NAME
      , seq2.SEQUENCE_NAME                               -- REFERENCED_NAME
      , CAST( 'HARD' AS VARCHAR(32 OCTETS) )             -- DEPENDENCY_TYPE
FROM 
        DEFINITION_SCHEMA.SCHEMATA                sch1
      , DEFINITION_SCHEMA.AUTHORIZATIONS          auth1
      , DEFINITION_SCHEMA.ROUTINE_SEQUENCE_USAGE  rsu1
      , DEFINITION_SCHEMA.ROUTINES                rtn1
      , DEFINITION_SCHEMA.SCHEMATA                sch2
      , DEFINITION_SCHEMA.AUTHORIZATIONS          auth2
      , DEFINITION_SCHEMA.SEQUENCES               seq2
WHERE
      auth1.AUTH_ID   = rsu1.SPECIFIC_OWNER_ID
  AND sch1.SCHEMA_ID  = rsu1.SPECIFIC_SCHEMA_ID
  AND rsu1.SPECIFIC_SCHEMA_ID  = rtn1.SPECIFIC_SCHEMA_ID
  AND rsu1.SPECIFIC_ID  = rtn1.SPECIFIC_ID
  AND rsu1.SEQUENCE_SCHEMA_ID  = seq2.SCHEMA_ID
  AND rsu1.SEQUENCE_ID  = seq2.SEQUENCE_ID
  AND auth2.AUTH_ID   = seq2.OWNER_ID
  AND sch2.SCHEMA_ID  = seq2.SCHEMA_ID
  AND ( rtn1.SPECIFIC_ID IN ( SELECT pvcol.SPECIFIC_ID
                                FROM DEFINITION_SCHEMA.ROUTINE_PRIVILEGES AS pvcol
                               WHERE ( pvcol.GRANTEE_ID IN ( SELECT AUTH_ID
                                                               FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS aucol
                                                              WHERE aucol.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )
                                                           )
                                  -- OR  
                                  -- pvcol.GRANTEE_ID IN ( SELECT AUTH_ID 
                                  --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                     )
                            )
        OR
        rtn1.SPECIFIC_SCHEMA_ID IN ( SELECT pvsch.SCHEMA_ID
                                       FROM DEFINITION_SCHEMA.SCHEMA_PRIVILEGES AS pvsch
                                      WHERE pvsch.PRIVILEGE_TYPE IN ( 'CONTROL SCHEMA', 'ALTER PROCEDURE', 'DROP PROCEDURE', 
                                                                      'EXECUTE PROCEDURE' 
                                                                    )
                                        AND ( pvsch.GRANTEE_ID IN ( SELECT AUTH_ID
                                                                      FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS ausch
                                                                     WHERE ausch.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )
                                                                  )
                                           -- OR  
                                           -- pvsch.GRANTEE_ID IN ( SELECT AUTH_ID 
                                           --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                            )
                                   )
        OR
        EXISTS ( SELECT GRANTEE_ID
                   FROM DEFINITION_SCHEMA.DATABASE_PRIVILEGES pvdba
                  WHERE pvdba.PRIVILEGE_TYPE IN ( 'ALTER ANY PROCEDURE', 'DROP ANY PROCEDURE', 'EXECUTE ANY PROCEDURE' )
                    AND ( pvdba.GRANTEE_ID IN ( SELECT AUTH_ID
                                                  FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS audba
                                                 WHERE audba.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )
                                               )
                       -- OR  
                       -- pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                       --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                        )
               )
      )
UNION ALL
SELECT
        auth1.AUTHORIZATION_NAME                         -- OWNER
      , sch1.SCHEMA_NAME                                 -- SCHEMA_NAME
      , rtn1.SPECIFIC_NAME                               -- NAME
      , CAST( rtn1.ROUTINE_TYPE AS VARCHAR(32 OCTETS) )  -- TYPE
      , auth2.AUTHORIZATION_NAME                         -- REFERENCED_OWNER
      , sch2.SCHEMA_NAME                                 -- REFERENCED_SCHEMA_NAME
      , CAST( CASE tab2.TABLE_TYPE WHEN 'VIEW' THEN 'VIEW'
                                   ELSE 'TABLE'
                                   END
              AS VARCHAR(32 OCTETS) )                    -- REFERENCED_TYPE
      , CAST( NULL AS VARCHAR(128 OCTETS) )              -- REFERENCED_LINK_NAME
      , tab2.TABLE_NAME                                  -- REFERENCED_NAME
      , CAST( 'HARD' AS VARCHAR(32 OCTETS) )             -- DEPENDENCY_TYPE
FROM 
        DEFINITION_SCHEMA.SCHEMATA             sch1
      , DEFINITION_SCHEMA.AUTHORIZATIONS       auth1
      , DEFINITION_SCHEMA.ROUTINE_TABLE_USAGE  rtu1
      , DEFINITION_SCHEMA.ROUTINES             rtn1
      , DEFINITION_SCHEMA.SCHEMATA             sch2
      , DEFINITION_SCHEMA.AUTHORIZATIONS       auth2
      , DICTIONARY_SCHEMA.WHOLE_TABLES         tab2
WHERE
      auth1.AUTH_ID   = rtu1.SPECIFIC_OWNER_ID
  AND sch1.SCHEMA_ID  = rtu1.SPECIFIC_SCHEMA_ID
  AND rtu1.SPECIFIC_SCHEMA_ID  = rtn1.SPECIFIC_SCHEMA_ID
  AND rtu1.SPECIFIC_ID  = rtn1.SPECIFIC_ID
  AND rtu1.TABLE_SCHEMA_ID  = tab2.SCHEMA_ID
  AND rtu1.TABLE_ID  = tab2.TABLE_ID
  AND auth2.AUTH_ID   = tab2.OWNER_ID
  AND sch2.SCHEMA_ID  = tab2.SCHEMA_ID
  AND ( rtn1.SPECIFIC_ID IN ( SELECT pvcol.SPECIFIC_ID
                                FROM DEFINITION_SCHEMA.ROUTINE_PRIVILEGES AS pvcol
                               WHERE ( pvcol.GRANTEE_ID IN ( SELECT AUTH_ID
                                                               FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS aucol
                                                              WHERE aucol.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )
                                                           )
                                  -- OR  
                                  -- pvcol.GRANTEE_ID IN ( SELECT AUTH_ID 
                                  --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                     )
                            )
        OR
        rtn1.SPECIFIC_SCHEMA_ID IN ( SELECT pvsch.SCHEMA_ID
                                       FROM DEFINITION_SCHEMA.SCHEMA_PRIVILEGES AS pvsch
                                      WHERE pvsch.PRIVILEGE_TYPE IN ( 'CONTROL SCHEMA', 'ALTER PROCEDURE', 'DROP PROCEDURE', 
                                                                      'EXECUTE PROCEDURE' 
                                                                    )
                                        AND ( pvsch.GRANTEE_ID IN ( SELECT AUTH_ID
                                                                      FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS ausch
                                                                     WHERE ausch.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )
                                                                  )
                                           -- OR  
                                           -- pvsch.GRANTEE_ID IN ( SELECT AUTH_ID 
                                           --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                            )
                                   )
        OR
        EXISTS ( SELECT GRANTEE_ID
                   FROM DEFINITION_SCHEMA.DATABASE_PRIVILEGES pvdba
                  WHERE pvdba.PRIVILEGE_TYPE IN ( 'ALTER ANY PROCEDURE', 'DROP ANY PROCEDURE', 'EXECUTE ANY PROCEDURE' )
                    AND ( pvdba.GRANTEE_ID IN ( SELECT AUTH_ID
                                                  FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS audba
                                                 WHERE audba.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )
                                               )
                       -- OR  
                       -- pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                       --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                        )
               )
      )
;

View created.

Elapsed time: 3.27400 ms 

 


--#####################
--# comment view
--#####################
COMMENT ON TABLE DICTIONARY_SCHEMA.ALL_DEPENDENCIES
        IS 'ALL_DEPENDENCIES describes dependencies between objects accessible to the current user';

Comment created.

Elapsed time: 0.12400 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_DEPENDENCIES.OWNER
        IS 'Owner of object';

Comment created.

Elapsed time: 0.14200 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_DEPENDENCIES.SCHEMA_NAME
        IS 'Schema Name of object';

Comment created.

Elapsed time: 0.15100 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_DEPENDENCIES.NAME
        IS 'Name of object';

Comment created.

Elapsed time: 0.13700 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_DEPENDENCIES.TYPE
        IS 'Type of object: FUNCTION, PROCEDURE, VIEW, PACKAGE, PACKAGE BODY, TRIGGER';

Comment created.

Elapsed time: 0.15000 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_DEPENDENCIES.REFERENCED_OWNER
        IS 'Owner of the referenced object';

Comment created.

Elapsed time: 0.13600 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_DEPENDENCIES.REFERENCED_SCHEMA_NAME
        IS 'Schema Name of the referenced object';

Comment created.

Elapsed time: 0.13800 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_DEPENDENCIES.REFERENCED_NAME
        IS 'Name of the referenced object';

Comment created.

Elapsed time: 0.14200 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_DEPENDENCIES.REFERENCED_TYPE
        IS 'Type of the referenced object: FUNCTION, PROCEDURE, TABLE, VIEW, SEQUENCE, PACKAGE, PACKAGE BODY, TRIGGER';

Comment created.

Elapsed time: 0.13700 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_DEPENDENCIES.REFERENCED_LINK_NAME
        IS 'Name of the link to the parent object';

Comment created.

Elapsed time: 0.13400 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_DEPENDENCIES.DEPENDENCY_TYPE
        IS 'Indicates whether the dependency is a REF dependency (REF) or not (HARD)';

Comment created.

Elapsed time: 0.18800 ms 



--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.ALL_DEPENDENCIES TO PUBLIC;

Grant succeeded.

Elapsed time: 0.14400 ms 


COMMIT;

Commit complete.

Elapsed time: 0.15000 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS ALL_DEPENDENCIES;

Synonym dropped.

Elapsed time: 0.07100 ms 

CREATE PUBLIC SYNONYM ALL_DEPENDENCIES FOR DICTIONARY_SCHEMA.ALL_DEPENDENCIES;

Synonym created.

Elapsed time: 0.08200 ms 

COMMIT;

Commit complete.

Elapsed time: 0.03800 ms 




--##############################################################
--# DICTIONARY_SCHEMA.USER_DEPENDENCIES
--##############################################################


--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.USER_DEPENDENCIES;

View dropped.

Elapsed time: 1.29300 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.USER_DEPENDENCIES
(
    SCHEMA_NAME
  , NAME
  , TYPE
  , REFERENCED_OWNER
  , REFERENCED_SCHEMA_NAME
  , REFERENCED_TYPE
  , REFERENCED_LINK_NAME
  , REFERENCED_NAME
  , DEPENDENCY_TYPE
)
AS
SELECT
        SCHEMA_NAME
      , NAME
      , TYPE
      , REFERENCED_OWNER
      , REFERENCED_SCHEMA_NAME
      , REFERENCED_TYPE
      , REFERENCED_LINK_NAME
      , REFERENCED_NAME
      , DEPENDENCY_TYPE
FROM 
        DICTIONARY_SCHEMA.ALL_DEPENDENCIES
WHERE   OWNER = CURRENT_USER;

View created.

Elapsed time: 3.17200 ms 



--#####################
--# comment view
--#####################
COMMENT ON TABLE DICTIONARY_SCHEMA.USER_DEPENDENCIES
        IS 'USER_DEPENDENCIES describes dependencies between objects accessible to the current user';

Comment created.

Elapsed time: 0.12200 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_DEPENDENCIES.SCHEMA_NAME
        IS 'Schema Name of object';

Comment created.

Elapsed time: 0.14500 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_DEPENDENCIES.NAME
        IS 'Name of object';

Comment created.

Elapsed time: 0.13700 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_DEPENDENCIES.TYPE
        IS 'Type of object: FUNCTION, PROCEDURE, VIEW, PACKAGE, PACKAGE BODY, TRIGGER';

Comment created.

Elapsed time: 0.13600 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_DEPENDENCIES.REFERENCED_OWNER
        IS 'Owner of the referenced object';

Comment created.

Elapsed time: 0.14200 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_DEPENDENCIES.REFERENCED_SCHEMA_NAME
        IS 'Schema Name of the referenced object';

Comment created.

Elapsed time: 0.27300 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_DEPENDENCIES.REFERENCED_NAME
        IS 'Name of the referenced object';

Comment created.

Elapsed time: 0.13700 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_DEPENDENCIES.REFERENCED_TYPE
        IS 'Type of the referenced object: FUNCTION, PROCEDURE, TABLE, VIEW, SEQUENCE, PACKAGE, PACKAGE BODY, TRIGGER';

Comment created.

Elapsed time: 0.13900 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_DEPENDENCIES.REFERENCED_LINK_NAME
        IS 'Name of the link to the parent object';

Comment created.

Elapsed time: 0.16600 ms 


COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_DEPENDENCIES.DEPENDENCY_TYPE
        IS 'Indicates whether the dependency is a REF dependency (REF) or not (HARD)';

Comment created.

Elapsed time: 0.15200 ms 



--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.USER_DEPENDENCIES TO PUBLIC;

Grant succeeded.

Elapsed time: 0.11500 ms 


COMMIT;

Commit complete.

Elapsed time: 0.13400 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS USER_DEPENDENCIES;

Synonym dropped.

Elapsed time: 0.07900 ms 

CREATE PUBLIC SYNONYM USER_DEPENDENCIES FOR DICTIONARY_SCHEMA.USER_DEPENDENCIES;

Synonym created.

Elapsed time: 0.08300 ms 

COMMIT;

Commit complete.

Elapsed time: 0.03800 ms 




--##############################################################
--# DICTIONARY_SCHEMA.DBA_PROC_PRIVS
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.DBA_PROC_PRIVS;

View dropped.

Elapsed time: 0.98600 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.DBA_PROC_PRIVS
(
       GRANTOR
     , GRANTEE
     , PROCEDURE_OWNER 
     , PROCEDURE_SCHEMA 
     , PROCEDURE_NAME 
     , PRIVILEGE
     , GRANTABLE
)
AS
SELECT
       grantor.AUTHORIZATION_NAME
     , grantee.AUTHORIZATION_NAME
     , owner.AUTHORIZATION_NAME
     , sch.SCHEMA_NAME
     , rtn.SPECIFIC_NAME
     , CAST( 'EXECUTE' AS VARCHAR(32 OCTETS) )
     , CAST( CASE WHEN pvrtn.IS_GRANTABLE = TRUE THEN 'YES' ELSE 'NO' END AS VARCHAR(3 OCTETS) )
  FROM
       DEFINITION_SCHEMA.ROUTINE_PRIVILEGES  AS pvrtn
     , DEFINITION_SCHEMA.ROUTINES            AS rtn
     , DEFINITION_SCHEMA.SCHEMATA            AS sch 
     , DEFINITION_SCHEMA.AUTHORIZATIONS      AS grantor
     , DEFINITION_SCHEMA.AUTHORIZATIONS      AS grantee
     , DEFINITION_SCHEMA.AUTHORIZATIONS      AS owner
 WHERE
       pvrtn.SPECIFIC_SCHEMA_ID   = rtn.SPECIFIC_SCHEMA_ID
   AND pvrtn.SPECIFIC_ID          = rtn.SPECIFIC_ID
   AND pvrtn.SPECIFIC_SCHEMA_ID   = sch.SCHEMA_ID
   AND pvrtn.GRANTOR_ID           = grantor.AUTH_ID
   AND pvrtn.GRANTEE_ID           = grantee.AUTH_ID
   AND rtn.SPECIFIC_OWNER_ID      = owner.AUTH_ID
   AND EXISTS ( SELECT GRANTEE_ID  
                  FROM DEFINITION_SCHEMA.DATABASE_PRIVILEGES pvdba 
                 WHERE pvdba.PRIVILEGE_TYPE IN ( 'ACCESS CONTROL' ) 
                   AND ( pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                 FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS audba 
                                                WHERE audba.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                             ) 
                      -- OR  
                      -- pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                      --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                       )  
               ) 
 ORDER BY 
       pvrtn.SPECIFIC_SCHEMA_ID
     , pvrtn.SPECIFIC_ID
     , pvrtn.GRANTOR_ID
     , pvrtn.GRANTEE_ID
;

View created.

Elapsed time: 1.40000 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.DBA_PROC_PRIVS
        IS 'DBA_PROC_PRIVS describes all procedure grants in the database.';

Comment created.

Elapsed time: 0.12200 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_PROC_PRIVS.GRANTOR
        IS 'Name of the user who performed the grant';

Comment created.

Elapsed time: 0.14100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_PROC_PRIVS.GRANTEE
        IS 'Name of the user or role to whom access was granted';

Comment created.

Elapsed time: 0.18900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_PROC_PRIVS.PROCEDURE_OWNER 
        IS 'Owner of the procedure, function or package';

Comment created.

Elapsed time: 0.13800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_PROC_PRIVS.PROCEDURE_SCHEMA 
        IS 'Schema of the procedure, function or package';

Comment created.

Elapsed time: 0.14600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_PROC_PRIVS.PROCEDURE_NAME 
        IS 'Name of the procedure, function or package';

Comment created.

Elapsed time: 0.14100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_PROC_PRIVS.PRIVILEGE
        IS 'Privilege on the procedure, function or package';

Comment created.

Elapsed time: 0.16500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.DBA_PROC_PRIVS.GRANTABLE
        IS 'Indicates whether the privilege was granted with the GRANT OPTION (YES) or not (NO)';

Comment created.

Elapsed time: 0.13900 ms 


--#####################
--# grant view
--#####################

--GRANT SELECT ON TABLE DICTIONARY_SCHEMA.DBA_PROC_PRIVS TO DBA;
GRANT SELECT ON TABLE DICTIONARY_SCHEMA.DBA_PROC_PRIVS TO PUBLIC;

Grant succeeded.

Elapsed time: 0.12400 ms 


COMMIT;

Commit complete.

Elapsed time: 0.11200 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS DBA_PROC_PRIVS;

Synonym dropped.

Elapsed time: 0.07200 ms 

CREATE PUBLIC SYNONYM DBA_PROC_PRIVS FOR DICTIONARY_SCHEMA.DBA_PROC_PRIVS;

Synonym created.

Elapsed time: 0.08700 ms 

COMMIT;

Commit complete.

Elapsed time: 0.03800 ms 



--##############################################################
--# DICTIONARY_SCHEMA.ALL_PROC_PRIVS
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.ALL_PROC_PRIVS;

View dropped.

Elapsed time: 1.20900 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.ALL_PROC_PRIVS
(
       GRANTOR
     , GRANTEE
     , PROCEDURE_OWNER 
     , PROCEDURE_SCHEMA 
     , PROCEDURE_NAME 
     , PRIVILEGE
     , GRANTABLE
)
AS
SELECT
       grantor.AUTHORIZATION_NAME
     , grantee.AUTHORIZATION_NAME
     , owner.AUTHORIZATION_NAME
     , sch.SCHEMA_NAME
     , rtn.SPECIFIC_NAME
     , CAST( 'EXECUTE' AS VARCHAR(32 OCTETS) )
     , CAST( CASE WHEN pvrtn.IS_GRANTABLE = TRUE THEN 'YES' ELSE 'NO' END AS VARCHAR(3 OCTETS) )
  FROM
       DEFINITION_SCHEMA.ROUTINE_PRIVILEGES  AS pvrtn
     , DEFINITION_SCHEMA.ROUTINES            AS rtn
     , DEFINITION_SCHEMA.SCHEMATA            AS sch 
     , DEFINITION_SCHEMA.AUTHORIZATIONS      AS grantor
     , DEFINITION_SCHEMA.AUTHORIZATIONS      AS grantee
     , DEFINITION_SCHEMA.AUTHORIZATIONS      AS owner
 WHERE
       grantor.AUTHORIZATION_NAME <> '_SYSTEM'
   AND pvrtn.SPECIFIC_SCHEMA_ID   = rtn.SPECIFIC_SCHEMA_ID
   AND pvrtn.SPECIFIC_ID          = rtn.SPECIFIC_ID
   AND pvrtn.SPECIFIC_SCHEMA_ID   = sch.SCHEMA_ID
   AND pvrtn.GRANTOR_ID           = grantor.AUTH_ID
   AND pvrtn.GRANTEE_ID           = grantee.AUTH_ID
   AND rtn.SPECIFIC_OWNER_ID      = owner.AUTH_ID
   AND ( grantee.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )
      -- OR  
      -- pvtab.GRANTEE_ID IN ( SELECT AUTH_ID 
      --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
         OR
         grantor.AUTHORIZATION_NAME = CURRENT_USER
         OR
         owner.AUTHORIZATION_NAME = CURRENT_USER
       )
 ORDER BY 
       pvrtn.SPECIFIC_SCHEMA_ID
     , pvrtn.SPECIFIC_ID
     , pvrtn.GRANTOR_ID
     , pvrtn.GRANTEE_ID
;

View created.

Elapsed time: 1.25400 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.ALL_PROC_PRIVS
        IS 'ALL_PROC_PRIVS describes the procedure grants, for which the current user is the procedure owner, grantor, or grantee, or for which an enabled role or PUBLIC is the grantee.';

Comment created.

Elapsed time: 0.12100 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_PROC_PRIVS.GRANTOR
        IS 'Name of the user who performed the grant';

Comment created.

Elapsed time: 0.14000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_PROC_PRIVS.GRANTEE
        IS 'Name of the user or role to whom access was granted';

Comment created.

Elapsed time: 0.17100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_PROC_PRIVS.PROCEDURE_OWNER 
        IS 'Owner of the procedure, function or package';

Comment created.

Elapsed time: 0.17700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_PROC_PRIVS.PROCEDURE_SCHEMA 
        IS 'Schema of the procedure, function or package';

Comment created.

Elapsed time: 0.13600 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_PROC_PRIVS.PROCEDURE_NAME 
        IS 'Name of the procedure, function or package';

Comment created.

Elapsed time: 0.13400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_PROC_PRIVS.PRIVILEGE
        IS 'Privilege on the procedure, function or package';

Comment created.

Elapsed time: 0.13300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_PROC_PRIVS.GRANTABLE
        IS 'Indicates whether the privilege was granted with the GRANT OPTION (YES) or not (NO)';

Comment created.

Elapsed time: 0.16400 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.ALL_PROC_PRIVS TO PUBLIC;

Grant succeeded.

Elapsed time: 0.11500 ms 


COMMIT;

Commit complete.

Elapsed time: 0.11200 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS ALL_PROC_PRIVS;

Synonym dropped.

Elapsed time: 0.07000 ms 

CREATE PUBLIC SYNONYM ALL_PROC_PRIVS FOR DICTIONARY_SCHEMA.ALL_PROC_PRIVS;

Synonym created.

Elapsed time: 0.08300 ms 

COMMIT;

Commit complete.

Elapsed time: 0.03700 ms 


--##############################################################
--# DICTIONARY_SCHEMA.USER_PROC_PRIVS
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.USER_PROC_PRIVS;

View dropped.

Elapsed time: 1.01300 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.USER_PROC_PRIVS
(
       GRANTOR
     , GRANTEE
     , PROCEDURE_OWNER 
     , PROCEDURE_SCHEMA 
     , PROCEDURE_NAME 
     , PRIVILEGE
     , GRANTABLE
)
AS
SELECT
       pvprc.GRANTOR
     , pvprc.GRANTEE
     , pvprc.PROCEDURE_OWNER 
     , pvprc.PROCEDURE_SCHEMA 
     , pvprc.PROCEDURE_NAME 
     , pvprc.PRIVILEGE
     , pvprc.GRANTABLE
  FROM
       DICTIONARY_SCHEMA.ALL_PROC_PRIVS pvprc
 WHERE 
       pvprc.PROCEDURE_OWNER = CURRENT_USER
    OR pvprc.GRANTOR         = CURRENT_USER
    OR pvprc.GRANTEE         = CURRENT_USER
;

View created.

Elapsed time: 1.47100 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.USER_PROC_PRIVS
        IS 'USER_PROC_PRIVS describes the procedure grants for which the current user is the procedure owner, grantor, or grantee.';

Comment created.

Elapsed time: 0.14200 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_PROC_PRIVS.GRANTOR
        IS 'Name of the user who performed the grant';

Comment created.

Elapsed time: 0.16900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_PROC_PRIVS.GRANTEE
        IS 'Name of the user or role to whom access was granted';

Comment created.

Elapsed time: 0.14200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_PROC_PRIVS.PROCEDURE_OWNER 
        IS 'Owner of the procedure, function or package';

Comment created.

Elapsed time: 0.13700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_PROC_PRIVS.PROCEDURE_SCHEMA 
        IS 'Schema of the procedure, function or package';

Comment created.

Elapsed time: 0.14000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_PROC_PRIVS.PROCEDURE_NAME 
        IS 'Name of the procedure, function or package';

Comment created.

Elapsed time: 0.14400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_PROC_PRIVS.PRIVILEGE
        IS 'Privilege on the procedure, function or package';

Comment created.

Elapsed time: 0.14200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_PROC_PRIVS.GRANTABLE
        IS 'Indicates whether the privilege was granted with the GRANT OPTION (YES) or not (NO)';

Comment created.

Elapsed time: 0.14200 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.USER_PROC_PRIVS TO PUBLIC;

Grant succeeded.

Elapsed time: 0.12200 ms 


COMMIT;

Commit complete.

Elapsed time: 0.14100 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS USER_PROC_PRIVS;

Synonym dropped.

Elapsed time: 0.07700 ms 

CREATE PUBLIC SYNONYM USER_PROC_PRIVS FOR DICTIONARY_SCHEMA.USER_PROC_PRIVS;

Synonym created.

Elapsed time: 0.08500 ms 

COMMIT;

Commit complete.

Elapsed time: 0.03900 ms 


--##############################################################
--# DICTIONARY_SCHEMA.ALL_PROC_PRIVS_MADE
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.ALL_PROC_PRIVS_MADE;

View dropped.

Elapsed time: 1.00600 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.ALL_PROC_PRIVS_MADE
(
       GRANTOR
     , GRANTEE
     , PROCEDURE_OWNER 
     , PROCEDURE_SCHEMA 
     , PROCEDURE_NAME 
     , PRIVILEGE
     , GRANTABLE
)
AS
SELECT
       GRANTOR
     , GRANTEE
     , PROCEDURE_OWNER 
     , PROCEDURE_SCHEMA 
     , PROCEDURE_NAME 
     , PRIVILEGE
     , GRANTABLE
  FROM
       DICTIONARY_SCHEMA.ALL_PROC_PRIVS  AS pvprc
 WHERE 
       pvprc.PROCEDURE_OWNER = CURRENT_USER
    OR pvprc.GRANTOR         = CURRENT_USER
;

View created.

Elapsed time: 1.44900 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.ALL_PROC_PRIVS_MADE
        IS 'ALL_PROC_PRIVS_MADE describes the procedure grants for which the current user is the procedure owner or grantor.';

Comment created.

Elapsed time: 0.14400 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_PROC_PRIVS_MADE.GRANTOR
        IS 'Name of the user who performed the grant';

Comment created.

Elapsed time: 0.14100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_PROC_PRIVS_MADE.GRANTEE
        IS 'Name of the user or role to whom access was granted';

Comment created.

Elapsed time: 0.13700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_PROC_PRIVS_MADE.PROCEDURE_OWNER 
        IS 'Owner of the procedure, function or package';

Comment created.

Elapsed time: 0.13800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_PROC_PRIVS_MADE.PROCEDURE_SCHEMA 
        IS 'Schema of the procedure, function or package';

Comment created.

Elapsed time: 0.14200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_PROC_PRIVS_MADE.PROCEDURE_NAME 
        IS 'Name of the procedure, function or package';

Comment created.

Elapsed time: 0.15200 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_PROC_PRIVS_MADE.PRIVILEGE
        IS 'Privilege on the procedure, function or package';

Comment created.

Elapsed time: 0.15000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_PROC_PRIVS_MADE.GRANTABLE
        IS 'Indicates whether the privilege was granted with the GRANT OPTION (YES) or not (NO)';

Comment created.

Elapsed time: 0.15000 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.ALL_PROC_PRIVS_MADE TO PUBLIC;

Grant succeeded.

Elapsed time: 0.12600 ms 


COMMIT;

Commit complete.

Elapsed time: 0.13500 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS ALL_PROC_PRIVS_MADE;

Synonym dropped.

Elapsed time: 0.07000 ms 

CREATE PUBLIC SYNONYM ALL_PROC_PRIVS_MADE FOR DICTIONARY_SCHEMA.ALL_PROC_PRIVS_MADE;

Synonym created.

Elapsed time: 0.09300 ms 

COMMIT;

Commit complete.

Elapsed time: 0.03700 ms 


--##############################################################
--# DICTIONARY_SCHEMA.USER_PROC_PRIVS_MADE
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.USER_PROC_PRIVS_MADE;

View dropped.

Elapsed time: 1.01700 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.USER_PROC_PRIVS_MADE
(
       GRANTOR
     , GRANTEE
     , PROCEDURE_OWNER 
     , PROCEDURE_SCHEMA 
     , PROCEDURE_NAME 
     , PRIVILEGE
     , GRANTABLE
)
AS
SELECT
       pvprc.GRANTOR
     , pvprc.GRANTEE
     , pvprc.PROCEDURE_OWNER 
     , pvprc.PROCEDURE_SCHEMA 
     , pvprc.PROCEDURE_NAME 
     , pvprc.PRIVILEGE
     , pvprc.GRANTABLE
  FROM
       DICTIONARY_SCHEMA.ALL_PROC_PRIVS pvprc
 WHERE 
       pvprc.PROCEDURE_OWNER = CURRENT_USER
;

View created.

Elapsed time: 1.40300 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.USER_PROC_PRIVS_MADE
        IS 'USER_PROC_PRIVS_MADE describes the procedure grants for which the current user is the procedure owner.';

Comment created.

Elapsed time: 0.12400 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_PROC_PRIVS_MADE.GRANTOR
        IS 'Name of the user who performed the grant';

Comment created.

Elapsed time: 0.14100 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_PROC_PRIVS_MADE.GRANTEE
        IS 'Name of the user or role to whom access was granted';

Comment created.

Elapsed time: 0.13700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_PROC_PRIVS_MADE.PROCEDURE_OWNER 
        IS 'Owner of the procedure, function or package';

Comment created.

Elapsed time: 0.13400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_PROC_PRIVS_MADE.PROCEDURE_SCHEMA 
        IS 'Schema of the procedure, function or package';

Comment created.

Elapsed time: 0.14300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_PROC_PRIVS_MADE.PROCEDURE_NAME 
        IS 'Name of the procedure, function or package';

Comment created.

Elapsed time: 0.13300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_PROC_PRIVS_MADE.PRIVILEGE
        IS 'Privilege on the procedure, function or package';

Comment created.

Elapsed time: 0.13300 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_PROC_PRIVS_MADE.GRANTABLE
        IS 'Indicates whether the privilege was granted with the GRANT OPTION (YES) or not (NO)';

Comment created.

Elapsed time: 0.16600 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.USER_PROC_PRIVS_MADE TO PUBLIC;

Grant succeeded.

Elapsed time: 0.12200 ms 


COMMIT;

Commit complete.

Elapsed time: 0.10900 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS USER_PROC_PRIVS_MADE;

Synonym dropped.

Elapsed time: 0.07000 ms 

CREATE PUBLIC SYNONYM USER_PROC_PRIVS_MADE FOR DICTIONARY_SCHEMA.USER_PROC_PRIVS_MADE;

Synonym created.

Elapsed time: 0.08400 ms 

COMMIT;

Commit complete.

Elapsed time: 0.04600 ms 



--##############################################################
--# DICTIONARY_SCHEMA.ALL_PROC_PRIVS_RECD
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.ALL_PROC_PRIVS_RECD;

View dropped.

Elapsed time: 0.99300 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.ALL_PROC_PRIVS_RECD
(
       GRANTOR
     , GRANTEE
     , PROCEDURE_OWNER 
     , PROCEDURE_SCHEMA 
     , PROCEDURE_NAME 
     , PRIVILEGE
     , GRANTABLE
)
AS
SELECT
       GRANTOR
     , GRANTEE
     , PROCEDURE_OWNER 
     , PROCEDURE_SCHEMA 
     , PROCEDURE_NAME 
     , PRIVILEGE
     , GRANTABLE
  FROM
       DICTIONARY_SCHEMA.ALL_PROC_PRIVS  AS pvprc
 WHERE 
       ( 
         pvprc.GRANTEE IN ( CURRENT_USER, 'PUBLIC' )
      -- OR  
      -- pvsqc.GRANTEE IN ( SELECT AUTH_NAME 
      --                      FROM INORMATION_SCHEMA.ENABLED_ROLES )  
       )
;

View created.

Elapsed time: 1.46800 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.ALL_PROC_PRIVS_RECD
        IS 'ALL_PROC_PRIVS_RECD describes the procedure grants, for which the current user is the grantee, or for which an enabled role or PUBLIC is the grantee.';

Comment created.

Elapsed time: 0.12500 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_PROC_PRIVS_RECD.GRANTOR
        IS 'Name of the user who performed the grant';

Comment created.

Elapsed time: 0.17000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_PROC_PRIVS_RECD.GRANTEE
        IS 'Name of the user or role to whom access was granted';

Comment created.

Elapsed time: 0.14700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_PROC_PRIVS_RECD.PROCEDURE_OWNER 
        IS 'Owner of the procedure, function or package';

Comment created.

Elapsed time: 0.13800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_PROC_PRIVS_RECD.PROCEDURE_SCHEMA 
        IS 'Schema of the procedure, function or package';

Comment created.

Elapsed time: 0.13800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_PROC_PRIVS_RECD.PROCEDURE_NAME 
        IS 'Name of the procedure, function or package';

Comment created.

Elapsed time: 0.13500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_PROC_PRIVS_RECD.PRIVILEGE
        IS 'Privilege on the procedure, function or package';

Comment created.

Elapsed time: 0.13900 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.ALL_PROC_PRIVS_RECD.GRANTABLE
        IS 'Indicates whether the privilege was granted with the GRANT OPTION (YES) or not (NO)';

Comment created.

Elapsed time: 0.13500 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.ALL_PROC_PRIVS_RECD TO PUBLIC;

Grant succeeded.

Elapsed time: 0.12200 ms 


COMMIT;

Commit complete.

Elapsed time: 0.11200 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS ALL_PROC_PRIVS_RECD;

Synonym dropped.

Elapsed time: 0.06900 ms 

CREATE PUBLIC SYNONYM ALL_PROC_PRIVS_RECD FOR DICTIONARY_SCHEMA.ALL_PROC_PRIVS_RECD;

Synonym created.

Elapsed time: 0.08400 ms 

COMMIT;

Commit complete.

Elapsed time: 0.03700 ms 



--##############################################################
--# DICTIONARY_SCHEMA.USER_PROC_PRIVS_RECD
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS DICTIONARY_SCHEMA.USER_PROC_PRIVS_RECD;

View dropped.

Elapsed time: 1.03200 ms 


--#####################
--# create view
--#####################

CREATE VIEW DICTIONARY_SCHEMA.USER_PROC_PRIVS_RECD
(
       GRANTOR
     , GRANTEE
     , PROCEDURE_OWNER 
     , PROCEDURE_SCHEMA 
     , PROCEDURE_NAME 
     , PRIVILEGE
     , GRANTABLE
)
AS
SELECT
       pvprc.GRANTOR
     , pvprc.GRANTEE
     , pvprc.PROCEDURE_OWNER 
     , pvprc.PROCEDURE_SCHEMA 
     , pvprc.PROCEDURE_NAME 
     , pvprc.PRIVILEGE
     , pvprc.GRANTABLE
  FROM
       DICTIONARY_SCHEMA.ALL_PROC_PRIVS pvprc
 WHERE 
       pvprc.GRANTEE        = CURRENT_USER
;

View created.

Elapsed time: 1.39300 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE DICTIONARY_SCHEMA.USER_PROC_PRIVS_RECD
        IS 'USER_PROC_PRIVS_RECD describes the procedure grants for which the current user is the grantee.';

Comment created.

Elapsed time: 0.13200 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_PROC_PRIVS_RECD.GRANTOR
        IS 'Name of the user who performed the grant';

Comment created.

Elapsed time: 0.17700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_PROC_PRIVS_RECD.GRANTEE
        IS 'Name of the user or role to whom access was granted';

Comment created.

Elapsed time: 0.16400 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_PROC_PRIVS_RECD.PROCEDURE_OWNER 
        IS 'Owner of the procedure, function or package';

Comment created.

Elapsed time: 0.13700 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_PROC_PRIVS_RECD.PROCEDURE_SCHEMA 
        IS 'Schema of the procedure, function or package';

Comment created.

Elapsed time: 0.13800 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_PROC_PRIVS_RECD.PROCEDURE_NAME 
        IS 'Name of the procedure, function or package';

Comment created.

Elapsed time: 0.14500 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_PROC_PRIVS_RECD.PRIVILEGE
        IS 'Privilege on the procedure, function or package';

Comment created.

Elapsed time: 0.15000 ms 

COMMENT ON COLUMN DICTIONARY_SCHEMA.USER_PROC_PRIVS_RECD.GRANTABLE
        IS 'Indicates whether the privilege was granted with the GRANT OPTION (YES) or not (NO)';

Comment created.

Elapsed time: 0.15200 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE DICTIONARY_SCHEMA.USER_PROC_PRIVS_RECD TO PUBLIC;

Grant succeeded.

Elapsed time: 0.11500 ms 


COMMIT;

Commit complete.

Elapsed time: 0.11000 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS USER_PROC_PRIVS_RECD;

Synonym dropped.

Elapsed time: 0.08300 ms 

CREATE PUBLIC SYNONYM USER_PROC_PRIVS_RECD FOR DICTIONARY_SCHEMA.USER_PROC_PRIVS_RECD;

Synonym created.

Elapsed time: 0.09100 ms 

COMMIT;

Commit complete.

Elapsed time: 0.04300 ms 



--###################################################################################
--# build views of INFORMATION_SCHEMA
--###################################################################################

--##############################################################
--# SYS AUTHORIZATION
--##############################################################

SET SESSION AUTHORIZATION SYS;

Session set.

Elapsed time: 0.12500 ms 


--##############################################################
--# INFORMATION_SCHEMA.WHOLE_TABLES
--# internal use only
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS INFORMATION_SCHEMA.WHOLE_TABLES;

View dropped.

Elapsed time: 6.61500 ms 


--#####################
--# create view
--#####################

CREATE VIEW INFORMATION_SCHEMA.WHOLE_TABLES
(
       OWNER_ID
     , SCHEMA_ID
     , TABLE_ID
     , TABLESPACE_ID
     , TABLE_NAME
     , TABLE_TYPE
     , TABLE_TYPE_ID
     , SYSTEM_VERSION_START_COLUMN_NAME
     , SYSTEM_VERSION_END_COLUMN_NAME
     , SYSTEM_VERSION_RETENTION_PERIOD
     , SELF_REFERENCING_COLUMN_NAME
     , REFERENCE_GENERATION
     , USER_DEFINED_TYPE_OWNER_ID
     , USER_DEFINED_TYPE_SCHEMA_ID
     , USER_DEFINED_TYPE_ID
     , IS_INSERTABLE_INTO
     , IS_TYPED
     , COMMIT_ACTION
     , IS_SET_SUPPLOG_PK
     , CREATED_TIME
     , MODIFIED_TIME
     , COMMENTS
)
AS
SELECT 
       OWNER_ID
     , SCHEMA_ID
     , TABLE_ID
     , TABLESPACE_ID
     , TABLE_NAME
     , TABLE_TYPE
     , TABLE_TYPE_ID
     , SYSTEM_VERSION_START_COLUMN_NAME
     , SYSTEM_VERSION_END_COLUMN_NAME
     , SYSTEM_VERSION_RETENTION_PERIOD
     , SELF_REFERENCING_COLUMN_NAME
     , REFERENCE_GENERATION
     , USER_DEFINED_TYPE_OWNER_ID
     , USER_DEFINED_TYPE_SCHEMA_ID
     , USER_DEFINED_TYPE_ID
     , IS_INSERTABLE_INTO
     , IS_TYPED
     , COMMIT_ACTION
     , IS_SET_SUPPLOG_PK
     , CREATED_TIME
     , MODIFIED_TIME
     , COMMENTS
  FROM DEFINITION_SCHEMA.TABLES
 WHERE TABLE_TYPE <> 'SEQUENCE'
 UNION ALL
SELECT 
       ( SELECT OWNER_ID FROM DEFINITION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = 'FIXED_TABLE_SCHEMA' ) -- OWNER_ID
     , ( SELECT SCHEMA_ID FROM DEFINITION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = 'FIXED_TABLE_SCHEMA' ) -- SCHEMA_ID
     , TABLE_ID
     , NULL -- TABLESPACE_ID
     , TABLE_NAME
     , USAGE_TYPE -- TABLE_TYPE
     , DECODE( USAGE_TYPE, 'FIXED TABLE', 7, 8 )  -- TABLE_TYPE_ID  
     , NULL -- SYSTEM_VERSION_START_COLUMN_NAME
     , NULL -- SYSTEM_VERSION_END_COLUMN_NAME
     , NULL -- SYSTEM_VERSION_RETENTION_PERIOD
     , NULL -- SELF_REFERENCING_COLUMN_NAME
     , NULL -- REFERENCE_GENERATION
     , NULL -- USER_DEFINED_TYPE_OWNER_ID
     , NULL -- USER_DEFINED_TYPE_SCHEMA_ID
     , NULL -- USER_DEFINED_TYPE_ID
     , FALSE -- IS_INSERTABLE_INTO
     , FALSE -- IS_TYPED 
     , NULL -- IS_TYPED
     , FALSE -- IS_SET_SUPPLOG_PK
     , NULL -- CREATED_TIME
     , NULL -- MODIFIED_TIME
     , COMMENTS
  FROM FIXED_TABLE_SCHEMA.X$TABLES;

View created.

Elapsed time: 6.47900 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE INFORMATION_SCHEMA.WHOLE_TABLES
        IS 'internal use only';

Comment created.

Elapsed time: 0.27200 ms 


--#####################
--# comment column
--#####################


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE INFORMATION_SCHEMA.WHOLE_TABLES TO PUBLIC;

Grant succeeded.

Elapsed time: 0.29800 ms 


COMMIT;

Commit complete.

Elapsed time: 0.50900 ms 


--##############################################################
--# INFORMATION_SCHEMA.WHOLE_COLUMNS
--# internal use only
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS INFORMATION_SCHEMA.WHOLE_COLUMNS;

View dropped.

Elapsed time: 5.71400 ms 


--#####################
--# create view
--#####################

CREATE VIEW INFORMATION_SCHEMA.WHOLE_COLUMNS
(
       OWNER_ID
     , SCHEMA_ID
     , TABLE_ID
     , COLUMN_ID
     , COLUMN_NAME
     , PHYSICAL_ORDINAL_POSITION
     , LOGICAL_ORDINAL_POSITION
     , DTD_IDENTIFIER
     , DOMAIN_OWNER_ID
     , DOMAIN_SCHEMA_ID 
     , DOMAIN_ID   
     , COLUMN_DEFAULT  
     , IS_NULLABLE     
     , IS_SELF_REFERENCING 
     , IS_IDENTITY         
     , IDENTITY_GENERATION 
     , IDENTITY_GENERATION_ID 
     , IDENTITY_START     
     , IDENTITY_INCREMENT 
     , IDENTITY_MAXIMUM   
     , IDENTITY_MINIMUM   
     , IDENTITY_CYCLE     
     , IDENTITY_PHYSICAL_ID   
     , IDENTITY_CACHE_SIZE    
     , IS_GENERATED           
     , IS_SYSTEM_VERSION_START  
     , IS_SYSTEM_VERSION_END    
     , SYSTEM_VERSION_TIMESTAMP_GENERATION 
     , IS_UPDATABLE                        
     , IS_UNUSED                           
     , COMMENTS        
)
AS
SELECT 
       OWNER_ID
     , SCHEMA_ID
     , TABLE_ID
     , COLUMN_ID
     , COLUMN_NAME
     , PHYSICAL_ORDINAL_POSITION
     , LOGICAL_ORDINAL_POSITION
     , DTD_IDENTIFIER
     , DOMAIN_OWNER_ID
     , DOMAIN_SCHEMA_ID 
     , DOMAIN_ID   
     , COLUMN_DEFAULT  
     , IS_NULLABLE     
     , IS_SELF_REFERENCING 
     , IS_IDENTITY         
     , IDENTITY_GENERATION 
     , IDENTITY_GENERATION_ID 
     , IDENTITY_START     
     , IDENTITY_INCREMENT 
     , IDENTITY_MAXIMUM   
     , IDENTITY_MINIMUM   
     , IDENTITY_CYCLE     
     , IDENTITY_PHYSICAL_ID   
     , IDENTITY_CACHE_SIZE    
     , IS_GENERATED           
     , IS_SYSTEM_VERSION_START  
     , IS_SYSTEM_VERSION_END    
     , SYSTEM_VERSION_TIMESTAMP_GENERATION 
     , IS_UPDATABLE                        
     , IS_UNUSED      
     , COMMENTS        
  FROM DEFINITION_SCHEMA.COLUMNS
 UNION ALL
SELECT 
       ( SELECT OWNER_ID FROM DEFINITION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = 'FIXED_TABLE_SCHEMA' ) -- OWNER_ID
     , ( SELECT SCHEMA_ID FROM DEFINITION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = 'FIXED_TABLE_SCHEMA' ) -- SCHEMA_ID
     , TABLE_ID
     , COLUMN_ID
     , COLUMN_NAME
     , ORDINAL_POSITION
     , ORDINAL_POSITION
     , COLUMN_ID -- DTD_IDENTIFIER
     , NULL -- DOMAIN_OWNER_ID
     , NULL -- DOMAIN_SCHEMA_ID
     , NULL -- DOMAIN_ID   
     , NULL -- COLUMN_DEFAULT  
     , FALSE -- IS_NULLABLE     
     , FALSE -- IS_SELF_REFERENCING 
     , FALSE -- IS_IDENTITY         
     , NULL -- IDENTITY_GENERATION 
     , NULL -- IDENTITY_GENERATION_ID 
     , NULL -- IDENTITY_START     
     , NULL -- IDENTITY_INCREMENT 
     , NULL -- IDENTITY_MAXIMUM   
     , NULL -- IDENTITY_MINIMUM   
     , NULL -- IDENTITY_CYCLE     
     , NULL -- IDENTITY_PHYSICAL_ID   
     , NULL -- IDENTITY_CACHE_SIZE    
     , FALSE -- IS_GENERATED           
     , FALSE -- IS_SYSTEM_VERSION_START  
     , FALSE -- IS_SYSTEM_VERSION_END    
     , NULL -- SYSTEM_VERSION_TIMESTAMP_GENERATION 
     , FALSE -- IS_UPDATABLE                        
     , FALSE -- IS_UNUSED                           
     , COMMENTS        
  FROM FIXED_TABLE_SCHEMA.X$COLUMNS
;

View created.

Elapsed time: 7.23800 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE INFORMATION_SCHEMA.WHOLE_COLUMNS
        IS 'internal use only';

Comment created.

Elapsed time: 0.23900 ms 


--#####################
--# comment column
--#####################


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE INFORMATION_SCHEMA.WHOLE_COLUMNS TO PUBLIC;

Grant succeeded.

Elapsed time: 0.24700 ms 


COMMIT;

Commit complete.

Elapsed time: 0.59300 ms 


--##############################################################
--# INFORMATION_SCHEMA.WHOLE_DTDS
--# internal use only
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS INFORMATION_SCHEMA.WHOLE_DTDS;

View dropped.

Elapsed time: 7.02500 ms 


--#####################
--# create view
--#####################

CREATE VIEW INFORMATION_SCHEMA.WHOLE_DTDS
(
       OBJECT_OWNER_ID
     , OBJECT_SCHEMA_ID
     , OBJECT_ID
     , OBJECT_TYPE
     , DTD_IDENTIFIER
     , DATA_TYPE 
     , DATA_TYPE_ID
     , CHARACTER_SET_OWNER_ID
     , CHARACTER_SET_SCHEMA_ID
     , CHARACTER_SET_ID
     , STRING_LENGTH_UNIT
     , STRING_LENGTH_UNIT_ID
     , CHARACTER_MAXIMUM_LENGTH
     , CHARACTER_OCTET_LENGTH
     , COLLATION_OWNER_ID
     , COLLATION_SCHEMA_ID
     , COLLATION_ID 
     , NUMERIC_PRECISION 
     , NUMERIC_PRECISION_RADIX
     , NUMERIC_SCALE 
     , DECLARED_DATA_TYPE
     , DECLARED_NUMERIC_PRECISION
     , DECLARED_NUMERIC_SCALE
     , DATETIME_PRECISION
     , INTERVAL_TYPE
     , INTERVAL_TYPE_ID
     , INTERVAL_PRECISION
     , USER_DEFINED_TYPE_SCHEMA_NAME
     , USER_DEFINED_TYPE_MODULE_NAME
     , USER_DEFINED_TYPE_NAME
     , SCOPE_OWNER_ID
     , SCOPE_SCHEMA_ID
     , SCOPE_ID
     , ATTR_TYPE_SCHEMA_NAME
     , ATTR_TYPE_TABLE_NAME
     , ATTR_TYPE_COLUMN_NAME
     , MAXIMUM_CARDINALITY
     , PHYSICAL_MAXIMUM_LENGTH
)
AS
SELECT
       OBJECT_OWNER_ID
     , OBJECT_SCHEMA_ID
     , OBJECT_ID
     , OBJECT_TYPE
     , DTD_IDENTIFIER
     , CAST( CASE WHEN DATA_TYPE IN ( 'INTERVAL YEAR TO MONTH', 'INTERVAL DAY TO SECOND' )
                       THEN 'INTERVAL ' || INTERVAL_TYPE 
                  WHEN ( DATA_TYPE = 'NUMBER' AND NUMERIC_PRECISION_RADIX = 2 )
                       THEN 'FLOAT'
                  ELSE DATA_TYPE
                  END
             AS VARCHAR(128 OCTETS) ) -- DATA_TYPE
     , DATA_TYPE_ID
     , CHARACTER_SET_OWNER_ID
     , CHARACTER_SET_SCHEMA_ID
     , CHARACTER_SET_ID
     , STRING_LENGTH_UNIT
     , STRING_LENGTH_UNIT_ID
     , CHARACTER_MAXIMUM_LENGTH
     , CHARACTER_OCTET_LENGTH
     , COLLATION_OWNER_ID
     , COLLATION_SCHEMA_ID 
     , COLLATION_ID 
     , NUMERIC_PRECISION 
     , NUMERIC_PRECISION_RADIX
     , CAST( CASE WHEN NUMERIC_SCALE BETWEEN -256 AND 256
                  THEN NUMERIC_SCALE
                  ELSE NULL
                  END 
             AS NUMBER ) 
     , DECLARED_DATA_TYPE
     , DECLARED_NUMERIC_PRECISION
     , DECLARED_NUMERIC_SCALE
     , DATETIME_PRECISION
     , INTERVAL_TYPE
     , INTERVAL_TYPE_ID
     , INTERVAL_PRECISION
     , USER_DEFINED_TYPE_SCHEMA_NAME
     , USER_DEFINED_TYPE_MODULE_NAME
     , USER_DEFINED_TYPE_NAME
     , SCOPE_OWNER_ID
     , SCOPE_SCHEMA_ID
     , SCOPE_ID
     , ATTR_TYPE_SCHEMA_NAME
     , ATTR_TYPE_TABLE_NAME
     , ATTR_TYPE_COLUMN_NAME
     , MAXIMUM_CARDINALITY
     , PHYSICAL_MAXIMUM_LENGTH
  FROM DEFINITION_SCHEMA.DATA_TYPE_DESCRIPTOR
 UNION ALL
SELECT
       ( SELECT OWNER_ID FROM DEFINITION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = 'FIXED_TABLE_SCHEMA' )  -- OBJECT_OWNER_ID
     , ( SELECT SCHEMA_ID FROM DEFINITION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = 'FIXED_TABLE_SCHEMA' ) -- OBJECT_SCHEMA_ID
     , TABLE_ID  -- OBJECT_ID
     , 'TABLE'
     , COLUMN_ID -- DTD_IDENTIFIER
     , DATA_TYPE 
     , DATA_TYPE_ID
     , NULL -- CHARACTER_SET_OWNER_ID
     , NULL -- CHARACTER_SET_SCHEMA_ID
     , NULL -- CHARACTER_SET_ID
     , DECODE( DATA_TYPE, 'CHARACTER VARYING', 'OCTETS', NULL ) -- STRING_LENGTH_UNIT
     , DECODE( DATA_TYPE, 'CHARACTER VARYING', 2, NULL ) -- STRING_LENGTH_UNIT_ID
     , DECODE( DATA_TYPE, 'CHARACTER VARYING', 128, NULL ) -- CHARACTER_MAXIMUM_LENGTH
     , DECODE( DATA_TYPE, 'CHARACTER VARYING', 128, NULL ) -- CHARACTER_OCTET_LENGTH
     , NULL -- COLLATION_OWNER_ID
     , NULL -- COLLATION_SCHEMA_ID 
     , NULL -- COLLATION_ID 
     , DECODE( DATA_TYPE, 'NATIVE_SMALLINT', 16, 'NATIVE_INTEGER', 32, 'NATIVE_BIGINT', 64, 'NATIVE_REAL', 24, 'NATIVE_DOUBLE', 53, NULL ) -- NUMERIC_PRECISION 
     , DECODE( DATA_TYPE, 'NATIVE_SMALLINT', 2, 'NATIVE_INTEGER', 2, 'NATIVE_BIGINT', 2, 'NATIVE_REAL', 2, 'NATIVE_DOUBLE', 2, NULL ) -- NUMERIC_PRECISION_RADIX
     , DECODE( DATA_TYPE, 'NATIVE_SMALLINT', 0, 'NATIVE_INTEGER', 0, 'NATIVE_BIGINT', 0, 'NATIVE_REAL', NULL, 'NATIVE_DOUBLE', NULL, NULL ) -- NUMERIC_SCALE 
     , DATA_TYPE -- DECLARED_DATA_TYPE
     , DECODE( DATA_TYPE, 'CHARACTER VARYING', COLUMN_LENGTH, NULL ) -- DECLARED_NUMERIC_PRECISION
     , NULL -- DECLARED_NUMERIC_SCALE
     , DECODE( DATA_TYPE, 'TIMESTAMP WITHOUT TIME ZONE', 6, NULL ) -- DATETIME_PRECISION
     , NULL -- INTERVAL_TYPE
     , NULL -- INTERVAL_TYPE_ID
     , NULL -- INTERVAL_PRECISION
     , NULL -- USER_DEFINED_TYPE_SCHEMA_NAME
     , NULL -- USER_DEFINED_TYPE_MODULE_NAME
     , NULL -- USER_DEFINED_TYPE_NAME
     , NULL -- SCOPE_OWNER_ID
     , NULL -- SCOPE_SCHEMA_ID
     , NULL -- SCOPE_ID
     , NULL -- ATTR_TYPE_SCHEMA_NAME
     , NULL -- ATTR_TYPE_TABLE_NAME
     , NULL -- ATTR_TYPE_COLUMN_NAME
     , NULL -- MAXIMUM_CARDINALITY
     , COLUMN_LENGTH  -- PHYSICAL_MAXIMUM_LENGTH
  FROM FIXED_TABLE_SCHEMA.X$COLUMNS
;

View created.

Elapsed time: 8.13800 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE INFORMATION_SCHEMA.WHOLE_DTDS
        IS 'internal use only';

Comment created.

Elapsed time: 0.27800 ms 


--#####################
--# comment column
--#####################


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE INFORMATION_SCHEMA.WHOLE_DTDS TO PUBLIC;

Grant succeeded.

Elapsed time: 0.21900 ms 


COMMIT;

Commit complete.

Elapsed time: 0.62700 ms 


--##############################################################
--# INFORMATION_SCHEMA.COLUMNS
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS INFORMATION_SCHEMA.COLUMNS;

View dropped.

Elapsed time: 8.07200 ms 


--#####################
--# create view
--#####################

CREATE VIEW INFORMATION_SCHEMA.COLUMNS 
( 
       TABLE_CATALOG 
     , TABLE_OWNER 
     , TABLE_SCHEMA 
     , TABLE_NAME 
     , COLUMN_NAME 
     , ORDINAL_POSITION 
     , COLUMN_DEFAULT 
     , IS_NULLABLE 
     , DATA_TYPE 
     , CHARACTER_MAXIMUM_LENGTH 
     , CHARACTER_OCTET_LENGTH 
     , NUMERIC_PRECISION 
     , NUMERIC_PRECISION_RADIX 
     , NUMERIC_SCALE 
     , DATETIME_PRECISION 
     , INTERVAL_TYPE 
     , INTERVAL_PRECISION 
     , CHARACTER_SET_CATALOG 
     , CHARACTER_SET_SCHEMA 
     , CHARACTER_SET_NAME 
     , COLLATION_CATALOG 
     , COLLATION_SCHEMA 
     , COLLATION_NAME 
     , DOMAIN_CATALOG 
     , DOMAIN_SCHEMA 
     , DOMAIN_NAME 
     , UDT_CATALOG 
     , UDT_SCHEMA 
     , UDT_NAME 
     , SCOPE_CATALOG 
     , SCOPE_SCHEMA 
     , SCOPE_NAME 
     , MAXIMUM_CARDINALITY 
     , DTD_IDENTIFIER 
     , IS_SELF_REFERENCING 
     , IS_IDENTITY 
     , IDENTITY_GENERATION 
     , IDENTITY_START 
     , IDENTITY_INCREMENT 
     , IDENTITY_MAXIMUM 
     , IDENTITY_MINIMUM 
     , IDENTITY_CYCLE 
     , IS_GENERATED 
     , GENERATION_EXPRESSION 
     , IS_SYSTEM_VERSION_START 
     , IS_SYSTEM_VERSION_END 
     , SYSTEM_VERSION_TIMESTAMP_GENERATION 
     , IS_UPDATABLE 
     , DECLARED_DATA_TYPE 
     , DECLARED_NUMERIC_PRECISION 
     , DECLARED_NUMERIC_SCALE 
     , COMMENTS 
) 
AS 
SELECT 
       CAST( CURRENT_CATALOG AS VARCHAR(128 OCTETS) ) 
     , auth.AUTHORIZATION_NAME 
     , sch.SCHEMA_NAME 
     , tab.TABLE_NAME 
     , col.COLUMN_NAME 
     , CAST( col.LOGICAL_ORDINAL_POSITION AS NUMBER ) 
     , col.COLUMN_DEFAULT 
     , col.IS_NULLABLE 
     , CAST( dtd.DATA_TYPE AS VARCHAR(128 OCTETS) )
     , CAST( dtd.CHARACTER_MAXIMUM_LENGTH AS NUMBER ) 
     , CAST( dtd.CHARACTER_OCTET_LENGTH AS NUMBER ) 
     , CAST( dtd.NUMERIC_PRECISION AS NUMBER ) 
     , CAST( dtd.NUMERIC_PRECISION_RADIX AS NUMBER ) 
     , CAST( dtd.NUMERIC_SCALE AS NUMBER ) 
     , CAST( dtd.DATETIME_PRECISION AS NUMBER ) 
     , dtd.INTERVAL_TYPE 
     , CAST( dtd.INTERVAL_PRECISION AS NUMBER ) 
     , CAST( NULL AS VARCHAR(128 OCTETS) ) -- dtd.CHARACTER_SET_CATALOG
     , CAST( NULL AS VARCHAR(128 OCTETS) ) -- dtd.CHARACTER_SET_SCHEMA 
     , CAST( NULL AS VARCHAR(128 OCTETS) ) -- dtd.CHARACTER_SET_NAME 
     , CAST( NULL AS VARCHAR(128 OCTETS) ) -- dtd.COLLATION_CATALOG 
     , CAST( NULL AS VARCHAR(128 OCTETS) ) -- dtd.COLLATION_SCHEMA 
     , CAST( NULL AS VARCHAR(128 OCTETS) ) -- dtd.COLLATION_NAME 
     , CAST( NULL AS VARCHAR(128 OCTETS) ) -- col.DOMAIN_CATALOG 
     , CAST( NULL AS VARCHAR(128 OCTETS) ) -- col.DOMAIN_SCHEMA 
     , CAST( NULL AS VARCHAR(128 OCTETS) ) -- col.DOMAIN_NAME 
     , CAST( NULL AS VARCHAR(128 OCTETS) ) -- dtd.USER_DEFINED_TYPE_CATALOG 
     , CAST( NULL AS VARCHAR(128 OCTETS) ) -- dtd.USER_DEFINED_TYPE_SCHEMA 
     , CAST( NULL AS VARCHAR(128 OCTETS) ) -- dtd.USER_DEFINED_TYPE_NAME 
     , CAST( NULL AS VARCHAR(128 OCTETS) ) -- dtd.SCOPE_CATALOG 
     , CAST( NULL AS VARCHAR(128 OCTETS) ) -- dtd.SCOPE_SCHEMA 
     , CAST( NULL AS VARCHAR(128 OCTETS) ) -- dtd.SCOPE_NAME 
     , CAST( dtd.MAXIMUM_CARDINALITY AS NUMBER ) 
     , CAST( dtd.DTD_IDENTIFIER AS NUMBER ) 
     , col.IS_SELF_REFERENCING 
     , col.IS_IDENTITY 
     , col.IDENTITY_GENERATION 
     , CAST( col.IDENTITY_START AS NUMBER ) 
     , CAST( col.IDENTITY_INCREMENT AS NUMBER ) 
     , CAST( col.IDENTITY_MAXIMUM AS NUMBER ) 
     , CAST( col.IDENTITY_MINIMUM AS NUMBER ) 
     , col.IDENTITY_CYCLE 
     , col.IS_GENERATED 
     , CAST( NULL AS VARCHAR(128 OCTETS) ) AS GENERATION_EXPRESSION 
     , col.IS_SYSTEM_VERSION_START 
     , col.IS_SYSTEM_VERSION_END 
     , col.SYSTEM_VERSION_TIMESTAMP_GENERATION 
     , col.IS_UPDATABLE 
     , dtd.DECLARED_DATA_TYPE 
     , CAST( dtd.DECLARED_NUMERIC_PRECISION AS NUMBER ) 
     , CAST( dtd.DECLARED_NUMERIC_SCALE AS NUMBER ) 
     , col.COMMENTS 
  FROM 
       INFORMATION_SCHEMA.WHOLE_COLUMNS       AS col 
     , INFORMATION_SCHEMA.WHOLE_DTDS          AS dtd 
     , INFORMATION_SCHEMA.WHOLE_TABLES        AS tab 
     , DEFINITION_SCHEMA.SCHEMATA             AS sch 
     , DEFINITION_SCHEMA.AUTHORIZATIONS       AS auth 
 WHERE  
       col.IS_UNUSED = FALSE
   AND col.DTD_IDENTIFIER = dtd.DTD_IDENTIFIER 
   AND col.TABLE_ID       = tab.TABLE_ID 
   AND col.SCHEMA_ID      = sch.SCHEMA_ID 
   AND col.OWNER_ID       = auth.AUTH_ID 
   AND ( col.COLUMN_ID IN ( SELECT pvcol.COLUMN_ID 
                              FROM DEFINITION_SCHEMA.COLUMN_PRIVILEGES AS pvcol 
                             WHERE ( pvcol.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                             FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS aucol 
                                                            WHERE aucol.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                         ) 
                                  -- OR  
                                  -- pvcol.GRANTEE_ID IN ( SELECT AUTH_ID 
                                  --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                   )
                          ) 
         OR 
         tab.TABLE_ID IN ( SELECT pvtab.TABLE_ID 
                             FROM DEFINITION_SCHEMA.TABLE_PRIVILEGES AS pvtab 
                            WHERE ( pvtab.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                            FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS autab 
                                                           WHERE autab.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                        ) 
                                 -- OR  
                                 -- pvtab.GRANTEE_ID IN ( SELECT AUTH_ID 
                                 --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                  )  
                          ) 
         OR 
         sch.SCHEMA_ID IN ( SELECT pvsch.SCHEMA_ID 
                              FROM DEFINITION_SCHEMA.SCHEMA_PRIVILEGES AS pvsch 
                             WHERE pvsch.PRIVILEGE_TYPE IN ( 'CONTROL SCHEMA', 'SELECT TABLE', 'INSERT TABLE', 'DELETE TABLE', 'UPDATE TABLE', 'LOCK TABLE' ) 
                               AND ( pvsch.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                             FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS ausch 
                                                            WHERE ausch.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                         ) 
                                  -- OR  
                                  -- pvsch.GRANTEE_ID IN ( SELECT AUTH_ID 
                                  --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                   )  
                          ) 
         OR 
         EXISTS ( SELECT GRANTEE_ID  
                    FROM DEFINITION_SCHEMA.DATABASE_PRIVILEGES pvdba 
                   WHERE pvdba.PRIVILEGE_TYPE IN ( 'SELECT ANY TABLE', 'INSERT ANY TABLE', 'DELETE ANY TABLE', 'UPDATE ANY TABLE', 'LOCK ANY TABLE' ) 
                     AND ( pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                   FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS audba 
                                                  WHERE audba.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                               ) 
                        -- OR  
                        -- pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                        --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                         )  
                ) 
       ) 
ORDER BY 
      col.SCHEMA_ID 
    , col.TABLE_ID 
    , col.PHYSICAL_ORDINAL_POSITION
;

View created.

Elapsed time: 11.08700 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE INFORMATION_SCHEMA.COLUMNS 
        IS 'Identify the columns of tables defined in this cataog that are accessible to given user or role.';

Comment created.

Elapsed time: 0.20300 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN INFORMATION_SCHEMA.COLUMNS.TABLE_CATALOG                    
        IS 'catalog name of the column';

Comment created.

Elapsed time: 0.28200 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.COLUMNS.TABLE_OWNER                      
        IS 'owner name of the column'; 

Comment created.

Elapsed time: 0.22800 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.COLUMNS.TABLE_SCHEMA                     
        IS 'schema name of the column'; 

Comment created.

Elapsed time: 0.22800 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.COLUMNS.TABLE_NAME                       
        IS 'table name of the column'; 

Comment created.

Elapsed time: 0.23400 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.COLUMNS.COLUMN_NAME                      
        IS 'column name';

Comment created.

Elapsed time: 0.21900 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.COLUMNS.ORDINAL_POSITION                 
        IS 'the ordinal position (> 0) of the column in the table';

Comment created.

Elapsed time: 0.21200 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.COLUMNS.COLUMN_DEFAULT                   
        IS 'the default for the column'; 

Comment created.

Elapsed time: 0.21300 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.COLUMNS.IS_NULLABLE                      
        IS 'is nullable of the column'; 

Comment created.

Elapsed time: 0.21200 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.COLUMNS.DATA_TYPE                        
        IS 'the standard name of the data type'; 

Comment created.

Elapsed time: 0.21100 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.COLUMNS.CHARACTER_MAXIMUM_LENGTH         
        IS 'the maximum length in characters';

Comment created.

Elapsed time: 0.21200 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.COLUMNS.CHARACTER_OCTET_LENGTH           
        IS 'the maximum length in octets';

Comment created.

Elapsed time: 0.25400 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.COLUMNS.NUMERIC_PRECISION                
        IS 'the numeric precision of the numerical data type'; 

Comment created.

Elapsed time: 0.24400 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.COLUMNS.NUMERIC_PRECISION_RADIX          
        IS 'the radix ( 2 or 10 ) of the precision of the numerical data type';

Comment created.

Elapsed time: 0.21300 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.COLUMNS.NUMERIC_SCALE                    
        IS 'the numeric scale of the exact numerical data type';

Comment created.

Elapsed time: 0.23000 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.COLUMNS.DATETIME_PRECISION               
        IS 'for a datetime or interval type, the value is the fractional seconds precision';

Comment created.

Elapsed time: 0.22700 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.COLUMNS.INTERVAL_TYPE                    
        IS 'for a interval type, the value is in ( YEAR, MONTH, DAY, HOUR, MINUTE, SECOND, YEAR TO MONTH, DAY TO HOUR, DAY TO MINUTE, DAY TO SECOND, HOUR TO MINUTE, HOUR TO SECOND, MINUTE TO SECOND )';

Comment created.

Elapsed time: 0.22600 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.COLUMNS.INTERVAL_PRECISION               
        IS 'for a interval type, the value is the leading precision';

Comment created.

Elapsed time: 0.23700 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.COLUMNS.CHARACTER_SET_CATALOG            
        IS 'catalog name of the character set if is is a character string type';

Comment created.

Elapsed time: 0.21700 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.COLUMNS.CHARACTER_SET_SCHEMA             
        IS 'schema name of the character set if is is a character string type';

Comment created.

Elapsed time: 0.25400 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.COLUMNS.CHARACTER_SET_NAME               
        IS 'character set name of the character set if is is a character string type';

Comment created.

Elapsed time: 0.22300 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.COLUMNS.COLLATION_CATALOG                
        IS 'catalog name of the applicable collation if is is a character string type';

Comment created.

Elapsed time: 0.22300 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.COLUMNS.COLLATION_SCHEMA                 
        IS 'schema name of the applicable collation if is is a character string type';

Comment created.

Elapsed time: 0.21400 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.COLUMNS.COLLATION_NAME                   
        IS 'collation name of the applicable collation if is is a character string type';

Comment created.

Elapsed time: 0.22100 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.COLUMNS.DOMAIN_CATALOG                   
        IS 'catalog name of the domain used by the column being described';

Comment created.

Elapsed time: 0.21000 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.COLUMNS.DOMAIN_SCHEMA                    
        IS 'schema name of the domain used by the column being described';

Comment created.

Elapsed time: 0.21300 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.COLUMNS.DOMAIN_NAME                      
        IS 'domain name of the domain used by the column being described';

Comment created.

Elapsed time: 0.21700 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.COLUMNS.UDT_CATALOG                      
        IS 'catalog name of the user-defined type of the data type being described';

Comment created.

Elapsed time: 0.24500 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.COLUMNS.UDT_SCHEMA                       
        IS 'schema name of the user-defined type of the data type being described';

Comment created.

Elapsed time: 0.22800 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.COLUMNS.UDT_NAME                         
        IS 'user-defined type name of the user-defined type of the data type being described';

Comment created.

Elapsed time: 0.22300 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.COLUMNS.SCOPE_CATALOG                    
        IS 'catalog name of the referenceable table if DATA_TYPE is REF';

Comment created.

Elapsed time: 0.21800 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.COLUMNS.SCOPE_SCHEMA                     
        IS 'schema name of the referenceable table if DATA_TYPE is REF';

Comment created.

Elapsed time: 0.26900 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.COLUMNS.SCOPE_NAME                       
        IS 'scope name of the referenceable table if DATA_TYPE is REF';

Comment created.

Elapsed time: 0.22600 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.COLUMNS.MAXIMUM_CARDINALITY              
        IS 'maximum cardinality if DATA_TYPE is ARRAY';

Comment created.

Elapsed time: 0.22700 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.COLUMNS.DTD_IDENTIFIER                   
        IS 'data type descriptor identifier';

Comment created.

Elapsed time: 0.21200 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.COLUMNS.IS_SELF_REFERENCING              
        IS 'is a self-referencing column';

Comment created.

Elapsed time: 0.21100 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.COLUMNS.IS_IDENTITY                      
        IS 'is an identity column';

Comment created.

Elapsed time: 0.22400 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.COLUMNS.IDENTITY_GENERATION              
        IS 'for an identity column, the value is in ( ALWAYS, BY DEFAULT )';

Comment created.

Elapsed time: 0.22400 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.COLUMNS.IDENTITY_START                   
        IS 'for an identity column, the start value of the identity column';

Comment created.

Elapsed time: 0.20700 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.COLUMNS.IDENTITY_INCREMENT               
        IS 'for an identity column, the increment of the identity column';

Comment created.

Elapsed time: 0.24100 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.COLUMNS.IDENTITY_MAXIMUM                 
        IS 'for an identity column, the maximum value of the identity column';

Comment created.

Elapsed time: 0.20700 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.COLUMNS.IDENTITY_MINIMUM                 
        IS 'for an identity column, the minimum value of the identity column'; 

Comment created.

Elapsed time: 0.20400 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.COLUMNS.IDENTITY_CYCLE                   
        IS 'for an identity column, the cycle option';

Comment created.

Elapsed time: 0.27300 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.COLUMNS.IS_GENERATED                     
        IS 'is a generated column';

Comment created.

Elapsed time: 0.21700 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.COLUMNS.GENERATION_EXPRESSION            
        IS 'for a generated column, the text of the generation expression';

Comment created.

Elapsed time: 0.20800 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.COLUMNS.IS_SYSTEM_VERSION_START          
        IS 'is a system-version start column';

Comment created.

Elapsed time: 0.20200 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.COLUMNS.IS_SYSTEM_VERSION_END            
        IS 'is a system-version end column';

Comment created.

Elapsed time: 0.21500 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.COLUMNS.SYSTEM_VERSION_TIMESTAMP_GENERATION  
        IS 'for a system-version column, the value is ALWAYS';

Comment created.

Elapsed time: 0.20400 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.COLUMNS.IS_UPDATABLE                     
        IS 'is an updatable column';

Comment created.

Elapsed time: 0.25800 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.COLUMNS.DECLARED_DATA_TYPE               
        IS 'the data type name that a user declared';

Comment created.

Elapsed time: 0.20400 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.COLUMNS.DECLARED_NUMERIC_PRECISION       
        IS 'the precision value that a user declared'; 

Comment created.

Elapsed time: 0.20600 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.COLUMNS.DECLARED_NUMERIC_SCALE           
        IS 'the scale value that a user declared';

Comment created.

Elapsed time: 0.20400 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.COLUMNS.COMMENTS                         
        IS 'comments of the column';

Comment created.

Elapsed time: 0.21700 ms 



--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE INFORMATION_SCHEMA.COLUMNS TO PUBLIC;

Grant succeeded.

Elapsed time: 0.19300 ms 


COMMIT;

Commit complete.

Elapsed time: 0.67700 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS COLUMNS;

Synonym dropped.

Elapsed time: 0.16400 ms 

CREATE PUBLIC SYNONYM COLUMNS FOR INFORMATION_SCHEMA.COLUMNS;

Synonym created.

Elapsed time: 0.15900 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05700 ms 


--##############################################################
--# INFORMATION_SCHEMA.COLUMN_PRIVILEGES
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS INFORMATION_SCHEMA.COLUMN_PRIVILEGES;

View dropped.

Elapsed time: 1.67600 ms 


--#####################
--# create view
--#####################

CREATE VIEW INFORMATION_SCHEMA.COLUMN_PRIVILEGES
( 
       GRANTOR
     , GRANTEE
     , TABLE_CATALOG
     , TABLE_OWNER 
     , TABLE_SCHEMA 
     , TABLE_NAME 
     , COLUMN_NAME 
     , PRIVILEGE_TYPE
     , IS_GRANTABLE
)
AS
SELECT
       grantor.AUTHORIZATION_NAME
     , grantee.AUTHORIZATION_NAME
     , CAST( CURRENT_CATALOG AS VARCHAR(128 OCTETS) ) 
     , owner.AUTHORIZATION_NAME
     , sch.SCHEMA_NAME
     , tab.TABLE_NAME
     , col.COLUMN_NAME
     , pvcol.PRIVILEGE_TYPE
     , pvcol.IS_GRANTABLE
  FROM
       DEFINITION_SCHEMA.COLUMN_PRIVILEGES AS pvcol 
     , DEFINITION_SCHEMA.COLUMNS           AS col 
     , DEFINITION_SCHEMA.TABLES            AS tab 
     , DEFINITION_SCHEMA.SCHEMATA          AS sch 
     , DEFINITION_SCHEMA.AUTHORIZATIONS    AS grantor
     , DEFINITION_SCHEMA.AUTHORIZATIONS    AS grantee
     , DEFINITION_SCHEMA.AUTHORIZATIONS    AS owner
 WHERE
       pvcol.COLUMN_ID  = col.COLUMN_ID
   AND pvcol.TABLE_ID   = tab.TABLE_ID
   AND pvcol.SCHEMA_ID  = sch.SCHEMA_ID
   AND pvcol.GRANTOR_ID = grantor.AUTH_ID
   AND pvcol.GRANTEE_ID = grantee.AUTH_ID
   AND tab.OWNER_ID     = owner.AUTH_ID
   AND ( grantee.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )
      -- OR  
      -- pvcol.GRANTEE_ID IN ( SELECT AUTH_ID 
      --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
         OR
         grantor.AUTHORIZATION_NAME = CURRENT_USER
       )
 ORDER BY 
       pvcol.SCHEMA_ID
     , pvcol.TABLE_ID
     , pvcol.COLUMN_ID
     , pvcol.GRANTOR_ID
     , pvcol.GRANTEE_ID
     , pvcol.PRIVILEGE_TYPE_ID   
;

View created.

Elapsed time: 2.25700 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE INFORMATION_SCHEMA.COLUMN_PRIVILEGES
        IS 'Identify the privileges on columns of tables defined in this catalog that are available to or granted by a given user or role.';

Comment created.

Elapsed time: 0.17600 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN INFORMATION_SCHEMA.COLUMN_PRIVILEGES.GRANTOR
        IS 'authorization name of the user who granted column privileges';

Comment created.

Elapsed time: 0.21400 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.COLUMN_PRIVILEGES.GRANTEE
        IS 'authorization name of some user or role, or PUBLIC to indicate all users, to whom the column privilege being described is granted';

Comment created.

Elapsed time: 0.22700 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.COLUMN_PRIVILEGES.TABLE_CATALOG
        IS 'catalog name of the column on which the privilege being described was granted';

Comment created.

Elapsed time: 0.20500 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.COLUMN_PRIVILEGES.TABLE_OWNER 
        IS 'table owner name of the column on which the privilege being described was granted';

Comment created.

Elapsed time: 0.21100 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.COLUMN_PRIVILEGES.TABLE_SCHEMA 
        IS 'schema name of the column on which the privilege being described was granted';

Comment created.

Elapsed time: 0.21400 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.COLUMN_PRIVILEGES.TABLE_NAME 
        IS 'table name of the column on which the privilege being described was granted';

Comment created.

Elapsed time: 0.20200 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.COLUMN_PRIVILEGES.COLUMN_NAME 
        IS 'column name of the column on which the privilege being described was granted';

Comment created.

Elapsed time: 0.19300 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.COLUMN_PRIVILEGES.PRIVILEGE_TYPE
        IS 'the value is in ( SELECT, INSERT, UPDATE, REFERENCES )';

Comment created.

Elapsed time: 0.21500 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.COLUMN_PRIVILEGES.IS_GRANTABLE
        IS 'is grantable';

Comment created.

Elapsed time: 0.19800 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE INFORMATION_SCHEMA.COLUMN_PRIVILEGES TO PUBLIC;

Grant succeeded.

Elapsed time: 0.17000 ms 


COMMIT;

Commit complete.

Elapsed time: 0.20100 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS COLUMN_PRIVILEGES;

Synonym dropped.

Elapsed time: 0.11000 ms 

CREATE PUBLIC SYNONYM COLUMN_PRIVILEGES FOR INFORMATION_SCHEMA.COLUMN_PRIVILEGES;

Synonym created.

Elapsed time: 0.13400 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05600 ms 


--##############################################################
--# INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE;

View dropped.

Elapsed time: 1.67100 ms 


--#####################
--# create view
--#####################

CREATE VIEW INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE
(
       TABLE_CATALOG
     , TABLE_OWNER
     , TABLE_SCHEMA
     , TABLE_NAME
     , COLUMN_NAME
     , CONSTRAINT_CATALOG
     , CONSTRAINT_OWNER
     , CONSTRAINT_SCHEMA
     , CONSTRAINT_NAME    
)
AS
SELECT
       CAST( CURRENT_CATALOG AS VARCHAR(128 OCTETS) ) 
     , auth1.AUTHORIZATION_NAME
     , sch1.SCHEMA_NAME
     , tab.TABLE_NAME
     , col.COLUMN_NAME
     , CAST( CURRENT_CATALOG AS VARCHAR(128 OCTETS) ) 
     , auth2.AUTHORIZATION_NAME
     , sch2.SCHEMA_NAME
     , tcon.CONSTRAINT_NAME
  FROM
       ( ( 
           SELECT 
                  CONSTRAINT_OWNER_ID
                , CONSTRAINT_SCHEMA_ID
                , CONSTRAINT_ID
                , TABLE_OWNER_ID
                , TABLE_SCHEMA_ID
                , TABLE_ID
                , COLUMN_ID
             FROM DEFINITION_SCHEMA.CHECK_COLUMN_USAGE ccu 
         )
         UNION ALL
         (
           SELECT
                  rfc.CONSTRAINT_OWNER_ID
                , rfc.CONSTRAINT_SCHEMA_ID
                , rfc.CONSTRAINT_ID
                , kcu.TABLE_OWNER_ID
                , kcu.TABLE_SCHEMA_ID
                , kcu.TABLE_ID
                , kcu.COLUMN_ID
             FROM DEFINITION_SCHEMA.REFERENTIAL_CONSTRAINTS AS rfc
                , DEFINITION_SCHEMA.KEY_COLUMN_USAGE        AS kcu 
            WHERE
                  rfc.CONSTRAINT_ID = kcu.CONSTRAINT_ID
         ) 
         UNION ALL
         (
           SELECT
                  tcn.CONSTRAINT_OWNER_ID
                , tcn.CONSTRAINT_SCHEMA_ID
                , tcn.CONSTRAINT_ID
                , kcu.TABLE_OWNER_ID
                , kcu.TABLE_SCHEMA_ID
                , kcu.TABLE_ID
                , kcu.COLUMN_ID
             FROM DEFINITION_SCHEMA.TABLE_CONSTRAINTS       AS tcn
                , DEFINITION_SCHEMA.KEY_COLUMN_USAGE        AS kcu 
            WHERE
                  tcn.CONSTRAINT_ID = kcu.CONSTRAINT_ID
              AND tcn.CONSTRAINT_TYPE IN ( 'UNIQUE', 'PRIMARY KEY' )
         ) 
       ) AS vwccu ( CONSTRAINT_OWNER_ID
                  , CONSTRAINT_SCHEMA_ID
                  , CONSTRAINT_ID
                  , TABLE_OWNER_ID
                  , TABLE_SCHEMA_ID
                  , TABLE_ID
                  , COLUMN_ID )
     , DEFINITION_SCHEMA.COLUMNS            AS col
     , DEFINITION_SCHEMA.TABLES             AS tab
     , DEFINITION_SCHEMA.TABLE_CONSTRAINTS  AS tcon
     , DEFINITION_SCHEMA.SCHEMATA           AS sch1
     , DEFINITION_SCHEMA.SCHEMATA           AS sch2
     , DEFINITION_SCHEMA.AUTHORIZATIONS     AS auth1
     , DEFINITION_SCHEMA.AUTHORIZATIONS     AS auth2
 WHERE
       vwccu.COLUMN_ID            = col.COLUMN_ID
   AND vwccu.TABLE_ID             = tab.TABLE_ID
   AND vwccu.TABLE_SCHEMA_ID      = sch1.SCHEMA_ID
   AND vwccu.TABLE_OWNER_ID       = auth1.AUTH_ID
   AND vwccu.CONSTRAINT_ID        = tcon.CONSTRAINT_ID
   AND vwccu.CONSTRAINT_SCHEMA_ID = sch2.SCHEMA_ID
   AND vwccu.CONSTRAINT_OWNER_ID  = auth2.AUTH_ID
   AND ( 
         auth1.AUTHORIZATION_NAME = CURRENT_USER
         OR
         auth2.AUTHORIZATION_NAME = CURRENT_USER
       )
 ORDER BY
       vwccu.TABLE_SCHEMA_ID
     , vwccu.TABLE_ID
     , vwccu.COLUMN_ID
     , vwccu.CONSTRAINT_ID
;

View created.

Elapsed time: 2.56700 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE
        IS 'Identify the columns used by referential constraints, unique constraints, check constraints, and assertions defined in this catalog and owned by a given user or role.';

Comment created.

Elapsed time: 0.18500 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE.TABLE_CATALOG
        IS 'catalog name of the column that participates in the constraint being described';

Comment created.

Elapsed time: 0.21700 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE.TABLE_OWNER
        IS 'owner name of the column that participates in the constraint being described';

Comment created.

Elapsed time: 0.19500 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE.TABLE_SCHEMA
        IS 'schema name of the column that participates in the constraint being described';

Comment created.

Elapsed time: 0.20200 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE.TABLE_NAME
        IS 'table name of the column that participates in the constraint being described';

Comment created.

Elapsed time: 0.19400 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE.COLUMN_NAME
        IS 'column name that participates in the constraint being described';

Comment created.

Elapsed time: 0.22100 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE.CONSTRAINT_CATALOG
        IS 'catalog name of the constraint';

Comment created.

Elapsed time: 0.19400 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE.CONSTRAINT_OWNER
        IS 'owner name of the constraint';

Comment created.

Elapsed time: 0.19300 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE.CONSTRAINT_SCHEMA
        IS 'schema name of the constraint';

Comment created.

Elapsed time: 0.19000 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE.CONSTRAINT_NAME
        IS 'constraint name';

Comment created.

Elapsed time: 0.19300 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE TO PUBLIC;

Grant succeeded.

Elapsed time: 0.18600 ms 


COMMIT;

Commit complete.

Elapsed time: 0.26900 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS CONSTRAINT_COLUMN_USAGE;

Synonym dropped.

Elapsed time: 0.10900 ms 

CREATE PUBLIC SYNONYM CONSTRAINT_COLUMN_USAGE FOR INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE;

Synonym created.

Elapsed time: 0.13600 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05600 ms 


--##############################################################
--# INFORMATION_SCHEMA.CONSTRAINT_TABLE_USAGE
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS INFORMATION_SCHEMA.CONSTRAINT_TABLE_USAGE;

View dropped.

Elapsed time: 1.56500 ms 


--#####################
--# create view
--#####################

CREATE VIEW INFORMATION_SCHEMA.CONSTRAINT_TABLE_USAGE
(
       TABLE_CATALOG
     , TABLE_OWNER
     , TABLE_SCHEMA
     , TABLE_NAME
     , CONSTRAINT_CATALOG
     , CONSTRAINT_OWNER
     , CONSTRAINT_SCHEMA
     , CONSTRAINT_NAME    
)
AS
SELECT
       CAST( CURRENT_CATALOG AS VARCHAR(128 OCTETS) ) 
     , auth1.AUTHORIZATION_NAME
     , sch1.SCHEMA_NAME
     , tab.TABLE_NAME
     , CAST( CURRENT_CATALOG AS VARCHAR(128 OCTETS) ) 
     , auth2.AUTHORIZATION_NAME
     , sch2.SCHEMA_NAME
     , tcon.CONSTRAINT_NAME
  FROM
       ( ( 
           SELECT 
                  CONSTRAINT_OWNER_ID
                , CONSTRAINT_SCHEMA_ID
                , CONSTRAINT_ID
                , TABLE_OWNER_ID
                , TABLE_SCHEMA_ID
                , TABLE_ID
             FROM DEFINITION_SCHEMA.CHECK_TABLE_USAGE ctu 
         )
         UNION ALL
         (
           SELECT
                  rfc.CONSTRAINT_OWNER_ID
                , rfc.CONSTRAINT_SCHEMA_ID
                , rfc.CONSTRAINT_ID
                , tcn.TABLE_OWNER_ID
                , tcn.TABLE_SCHEMA_ID
                , tcn.TABLE_ID
             FROM DEFINITION_SCHEMA.REFERENTIAL_CONSTRAINTS AS rfc
                , DEFINITION_SCHEMA.TABLE_CONSTRAINTS       AS tcn
            WHERE
                  rfc.CONSTRAINT_ID = tcn.CONSTRAINT_ID
         ) 
         UNION ALL
         (
           SELECT
                  tcn.CONSTRAINT_OWNER_ID
                , tcn.CONSTRAINT_SCHEMA_ID
                , tcn.CONSTRAINT_ID
                , tcn.TABLE_OWNER_ID
                , tcn.TABLE_SCHEMA_ID
                , tcn.TABLE_ID
             FROM DEFINITION_SCHEMA.TABLE_CONSTRAINTS       AS tcn
            WHERE
                  tcn.CONSTRAINT_TYPE IN ( 'UNIQUE', 'PRIMARY KEY' )
         ) 
       ) AS vwctu ( CONSTRAINT_OWNER_ID
                  , CONSTRAINT_SCHEMA_ID
                  , CONSTRAINT_ID
                  , TABLE_OWNER_ID
                  , TABLE_SCHEMA_ID
                  , TABLE_ID )
     , DEFINITION_SCHEMA.TABLES             AS tab
     , DEFINITION_SCHEMA.TABLE_CONSTRAINTS  AS tcon
     , DEFINITION_SCHEMA.SCHEMATA           AS sch1
     , DEFINITION_SCHEMA.SCHEMATA           AS sch2
     , DEFINITION_SCHEMA.AUTHORIZATIONS     AS auth1
     , DEFINITION_SCHEMA.AUTHORIZATIONS     AS auth2
 WHERE
       vwctu.TABLE_ID             = tab.TABLE_ID
   AND vwctu.TABLE_SCHEMA_ID      = sch1.SCHEMA_ID
   AND vwctu.TABLE_OWNER_ID       = auth1.AUTH_ID
   AND vwctu.CONSTRAINT_ID        = tcon.CONSTRAINT_ID
   AND vwctu.CONSTRAINT_SCHEMA_ID = sch2.SCHEMA_ID
   AND vwctu.CONSTRAINT_OWNER_ID  = auth2.AUTH_ID
   AND ( 
         auth1.AUTHORIZATION_NAME = CURRENT_USER
         OR
         auth2.AUTHORIZATION_NAME = CURRENT_USER
       )
 ORDER BY
       vwctu.TABLE_SCHEMA_ID
     , vwctu.TABLE_ID
     , vwctu.CONSTRAINT_ID
;

View created.

Elapsed time: 2.12900 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE INFORMATION_SCHEMA.CONSTRAINT_TABLE_USAGE
        IS 'Identify the tables that are used by referential constraints, unique constraints, check constraints, and assertions defined in this catalog and owned by a given user or role.';

Comment created.

Elapsed time: 0.18800 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN INFORMATION_SCHEMA.CONSTRAINT_TABLE_USAGE.TABLE_CATALOG
        IS 'catalog name of the table that participates in the constraint being described';

Comment created.

Elapsed time: 0.21000 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.CONSTRAINT_TABLE_USAGE.TABLE_OWNER
        IS 'owner name of the table that participates in the constraint being described';

Comment created.

Elapsed time: 0.18900 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.CONSTRAINT_TABLE_USAGE.TABLE_SCHEMA
        IS 'schema name of the table that participates in the constraint being described';

Comment created.

Elapsed time: 0.19900 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.CONSTRAINT_TABLE_USAGE.TABLE_NAME
        IS 'table name that participates in the constraint being described';

Comment created.

Elapsed time: 0.18400 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.CONSTRAINT_TABLE_USAGE.CONSTRAINT_CATALOG
        IS 'catalog name of the constraint';

Comment created.

Elapsed time: 0.19000 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.CONSTRAINT_TABLE_USAGE.CONSTRAINT_OWNER
        IS 'owner name of the constraint';

Comment created.

Elapsed time: 0.18400 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.CONSTRAINT_TABLE_USAGE.CONSTRAINT_SCHEMA
        IS 'schema name of the constraint';

Comment created.

Elapsed time: 0.19200 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.CONSTRAINT_TABLE_USAGE.CONSTRAINT_NAME
        IS 'constraint name';

Comment created.

Elapsed time: 0.18300 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE INFORMATION_SCHEMA.CONSTRAINT_TABLE_USAGE TO PUBLIC;

Grant succeeded.

Elapsed time: 0.15900 ms 


COMMIT;

Commit complete.

Elapsed time: 0.16000 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS CONSTRAINT_TABLE_USAGE;

Synonym dropped.

Elapsed time: 0.09900 ms 

CREATE PUBLIC SYNONYM CONSTRAINT_TABLE_USAGE FOR INFORMATION_SCHEMA.CONSTRAINT_TABLE_USAGE;

Synonym created.

Elapsed time: 0.12500 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05100 ms 


--##############################################################
--# INFORMATION_SCHEMA.INFORMATION_SCHEMA_CATALOG_NAME
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS INFORMATION_SCHEMA.INFORMATION_SCHEMA_CATALOG_NAME;

View dropped.

Elapsed time: 0.64900 ms 


--#####################
--# create view
--#####################

CREATE VIEW INFORMATION_SCHEMA.INFORMATION_SCHEMA_CATALOG_NAME
( 
       CATALOG_NAME
)
AS 
SELECT
       CAST( CURRENT_CATALOG AS VARCHAR(128 OCTETS) ) 
  FROM FIXED_TABLE_SCHEMA.DUAL
;

View created.

Elapsed time: 0.74100 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE INFORMATION_SCHEMA.INFORMATION_SCHEMA_CATALOG_NAME
        IS 'Identify the catalog that contains the Information Schema';

Comment created.

Elapsed time: 0.17400 ms 

          
--#####################
--# comment column
--#####################

COMMENT ON COLUMN INFORMATION_SCHEMA.INFORMATION_SCHEMA_CATALOG_NAME.CATALOG_NAME
        IS 'the name of catalog in which this Information Schema resides';

Comment created.

Elapsed time: 0.19300 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE INFORMATION_SCHEMA.INFORMATION_SCHEMA_CATALOG_NAME TO PUBLIC;

Grant succeeded.

Elapsed time: 0.15700 ms 


COMMIT;

Commit complete.

Elapsed time: 0.08700 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS INFORMATION_SCHEMA_CATALOG_NAME;

Synonym dropped.

Elapsed time: 0.10200 ms 

CREATE PUBLIC SYNONYM INFORMATION_SCHEMA_CATALOG_NAME FOR INFORMATION_SCHEMA.INFORMATION_SCHEMA_CATALOG_NAME;

Synonym created.

Elapsed time: 0.11900 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05200 ms 


--##############################################################
--# INFORMATION_SCHEMA.KEY_COLUMN_USAGE
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS INFORMATION_SCHEMA.KEY_COLUMN_USAGE;

View dropped.

Elapsed time: 1.89100 ms 


--#####################
--# create view
--#####################

CREATE VIEW INFORMATION_SCHEMA.KEY_COLUMN_USAGE
(
       CONSTRAINT_CATALOG
     , CONSTRAINT_OWNER
     , CONSTRAINT_SCHEMA
     , CONSTRAINT_NAME    
     , TABLE_CATALOG
     , TABLE_OWNER
     , TABLE_SCHEMA
     , TABLE_NAME
     , COLUMN_NAME
     , ORDINAL_POSITION
     , POSITION_IN_UNIQUE_CONSTRAINT
)
AS
SELECT
       CAST( CURRENT_CATALOG AS VARCHAR(128 OCTETS) )      -- CONSTRAINT_CATALOG
     , auth1.AUTHORIZATION_NAME                            -- CONSTRAINT_OWNER
     , sch1.SCHEMA_NAME                                    -- CONSTRAINT_SCHEMA
     , tcn.CONSTRAINT_NAME                                 -- CONSTRAINT_NAME    
     , CAST( CURRENT_CATALOG AS VARCHAR(128 OCTETS) )      -- TABLE_CATALOG
     , auth2.AUTHORIZATION_NAME                            -- TABLE_OWNER
     , sch2.SCHEMA_NAME                                    -- TABLE_SCHEMA
     , tab.TABLE_NAME                                      -- TABLE_NAME
     , col.COLUMN_NAME                                     -- COLUMN_NAME
     , CAST( kcu.ORDINAL_POSITION AS NUMBER )              -- ORDINAL_POSITION
     , CAST( kcu.POSITION_IN_UNIQUE_CONSTRAINT AS NUMBER ) -- POSITION_IN_UNIQUE_CONSTRAINT
  FROM
       DEFINITION_SCHEMA.KEY_COLUMN_USAGE   AS kcu 
     , DEFINITION_SCHEMA.TABLE_CONSTRAINTS  AS tcn
     , DEFINITION_SCHEMA.COLUMNS            AS col
     , DEFINITION_SCHEMA.TABLES             AS tab
     , DEFINITION_SCHEMA.SCHEMATA           AS sch1
     , DEFINITION_SCHEMA.SCHEMATA           AS sch2
     , DEFINITION_SCHEMA.AUTHORIZATIONS     AS auth1
     , DEFINITION_SCHEMA.AUTHORIZATIONS     AS auth2
 WHERE
       kcu.CONSTRAINT_ID        = tcn.CONSTRAINT_ID
   AND kcu.CONSTRAINT_SCHEMA_ID = sch1.SCHEMA_ID
   AND kcu.CONSTRAINT_OWNER_ID  = auth1.AUTH_ID
   AND kcu.COLUMN_ID            = col.COLUMN_ID
   AND kcu.TABLE_ID             = tab.TABLE_ID
   AND kcu.TABLE_SCHEMA_ID      = sch2.SCHEMA_ID
   AND kcu.TABLE_OWNER_ID       = auth2.AUTH_ID
   AND ( 
         ( SELECT MAX( kcu2.ORDINAL_POSITION )
             FROM DEFINITION_SCHEMA.KEY_COLUMN_USAGE   AS kcu2
            WHERE kcu2.CONSTRAINT_ID = kcu.CONSTRAINT_ID )
         =
         ( SELECT COUNT(*)
             FROM DEFINITION_SCHEMA.KEY_COLUMN_USAGE   AS kcu3
            WHERE kcu3.CONSTRAINT_ID = kcu.CONSTRAINT_ID
              AND kcu3.COLUMN_ID IN ( SELECT pvcol.COLUMN_ID
                                        FROM DEFINITION_SCHEMA.COLUMN_PRIVILEGES AS pvcol
                                       WHERE 
                                          -- pvcol.PRIVILEGE_TYPE <> 'SELECT'
                                             pvcol.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                                    FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS aucol 
                                                                   WHERE aucol.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                                 ) 
                                       -- OR  
                                       -- pvtab.GRANTEE_ID IN ( SELECT AUTH_ID 
                                       --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                    )
         )
         OR 
         tcn.TABLE_ID IN ( SELECT pvtab.TABLE_ID 
                             FROM DEFINITION_SCHEMA.TABLE_PRIVILEGES AS pvtab 
                            WHERE 
                               -- pvtab.PRIVILEGE_TYPE <> 'SELECT'
                                  ( pvtab.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                            FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS autab 
                                                           WHERE autab.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                        ) 
                                 -- OR  
                                 -- pvtab.GRANTEE_ID IN ( SELECT AUTH_ID 
                                 --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                  )
                          ) 
         OR 
         tcn.TABLE_SCHEMA_ID IN ( SELECT pvsch.SCHEMA_ID 
                                    FROM DEFINITION_SCHEMA.SCHEMA_PRIVILEGES AS pvsch 
                                   WHERE pvsch.PRIVILEGE_TYPE IN ( 'CONTROL SCHEMA', 'SELECT TABLE', 'INSERT TABLE', 'DELETE TABLE', 'UPDATE TABLE' ) 
                                     AND ( pvsch.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                                     FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS ausch 
                                                                    WHERE ausch.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                                 ) 
                                          -- OR  
                                          -- pvsch.GRANTEE_ID IN ( SELECT AUTH_ID 
                                          --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                           )  
                                   ) 
         OR 
         EXISTS ( SELECT GRANTEE_ID  
                    FROM DEFINITION_SCHEMA.DATABASE_PRIVILEGES pvdba 
                   WHERE pvdba.PRIVILEGE_TYPE IN ( 'SELECT ANY TABLE', 'INSERT ANY TABLE', 'DELETE ANY TABLE', 'UPDATE ANY TABLE' ) 
                     AND ( pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                   FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS audba 
                                                  WHERE audba.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                               ) 
                        -- OR  
                        -- pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                        --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                          )  
                ) 
       ) 
 ORDER BY
       kcu.TABLE_SCHEMA_ID
     , kcu.TABLE_ID
     , kcu.CONSTRAINT_ID
     , kcu.ORDINAL_POSITION
;

View created.

Elapsed time: 2.76700 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE INFORMATION_SCHEMA.KEY_COLUMN_USAGE
        IS 'Identify the columns defined in this catalog that are constrained as keys and that are accessible by a given user or role.';

Comment created.

Elapsed time: 0.19600 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN INFORMATION_SCHEMA.KEY_COLUMN_USAGE.CONSTRAINT_CATALOG
        IS 'catalog name of the constraint';

Comment created.

Elapsed time: 0.21100 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.KEY_COLUMN_USAGE.CONSTRAINT_OWNER
        IS 'owner name of the constraint';

Comment created.

Elapsed time: 0.19400 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.KEY_COLUMN_USAGE.CONSTRAINT_SCHEMA
        IS 'schema name of the constraint';

Comment created.

Elapsed time: 0.18100 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.KEY_COLUMN_USAGE.CONSTRAINT_NAME
        IS 'constraint name';

Comment created.

Elapsed time: 0.18400 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.KEY_COLUMN_USAGE.TABLE_CATALOG
        IS 'catalog name of the column that participates in the constraint being described';

Comment created.

Elapsed time: 0.18300 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.KEY_COLUMN_USAGE.TABLE_OWNER
        IS 'owner name of the column that participates in the constraint being described';

Comment created.

Elapsed time: 0.18700 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.KEY_COLUMN_USAGE.TABLE_SCHEMA
        IS 'schema name of the column that participates in the constraint being described';

Comment created.

Elapsed time: 0.18100 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.KEY_COLUMN_USAGE.TABLE_NAME
        IS 'table name of the column that participates in the constraint being described';

Comment created.

Elapsed time: 0.18600 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.KEY_COLUMN_USAGE.COLUMN_NAME
        IS 'column name that participates in the constraint being described';

Comment created.

Elapsed time: 0.20000 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.KEY_COLUMN_USAGE.ORDINAL_POSITION
        IS 'the ordinal position of the specific column in the constraint being described. If the constraint described is a key of cardinality 1 (one), then the value of ORDINAL_POSITION is always 1 (one).';

Comment created.

Elapsed time: 0.19600 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.KEY_COLUMN_USAGE.POSITION_IN_UNIQUE_CONSTRAINT
        IS 'If the constraint being described is a foreign key constraint, then the value of POSITION_IN_UNIQUE_CONSTRAINT is the ordinal position of the referenced column corresponding to the referencing column being described, in the corresponding unique key constraint.';

Comment created.

Elapsed time: 0.21100 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE INFORMATION_SCHEMA.KEY_COLUMN_USAGE TO PUBLIC;

Grant succeeded.

Elapsed time: 0.15500 ms 


COMMIT;

Commit complete.

Elapsed time: 0.18700 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS KEY_COLUMN_USAGE;

Synonym dropped.

Elapsed time: 0.10000 ms 

CREATE PUBLIC SYNONYM KEY_COLUMN_USAGE FOR INFORMATION_SCHEMA.KEY_COLUMN_USAGE;

Synonym created.

Elapsed time: 0.11200 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05300 ms 


--##############################################################
--# INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS;

View dropped.

Elapsed time: 2.65600 ms 


--#####################
--# create view
--#####################

CREATE VIEW INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS 
(
       CONSTRAINT_CATALOG
     , CONSTRAINT_OWNER
     , CONSTRAINT_SCHEMA
     , CONSTRAINT_NAME
     , CONSTRAINT_TABLE_NAME
     , CONSTRAINT_COLUMN_NAME
     , ORDINAL_POSITION
     , UNIQUE_CONSTRAINT_CATALOG
     , UNIQUE_CONSTRAINT_OWNER
     , UNIQUE_CONSTRAINT_SCHEMA
     , UNIQUE_CONSTRAINT_NAME
     , UNIQUE_CONSTRAINT_TABLE_NAME
     , UNIQUE_CONSTRAINT_COLUMN_NAME
     , IS_PRIMARY_KEY
     , MATCH_OPTION
     , UPDATE_RULE
     , DELETE_RULE
     , IS_DEFERRABLE
     , INITIALLY_DEFERRED
)
AS
SELECT 
       CAST( CURRENT_CATALOG AS VARCHAR(128 OCTETS) ) 
     , auth1.AUTHORIZATION_NAME
     , sch1.SCHEMA_NAME
     , tcon.CONSTRAINT_NAME
     , rtab.TABLE_NAME
     , rcol.COLUMN_NAME
     , CAST( rkcu.ORDINAL_POSITION AS NUMBER )
     , CAST( CURRENT_CATALOG AS VARCHAR(128 OCTETS) ) 
     , auth2.AUTHORIZATION_NAME
     , sch2.SCHEMA_NAME
     , ucon.CONSTRAINT_NAME
     , utab.TABLE_NAME
     , ucol.COLUMN_NAME
     , CAST( CASE WHEN ucon.CONSTRAINT_TYPE = 'PRIMARY KEY' 
                  THEN TRUE
                  ELSE FALSE
                  END
             AS BOOLEAN ) 
     , rcon.MATCH_OPTION
     , rcon.UPDATE_RULE
     , rcon.DELETE_RULE
     , tcon.IS_DEFERRABLE
     , tcon.INITIALLY_DEFERRED
  FROM 
       DEFINITION_SCHEMA.REFERENTIAL_CONSTRAINTS  AS rcon
     , DEFINITION_SCHEMA.TABLE_CONSTRAINTS        AS tcon
     , DEFINITION_SCHEMA.KEY_COLUMN_USAGE         AS rkcu
     , DEFINITION_SCHEMA.TABLE_CONSTRAINTS        AS ucon
     , DEFINITION_SCHEMA.KEY_COLUMN_USAGE         AS ukcu
     , DEFINITION_SCHEMA.COLUMNS                  AS rcol
     , DEFINITION_SCHEMA.COLUMNS                  AS ucol
     , DEFINITION_SCHEMA.TABLES                   AS rtab
     , DEFINITION_SCHEMA.TABLES                   AS utab
     , DEFINITION_SCHEMA.SCHEMATA                 AS sch1 
     , DEFINITION_SCHEMA.SCHEMATA                 AS sch2 
     , DEFINITION_SCHEMA.AUTHORIZATIONS           AS auth1 
     , DEFINITION_SCHEMA.AUTHORIZATIONS           AS auth2 
 WHERE 
       rcon.CONSTRAINT_ID                = tcon.CONSTRAINT_ID
   AND rcon.UNIQUE_CONSTRAINT_ID         = ucon.CONSTRAINT_ID
   AND tcon.CONSTRAINT_ID                = rkcu.CONSTRAINT_ID
   AND tcon.TABLE_ID                     = rtab.TABLE_ID
   AND rkcu.COLUMN_ID                    = rcol.COLUMN_ID
   AND ucon.CONSTRAINT_ID                = ukcu.CONSTRAINT_ID
   AND ucon.TABLE_ID                     = utab.TABLE_ID
   AND rkcu.POSITION_IN_UNIQUE_CONSTRAINT = ukcu.ORDINAL_POSITION
   AND ukcu.COLUMN_ID                    = ucol.COLUMN_ID
   AND rcon.CONSTRAINT_SCHEMA_ID         = sch1.SCHEMA_ID
   AND rcon.CONSTRAINT_OWNER_ID          = auth1.AUTH_ID
   AND rcon.UNIQUE_CONSTRAINT_SCHEMA_ID  = sch2.SCHEMA_ID
   AND rcon.UNIQUE_CONSTRAINT_OWNER_ID   = auth2.AUTH_ID
   AND ( tcon.TABLE_ID IN ( SELECT pvcol.TABLE_ID 
                              FROM DEFINITION_SCHEMA.COLUMN_PRIVILEGES AS pvcol 
                             WHERE 
                                -- pvcol.PRIVILEGE_TYPE <> 'SELECT'
                                   ( pvcol.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                             FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS aucol 
                                                            WHERE aucol.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                         ) 
                                    -- OR  
                                    -- pvcol.GRANTEE_ID IN ( SELECT AUTH_ID 
                                    --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                   )
                          ) 
         OR 
         tcon.TABLE_ID IN ( SELECT pvtab.TABLE_ID 
                              FROM DEFINITION_SCHEMA.TABLE_PRIVILEGES AS pvtab 
                             WHERE 
                                -- pvtab.PRIVILEGE_TYPE <> 'SELECT'
                                   ( pvtab.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                             FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS autab 
                                                            WHERE autab.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                         ) 
                                  -- OR  
                                  -- pvtab.GRANTEE_ID IN ( SELECT AUTH_ID 
                                  --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                   )
                         ) 
         OR 
         tcon.TABLE_SCHEMA_ID IN ( SELECT pvsch.SCHEMA_ID 
                                     FROM DEFINITION_SCHEMA.SCHEMA_PRIVILEGES AS pvsch 
                                    WHERE pvsch.PRIVILEGE_TYPE IN ( 'CONTROL SCHEMA', 'SELECT TABLE', 'INSERT TABLE', 'DELETE TABLE', 'UPDATE TABLE' ) 
                                      AND ( pvsch.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                                    FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS ausch 
                                                                   WHERE ausch.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                                ) 
                                         -- OR  
                                         -- pvsch.GRANTEE_ID IN ( SELECT AUTH_ID 
                                         --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                          )  
                                  ) 
         OR 
         EXISTS ( SELECT GRANTEE_ID  
                    FROM DEFINITION_SCHEMA.DATABASE_PRIVILEGES pvdba 
                   WHERE pvdba.PRIVILEGE_TYPE IN ( 'SELECT ANY TABLE', 'INSERT ANY TABLE', 'DELETE ANY TABLE', 'UPDATE ANY TABLE' ) 
                     AND ( pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                   FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS audba 
                                                  WHERE audba.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                ) 
                        -- OR  
                        -- pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                        --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                          )  
                ) 
       ) 
ORDER BY 
      rcon.CONSTRAINT_SCHEMA_ID 
    , rcon.CONSTRAINT_ID
    , rkcu.ORDINAL_POSITION
;

View created.

Elapsed time: 3.87200 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS 
        IS 'Identify the referential constraints defined on tables in this catalog that are accssible to a given user or role.';

Comment created.

Elapsed time: 0.17000 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS.CONSTRAINT_CATALOG
        IS 'catalog name of the referential constraint';

Comment created.

Elapsed time: 0.20300 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS.CONSTRAINT_OWNER
        IS 'owner name who owns the referential constraint';

Comment created.

Elapsed time: 0.18900 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS.CONSTRAINT_SCHEMA
        IS 'schema name of the referential constraint being described';

Comment created.

Elapsed time: 0.18800 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS.CONSTRAINT_NAME
        IS 'referential constraint name';

Comment created.

Elapsed time: 0.18400 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS.CONSTRAINT_TABLE_NAME
        IS 'name of the table to which the referential constraint being described applies';

Comment created.

Elapsed time: 0.19600 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS.CONSTRAINT_COLUMN_NAME
        IS 'column name of the table to which the referential constraint being described applies';

Comment created.

Elapsed time: 0.19700 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS.ORDINAL_POSITION
        IS 'the ordinal position of the specific column in the referentail constraint being described.';

Comment created.

Elapsed time: 0.18800 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS.UNIQUE_CONSTRAINT_CATALOG
        IS 'catalog name of the unique or primary key constraint applied to the referenced column list being described';

Comment created.

Elapsed time: 0.21600 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS.UNIQUE_CONSTRAINT_OWNER
        IS 'owner name of the unique or primary key constraint applied to the referenced column list being described';

Comment created.

Elapsed time: 0.19000 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS.UNIQUE_CONSTRAINT_SCHEMA
        IS 'schema name of the unique or primary key constraint applied to the referenced column list being described';

Comment created.

Elapsed time: 0.18500 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS.UNIQUE_CONSTRAINT_NAME
        IS 'constraint name of the unique or primary key constraint applied to the referenced column list being described';

Comment created.

Elapsed time: 0.19100 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS.UNIQUE_CONSTRAINT_TABLE_NAME
        IS 'table name of the unique or primary key constraint applied to the referenced column list being described';

Comment created.

Elapsed time: 0.19700 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS.UNIQUE_CONSTRAINT_COLUMN_NAME
        IS 'column name of the unique or primary key constraint applied to the referenced column list being described';

Comment created.

Elapsed time: 0.19000 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS.IS_PRIMARY_KEY
        IS 'whether the constraint applied to the referenced column list being described, is primary key or not';

Comment created.

Elapsed time: 0.18600 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS.MATCH_OPTION
        IS 'the referential constraint that has a match option: the value in ( SIMPLE, PARTIAL, FULL )';

Comment created.

Elapsed time: 0.18100 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS.UPDATE_RULE
        IS 'the referential constraint that has an update rule: the value in ( NO ACTION, RESTRICT, CASCADE, SET NULL, SET DEFAULT )';

Comment created.

Elapsed time: 0.19100 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS.DELETE_RULE
        IS 'the referential constraint that has a delete rule: the value in ( NO ACTION, RESTRICT, CASCADE, SET NULL, SET DEFAULT )';

Comment created.

Elapsed time: 0.18200 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS.IS_DEFERRABLE
        IS 'is a deferrable constraint';

Comment created.

Elapsed time: 0.18000 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS.INITIALLY_DEFERRED
        IS 'is an initially deferred constraint';

Comment created.

Elapsed time: 0.22700 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS TO PUBLIC;

Grant succeeded.

Elapsed time: 0.15800 ms 


COMMIT;

Commit complete.

Elapsed time: 0.26900 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS REFERENTIAL_CONSTRAINTS;

Synonym dropped.

Elapsed time: 0.09500 ms 

CREATE PUBLIC SYNONYM REFERENTIAL_CONSTRAINTS FOR INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS;

Synonym created.

Elapsed time: 0.11200 ms 

COMMIT;

Commit complete.

Elapsed time: 0.04900 ms 


--##############################################################
--# INFORMATION_SCHEMA.SCHEMATA
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS INFORMATION_SCHEMA.SCHEMATA;

View dropped.

Elapsed time: 1.63200 ms 


--#####################
--# create view
--#####################

CREATE VIEW INFORMATION_SCHEMA.SCHEMATA 
(
       CATALOG_NAME
     , SCHEMA_NAME
     , SCHEMA_OWNER
     , DEFAULT_CHARACTER_SET_CATALOG
     , DEFAULT_CHARACTER_SET_SCHEMA
     , DEFAULT_CHARACTER_SET_NAME
     , SQL_PATH
     , CREATED_TIME
     , MODIFIED_TIME
     , COMMENTS
)
AS
SELECT 
       CAST( CURRENT_CATALOG AS VARCHAR(128 OCTETS) ) 
     , sch.SCHEMA_NAME
     , auth.AUTHORIZATION_NAME
     , CAST( NULL AS VARCHAR(128 OCTETS) ) -- sch.DEFAULT_CHARACTER_SET_CATALOG
     , CAST( NULL AS VARCHAR(128 OCTETS) ) -- sch.DEFAULT_CHARACTER_SET_SCHEMA
     , CAST( NULL AS VARCHAR(128 OCTETS) ) -- sch.DEFAULT_CHARACTER_SET_NAME
     , sch.SQL_PATH
     , sch.CREATED_TIME
     , sch.MODIFIED_TIME
     , sch.COMMENTS
  FROM 
       DEFINITION_SCHEMA.SCHEMATA        AS sch
     , DEFINITION_SCHEMA.AUTHORIZATIONS  AS auth
 WHERE 
       sch.OWNER_ID = auth.AUTH_ID
   AND ( auth.AUTHORIZATION_NAME = CURRENT_USER
         OR
         sch.SCHEMA_ID IN ( SELECT pvcol.SCHEMA_ID 
                              FROM DEFINITION_SCHEMA.COLUMN_PRIVILEGES AS pvcol 
                             WHERE ( pvcol.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                             FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS aucol 
                                                            WHERE aucol.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                         ) 
                                  -- OR  
                                  -- pvcol.GRANTEE_ID IN ( SELECT AUTH_ID 
                                  --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                   )
                          ) 
         OR 
         sch.SCHEMA_ID IN ( SELECT pvtab.SCHEMA_ID 
                             FROM DEFINITION_SCHEMA.TABLE_PRIVILEGES AS pvtab 
                            WHERE ( pvtab.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                            FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS autab 
                                                           WHERE autab.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                        ) 
                                 -- OR  
                                 -- pvtab.GRANTEE_ID IN ( SELECT AUTH_ID 
                                 --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                  )  
                          ) 
         OR
         sch.SCHEMA_ID IN ( SELECT pvusg.SCHEMA_ID 
                             FROM DEFINITION_SCHEMA.USAGE_PRIVILEGES AS pvusg
                            WHERE ( pvusg.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                            FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS auusg 
                                                           WHERE auusg.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                        ) 
                                 -- OR  
                                 -- pvusg.GRANTEE_ID IN ( SELECT AUTH_ID 
                                 --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                  )  
                          ) 
         OR
         sch.SCHEMA_ID IN ( SELECT pvsch.SCHEMA_ID 
                              FROM DEFINITION_SCHEMA.SCHEMA_PRIVILEGES AS pvsch 
                                     WHERE ( pvsch.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                                     FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS ausch 
                                                                    WHERE ausch.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                                 ) 
                                          -- OR  
                                          -- pvsch.GRANTEE_ID IN ( SELECT AUTH_ID 
                                          --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                           )  
                                   ) 
         OR 
         EXISTS ( SELECT GRANTEE_ID  
                    FROM DEFINITION_SCHEMA.DATABASE_PRIVILEGES pvdba 
                   WHERE pvdba.PRIVILEGE_TYPE IN ( 'ALTER SCHEMA', 'DROP SCHEMA', 
                                                   'CREATE ANY TABLE', 'ALTER ANY TABLE', 'DROP ANY TABLE', 
                                                   'SELECT ANY TABLE', 'INSERT ANY TABLE', 'DELETE ANY TABLE', 'UPDATE ANY TABLE', 'LOCK ANY TABLE',
                                                   'CREATE ANY VIEW', 'DROP ANY VIEW', 
                                                   'CREATE ANY SEQUENCE', 'ALTER ANY SEQUENCE', 'DROP ANY SEQUENCE', 'USAGE ANY SEQUENCE',
                                                   'CREATE ANY INDEX', 'ALTER ANY INDEX', 'DROP ANY INDEX' ) 
                     AND ( pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                   FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS audba 
                                                  WHERE audba.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                               ) 
                        -- OR  
                        -- pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                        --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                          )  
                ) 
       ) 
 ORDER BY
       sch.SCHEMA_ID
;

View created.

Elapsed time: 2.43600 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE INFORMATION_SCHEMA.SCHEMATA 
        IS 'Identify the schemata in a catalog that are owned by given user or accessible to given user or role.';

Comment created.

Elapsed time: 0.16700 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN INFORMATION_SCHEMA.SCHEMATA.CATALOG_NAME
        IS 'catalog name of the schema';

Comment created.

Elapsed time: 0.19700 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.SCHEMATA.SCHEMA_NAME
        IS 'schema name';

Comment created.

Elapsed time: 0.19000 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.SCHEMATA.SCHEMA_OWNER
        IS 'authorization name who owns the schema';

Comment created.

Elapsed time: 0.19300 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.SCHEMATA.DEFAULT_CHARACTER_SET_CATALOG
        IS 'catalog name of the default character set for columns and domains in the schemata';

Comment created.

Elapsed time: 0.18200 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.SCHEMATA.DEFAULT_CHARACTER_SET_SCHEMA
        IS 'schema name of the default character set for columns and domains in the schemata';

Comment created.

Elapsed time: 0.18900 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.SCHEMATA.DEFAULT_CHARACTER_SET_NAME
        IS 'character set name of the default character set for columns and domains in the schemata';

Comment created.

Elapsed time: 0.18000 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.SCHEMATA.SQL_PATH
        IS 'character representation of schema path specification';

Comment created.

Elapsed time: 0.18500 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.SCHEMATA.CREATED_TIME
        IS 'created time of the schema';

Comment created.

Elapsed time: 0.21200 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.SCHEMATA.MODIFIED_TIME
        IS 'last modified time of the schema';

Comment created.

Elapsed time: 0.18400 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.SCHEMATA.COMMENTS
        IS 'comments of the schema';

Comment created.

Elapsed time: 0.26000 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE INFORMATION_SCHEMA.SCHEMATA TO PUBLIC;

Grant succeeded.

Elapsed time: 0.16000 ms 


COMMIT;

Commit complete.

Elapsed time: 0.18600 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS SCHEMATA;

Synonym dropped.

Elapsed time: 0.10000 ms 

CREATE PUBLIC SYNONYM SCHEMATA FOR INFORMATION_SCHEMA.SCHEMATA;

Synonym created.

Elapsed time: 0.11000 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05100 ms 


--##############################################################
--# INFORMATION_SCHEMA.SEQUENCES
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS INFORMATION_SCHEMA.SEQUENCES;

View dropped.

Elapsed time: 2.55400 ms 


--#####################
--# create view
--#####################

CREATE VIEW INFORMATION_SCHEMA.SEQUENCES 
( 
       SEQUENCE_CATALOG
     , SEQUENCE_OWNER
     , SEQUENCE_SCHEMA
     , SEQUENCE_NAME
     , DATA_TYPE
     , NUMERIC_PRECISION
     , NUMERIC_PRECISION_RADIX
     , NUMERIC_SCALE
     , START_VALUE
     , MINIMUM_VALUE
     , MAXIMUM_VALUE
     , INCREMENT
     , CYCLE_OPTION
     , CACHE_SIZE
     , DECLARED_DATA_TYPE
     , DECLARED_NUMERIC_PRECISION
     , DECLARED_NUMERIC_SCALE
     , CREATED_TIME
     , MODIFIED_TIME
     , COMMENTS
)
AS
SELECT 
       CAST( CURRENT_CATALOG AS VARCHAR(128 OCTETS) ) 
     , auth.AUTHORIZATION_NAME
     , sch.SCHEMA_NAME
     , sqc.SEQUENCE_NAME
     , CAST( 'NATIVE_BIGINT' AS VARCHAR(128 OCTETS) )
     , CAST( 63 AS NUMBER )
     , CAST( 2 AS NUMBER )
     , CAST( 0 AS NUMBER )
     , CAST( sqc.START_VALUE AS NUMBER )
     , CAST( sqc.MINIMUM_VALUE AS NUMBER )
     , CAST( sqc.MAXIMUM_VALUE AS NUMBER )
     , CAST( sqc.INCREMENT AS NUMBER )
     , sqc.CYCLE_OPTION
     , sqc.CACHE_SIZE
     , CAST( NULL AS VARCHAR(128 OCTETS) )
     , CAST( NULL AS NUMBER )
     , CAST( NULL AS NUMBER )
     , sqc.CREATED_TIME
     , sqc.MODIFIED_TIME
     , sqc.COMMENTS
  FROM 
       DEFINITION_SCHEMA.SEQUENCES       AS sqc
     , DEFINITION_SCHEMA.SCHEMATA        AS sch
     , DEFINITION_SCHEMA.AUTHORIZATIONS  AS auth
 WHERE 
       sqc.SCHEMA_ID = sch.SCHEMA_ID
   AND sqc.OWNER_ID  = auth.AUTH_ID
   AND ( sqc.SEQUENCE_ID IN ( SELECT pvusg.OBJECT_ID 
                                FROM DEFINITION_SCHEMA.USAGE_PRIVILEGES AS pvusg
                               WHERE pvusg.OBJECT_TYPE = 'SEQUENCE'
                                 AND ( pvusg.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                               FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS auusg 
                                                              WHERE auusg.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                           ) 
                                    -- OR  
                                    -- pvusg.GRANTEE_ID IN ( SELECT AUTH_ID 
                                    --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                     )  
                            ) 
         OR
         sqc.SCHEMA_ID IN ( SELECT pvsch.SCHEMA_ID 
                              FROM DEFINITION_SCHEMA.SCHEMA_PRIVILEGES AS pvsch 
                             WHERE pvsch.PRIVILEGE_TYPE IN ( 'CONTROL SCHEMA', 'ALTER SEQUENCE', 'DROP SEQUENCE', 'USAGE SEQUENCE' )
                               AND ( pvsch.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                             FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS ausch 
                                                            WHERE ausch.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                          ) 
                                  -- OR  
                                  -- pvsch.GRANTEE_ID IN ( SELECT AUTH_ID 
                                  --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                   )  
                           ) 
         OR 
         EXISTS ( SELECT GRANTEE_ID  
                    FROM DEFINITION_SCHEMA.DATABASE_PRIVILEGES pvdba 
                   WHERE pvdba.PRIVILEGE_TYPE IN ( 'ALTER ANY SEQUENCE', 'DROP ANY SEQUENCE', 'USAGE ANY SEQUENCE' ) 
                     AND ( pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                   FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS audba 
                                                  WHERE audba.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                               ) 
                        -- OR  
                        -- pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                        --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                          )  
                ) 
       ) 
 ORDER BY
       sqc.SCHEMA_ID
     , sqc.SEQUENCE_ID
;

View created.

Elapsed time: 3.92100 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE INFORMATION_SCHEMA.SEQUENCES 
        IS 'Identify the external sequence generators defined in this catalog that are accesible to a given user or role.';

Comment created.

Elapsed time: 0.16800 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN INFORMATION_SCHEMA.SEQUENCES.SEQUENCE_CATALOG
        IS 'catalog name of the sequence';

Comment created.

Elapsed time: 0.19200 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.SEQUENCES.SEQUENCE_OWNER
        IS 'owner name of the sequence';

Comment created.

Elapsed time: 0.18700 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.SEQUENCES.SEQUENCE_SCHEMA
        IS 'schema name of the sequence';

Comment created.

Elapsed time: 0.19300 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.SEQUENCES.SEQUENCE_NAME
        IS 'sequence name';

Comment created.

Elapsed time: 0.18700 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.SEQUENCES.DATA_TYPE
        IS 'the standard name of the data type';

Comment created.

Elapsed time: 0.18200 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.SEQUENCES.NUMERIC_PRECISION
        IS 'the numeric precision of the numerical data type';

Comment created.

Elapsed time: 0.19100 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.SEQUENCES.NUMERIC_PRECISION_RADIX
        IS 'the radix ( 2 or 10 ) of the precision of the numerical data type';

Comment created.

Elapsed time: 0.19700 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.SEQUENCES.NUMERIC_SCALE
        IS 'the numeric scale of the exact numerical data type';

Comment created.

Elapsed time: 0.18100 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.SEQUENCES.START_VALUE
        IS 'the start value of the sequence generator';

Comment created.

Elapsed time: 0.21800 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.SEQUENCES.MINIMUM_VALUE
        IS 'the minimum value of the sequence generator';

Comment created.

Elapsed time: 0.24900 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.SEQUENCES.MAXIMUM_VALUE
        IS 'the maximum value of the sequence generator';

Comment created.

Elapsed time: 0.18900 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.SEQUENCES.INCREMENT
        IS 'the increment of the sequence generator';

Comment created.

Elapsed time: 0.18100 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.SEQUENCES.CYCLE_OPTION
        IS 'cycle option';

Comment created.

Elapsed time: 0.19000 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.SEQUENCES.CACHE_SIZE
        IS 'number of sequence numbers to cache';

Comment created.

Elapsed time: 0.18400 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.SEQUENCES.DECLARED_DATA_TYPE
        IS 'the data type name that a user declared';

Comment created.

Elapsed time: 0.19100 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.SEQUENCES.DECLARED_NUMERIC_PRECISION
        IS 'the precision value that a user declared';

Comment created.

Elapsed time: 0.18700 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.SEQUENCES.DECLARED_NUMERIC_SCALE
        IS 'the scale value that a user declared';

Comment created.

Elapsed time: 0.18200 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.SEQUENCES.CREATED_TIME
        IS 'created time of the sequence generator';

Comment created.

Elapsed time: 0.18000 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.SEQUENCES.MODIFIED_TIME
        IS 'last modified time of the sequence generator';

Comment created.

Elapsed time: 0.23700 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.SEQUENCES.COMMENTS
        IS 'comments of the sequence generator';

Comment created.

Elapsed time: 0.37500 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE INFORMATION_SCHEMA.SEQUENCES TO PUBLIC;

Grant succeeded.

Elapsed time: 0.16300 ms 


COMMIT;

Commit complete.

Elapsed time: 0.29100 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS SEQUENCES;

Synonym dropped.

Elapsed time: 0.09600 ms 

CREATE PUBLIC SYNONYM SEQUENCES FOR INFORMATION_SCHEMA.SEQUENCES;

Synonym created.

Elapsed time: 0.11300 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05100 ms 


--##############################################################
--# INFORMATION_SCHEMA.SQL_FEATURES
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS INFORMATION_SCHEMA.SQL_FEATURES;

View dropped.

Elapsed time: 1.22400 ms 


--#####################
--# create view
--#####################

CREATE VIEW INFORMATION_SCHEMA.SQL_FEATURES
( 
       FEATURE_ID
     , FEATURE_NAME
     , SUB_FEATURE_ID
     , SUB_FEATURE_NAME
     , IS_SUPPORTED
     , IS_VERIFIED_BY
     , COMMENTS
)
AS
SELECT
       ID
     , NAME
     , SUB_ID
     , SUB_NAME
     , IS_SUPPORTED
     , IS_VERIFIED_BY
     , COMMENTS
  FROM 
       DEFINITION_SCHEMA.SQL_CONFORMANCE
 WHERE
       TYPE IN ( 'FEATURE', 'SUBFEATURE' )
 ORDER BY
       ID
     , SUB_ID
;

View created.

Elapsed time: 1.52100 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE INFORMATION_SCHEMA.SQL_FEATURES 
        IS 'List the features and subfeatures of this ISO/IEC 9075 standard, and indicate which of these the SQL-implementation supports.';

Comment created.

Elapsed time: 0.17400 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN INFORMATION_SCHEMA.SQL_FEATURES.FEATURE_ID
        IS 'identifier string of the conformance element';

Comment created.

Elapsed time: 0.19700 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.SQL_FEATURES.FEATURE_NAME
        IS 'descriptive name of the conformance element';

Comment created.

Elapsed time: 0.19300 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.SQL_FEATURES.SUB_FEATURE_ID
        IS 'identifier string of the subfeature, or a single space if not a subfeature';

Comment created.

Elapsed time: 0.19500 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.SQL_FEATURES.SUB_FEATURE_NAME
        IS 'descriptive name of the subfeature, or a single space if not a subfeature';

Comment created.

Elapsed time: 0.19900 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.SQL_FEATURES.IS_SUPPORTED
        IS 'TRUE if an SQL-implementation fully supports that conformance element described when SQL-data in the identified catalog is accessed through that implementation, FALSE if not';

Comment created.

Elapsed time: 0.18300 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.SQL_FEATURES.IS_VERIFIED_BY
        IS 'If full support for the conformance element described has been verified by testing, then the IS_VERIFIED_BY column shall contain information identifying the conformance test used to verify the conformance claim; otherwise, IS_VERIFIED_BY shall be the null value';

Comment created.

Elapsed time: 0.18600 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.SQL_FEATURES.COMMENTS
        IS 'possibly a comment pertaining to the conformance element';

Comment created.

Elapsed time: 0.21400 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE INFORMATION_SCHEMA.SQL_FEATURES TO PUBLIC;

Grant succeeded.

Elapsed time: 0.15800 ms 


COMMIT;

Commit complete.

Elapsed time: 0.15500 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS SQL_FEATURES;

Synonym dropped.

Elapsed time: 0.10000 ms 

CREATE PUBLIC SYNONYM SQL_FEATURES FOR INFORMATION_SCHEMA.SQL_FEATURES;

Synonym created.

Elapsed time: 0.11100 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05000 ms 


--##############################################################
--# INFORMATION_SCHEMA.SQL_IMPLEMENTATION_INFO
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS INFORMATION_SCHEMA.SQL_IMPLEMENTATION_INFO;

View dropped.

Elapsed time: 1.03000 ms 


--#####################
--# create view
--#####################

CREATE VIEW INFORMATION_SCHEMA.SQL_IMPLEMENTATION_INFO
( 
       IMPLEMENTATION_INFO_ID
     , IMPLEMENTATION_INFO_NAME
     , INTEGER_VALUE
     , CHARACTER_VALUE
     , COMMENTS
)
AS
SELECT
       IMPLEMENTATION_INFO_ID
     , IMPLEMENTATION_INFO_NAME
     , CASE WHEN ( INTEGER_VALUE < 0 ) THEN NULL ELSE INTEGER_VALUE END
     , CHARACTER_VALUE
     , COMMENTS
  FROM 
       DEFINITION_SCHEMA.SQL_IMPLEMENTATION_INFO
 ORDER BY
       IMPLEMENTATION_INFO_ID
;

View created.

Elapsed time: 1.28500 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE INFORMATION_SCHEMA.SQL_IMPLEMENTATION_INFO 
        IS 'List the SQL-implementation information items defined in this ISO/IEC 9075 standard and, for each of these, indicate the value supported by the SQL-implementation.';

Comment created.

Elapsed time: 0.18700 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN INFORMATION_SCHEMA.SQL_IMPLEMENTATION_INFO.IMPLEMENTATION_INFO_ID
        IS 'identifier string of the implementation information item';

Comment created.

Elapsed time: 0.20700 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.SQL_IMPLEMENTATION_INFO.IMPLEMENTATION_INFO_NAME
        IS 'descriptive name of the implementation information item';

Comment created.

Elapsed time: 0.19200 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.SQL_IMPLEMENTATION_INFO.INTEGER_VALUE
        IS 'value of the implementation information item, or null if the value is contained in the column CHARACTER_VALUE';

Comment created.

Elapsed time: 0.19500 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.SQL_IMPLEMENTATION_INFO.CHARACTER_VALUE
        IS 'value of the implementation information item, or null if the value is contained in the column INTEGER_VALUE';

Comment created.

Elapsed time: 0.24200 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.SQL_IMPLEMENTATION_INFO.COMMENTS
        IS 'possibly a comment pertaining to the implementation information item';

Comment created.

Elapsed time: 0.18900 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE INFORMATION_SCHEMA.SQL_IMPLEMENTATION_INFO TO PUBLIC;

Grant succeeded.

Elapsed time: 0.15300 ms 


COMMIT;

Commit complete.

Elapsed time: 0.12900 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS SQL_IMPLEMENTATION_INFO;

Synonym dropped.

Elapsed time: 0.09400 ms 

CREATE PUBLIC SYNONYM SQL_IMPLEMENTATION_INFO FOR INFORMATION_SCHEMA.SQL_IMPLEMENTATION_INFO;

Synonym created.

Elapsed time: 0.12000 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05000 ms 


--##############################################################
--# INFORMATION_SCHEMA.SQL_PACKAGES
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS INFORMATION_SCHEMA.SQL_PACKAGES;

View dropped.

Elapsed time: 1.04400 ms 


--#####################
--# create view
--#####################

CREATE VIEW INFORMATION_SCHEMA.SQL_PACKAGES
( 
       ID
     , NAME
     , IS_SUPPORTED
     , IS_VERIFIED_BY
     , COMMENTS
)
AS
SELECT
       ID
     , NAME
     , IS_SUPPORTED
     , IS_VERIFIED_BY
     , COMMENTS
  FROM 
       DEFINITION_SCHEMA.SQL_CONFORMANCE
 WHERE TYPE = 'PACKAGE'
 ORDER BY
       ID
;

View created.

Elapsed time: 1.29300 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE INFORMATION_SCHEMA.SQL_PACKAGES 
        IS 'List the packages of this ISO/IEC 9075 standard, and indicate which of these the SQL-implementation supports.';

Comment created.

Elapsed time: 0.17500 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN INFORMATION_SCHEMA.SQL_PACKAGES.ID
        IS 'identifier string of the conformance element';

Comment created.

Elapsed time: 0.20000 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.SQL_PACKAGES.NAME
        IS 'descriptive name of the conformance element';

Comment created.

Elapsed time: 0.18900 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.SQL_PACKAGES.IS_SUPPORTED
        IS 'TRUE if an SQL-implementation fully supports that conformance element described when SQL-data in the identified catalog is accessed through that implementation, FALSE if not';

Comment created.

Elapsed time: 0.18900 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.SQL_PACKAGES.IS_VERIFIED_BY
        IS 'If full support for the conformance element described has been verified by testing, then the IS_VERIFIED_BY column shall contain information identifying the conformance test used to verify the conformance claim; otherwise, IS_VERIFIED_BY shall be the null value';

Comment created.

Elapsed time: 0.20700 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.SQL_PACKAGES.COMMENTS
        IS 'possibly a comment pertaining to the conformance element';

Comment created.

Elapsed time: 0.19400 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE INFORMATION_SCHEMA.SQL_PACKAGES TO PUBLIC;

Grant succeeded.

Elapsed time: 0.15500 ms 


COMMIT;

Commit complete.

Elapsed time: 0.12900 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS SQL_PACKAGES;

Synonym dropped.

Elapsed time: 0.10900 ms 

CREATE PUBLIC SYNONYM SQL_PACKAGES FOR INFORMATION_SCHEMA.SQL_PACKAGES;

Synonym created.

Elapsed time: 0.11100 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05000 ms 


--##############################################################
--# INFORMATION_SCHEMA.SQL_PARTS
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS INFORMATION_SCHEMA.SQL_PARTS;

View dropped.

Elapsed time: 1.03200 ms 


--#####################
--# create view
--#####################

CREATE VIEW INFORMATION_SCHEMA.SQL_PARTS
( 
       ID
     , NAME
     , IS_SUPPORTED
     , IS_VERIFIED_BY
     , COMMENTS
)
AS
SELECT
       ID
     , NAME
     , IS_SUPPORTED
     , IS_VERIFIED_BY
     , COMMENTS
  FROM 
       DEFINITION_SCHEMA.SQL_CONFORMANCE
 WHERE TYPE = 'PART'
 ORDER BY
       CAST( ID AS NUMBER )
;

View created.

Elapsed time: 1.28900 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE INFORMATION_SCHEMA.SQL_PARTS 
        IS 'List the parts of this ISO/IEC 9075 standard, and indicate which of these the SQL-implementation supports.';

Comment created.

Elapsed time: 0.16700 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN INFORMATION_SCHEMA.SQL_PARTS.ID
        IS 'identifier string of the conformance element';

Comment created.

Elapsed time: 0.19300 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.SQL_PARTS.NAME
        IS 'descriptive name of the conformance element';

Comment created.

Elapsed time: 0.18300 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.SQL_PARTS.IS_SUPPORTED
        IS 'TRUE if an SQL-implementation fully supports that conformance element described when SQL-data in the identified catalog is accessed through that implementation, FALSE if not';

Comment created.

Elapsed time: 0.20000 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.SQL_PARTS.IS_VERIFIED_BY
        IS 'If full support for the conformance element described has been verified by testing, then the IS_VERIFIED_BY column shall contain information identifying the conformance test used to verify the conformance claim; otherwise, IS_VERIFIED_BY shall be the null value';

Comment created.

Elapsed time: 0.19000 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.SQL_PARTS.COMMENTS
        IS 'possibly a comment pertaining to the conformance element';

Comment created.

Elapsed time: 0.18000 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE INFORMATION_SCHEMA.SQL_PARTS TO PUBLIC;

Grant succeeded.

Elapsed time: 0.15400 ms 


COMMIT;

Commit complete.

Elapsed time: 0.13400 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS SQL_PARTS;

Synonym dropped.

Elapsed time: 0.09600 ms 

CREATE PUBLIC SYNONYM SQL_PARTS FOR INFORMATION_SCHEMA.SQL_PARTS;

Synonym created.

Elapsed time: 0.11200 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05000 ms 


--##############################################################
--# INFORMATION_SCHEMA.SQL_SIZING
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS INFORMATION_SCHEMA.SQL_SIZING;

View dropped.

Elapsed time: 0.94700 ms 


--#####################
--# create view
--#####################

CREATE VIEW INFORMATION_SCHEMA.SQL_SIZING
( 
       SIZING_ID
     , SIZING_NAME
     , SUPPORTED_VALUE
     , COMMENTS
)
AS
SELECT
       SIZING_ID
     , SIZING_NAME
     , SUPPORTED_VALUE
     , COMMENTS
  FROM 
       DEFINITION_SCHEMA.SQL_SIZING
 ORDER BY
       SIZING_ID
;

View created.

Elapsed time: 1.10400 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE INFORMATION_SCHEMA.SQL_SIZING 
        IS 'List the sizing items of this ISO/IEC 9075 standard, for each of these, indicate the size supported by the SQL-implementation.';

Comment created.

Elapsed time: 0.19100 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN INFORMATION_SCHEMA.SQL_SIZING.SIZING_ID
        IS 'identifier of the sizing item';

Comment created.

Elapsed time: 0.19500 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.SQL_SIZING.SIZING_NAME
        IS 'descriptive name of the sizing item';

Comment created.

Elapsed time: 0.21000 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.SQL_SIZING.SUPPORTED_VALUE
        IS 'value of the sizing item, or 0 if the size is unlimited or cannot be determined, or null if the features for which the sizing item is applicable are not supported';

Comment created.

Elapsed time: 0.18700 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.SQL_SIZING.COMMENTS
        IS 'possibly a comment pertaining to the sizing item';

Comment created.

Elapsed time: 0.19100 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE INFORMATION_SCHEMA.SQL_SIZING TO PUBLIC;

Grant succeeded.

Elapsed time: 0.16500 ms 


COMMIT;

Commit complete.

Elapsed time: 0.14300 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS SQL_SIZING;

Synonym dropped.

Elapsed time: 0.09500 ms 

CREATE PUBLIC SYNONYM SQL_SIZING FOR INFORMATION_SCHEMA.SQL_SIZING;

Synonym created.

Elapsed time: 0.11200 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05200 ms 


--##############################################################
--# INFORMATION_SCHEMA.STATISTICS
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS INFORMATION_SCHEMA.STATISTICS;

View dropped.

Elapsed time: 2.64900 ms 


--#####################
--# create view
--#####################

CREATE VIEW INFORMATION_SCHEMA.STATISTICS 
( 
       TABLE_CATALOG 
     , TABLE_OWNER 
     , TABLE_SCHEMA 
     , TABLE_NAME 
     , STAT_TYPE
     , NON_UNIQUE
     , INDEX_CATALOG
     , INDEX_OWNER
     , INDEX_SCHEMA
     , INDEX_NAME
     , COLUMN_NAME
     , ORDINAL_POSITION
     , IS_ASCENDING_ORDER
     , IS_NULLS_FIRST
     , CARDINALITY
     , PAGES
     , FILTER_CONDITION
     , COMMENTS 
) 
AS
(
SELECT
       CAST( CURRENT_CATALOG AS VARCHAR(128 OCTETS) )  -- TABLE_CATALOG 
     , auth2.AUTHORIZATION_NAME                        -- TABLE_OWNER 
     , sch2.SCHEMA_NAME                                -- TABLE_SCHEMA 
     , tab.TABLE_NAME                                  -- TABLE_NAME 
     , CAST( CASE idx.INDEX_TYPE WHEN 'HASH' THEN 'INDEX HASHED'
                                 ELSE 'INDEX OTHER'
                                 END
             AS VARCHAR(32 OCTETS) )                   -- STAT_TYPE
     , NOT idx.IS_UNIQUE                               -- NON_UNIQUE
     , CAST( CURRENT_CATALOG AS VARCHAR(128 OCTETS) )  -- INDEX_CATALOG
     , auth1.AUTHORIZATION_NAME                        -- INDEX_OWNER
     , sch1.SCHEMA_NAME                                -- INDEX_SCHEMA
     , idx.INDEX_NAME                                  -- INDEX_NAME
     , col.COLUMN_NAME                                 -- COLUMN_NAME
     , CAST( ikey.ORDINAL_POSITION AS NUMBER )         -- ORDINAL_POSITION
     , ikey.IS_ASCENDING_ORDER                         -- IS_ASCENDING_ORDER
     , ikey.IS_NULLS_FIRST                             -- IS_NULLS_FIRST
     , CAST( stat.NUM_DISTINCT AS NUMBER )             -- CARDINALITY
     , CAST( xseg.ALLOC_PAGE_COUNT AS NUMBER )         -- PAGES
     , CAST( NULL AS VARCHAR(1024 OCTETS) )            -- FILTER_CONDITION
     , idx.COMMENTS                                    -- COMMENTS 
  FROM
       DEFINITION_SCHEMA.INDEX_KEY_COLUMN_USAGE AS ikey
     , DEFINITION_SCHEMA.INDEXES                AS idx
       LEFT OUTER JOIN
       DEFINITION_SCHEMA.STAT_INDEX             AS stat
       ON idx.INDEX_ID = stat.INDEX_ID
     , FIXED_TABLE_SCHEMA.X$SEGMENT             AS xseg
     , DEFINITION_SCHEMA.COLUMNS                AS col
     , DEFINITION_SCHEMA.TABLES                 AS tab 
     , DEFINITION_SCHEMA.SCHEMATA               AS sch1 
     , DEFINITION_SCHEMA.AUTHORIZATIONS         AS auth1 
     , DEFINITION_SCHEMA.SCHEMATA               AS sch2 
     , DEFINITION_SCHEMA.AUTHORIZATIONS         AS auth2 
 WHERE
       ikey.INDEX_ID          = idx.INDEX_ID
   AND ikey.COLUMN_ID         = col.COLUMN_ID
   AND ikey.TABLE_ID          = tab.TABLE_ID
   AND ikey.INDEX_SCHEMA_ID   = sch1.SCHEMA_ID
   AND ikey.INDEX_OWNER_ID    = auth1.AUTH_ID
   AND ikey.TABLE_SCHEMA_ID   = sch2.SCHEMA_ID
   AND ikey.TABLE_OWNER_ID    = auth2.AUTH_ID
   AND idx.PHYSICAL_ID        = xseg.PHYSICAL_ID
   AND ( tab.TABLE_ID IN ( SELECT pvcol.TABLE_ID 
                             FROM DEFINITION_SCHEMA.COLUMN_PRIVILEGES AS pvcol 
                            WHERE ( pvcol.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                            FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS aucol 
                                                           WHERE aucol.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                        ) 
                                   -- OR  
                                   -- pvcol.GRANTEE_ID IN ( SELECT AUTH_ID 
                                   --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                  )
                         ) 
         OR 
         tab.TABLE_ID IN ( SELECT pvtab.TABLE_ID 
                             FROM DEFINITION_SCHEMA.TABLE_PRIVILEGES AS pvtab 
                            WHERE ( pvtab.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                            FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS autab 
                                                           WHERE autab.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                        ) 
                                 -- OR  
                                 -- pvtab.GRANTEE_ID IN ( SELECT AUTH_ID 
                                 --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                  )
                          ) 
         OR 
         sch2.SCHEMA_ID IN ( SELECT pvsch.SCHEMA_ID 
                              FROM DEFINITION_SCHEMA.SCHEMA_PRIVILEGES AS pvsch 
                             WHERE pvsch.PRIVILEGE_TYPE IN ( 'CONTROL SCHEMA', 'ALTER TABLE', 'DROP TABLE', 
                                                             'SELECT TABLE', 'INSERT TABLE', 'DELETE TABLE', 'UPDATE TABLE', 'LOCK TABLE' ) 
                               AND ( pvsch.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                             FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS ausch 
                                                            WHERE ausch.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                         ) 
                                  -- OR  
                                  -- pvsch.GRANTEE_ID IN ( SELECT AUTH_ID 
                                  --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                   )
                          ) 
         OR 
         EXISTS ( SELECT GRANTEE_ID  
                    FROM DEFINITION_SCHEMA.DATABASE_PRIVILEGES pvdba 
                   WHERE pvdba.PRIVILEGE_TYPE IN ( 'ALTER ANY TABLE', 'DROP ANY TABLE', 
                                                   'SELECT ANY TABLE', 'INSERT ANY TABLE', 'DELETE ANY TABLE', 'UPDATE ANY TABLE', 'LOCK ANY TABLE' ) 
                     AND ( pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                   FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS audba 
                                                  WHERE audba.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                               ) 
                        -- OR  
                        -- pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                        --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                         )  
                ) 
       ) 
 ORDER BY 
       ikey.INDEX_SCHEMA_ID
     , ikey.INDEX_ID
     , ikey.ORDINAL_POSITION
) 
UNION ALL
(
SELECT  
       CAST( CURRENT_CATALOG AS VARCHAR(128 OCTETS) )  -- TABLE_CATALOG 
     , auth.AUTHORIZATION_NAME                         -- TABLE_OWNER 
     , sch.SCHEMA_NAME                                 -- TABLE_SCHEMA 
     , tab.TABLE_NAME                                  -- TABLE_NAME 
     , CAST( 'TABLE STAT' AS VARCHAR(32 OCTETS) )      -- STAT_TYPE
     , CAST( NULL AS BOOLEAN )                         -- NON_UNIQUE
     , CAST( NULL AS VARCHAR(128 OCTETS) )             -- INDEX_CATALOG
     , CAST( NULL AS VARCHAR(128 OCTETS) )             -- INDEX_OWNER
     , CAST( NULL AS VARCHAR(128 OCTETS) )             -- INDEX_SCHEMA
     , CAST( NULL AS VARCHAR(128 OCTETS) )             -- INDEX_NAME
     , CAST( NULL AS VARCHAR(128 OCTETS) )             -- COLUMN_NAME
     , CAST( NULL AS NUMBER )                          -- ORDINAL_POSITION
     , CAST( NULL AS BOOLEAN )                         -- IS_ASCENDING_ORDER
     , CAST( NULL AS BOOLEAN )                         -- IS_NULLS_FIRST
     , CAST( stat.NUM_ROWS AS NUMBER )                 -- CARDINALITY
     , CAST( xseg.ALLOC_PAGE_COUNT AS NUMBER )         -- PAGES
     , CAST( NULL AS VARCHAR(1024 OCTETS) )            -- FILTER_CONDITION
     , tab.COMMENTS                                    -- COMMENTS 
  FROM  
       DEFINITION_SCHEMA.TABLES           AS tab 
       LEFT OUTER JOIN
       DEFINITION_SCHEMA.STAT_TABLE       AS stat
       ON tab.TABLE_ID = stat.TABLE_ID
     , FIXED_TABLE_SCHEMA.X$SEGMENT       AS xseg
     , DEFINITION_SCHEMA.SCHEMATA         AS sch 
     , DEFINITION_SCHEMA.AUTHORIZATIONS   AS auth 
 WHERE 
       tab.SCHEMA_ID   = sch.SCHEMA_ID 
   AND tab.OWNER_ID    = auth.AUTH_ID 
   AND tab.PHYSICAL_ID = xseg.PHYSICAL_ID
   AND ( tab.TABLE_ID IN ( SELECT pvcol.TABLE_ID 
                             FROM DEFINITION_SCHEMA.COLUMN_PRIVILEGES AS pvcol 
                            WHERE ( pvcol.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                            FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS aucol 
                                                           WHERE aucol.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                        ) 
                                  -- OR  
                                  -- pvcol.GRANTEE_ID IN ( SELECT AUTH_ID 
                                  --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                  )
                          ) 
         OR 
         tab.TABLE_ID IN ( SELECT pvtab.TABLE_ID 
                             FROM DEFINITION_SCHEMA.TABLE_PRIVILEGES AS pvtab 
                            WHERE ( pvtab.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                            FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS autab 
                                                           WHERE autab.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                        ) 
                                 -- OR  
                                 -- pvtab.GRANTEE_ID IN ( SELECT AUTH_ID 
                                 --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                  )
                          ) 
         OR 
         sch.SCHEMA_ID IN ( SELECT pvsch.SCHEMA_ID 
                              FROM DEFINITION_SCHEMA.SCHEMA_PRIVILEGES AS pvsch 
                             WHERE pvsch.PRIVILEGE_TYPE IN ( 'CONTROL SCHEMA', 'ALTER TABLE', 'DROP TABLE', 
                                                             'SELECT TABLE', 'INSERT TABLE', 'DELETE TABLE', 'UPDATE TABLE', 'LOCK TABLE' ) 
                               AND ( pvsch.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                             FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS ausch 
                                                            WHERE ausch.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                         ) 
                                  -- OR  
                                  -- pvsch.GRANTEE_ID IN ( SELECT AUTH_ID 
                                  --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                   )
                          ) 
         OR 
         EXISTS ( SELECT GRANTEE_ID  
                    FROM DEFINITION_SCHEMA.DATABASE_PRIVILEGES pvdba 
                   WHERE pvdba.PRIVILEGE_TYPE IN ( 'ALTER ANY TABLE', 'DROP ANY TABLE', 
                                                   'SELECT ANY TABLE', 'INSERT ANY TABLE', 'DELETE ANY TABLE', 'UPDATE ANY TABLE', 'LOCK ANY TABLE' ) 
                     AND ( pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                   FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS audba 
                                                  WHERE audba.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                ) 
                        -- OR  
                        -- pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                        --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                          )  
                ) 
       ) 
ORDER BY 
      tab.SCHEMA_ID 
    , tab.TABLE_ID 
)
;

View created.

Elapsed time: 4.19400 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE INFORMATION_SCHEMA.STATISTICS 
        IS 'Provides a list of statistics about a single table and the indexes associated with the table that are accessible to a given user or role.';

Comment created.

Elapsed time: 0.16800 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN INFORMATION_SCHEMA.STATISTICS.TABLE_CATALOG                    
        IS 'catalog name of the table';

Comment created.

Elapsed time: 0.19400 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.STATISTICS.TABLE_OWNER                      
        IS 'owner name of the table';

Comment created.

Elapsed time: 0.19600 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.STATISTICS.TABLE_SCHEMA                     
        IS 'schema name of the table';

Comment created.

Elapsed time: 0.18700 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.STATISTICS.TABLE_NAME
        IS 'table name of the table';

Comment created.

Elapsed time: 0.19200 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.STATISTICS.STAT_TYPE
        IS 'statistics type: the value in ( TABLE STAT, INDEX CLUSTERED, INDEX HASHED, INDEX OTHER )';

Comment created.

Elapsed time: 0.18900 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.STATISTICS.NON_UNIQUE
        IS 'indicates whether the index does not allow duplicate values';

Comment created.

Elapsed time: 0.19100 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.STATISTICS.INDEX_CATALOG
        IS 'catalog name of the index';

Comment created.

Elapsed time: 0.18100 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.STATISTICS.INDEX_OWNER
        IS 'owner name of the index';

Comment created.

Elapsed time: 0.18100 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.STATISTICS.INDEX_SCHEMA
        IS 'schema name of the index';

Comment created.

Elapsed time: 0.18000 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.STATISTICS.INDEX_NAME
        IS 'name of the index';

Comment created.

Elapsed time: 0.19200 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.STATISTICS.COLUMN_NAME
        IS 'column name that participates in the index';

Comment created.

Elapsed time: 0.18000 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.STATISTICS.ORDINAL_POSITION
        IS 'ordinal position of the specific column in the index described';

Comment created.

Elapsed time: 0.18600 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.STATISTICS.IS_ASCENDING_ORDER
        IS 'index key column being described is sorted in ASCENDING(TRUE) or DESCENDING(FALSE) order';

Comment created.

Elapsed time: 0.19800 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.STATISTICS.IS_NULLS_FIRST
        IS 'the null values of the key column are sorted before(TRUE) or after(FALSE) non-null values';

Comment created.

Elapsed time: 0.19400 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.STATISTICS.CARDINALITY
        IS 'if STAT_TYPE is (TABLE TYPE), then this is the number of rows in the table; otherwise, it is the number of unique values in the index';

Comment created.

Elapsed time: 0.18400 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.STATISTICS.PAGES
        IS 'if STAT_TYPE is (TABLE TYPE), then this is the number of pages used for the table; otherwise, it is the number of pages used for the current index.';

Comment created.

Elapsed time: 0.18200 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.STATISTICS.FILTER_CONDITION
        IS 'filter condition, if any.';

Comment created.

Elapsed time: 0.18000 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.STATISTICS.COMMENTS 
        IS 'if STAT_TYPE is (TABLE TYPE), then this is the table comments; otherwise, it is the index comments.';

Comment created.

Elapsed time: 0.22000 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE INFORMATION_SCHEMA.STATISTICS TO PUBLIC;

Grant succeeded.

Elapsed time: 0.15900 ms 


COMMIT;

Commit complete.

Elapsed time: 0.25800 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS STATISTICS;

Synonym dropped.

Elapsed time: 0.10000 ms 

CREATE PUBLIC SYNONYM STATISTICS FOR INFORMATION_SCHEMA.SQL_SIZING;

Synonym created.

Elapsed time: 0.12100 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05100 ms 


--##############################################################
--# INFORMATION_SCHEMA.TABLES
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS INFORMATION_SCHEMA.TABLES;

View dropped.

Elapsed time: 2.73100 ms 


--#####################
--# create view
--#####################

CREATE VIEW INFORMATION_SCHEMA.TABLES 
( 
       TABLE_CATALOG 
     , TABLE_OWNER 
     , TABLE_SCHEMA 
     , TABLE_NAME 
     , TABLE_TYPE 
     , DBC_TABLE_TYPE 
     , TABLESPACE_NAME 
     , SYSTEM_VERSION_START_COLUMN_NAME 
     , SYSTEM_VERSION_END_COLUMN_NAME 
     , SYSTEM_VERSION_RETENTION_PERIOD 
     , SELF_REFERENCING_COLUMN_NAME 
     , REFERENCE_GENERATION 
     , USER_DEFINED_TYPE_CATALOG 
     , USER_DEFINED_TYPE_SCHEMA 
     , USER_DEFINED_TYPE_NAME 
     , IS_INSERTABLE_INTO 
     , IS_TYPED 
     , COMMIT_ACTION 
     , CREATED_TIME
     , MODIFIED_TIME
     , COMMENTS 
) 
AS 
SELECT  
       CAST( CURRENT_CATALOG AS VARCHAR(128 OCTETS) ) 
     , auth.AUTHORIZATION_NAME 
     , sch.SCHEMA_NAME 
     , tab.TABLE_NAME 
     , tab.TABLE_TYPE 
     , CAST( CASE WHEN sch.SCHEMA_NAME = 'INFORMATION_SCHEMA' AND tab.TABLE_TYPE = 'VIEW'
                  THEN 'SYSTEM TABLE'
                  ELSE DECODE( tab.TABLE_TYPE, 'BASE TABLE', 'TABLE', tab.TABLE_TYPE )
                  END 
             AS VARCHAR(32 OCTETS) )
     , spc.TABLESPACE_NAME 
     , tab.SYSTEM_VERSION_START_COLUMN_NAME 
     , tab.SYSTEM_VERSION_END_COLUMN_NAME 
     , tab.SYSTEM_VERSION_RETENTION_PERIOD 
     , tab.SELF_REFERENCING_COLUMN_NAME 
     , tab.REFERENCE_GENERATION 
     , CAST( NULL AS VARCHAR(128 OCTETS) ) -- tab.USER_DEFINED_TYPE_CATALOG 
     , CAST( NULL AS VARCHAR(128 OCTETS) ) -- tab.USER_DEFINED_TYPE_SCHEMA 
     , CAST( NULL AS VARCHAR(128 OCTETS) ) -- tab.USER_DEFINED_TYPE_NAME 
     , tab.IS_INSERTABLE_INTO 
     , tab.IS_TYPED 
     , tab.COMMIT_ACTION 
     , tab.CREATED_TIME
     , tab.MODIFIED_TIME
     , tab.COMMENTS 
  FROM  
       ( INFORMATION_SCHEMA.WHOLE_TABLES    AS tab 
         LEFT OUTER JOIN 
         DEFINITION_SCHEMA.TABLESPACES      AS spc  
         ON tab.TABLESPACE_ID = spc.TABLESPACE_ID ) 
     , DEFINITION_SCHEMA.SCHEMATA           AS sch 
     , DEFINITION_SCHEMA.AUTHORIZATIONS     AS auth 
 WHERE 
       tab.SCHEMA_ID = sch.SCHEMA_ID 
   AND tab.OWNER_ID  = auth.AUTH_ID 
   AND ( tab.TABLE_ID IN ( SELECT pvcol.TABLE_ID 
                              FROM DEFINITION_SCHEMA.COLUMN_PRIVILEGES AS pvcol 
                             WHERE ( pvcol.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                             FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS aucol 
                                                            WHERE aucol.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                         ) 
                                  -- OR  
                                  -- pvcol.GRANTEE_ID IN ( SELECT AUTH_ID 
                                  --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                   )
                          ) 
         OR 
         tab.TABLE_ID IN ( SELECT pvtab.TABLE_ID 
                             FROM DEFINITION_SCHEMA.TABLE_PRIVILEGES AS pvtab 
                            WHERE ( pvtab.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                            FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS autab 
                                                           WHERE autab.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                        ) 
                                 -- OR  
                                 -- pvtab.GRANTEE_ID IN ( SELECT AUTH_ID 
                                 --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                  )
                          ) 
         OR 
         tab.SCHEMA_ID IN ( SELECT pvsch.SCHEMA_ID 
                              FROM DEFINITION_SCHEMA.SCHEMA_PRIVILEGES AS pvsch 
                             WHERE pvsch.PRIVILEGE_TYPE IN ( 'CONTROL SCHEMA', 'ALTER TABLE', 'DROP TABLE', 
                                                             'SELECT TABLE', 'INSERT TABLE', 'DELETE TABLE', 'UPDATE TABLE', 'LOCK TABLE' ) 
                               AND ( pvsch.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                             FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS ausch 
                                                            WHERE ausch.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                         ) 
                                  -- OR  
                                  -- pvsch.GRANTEE_ID IN ( SELECT AUTH_ID 
                                  --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                   )
                          ) 
         OR 
         EXISTS ( SELECT GRANTEE_ID  
                    FROM DEFINITION_SCHEMA.DATABASE_PRIVILEGES pvdba 
                   WHERE pvdba.PRIVILEGE_TYPE IN ( 'ALTER ANY TABLE', 'DROP ANY TABLE', 
                                                   'SELECT ANY TABLE', 'INSERT ANY TABLE', 'DELETE ANY TABLE', 'UPDATE ANY TABLE', 'LOCK ANY TABLE' ) 
                     AND ( pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                   FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS audba 
                                                  WHERE audba.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                ) 
                        -- OR  
                        -- pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                        --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                          )  
                ) 
       ) 
ORDER BY 
      tab.SCHEMA_ID 
    , tab.TABLE_ID 
;

View created.

Elapsed time: 4.00900 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE INFORMATION_SCHEMA.TABLES 
        IS 'Identify the tables defined in this catalog that are accessible to a given user or role';

Comment created.

Elapsed time: 0.16100 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN INFORMATION_SCHEMA.TABLES.TABLE_CATALOG                    
        IS 'catalog name of the table';

Comment created.

Elapsed time: 0.20100 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.TABLES.TABLE_OWNER                      
        IS 'owner name of the table';

Comment created.

Elapsed time: 0.18700 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.TABLES.TABLE_SCHEMA                     
        IS 'schema name of the table';

Comment created.

Elapsed time: 0.19400 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.TABLES.TABLE_NAME                       
        IS 'table name of the table';

Comment created.

Elapsed time: 0.18200 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.TABLES.TABLE_TYPE                       
        IS 'the value is in ( BASE TABLE, VIEW, GLOBAL TEMPORARY, LOCAL TEMPORARY, SYSTEM VERSIONED, FIXED TABLE, DUMP TABLE )';

Comment created.

Elapsed time: 0.19000 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.TABLES.DBC_TABLE_TYPE                       
        IS 'ODBC/JDBC table type: the value is in ( TABLE, VIEW, GLOBAL TEMPORARY, LOCAL TEMPORARY, SYSTEM TABLE, ALIAS, SYNONYM )';

Comment created.

Elapsed time: 0.20200 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.TABLES.TABLESPACE_NAME                  
        IS 'tablespace name of the table, NULL if view';

Comment created.

Elapsed time: 0.19200 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.TABLES.SYSTEM_VERSION_START_COLUMN_NAME 
        IS 'if the table is a system-versioned table, then the name of the system-version start column of the table';

Comment created.

Elapsed time: 0.18400 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.TABLES.SYSTEM_VERSION_END_COLUMN_NAME   
        IS 'if the table is a system-versioned table, then the name of the system-version end column of the table';

Comment created.

Elapsed time: 0.20300 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.TABLES.SYSTEM_VERSION_RETENTION_PERIOD  
        IS 'if the table is a system-versioned table, then the character representation of the value of the retention period of the table';

Comment created.

Elapsed time: 0.21100 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.TABLES.SELF_REFERENCING_COLUMN_NAME     
        IS 'if the table is a typed table, then the name of the self-referencing column of the table';

Comment created.

Elapsed time: 0.18400 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.TABLES.REFERENCE_GENERATION             
        IS 'if the table has a self-referencing column, the value is in ( SYSTEM GENERATED, USER GENERATED, DERIVED )';

Comment created.

Elapsed time: 0.18400 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.TABLES.USER_DEFINED_TYPE_CATALOG        
        IS 'if the table being described is a table of a structured type, the catalog name of the structured type';

Comment created.

Elapsed time: 0.18300 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.TABLES.USER_DEFINED_TYPE_SCHEMA         
        IS 'if the table being described is a table of a structured type, the schema name of the structured type';

Comment created.

Elapsed time: 0.18600 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.TABLES.USER_DEFINED_TYPE_NAME           
        IS 'if the table being described is a table of a structured type, the name of the structured type';

Comment created.

Elapsed time: 0.18500 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.TABLES.IS_INSERTABLE_INTO               
        IS 'is an insertable-into table';

Comment created.

Elapsed time: 0.18100 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.TABLES.IS_TYPED                         
        IS 'is a typed table';

Comment created.

Elapsed time: 0.18600 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.TABLES.COMMIT_ACTION                    
        IS 'if the table is a temporary table, the value is in ( DELETE, PRESERVE )';

Comment created.

Elapsed time: 0.18600 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.TABLES.CREATED_TIME                    
        IS 'created time of the table';

Comment created.

Elapsed time: 0.19700 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.TABLES.MODIFIED_TIME                    
        IS 'last modified time of the table';

Comment created.

Elapsed time: 0.18800 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.TABLES.COMMENTS                         
        IS 'comments of the table';

Comment created.

Elapsed time: 0.19300 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE INFORMATION_SCHEMA.TABLES TO PUBLIC;

Grant succeeded.

Elapsed time: 0.15500 ms 


COMMIT;

Commit complete.

Elapsed time: 0.28700 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS TABLES;

Synonym dropped.

Elapsed time: 0.11000 ms 

CREATE PUBLIC SYNONYM TABLES FOR INFORMATION_SCHEMA.TABLES;

Synonym created.

Elapsed time: 0.11300 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05100 ms 


--##############################################################
--# INFORMATION_SCHEMA.TABLE_CONSTRAINTS
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS INFORMATION_SCHEMA.TABLE_CONSTRAINTS;

View dropped.

Elapsed time: 2.10500 ms 


--#####################
--# create view
--#####################

CREATE VIEW INFORMATION_SCHEMA.TABLE_CONSTRAINTS 
(
       CONSTRAINT_CATALOG
     , CONSTRAINT_OWNER
     , CONSTRAINT_SCHEMA
     , CONSTRAINT_NAME
     , TABLE_CATALOG 
     , TABLE_OWNER 
     , TABLE_SCHEMA 
     , TABLE_NAME 
     , CONSTRAINT_TYPE
     , IS_DEFERRABLE
     , INITIALLY_DEFERRED
     , ENFORCED
     , CREATED_TIME
     , MODIFIED_TIME
     , COMMENTS
)
AS
SELECT 
       CAST( CURRENT_CATALOG AS VARCHAR(128 OCTETS) ) 
     , auth1.AUTHORIZATION_NAME
     , sch1.SCHEMA_NAME
     , const.CONSTRAINT_NAME
     , CAST( CURRENT_CATALOG AS VARCHAR(128 OCTETS) ) 
     , auth2.AUTHORIZATION_NAME
     , sch2.SCHEMA_NAME
     , tab.TABLE_NAME
     , const.CONSTRAINT_TYPE
     , const.IS_DEFERRABLE
     , const.INITIALLY_DEFERRED
     , const.ENFORCED
     , const.CREATED_TIME
     , const.MODIFIED_TIME
     , const.COMMENTS
  FROM 
       DEFINITION_SCHEMA.TABLE_CONSTRAINTS  AS const
     , DEFINITION_SCHEMA.TABLES             AS tab 
     , DEFINITION_SCHEMA.SCHEMATA           AS sch1 
     , DEFINITION_SCHEMA.SCHEMATA           AS sch2 
     , DEFINITION_SCHEMA.AUTHORIZATIONS     AS auth1 
     , DEFINITION_SCHEMA.AUTHORIZATIONS     AS auth2 
 WHERE 
       const.TABLE_ID             = tab.TABLE_ID
   AND const.CONSTRAINT_SCHEMA_ID = sch1.SCHEMA_ID
   AND const.CONSTRAINT_OWNER_ID  = auth1.AUTH_ID
   AND const.TABLE_SCHEMA_ID      = sch2.SCHEMA_ID
   AND const.TABLE_OWNER_ID       = auth2.AUTH_ID
   AND ( const.TABLE_ID IN ( SELECT pvcol.TABLE_ID 
                               FROM DEFINITION_SCHEMA.COLUMN_PRIVILEGES AS pvcol 
                              WHERE 
                                 -- pvcol.PRIVILEGE_TYPE <> 'SELECT'
                                    ( pvcol.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                              FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS aucol 
                                                             WHERE aucol.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                          ) 
                                     -- OR  
                                     -- pvcol.GRANTEE_ID IN ( SELECT AUTH_ID 
                                     --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                    )
                           ) 
         OR 
         const.TABLE_ID IN ( SELECT pvtab.TABLE_ID 
                               FROM DEFINITION_SCHEMA.TABLE_PRIVILEGES AS pvtab 
                              WHERE 
                                 -- pvtab.PRIVILEGE_TYPE <> 'SELECT'
                                    ( pvtab.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                              FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS autab 
                                                             WHERE autab.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                          ) 
                                   -- OR  
                                   -- pvtab.GRANTEE_ID IN ( SELECT AUTH_ID 
                                   --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                    )
                          ) 
         OR 
         const.TABLE_SCHEMA_ID IN ( SELECT pvsch.SCHEMA_ID 
                                      FROM DEFINITION_SCHEMA.SCHEMA_PRIVILEGES AS pvsch 
                                     WHERE pvsch.PRIVILEGE_TYPE IN ( 'CONTROL SCHEMA', 'SELECT TABLE', 'INSERT TABLE', 'DELETE TABLE', 'UPDATE TABLE' ) 
                                       AND ( pvsch.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                                     FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS ausch 
                                                                    WHERE ausch.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                                 ) 
                                          -- OR  
                                          -- pvsch.GRANTEE_ID IN ( SELECT AUTH_ID 
                                          --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                           )  
                                   ) 
         OR 
         EXISTS ( SELECT GRANTEE_ID  
                    FROM DEFINITION_SCHEMA.DATABASE_PRIVILEGES pvdba 
                   WHERE pvdba.PRIVILEGE_TYPE IN ( 'SELECT ANY TABLE', 'INSERT ANY TABLE', 'DELETE ANY TABLE', 'UPDATE ANY TABLE' ) 
                     AND ( pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                   FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS audba 
                                                  WHERE audba.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                ) 
                        -- OR  
                        -- pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                        --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                          )  
                ) 
       ) 
ORDER BY 
      const.TABLE_SCHEMA_ID 
    , const.TABLE_ID 
    , const.CONSTRAINT_ID
;

View created.

Elapsed time: 3.18300 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE INFORMATION_SCHEMA.TABLE_CONSTRAINTS 
        IS 'Identify the table constraints defined on tables in this catalog that are accessible to a given user or role';

Comment created.

Elapsed time: 0.16900 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN INFORMATION_SCHEMA.TABLE_CONSTRAINTS.CONSTRAINT_CATALOG
        IS 'catalog name of the constraint';

Comment created.

Elapsed time: 0.19500 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.TABLE_CONSTRAINTS.CONSTRAINT_OWNER
        IS 'authorization name who owns the constraint';

Comment created.

Elapsed time: 0.29700 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.TABLE_CONSTRAINTS.CONSTRAINT_SCHEMA
        IS 'schema name of the constraint being described';

Comment created.

Elapsed time: 0.19300 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.TABLE_CONSTRAINTS.CONSTRAINT_NAME
        IS 'constraint name';

Comment created.

Elapsed time: 0.19000 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.TABLE_CONSTRAINTS.TABLE_CATALOG
        IS 'catalog name of the table to which the table constraint being described applies';

Comment created.

Elapsed time: 0.19600 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.TABLE_CONSTRAINTS.TABLE_OWNER 
        IS 'authorization name who owns the table to to which the table constraint being described applies';

Comment created.

Elapsed time: 0.20800 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.TABLE_CONSTRAINTS.TABLE_SCHEMA
        IS 'schema name of the table to to which the table constraint being described applies';

Comment created.

Elapsed time: 0.18500 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.TABLE_CONSTRAINTS.TABLE_NAME 
        IS 'table name of the table to to which the table constraint being described applies';

Comment created.

Elapsed time: 0.18200 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.TABLE_CONSTRAINTS.CONSTRAINT_TYPE
        IS 'the value is in ( PRIMARY KEY, UNIQUE, FOREIGN KEY, NOT NULL, CHECK )';

Comment created.

Elapsed time: 0.19400 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.TABLE_CONSTRAINTS.IS_DEFERRABLE
        IS 'is a deferrable constraint';

Comment created.

Elapsed time: 0.17900 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.TABLE_CONSTRAINTS.INITIALLY_DEFERRED
        IS 'is an initially deferred constraint';

Comment created.

Elapsed time: 0.17800 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.TABLE_CONSTRAINTS.ENFORCED
        IS 'is an enforced constraint';

Comment created.

Elapsed time: 0.17800 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.TABLE_CONSTRAINTS.CREATED_TIME
        IS 'created time of the constraint';

Comment created.

Elapsed time: 0.19000 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.TABLE_CONSTRAINTS.MODIFIED_TIME
        IS 'last modified time of the constraint';

Comment created.

Elapsed time: 0.18000 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.TABLE_CONSTRAINTS.COMMENTS
        IS 'comments of the constraint';

Comment created.

Elapsed time: 0.17700 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE INFORMATION_SCHEMA.TABLE_CONSTRAINTS TO PUBLIC;

Grant succeeded.

Elapsed time: 0.15800 ms 


COMMIT;

Commit complete.

Elapsed time: 0.23800 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS TABLE_CONSTRAINTS;

Synonym dropped.

Elapsed time: 0.09800 ms 

CREATE PUBLIC SYNONYM TABLE_CONSTRAINTS FOR INFORMATION_SCHEMA.TABLE_CONSTRAINTS;

Synonym created.

Elapsed time: 0.11300 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05000 ms 


--##############################################################
--# INFORMATION_SCHEMA.TABLE_PRIVILEGES
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS INFORMATION_SCHEMA.TABLE_PRIVILEGES;

View dropped.

Elapsed time: 1.43900 ms 


--#####################
--# create view
--#####################

CREATE VIEW INFORMATION_SCHEMA.TABLE_PRIVILEGES
( 
       GRANTOR
     , GRANTEE
     , TABLE_CATALOG
     , TABLE_OWNER 
     , TABLE_SCHEMA 
     , TABLE_NAME 
     , PRIVILEGE_TYPE
     , IS_GRANTABLE
     , WITH_HIERARCHY
)
AS
SELECT
       grantor.AUTHORIZATION_NAME
     , grantee.AUTHORIZATION_NAME
     , CAST( CURRENT_CATALOG AS VARCHAR(128 OCTETS) ) 
     , owner.AUTHORIZATION_NAME
     , sch.SCHEMA_NAME
     , tab.TABLE_NAME
     , pvtab.PRIVILEGE_TYPE
     , pvtab.IS_GRANTABLE
     , pvtab.WITH_HIERARCHY
  FROM
       DEFINITION_SCHEMA.TABLE_PRIVILEGES  AS pvtab
     , DEFINITION_SCHEMA.TABLES            AS tab 
     , DEFINITION_SCHEMA.SCHEMATA          AS sch 
     , DEFINITION_SCHEMA.AUTHORIZATIONS    AS grantor
     , DEFINITION_SCHEMA.AUTHORIZATIONS    AS grantee
     , DEFINITION_SCHEMA.AUTHORIZATIONS    AS owner
 WHERE
       pvtab.TABLE_ID   = tab.TABLE_ID
   AND pvtab.SCHEMA_ID  = sch.SCHEMA_ID
   AND pvtab.GRANTOR_ID = grantor.AUTH_ID
   AND pvtab.GRANTEE_ID = grantee.AUTH_ID
   AND tab.OWNER_ID     = owner.AUTH_ID
   AND ( grantee.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )
      -- OR  
      -- pvcol.GRANTEE_ID IN ( SELECT AUTH_ID 
      --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
         OR
         grantor.AUTHORIZATION_NAME = CURRENT_USER
       )
 ORDER BY 
       pvtab.SCHEMA_ID
     , pvtab.TABLE_ID
     , pvtab.GRANTOR_ID
     , pvtab.GRANTEE_ID
     , pvtab.PRIVILEGE_TYPE_ID   
;

View created.

Elapsed time: 2.01600 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE INFORMATION_SCHEMA.TABLE_PRIVILEGES
        IS 'Identify the privileges on tables of tables defined in this catalog that are available to or granted by a given user or role.';

Comment created.

Elapsed time: 0.20500 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN INFORMATION_SCHEMA.TABLE_PRIVILEGES.GRANTOR
        IS 'authorization name of the user who granted table privileges';

Comment created.

Elapsed time: 0.19100 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.TABLE_PRIVILEGES.GRANTEE
        IS 'authorization name of some user or role, or PUBLIC to indicate all users, to whom the table privilege being described is granted';

Comment created.

Elapsed time: 0.18700 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.TABLE_PRIVILEGES.TABLE_CATALOG
        IS 'catalog name of the table on which the privilege being described was granted';

Comment created.

Elapsed time: 0.23700 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.TABLE_PRIVILEGES.TABLE_OWNER 
        IS 'table owner name of the table on which the privilege being described was granted';

Comment created.

Elapsed time: 0.21900 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.TABLE_PRIVILEGES.TABLE_SCHEMA 
        IS 'schema name of the table on which the privilege being described was granted';

Comment created.

Elapsed time: 0.18500 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.TABLE_PRIVILEGES.TABLE_NAME 
        IS 'table name on which the privilege being described was granted';

Comment created.

Elapsed time: 0.18300 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.TABLE_PRIVILEGES.PRIVILEGE_TYPE
        IS 'the value is in ( CONTROL, SELECT, INSERT, UPDATE, DELETE, REFERENCES, LOCK, INDEX, ALTER )';

Comment created.

Elapsed time: 0.18300 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.TABLE_PRIVILEGES.IS_GRANTABLE
        IS 'is grantable';

Comment created.

Elapsed time: 0.18500 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.TABLE_PRIVILEGES.WITH_HIERARCHY
        IS 'whether the privilege was granted WITH HIERARCHY OPTION or not';

Comment created.

Elapsed time: 0.19200 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE INFORMATION_SCHEMA.TABLE_PRIVILEGES TO PUBLIC;

Grant succeeded.

Elapsed time: 0.16200 ms 


COMMIT;

Commit complete.

Elapsed time: 0.25100 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS TABLE_PRIVILEGES;

Synonym dropped.

Elapsed time: 0.09800 ms 

CREATE PUBLIC SYNONYM TABLE_PRIVILEGES FOR INFORMATION_SCHEMA.TABLE_PRIVILEGES;

Synonym created.

Elapsed time: 0.11700 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05200 ms 


--##############################################################
--# INFORMATION_SCHEMA.USAGE_PRIVILEGES
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS INFORMATION_SCHEMA.USAGE_PRIVILEGES;

View dropped.

Elapsed time: 1.43100 ms 


--#####################
--# create view
--#####################

CREATE VIEW INFORMATION_SCHEMA.USAGE_PRIVILEGES
( 
       GRANTOR
     , GRANTEE
     , OBJECT_CATALOG
     , OBJECT_OWNER 
     , OBJECT_SCHEMA 
     , OBJECT_NAME 
     , OBJECT_TYPE
     , PRIVILEGE_TYPE
     , IS_GRANTABLE
)
AS
SELECT
       grantor.AUTHORIZATION_NAME
     , grantee.AUTHORIZATION_NAME
     , CAST( CURRENT_CATALOG AS VARCHAR(128 OCTETS) ) 
     , owner.AUTHORIZATION_NAME
     , sch.SCHEMA_NAME
     , sqc.SEQUENCE_NAME
     , usg.OBJECT_TYPE
     , CAST( 'USAGE' AS VARCHAR(32 OCTETS) )
     , usg.IS_GRANTABLE
  FROM
       DEFINITION_SCHEMA.USAGE_PRIVILEGES  AS usg
     , DEFINITION_SCHEMA.SEQUENCES         AS sqc
     , DEFINITION_SCHEMA.SCHEMATA          AS sch
     , DEFINITION_SCHEMA.AUTHORIZATIONS    AS grantor
     , DEFINITION_SCHEMA.AUTHORIZATIONS    AS grantee
     , DEFINITION_SCHEMA.AUTHORIZATIONS    AS owner
 WHERE
       usg.OBJECT_ID    = sqc.SEQUENCE_ID
   AND usg.SCHEMA_ID    = sch.SCHEMA_ID
   AND usg.GRANTOR_ID   = grantor.AUTH_ID
   AND usg.GRANTEE_ID   = grantee.AUTH_ID
   AND sqc.OWNER_ID     = owner.AUTH_ID
   AND ( grantee.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )
      -- OR  
      -- pvcol.GRANTEE_ID IN ( SELECT AUTH_ID 
      --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
         OR
         grantor.AUTHORIZATION_NAME = CURRENT_USER
       )
 ORDER BY 
       usg.SCHEMA_ID
     , usg.OBJECT_ID
     , usg.GRANTOR_ID
     , usg.GRANTEE_ID
;

View created.

Elapsed time: 2.00900 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE INFORMATION_SCHEMA.USAGE_PRIVILEGES
        IS 'Identify the USAGE privileges on objects defined in this catalog that are available to or granted by a given user or role.';

Comment created.

Elapsed time: 0.17700 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN INFORMATION_SCHEMA.USAGE_PRIVILEGES.GRANTOR
        IS 'authorization name of the user who granted usage privileges, on the object of the type identified by OBJECT_TYPE';

Comment created.

Elapsed time: 0.19800 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.USAGE_PRIVILEGES.GRANTEE
        IS 'authorization identifier of some user or role, or PUBLIC to indicate all users, to whom the usage privilege being described is granted';

Comment created.

Elapsed time: 0.18600 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.USAGE_PRIVILEGES.OBJECT_CATALOG
        IS 'catalog name of the object of the type identified by OBJECT_TYPE on which the privilege being described was granted';

Comment created.

Elapsed time: 0.18300 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.USAGE_PRIVILEGES.OBJECT_OWNER 
        IS 'owner name of the object of the type identified by OBJECT_TYPE on which the privilege being described was granted';

Comment created.

Elapsed time: 0.19900 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.USAGE_PRIVILEGES.OBJECT_SCHEMA 
        IS 'schema name of the object of the type identified by OBJECT_TYPE on which the privilege being described was granted';

Comment created.

Elapsed time: 0.18400 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.USAGE_PRIVILEGES.OBJECT_NAME 
        IS 'object name of the type identified by OBJECT_TYPE on which the privilege being described was granted';

Comment created.

Elapsed time: 0.18400 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.USAGE_PRIVILEGES.OBJECT_TYPE 
        IS 'the value is in ( DOMAIN, CHARACTER SET, COLLATION, TRANSLATION, SEQUENCE )';

Comment created.

Elapsed time: 0.17900 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.USAGE_PRIVILEGES.PRIVILEGE_TYPE
        IS 'the value is in ( USAGE )';

Comment created.

Elapsed time: 0.18700 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.USAGE_PRIVILEGES.IS_GRANTABLE
        IS 'is grantable';

Comment created.

Elapsed time: 0.17800 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE INFORMATION_SCHEMA.USAGE_PRIVILEGES TO PUBLIC;

Grant succeeded.

Elapsed time: 0.15300 ms 


COMMIT;

Commit complete.

Elapsed time: 0.16600 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS USAGE_PRIVILEGES;

Synonym dropped.

Elapsed time: 0.09600 ms 

CREATE PUBLIC SYNONYM USAGE_PRIVILEGES FOR INFORMATION_SCHEMA.USAGE_PRIVILEGES;

Synonym created.

Elapsed time: 0.11300 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05000 ms 


--##############################################################
--# INFORMATION_SCHEMA.VIEWS
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS INFORMATION_SCHEMA.VIEWS;

View dropped.

Elapsed time: 2.07700 ms 


--#####################
--# create view
--#####################

CREATE VIEW INFORMATION_SCHEMA.VIEWS
(
       TABLE_CATALOG
     , TABLE_OWNER
     , TABLE_SCHEMA
     , TABLE_NAME
     , VIEW_DEFINITION
     , CHECK_OPTION
     , IS_UPDATABLE
     , INSERTABLE_INTO
     , IS_TRIGGER_UPDATABLE
     , IS_TRIGGER_DELETABLE
     , IS_TRIGGER_INSERTABLE_INTO
     , IS_COMPILED
     , IS_AFFECTED
     , COMMENTS
)
AS
SELECT
       CAST( CURRENT_CATALOG AS VARCHAR(128 OCTETS) ) 
     , auth1.AUTHORIZATION_NAME
     , sch.SCHEMA_NAME
     , tab.TABLE_NAME
     , CASE WHEN ( CURRENT_USER IN ( auth1.AUTHORIZATION_NAME, auth2.AUTHORIZATION_NAME ) ) THEN viw.VIEW_DEFINITION ELSE CAST( 'not owner' AS LONG VARCHAR ) END
     , viw.CHECK_OPTION
     , viw.IS_UPDATABLE
     , tab.IS_INSERTABLE_INTO
     , viw.IS_TRIGGER_UPDATABLE
     , viw.IS_TRIGGER_DELETABLE
     , viw.IS_TRIGGER_INSERTABLE_INTO
     , viw.IS_COMPILED
     , viw.IS_AFFECTED
     , tab.COMMENTS
  FROM 
       DEFINITION_SCHEMA.VIEWS            AS viw
     , DEFINITION_SCHEMA.TABLES           AS tab 
     , DEFINITION_SCHEMA.SCHEMATA         AS sch 
     , DEFINITION_SCHEMA.AUTHORIZATIONS   AS auth1 
     , DEFINITION_SCHEMA.AUTHORIZATIONS   AS auth2 
 WHERE 
       viw.TABLE_ID  = tab.TABLE_ID
   AND viw.SCHEMA_ID = sch.SCHEMA_ID 
   AND viw.OWNER_ID  = auth1.AUTH_ID 
   AND sch.OWNER_ID  = auth2.AUTH_ID
   AND ( viw.TABLE_ID IN ( SELECT pvcol.TABLE_ID 
                             FROM DEFINITION_SCHEMA.COLUMN_PRIVILEGES AS pvcol 
                            WHERE ( pvcol.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                            FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS aucol 
                                                           WHERE aucol.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                        ) 
                                 -- OR  
                                 -- pvcol.GRANTEE_ID IN ( SELECT AUTH_ID 
                                 --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                  )
                         ) 
         OR 
         viw.TABLE_ID IN ( SELECT pvtab.TABLE_ID 
                             FROM DEFINITION_SCHEMA.TABLE_PRIVILEGES AS pvtab 
                            WHERE ( pvtab.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                            FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS autab 
                                                           WHERE autab.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                        ) 
                                 -- OR  
                                 -- pvtab.GRANTEE_ID IN ( SELECT AUTH_ID 
                                 --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                  )
                          ) 
         OR 
         viw.SCHEMA_ID IN ( SELECT pvsch.SCHEMA_ID 
                              FROM DEFINITION_SCHEMA.SCHEMA_PRIVILEGES AS pvsch 
                             WHERE pvsch.PRIVILEGE_TYPE IN ( 'CONTROL SCHEMA', 'DROP VIEW', 
                                                             'SELECT TABLE', 'INSERT TABLE', 'DELETE TABLE', 'UPDATE TABLE', 'LOCK TABLE' ) 
                               AND ( pvsch.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                             FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS ausch 
                                                            WHERE ausch.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                         ) 
                                  -- OR  
                                  -- pvsch.GRANTEE_ID IN ( SELECT AUTH_ID 
                                  --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                   )
                          ) 
         OR 
         EXISTS ( SELECT GRANTEE_ID  
                    FROM DEFINITION_SCHEMA.DATABASE_PRIVILEGES pvdba 
                   WHERE pvdba.PRIVILEGE_TYPE IN ( 'ALTER ANY TABLE', 'DROP ANY VIEW', 
                                                   'SELECT ANY TABLE', 'INSERT ANY TABLE', 'DELETE ANY TABLE', 'UPDATE ANY TABLE', 'LOCK ANY TABLE' ) 
                     AND ( pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                   FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS audba 
                                                  WHERE audba.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                ) 
                        -- OR  
                        -- pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                        --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                          )  
                ) 
       ) 
ORDER BY 
      viw.SCHEMA_ID 
    , viw.TABLE_ID 
;

View created.

Elapsed time: 2.83300 ms 




--#####################
--# comment view
--#####################

COMMENT ON TABLE INFORMATION_SCHEMA.VIEWS
        IS 'Identify the viewed tables defined in this catalog that are accessible to a given user or role.';

Comment created.

Elapsed time: 0.16600 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN INFORMATION_SCHEMA.VIEWS.TABLE_CATALOG
        IS 'catalog name of the viewed table';

Comment created.

Elapsed time: 0.27000 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.VIEWS.TABLE_OWNER
        IS 'owner name of the viewed table';

Comment created.

Elapsed time: 0.19700 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.VIEWS.TABLE_SCHEMA
        IS 'schema name of the viewed table';

Comment created.

Elapsed time: 0.18900 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.VIEWS.TABLE_NAME
        IS 'view name of the viewed table';

Comment created.

Elapsed time: 0.18300 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.VIEWS.VIEW_DEFINITION
        IS 'the character representation of the user-specified query expression contained in the corresponding view descriptor';

Comment created.

Elapsed time: 0.18200 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.VIEWS.CHECK_OPTION
        IS 'the value is in ( CASCADED, LOCAL, NONE )';

Comment created.

Elapsed time: 0.18200 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.VIEWS.IS_UPDATABLE
        IS 'is an updatable view';

Comment created.

Elapsed time: 0.18000 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.VIEWS.INSERTABLE_INTO
        IS 'is an insertable view';

Comment created.

Elapsed time: 0.17800 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.VIEWS.IS_TRIGGER_UPDATABLE
        IS 'whether an update INSTEAD OF trigger is defined on the view or not';

Comment created.

Elapsed time: 0.18200 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.VIEWS.IS_TRIGGER_DELETABLE
        IS 'whether a delete INSTEAD OF trigger is defined on the view or not';

Comment created.

Elapsed time: 0.17800 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.VIEWS.IS_TRIGGER_INSERTABLE_INTO
        IS 'whether an insert INSTEAD OF trigger is defined on the view or not';

Comment created.

Elapsed time: 0.18800 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.VIEWS.IS_COMPILED
        IS 'whether the view is compiled or not';

Comment created.

Elapsed time: 0.20000 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.VIEWS.IS_AFFECTED
        IS 'whether the view is affected by modification of underlying object or not';

Comment created.

Elapsed time: 0.18000 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.VIEWS.COMMENTS
        IS 'comments of the view';

Comment created.

Elapsed time: 0.19800 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE INFORMATION_SCHEMA.VIEWS TO PUBLIC;

Grant succeeded.

Elapsed time: 0.15400 ms 


COMMIT;

Commit complete.

Elapsed time: 0.21800 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS VIEWS;

Synonym dropped.

Elapsed time: 0.09800 ms 

CREATE PUBLIC SYNONYM VIEWS FOR INFORMATION_SCHEMA.VIEWS;

Synonym created.

Elapsed time: 0.10900 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05100 ms 


--##############################################################
--# INFORMATION_SCHEMA.VIEW_TABLE_USAGE
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS INFORMATION_SCHEMA.VIEW_TABLE_USAGE;

View dropped.

Elapsed time: 1.50800 ms 


--#####################
--# create view
--#####################

CREATE VIEW INFORMATION_SCHEMA.VIEW_TABLE_USAGE
(
       VIEW_CATALOG
     , VIEW_OWNER
     , VIEW_SCHEMA
     , VIEW_NAME
     , TABLE_CATALOG
     , TABLE_OWNER
     , TABLE_SCHEMA
     , TABLE_NAME
)
AS
SELECT 
       CAST( CURRENT_CATALOG AS VARCHAR(128 OCTETS) ) 
     , auth1.AUTHORIZATION_NAME
     , sch1.SCHEMA_NAME
     , tab1.TABLE_NAME
     , CAST( CURRENT_CATALOG AS VARCHAR(128 OCTETS) ) 
     , auth2.AUTHORIZATION_NAME
     , sch2.SCHEMA_NAME
     , tab2.TABLE_NAME
  FROM 
       DEFINITION_SCHEMA.VIEW_TABLE_USAGE AS vtu
     , INFORMATION_SCHEMA.WHOLE_TABLES    AS tab1 
     , INFORMATION_SCHEMA.WHOLE_TABLES    AS tab2 
     , DEFINITION_SCHEMA.SCHEMATA         AS sch1 
     , DEFINITION_SCHEMA.SCHEMATA         AS sch2 
     , DEFINITION_SCHEMA.AUTHORIZATIONS   AS auth1 
     , DEFINITION_SCHEMA.AUTHORIZATIONS   AS auth2 
 WHERE 
       vtu.VIEW_ID         = tab1.TABLE_ID
   AND vtu.VIEW_SCHEMA_ID  = sch1.SCHEMA_ID 
   AND vtu.VIEW_OWNER_ID   = auth1.AUTH_ID 
   AND vtu.TABLE_ID        = tab2.TABLE_ID
   AND vtu.TABLE_SCHEMA_ID = sch2.SCHEMA_ID 
   AND vtu.TABLE_OWNER_ID  = auth2.AUTH_ID 
   AND ( 
         auth1.AUTHORIZATION_NAME = CURRENT_USER
         OR 
         auth2.AUTHORIZATION_NAME = CURRENT_USER
       ) 
ORDER BY 
      vtu.VIEW_SCHEMA_ID 
    , vtu.VIEW_ID 
    , vtu.TABLE_SCHEMA_ID
    , vtu.TABLE_ID
;

View created.

Elapsed time: 2.26100 ms 




--#####################
--# comment view
--#####################

COMMENT ON TABLE INFORMATION_SCHEMA.VIEW_TABLE_USAGE
        IS 'Identify the tables on which viewed tables defined in this catalog and owned by a given user or role are dependent.';

Comment created.

Elapsed time: 0.16400 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN INFORMATION_SCHEMA.VIEW_TABLE_USAGE.VIEW_CATALOG
        IS 'catalog name of the viewed table';

Comment created.

Elapsed time: 0.19000 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.VIEW_TABLE_USAGE.VIEW_OWNER
        IS 'owner name of the viewed table';

Comment created.

Elapsed time: 0.19400 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.VIEW_TABLE_USAGE.VIEW_SCHEMA
        IS 'schema name of the viewed table';

Comment created.

Elapsed time: 0.18500 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.VIEW_TABLE_USAGE.VIEW_NAME
        IS 'view name of the viewed table';

Comment created.

Elapsed time: 0.18000 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.VIEW_TABLE_USAGE.TABLE_CATALOG
        IS 'catalog name of a table that is explicitly or implicitly referenced in the original query expression of the compiled view being described';

Comment created.

Elapsed time: 0.18400 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.VIEW_TABLE_USAGE.TABLE_OWNER
        IS 'owner name of a table that is explicitly or implicitly referenced in the original query expression of the compiled view being described';

Comment created.

Elapsed time: 0.18400 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.VIEW_TABLE_USAGE.TABLE_SCHEMA
        IS 'schema name of a table that is explicitly or implicitly referenced in the original query expression of the compiled view being described';

Comment created.

Elapsed time: 0.19600 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.VIEW_TABLE_USAGE.TABLE_NAME
        IS 'table name of a table that is explicitly or implicitly referenced in the original query expression of the compiled view being described';

Comment created.

Elapsed time: 0.20000 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE INFORMATION_SCHEMA.VIEW_TABLE_USAGE TO PUBLIC;

Grant succeeded.

Elapsed time: 0.16500 ms 


COMMIT;

Commit complete.

Elapsed time: 0.16800 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS VIEW_TABLE_USAGE;

Synonym dropped.

Elapsed time: 0.09300 ms 

CREATE PUBLIC SYNONYM VIEW_TABLE_USAGE FOR INFORMATION_SCHEMA.VIEW_TABLE_USAGE;

Synonym created.

Elapsed time: 0.11100 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05000 ms 



--##############################################################
--# INFORMATION_SCHEMA.VIEW_ROUTINE_USAGE
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS INFORMATION_SCHEMA.VIEW_ROUTINE_USAGE;

View dropped.

Elapsed time: 1.40500 ms 


--#####################
--# create view
--#####################

CREATE VIEW INFORMATION_SCHEMA.VIEW_ROUTINE_USAGE
(
       TABLE_CATALOG
     , TABLE_OWNER
     , TABLE_SCHEMA
     , TABLE_NAME
     , SPECIFIC_CATALOG
     , SPECIFIC_OWNER
     , SPECIFIC_SCHEMA
     , SPECIFIC_NAME
)
AS
SELECT 
       CAST( CURRENT_CATALOG AS VARCHAR(128 OCTETS) ) -- TABLE_CATALOG
     , auth1.AUTHORIZATION_NAME                       -- TABLE_OWNER
     , sch1.SCHEMA_NAME                               -- TABLE_SCHEMA
     , tab1.TABLE_NAME                                -- TABLE_NAME
     , CAST( CURRENT_CATALOG AS VARCHAR(128 OCTETS) ) -- SPECIFIC_CATALOG
     , auth2.AUTHORIZATION_NAME                       -- SPECIFIC_OWNER
     , sch2.SCHEMA_NAME                               -- SPECIFIC_SCHEMA
     , rtn.SPECIFIC_NAME                              -- SPECIFIC_NAME
  FROM 
       DEFINITION_SCHEMA.VIEW_ROUTINE_USAGE AS vru
     , DEFINITION_SCHEMA.TABLES           AS tab1 
     , DEFINITION_SCHEMA.SCHEMATA         AS sch1 
     , DEFINITION_SCHEMA.AUTHORIZATIONS   AS auth1
     , DEFINITION_SCHEMA.ROUTINES         AS rtn
     , DEFINITION_SCHEMA.SCHEMATA         AS sch2 
     , DEFINITION_SCHEMA.AUTHORIZATIONS   AS auth2
 WHERE 
       vru.TABLE_ID          = tab1.TABLE_ID
   AND vru.TABLE_SCHEMA_ID   = sch1.SCHEMA_ID 
   AND vru.TABLE_OWNER_ID    = auth1.AUTH_ID 
   AND vru.SPECIFIC_ID        = rtn.SPECIFIC_ID 
   AND vru.SPECIFIC_SCHEMA_ID = sch2.SCHEMA_ID
   AND vru.SPECIFIC_OWNER_ID  = auth2.AUTH_ID 
   AND ( 
         auth1.AUTHORIZATION_NAME = CURRENT_USER
         OR 
         auth2.AUTHORIZATION_NAME = CURRENT_USER
       ) 
ORDER BY 
      vru.TABLE_SCHEMA_ID 
    , vru.TABLE_ID 
    , vru.SPECIFIC_SCHEMA_ID
    , vru.SPECIFIC_ID
;

View created.

Elapsed time: 1.84000 ms 




--#####################
--# comment view
--#####################

COMMENT ON TABLE INFORMATION_SCHEMA.VIEW_ROUTINE_USAGE
        IS 'Identify each routine owned by a given user or role on which a view defined in this catalog is dependent.';

Comment created.

Elapsed time: 0.17200 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN INFORMATION_SCHEMA.VIEW_ROUTINE_USAGE.TABLE_CATALOG
        IS 'catalog name of the viewed table';

Comment created.

Elapsed time: 0.20500 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.VIEW_ROUTINE_USAGE.TABLE_OWNER
        IS 'owner name of the viewed table';

Comment created.

Elapsed time: 0.21800 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.VIEW_ROUTINE_USAGE.TABLE_SCHEMA
        IS 'schema name of the viewed table';

Comment created.

Elapsed time: 0.18600 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.VIEW_ROUTINE_USAGE.TABLE_NAME
        IS 'table name of the viewed table';

Comment created.

Elapsed time: 0.19900 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.VIEW_ROUTINE_USAGE.SPECIFIC_CATALOG
        IS 'specific catalog name of a routine contained in the query expression of the view being described';

Comment created.

Elapsed time: 0.19100 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.VIEW_ROUTINE_USAGE.SPECIFIC_OWNER
        IS 'specific owner name of a routine contained in the query expression of the view being described';

Comment created.

Elapsed time: 0.18300 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.VIEW_ROUTINE_USAGE.SPECIFIC_SCHEMA
        IS 'specific schema name of a routine contained in the query expression of the view being described';

Comment created.

Elapsed time: 0.17900 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.VIEW_ROUTINE_USAGE.SPECIFIC_NAME
        IS 'specific name of a routine contained in the query expression of the view being described';

Comment created.

Elapsed time: 0.18800 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE INFORMATION_SCHEMA.VIEW_ROUTINE_USAGE TO PUBLIC;

Grant succeeded.

Elapsed time: 0.15400 ms 


COMMIT;

Commit complete.

Elapsed time: 0.15900 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS VIEW_ROUTINE_USAGE;

Synonym dropped.

Elapsed time: 0.09700 ms 

CREATE PUBLIC SYNONYM VIEW_ROUTINE_USAGE FOR INFORMATION_SCHEMA.VIEW_ROUTINE_USAGE;

Synonym created.

Elapsed time: 0.11000 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05700 ms 




--##############################################################
--# INFORMATION_SCHEMA.ROUTINES
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS INFORMATION_SCHEMA.ROUTINES;

View dropped.

Elapsed time: 10.72800 ms 


--#####################
--# create view
--#####################

CREATE VIEW INFORMATION_SCHEMA.ROUTINES
(
       SPECIFIC_CATALOG
     , SPECIFIC_OWNER
     , SPECIFIC_SCHEMA
     , SPECIFIC_NAME
     , ROUTINE_CATALOG
     , ROUTINE_OWNER
     , ROUTINE_SCHEMA
     , ROUTINE_NAME
     , ROUTINE_TYPE
     , MODULE_CATALOG
     , MODULE_SCHEMA
     , MODULE_NAME
     , UDT_CATALOG
     , UDT_SCHEMA
     , UDT_NAME
     , DATA_TYPE
     , CHARACTER_MAXIMUM_LENGTH
     , CHARACTER_OCTET_LENGTH
     , CHARACTER_SET_CATALOG
     , CHARACTER_SET_SCHEMA
     , CHARACTER_SET_NAME
     , COLLATION_CATALOG
     , COLLATION_SCHEMA
     , COLLATION_NAME
     , NUMERIC_PRECISION
     , NUMERIC_PRECISION_RADIX
     , NUMERIC_SCALE
     , DATETIME_PRECISION
     , INTERVAL_TYPE
     , INTERVAL_PRECISION
     , TYPE_UDT_CATALOG
     , TYPE_UDT_SCHEMA
     , TYPE_UDT_NAME
     , SCOPE_CATALOG
     , SCOPE_SCHEMA
     , SCOPE_NAME
     , MAXIMUM_CARDINALITY
     , DTD_IDENTIFIER
     , ROUTINE_BODY
     , ROUTINE_DEFINITION
     , EXTERNAL_NAME
     , EXTERNAL_LANGUAGE
     , PARAMETER_STYLE
     , IS_DETERMINISTIC
     , SQL_DATA_ACCESS
     , IS_NULL_CALL
     , SQL_PATH
     , SCHEMA_LEVEL_ROUTINE
     , MAX_DYNAMIC_RESULT_SETS
     , IS_USER_DEFINED_CAST
     , IS_IMPLICITLY_INVOCABLE
     , SECURITY_TYPE
     , TO_SQL_SPECIFIC_CATALOG
     , TO_SQL_SPECIFIC_SCHEMA
     , TO_SQL_SPECIFIC_NAME
     , AS_LOCATOR
     , CREATED
     , LAST_ALTERED
     , NEW_SAVEPOINT_LEVEL
     , IS_UDT_DEPENDENT
     , RESULT_CAST_FROM_DATA_TYPE
     , RESULT_CAST_AS_LOCATOR
     , RESULT_CAST_CHAR_MAX_LENGTH
     , RESULT_CAST_CHAR_OCTET_LENGTH
     , RESULT_CAST_CHAR_SET_CATALOG
     , RESULT_CAST_CHAR_SET_SCHEMA
     , RESULT_CAST_CHARACTER_SET_NAME
     , RESULT_CAST_COLLATION_CATALOG
     , RESULT_CAST_COLLATION_SCHEMA
     , RESULT_CAST_COLLATION_NAME
     , RESULT_CAST_NUMERIC_PRECISION
     , RESULT_CAST_NUMERIC_RADIX
     , RESULT_CAST_NUMERIC_SCALE
     , RESULT_CAST_DATETIME_PRECISION
     , RESULT_CAST_INTERVAL_TYPE
     , RESULT_CAST_INTERVAL_PRECISION
     , RESULT_CAST_TYPE_UDT_CATALOG
     , RESULT_CAST_TYPE_UDT_SCHEMA
     , RESULT_CAST_TYPE_UDT_NAME
     , RESULT_CAST_SCOPE_CATALOG
     , RESULT_CAST_SCOPE_SCHEMA
     , RESULT_CAST_SCOPE_NAME
     , RESULT_CAST_MAX_CARDINALITY
     , RESULT_CAST_DTD_IDENTIFIER
     , DECLARED_DATA_TYPE
     , DECLARED_NUMERIC_PRECISION
     , DECLARED_NUMERIC_SCALE
     , RESULT_CAST_FROM_DECLARED_DATA_TYPE
     , RESULT_CAST_DECLARED_NUMERIC_PRECISION
     , RESULT_CAST_DECLARED_NUMERIC_SCALE
)
AS
SELECT
       CAST( CURRENT_CATALOG AS VARCHAR(128 OCTETS) ) 
     , auth.AUTHORIZATION_NAME
     , sch.SCHEMA_NAME
     , R.SPECIFIC_NAME
     , CAST( CURRENT_CATALOG AS VARCHAR(128 OCTETS) ) 
     , auth.AUTHORIZATION_NAME
     , sch.SCHEMA_NAME
     , R.ROUTINE_NAME
     , R.ROUTINE_TYPE
     , CAST( NULL AS VARCHAR(128 OCTETS) ) -- MODULE_CATALOG
     , CAST( NULL AS VARCHAR(128 OCTETS) ) -- MODULE_SCHEMA 
     , CAST( NULL AS VARCHAR(128 OCTETS) ) -- MODULE_NAME 
     , CAST( NULL AS VARCHAR(128 OCTETS) ) -- R.USER_DEFINED_TYPE_CATALOG 
     , CAST( NULL AS VARCHAR(128 OCTETS) ) -- R.USER_DEFINED_TYPE_SCHEMA 
     , CAST( NULL AS VARCHAR(128 OCTETS) ) -- R.USER_DEFINED_TYPE_NAME 
     , CAST( D.DATA_TYPE AS VARCHAR(128 OCTETS) )
     , CAST( D.CHARACTER_MAXIMUM_LENGTH AS NUMBER ) 
     , CAST( D.CHARACTER_OCTET_LENGTH AS NUMBER ) 
     , CAST( NULL AS VARCHAR(128 OCTETS) ) -- R.CHARACTER_SET_CATALOG
     , CAST( NULL AS VARCHAR(128 OCTETS) ) -- R.CHARACTER_SET_SCHEMA 
     , CAST( NULL AS VARCHAR(128 OCTETS) ) -- R.CHARACTER_SET_NAME 
     , CAST( NULL AS VARCHAR(128 OCTETS) ) -- R.COLLATION_CATALOG 
     , CAST( NULL AS VARCHAR(128 OCTETS) ) -- R.COLLATION_SCHEMA 
     , CAST( NULL AS VARCHAR(128 OCTETS) ) -- R.COLLATION_NAME 
     , CAST( D.NUMERIC_PRECISION AS NUMBER ) 
     , CAST( D.NUMERIC_PRECISION_RADIX AS NUMBER ) 
     , CAST( D.NUMERIC_SCALE AS NUMBER ) 
     , CAST( D.DATETIME_PRECISION AS NUMBER ) 
     , D.INTERVAL_TYPE 
     , CAST( D.INTERVAL_PRECISION AS NUMBER ) 
     , CAST( NULL AS VARCHAR(128 OCTETS) ) -- D.USER_DEFINED_TYPE_CATALOG 
     , CAST( NULL AS VARCHAR(128 OCTETS) ) -- D.USER_DEFINED_TYPE_SCHEMA 
     , CAST( NULL AS VARCHAR(128 OCTETS) ) -- D.USER_DEFINED_TYPE_NAME 
     , CAST( NULL AS VARCHAR(128 OCTETS) ) -- D.SCOPE_CATALOG 
     , CAST( NULL AS VARCHAR(128 OCTETS) ) -- D.SCOPE_SCHEMA 
     , CAST( NULL AS VARCHAR(128 OCTETS) ) -- D.SCOPE_NAME 
     , CAST( D.MAXIMUM_CARDINALITY AS NUMBER ) 
     , CAST( D.DTD_IDENTIFIER AS NUMBER ) 
     , R.ROUTINE_BODY
     , CASE WHEN ( CURRENT_USER IN ( auth.AUTHORIZATION_NAME ) ) THEN R.ROUTINE_DEFINITION ELSE CAST( 'not owner' AS LONG VARCHAR ) END
     , R.EXTERNAL_NAME
     , R.EXTERNAL_LANGUAGE
     , R.PARAMETER_STYLE
     , R.IS_DETERMINISTIC
     , R.SQL_DATA_ACCESS
     , R.IS_NULL_CALL
     , R.SQL_PATH
     , R.SCHEMA_LEVEL_ROUTINE
     , CAST( R.MAX_DYNAMIC_RESULT_SETS AS NUMBER ) 
     , R.IS_USER_DEFINED_CAST
     , R.IS_IMPLICITLY_INVOCABLE
     , R.SECURITY_TYPE
     , CAST( NULL AS VARCHAR(128 OCTETS) ) -- TO_SQL_SPECIFIC_CATALOG 
     , CAST( NULL AS VARCHAR(128 OCTETS) ) -- TO_SQL_SPECIFIC_SCHEMA 
     , CAST( NULL AS VARCHAR(128 OCTETS) ) -- TO_SQL_SPECIFIC_NAME 
     , R.AS_LOCATOR
     , R.CREATED_TIME
     , R.MODIFIED_TIME
     , R.NEW_SAVEPOINT_LEVEL
     , R.IS_UDT_DEPENDENT
     , CAST( DT.DATA_TYPE AS VARCHAR(128 OCTETS) )
     , R.RESULT_CAST_AS_LOCATOR
     , CAST( DT.CHARACTER_MAXIMUM_LENGTH AS NUMBER ) 
     , CAST( DT.CHARACTER_OCTET_LENGTH AS NUMBER ) 
     , CAST( NULL AS VARCHAR(128 OCTETS) ) -- DT.CHARACTER_SET_CATALOG
     , CAST( NULL AS VARCHAR(128 OCTETS) ) -- DT.CHARACTER_SET_SCHEMA 
     , CAST( NULL AS VARCHAR(128 OCTETS) ) -- DT.CHARACTER_SET_NAME 
     , CAST( NULL AS VARCHAR(128 OCTETS) ) -- DT.COLLATION_CATALOG 
     , CAST( NULL AS VARCHAR(128 OCTETS) ) -- DT.COLLATION_SCHEMA 
     , CAST( NULL AS VARCHAR(128 OCTETS) ) -- DT.COLLATION_NAME 
     , CAST( DT.NUMERIC_PRECISION AS NUMBER ) 
     , CAST( DT.NUMERIC_PRECISION_RADIX AS NUMBER ) 
     , CAST( DT.NUMERIC_SCALE AS NUMBER ) 
     , CAST( DT.DATETIME_PRECISION AS NUMBER ) 
     , DT.INTERVAL_TYPE 
     , CAST( DT.INTERVAL_PRECISION AS NUMBER ) 
     , CAST( NULL AS VARCHAR(128 OCTETS) ) -- DT.USER_DEFINED_TYPE_CATALOG 
     , CAST( NULL AS VARCHAR(128 OCTETS) ) -- DT.USER_DEFINED_TYPE_SCHEMA 
     , CAST( NULL AS VARCHAR(128 OCTETS) ) -- DT.USER_DEFINED_TYPE_NAME 
     , CAST( NULL AS VARCHAR(128 OCTETS) ) -- DT.SCOPE_CATALOG 
     , CAST( NULL AS VARCHAR(128 OCTETS) ) -- DT.SCOPE_SCHEMA 
     , CAST( NULL AS VARCHAR(128 OCTETS) ) -- DT.SCOPE_NAME 
     , CAST( DT.MAXIMUM_CARDINALITY AS NUMBER ) 
     , CAST( DT.DTD_IDENTIFIER AS NUMBER ) 
     , D.DECLARED_DATA_TYPE 
     , CAST( D.DECLARED_NUMERIC_PRECISION AS NUMBER ) 
     , CAST( D.DECLARED_NUMERIC_SCALE AS NUMBER ) 
     , DT.DECLARED_DATA_TYPE 
     , CAST( DT.DECLARED_NUMERIC_PRECISION AS NUMBER ) 
     , CAST( DT.DECLARED_NUMERIC_SCALE AS NUMBER ) 
   FROM 
     ( ( DEFINITION_SCHEMA.ROUTINES AS R
     LEFT JOIN
          INFORMATION_SCHEMA.WHOLE_DTDS AS D
       ON ( R.SPECIFIC_SCHEMA_ID, R.SPECIFIC_ID,
           'ROUTINE', R.DTD_IDENTIFIER )
        = ( D.OBJECT_SCHEMA_ID, D.OBJECT_ID,
            D.OBJECT_TYPE, D.DTD_IDENTIFIER ) )
     LEFT JOIN
          INFORMATION_SCHEMA.WHOLE_DTDS AS DT
       ON ( SPECIFIC_SCHEMA_ID, R.SPECIFIC_ID,
            'ROUTINE', R.RESULT_CAST_FROM_DTD_IDENTIFIER )
        = ( DT.OBJECT_SCHEMA_ID, DT.OBJECT_ID,
            DT.OBJECT_TYPE, DT.DTD_IDENTIFIER ) )
     , DEFINITION_SCHEMA.SCHEMATA         AS sch 
     , DEFINITION_SCHEMA.AUTHORIZATIONS   AS auth 
 WHERE 
       R.MODULE_SCHEMA_ID IS NULL
   AND R.MODULE_ID IS NULL
   AND R.SPECIFIC_SCHEMA_ID = sch.SCHEMA_ID
   AND R.SPECIFIC_OWNER_ID  = auth.AUTH_ID
   AND ( R.SPECIFIC_ID IN ( SELECT pvproc.SPECIFIC_ID 
                              FROM DEFINITION_SCHEMA.ROUTINE_PRIVILEGES AS pvproc 
                             WHERE ( pvproc.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                              FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS autab 
                                                             WHERE autab.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                          ) 
                                   -- OR  
                                   -- pvtab.GRANTEE_ID IN ( SELECT AUTH_ID 
                                   --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                   )
                          ) 
         OR 
         R.SPECIFIC_SCHEMA_ID IN ( SELECT pvsch.SCHEMA_ID 
                                     FROM DEFINITION_SCHEMA.SCHEMA_PRIVILEGES AS pvsch 
                                    WHERE pvsch.PRIVILEGE_TYPE IN ( 'CONTROL SCHEMA', 'ALTER PROCEDURE', 'DROP PROCEDURE', 'EXECUTE PROCEDURE' ) 
                                      AND ( pvsch.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                                    FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS ausch 
                                                                   WHERE ausch.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                                ) 
                                          -- OR  
                                          -- pvsch.GRANTEE_ID IN ( SELECT AUTH_ID 
                                          --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                          )
                                 ) 
         OR 
         EXISTS ( SELECT GRANTEE_ID  
                    FROM DEFINITION_SCHEMA.DATABASE_PRIVILEGES pvdba 
                   WHERE pvdba.PRIVILEGE_TYPE IN ( 'ALTER ANY PROCEDURE', 'DROP ANY PROCEDURE', 'EXECUTE ANY PROCEDURE' )
                     AND ( pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                   FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS audba 
                                                  WHERE audba.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                ) 
                        -- OR  
                        -- pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                        --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                          )  
                ) 
       ) 
ORDER BY 
      sch.SCHEMA_NAME
    , R.SPECIFIC_NAME
;

View created.

Elapsed time: 14.02200 ms 




--#####################
--# comment view
--#####################

COMMENT ON TABLE INFORMATION_SCHEMA.ROUTINES
        IS 'Identify the SQL-invoked routines in this catalog that are accessible to a given user or role.';

Comment created.

Elapsed time: 0.20500 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINES.SPECIFIC_CATALOG
        IS 'specific catalog name of the routine';

Comment created.

Elapsed time: 0.20500 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINES.SPECIFIC_OWNER
        IS 'specific owner name of the routine';

Comment created.

Elapsed time: 0.19500 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINES.SPECIFIC_SCHEMA
        IS 'specific schema name of the routine';

Comment created.

Elapsed time: 0.19100 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINES.SPECIFIC_NAME
        IS 'specific name of the routine';

Comment created.

Elapsed time: 0.20100 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINES.ROUTINE_CATALOG
        IS 'catalog name of the routine';

Comment created.

Elapsed time: 0.20800 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINES.ROUTINE_OWNER
        IS 'owner name of the routine';

Comment created.

Elapsed time: 0.19900 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINES.ROUTINE_SCHEMA
        IS 'schema name of the routine';

Comment created.

Elapsed time: 0.19100 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINES.ROUTINE_TYPE
        IS 'name of the routine';

Comment created.

Elapsed time: 0.19300 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINES.MODULE_CATALOG
        IS 'module name of the routine';

Comment created.

Elapsed time: 0.19700 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINES.MODULE_SCHEMA
        IS 'schema name of the module in which the routine is defined';

Comment created.

Elapsed time: 0.20300 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINES.MODULE_NAME
        IS 'name of the module in which the routine is defined';

Comment created.

Elapsed time: 0.19800 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINES.UDT_CATALOG
        IS 'catalog name of the user-defined data type which defined the routine as a method function';

Comment created.

Elapsed time: 0.19300 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINES.UDT_SCHEMA
        IS 'schema name of the user-defined data type which defined the routine as a method function';

Comment created.

Elapsed time: 0.19200 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINES.UDT_NAME
        IS 'name of the user-defined data type which defined the routine as a method function';

Comment created.

Elapsed time: 0.20100 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINES.DATA_TYPE
        IS 'data type the routine returns';

Comment created.

Elapsed time: 0.20100 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINES.CHARACTER_MAXIMUM_LENGTH
        IS 'maximum character length of data type the routine returns';

Comment created.

Elapsed time: 0.18700 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINES.CHARACTER_OCTET_LENGTH
        IS 'maximum character length in octets of data type the routine returns';

Comment created.

Elapsed time: 0.18900 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINES.CHARACTER_SET_CATALOG
        IS 'character set catalog name of data type the routine returns';

Comment created.

Elapsed time: 0.20500 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINES.CHARACTER_SET_SCHEMA
        IS 'character set schema name of data type the routine returns';

Comment created.

Elapsed time: 0.19900 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINES.CHARACTER_SET_NAME
        IS 'character set name of data type the routine returns';

Comment created.

Elapsed time: 0.18800 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINES.COLLATION_CATALOG
        IS 'collation catalog name of data type the routine returns';

Comment created.

Elapsed time: 0.19700 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINES.COLLATION_SCHEMA
        IS 'collation schema name of data type the routine returns';

Comment created.

Elapsed time: 0.19000 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINES.COLLATION_NAME
        IS 'collation name of data type the routine returns';

Comment created.

Elapsed time: 0.18900 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINES.NUMERIC_PRECISION
        IS 'precision of data type the routine returns';

Comment created.

Elapsed time: 0.19000 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINES.NUMERIC_PRECISION_RADIX
        IS 'precision radix of data type the routine returns';

Comment created.

Elapsed time: 0.19800 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINES.NUMERIC_SCALE
        IS 'scale of data type the routine returns';

Comment created.

Elapsed time: 0.18900 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINES.DATETIME_PRECISION
        IS 'fractional seconds precision of data type the routine returns';

Comment created.

Elapsed time: 0.19000 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINES.INTERVAL_TYPE
        IS 'interval qualifier for data type the routine returns';

Comment created.

Elapsed time: 0.19400 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINES.INTERVAL_PRECISION
        IS 'interval leading field precision of data type the routine returns';

Comment created.

Elapsed time: 0.18700 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINES.TYPE_UDT_CATALOG
        IS 'catalog name of the user-defined data type, which is the data type the routine returns';

Comment created.

Elapsed time: 0.20400 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINES.TYPE_UDT_SCHEMA
        IS 'schema name of the user-defined data type, which is the data type the routine returns';

Comment created.

Elapsed time: 0.19100 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINES.TYPE_UDT_NAME
        IS 'name of the user-defined data type, which is the data type the routine returns';

Comment created.

Elapsed time: 0.18800 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINES.SCOPE_CATALOG
        IS 'catalog name of referenceable table';

Comment created.

Elapsed time: 0.19400 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINES.SCOPE_SCHEMA
        IS 'schema name of referenceable table';

Comment created.

Elapsed time: 0.20000 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINES.SCOPE_NAME
        IS 'name of referenceable table';

Comment created.

Elapsed time: 0.18600 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINES.MAXIMUM_CARDINALITY
        IS 'maximum cardinality of data type the routine returns';

Comment created.

Elapsed time: 0.18900 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINES.DTD_IDENTIFIER
        IS 'dtd ientifier of data type the routine returns';

Comment created.

Elapsed time: 0.18900 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINES.ROUTINE_BODY
        IS 'type of the routine body';

Comment created.

Elapsed time: 0.20100 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINES.ROUTINE_DEFINITION
        IS 'catalog name of the routine';

Comment created.

Elapsed time: 0.22500 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINES.EXTERNAL_NAME
        IS 'external name of the external routine';

Comment created.

Elapsed time: 0.19100 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINES.EXTERNAL_LANGUAGE
        IS 'language of the external routine';

Comment created.

Elapsed time: 0.61800 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINES.PARAMETER_STYLE
        IS 'SQL parameter passing style of the external routine';

Comment created.

Elapsed time: 0.22400 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINES.IS_DETERMINISTIC
        IS 'the routine is deterministic or not';

Comment created.

Elapsed time: 0.19500 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINES.SQL_DATA_ACCESS
        IS 'routine possibly contains SQL or access data';

Comment created.

Elapsed time: 0.20400 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINES.IS_NULL_CALL
        IS 'routine returns NULL if any of parameter values are NULL';

Comment created.

Elapsed time: 0.18900 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINES.SQL_PATH
        IS 'described SQL PATH when the routine is defined';

Comment created.

Elapsed time: 0.19200 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINES.SCHEMA_LEVEL_ROUTINE
        IS 'the routine is schema-level routine';

Comment created.

Elapsed time: 0.19000 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINES.MAX_DYNAMIC_RESULT_SETS
        IS 'max result set count of the routine';

Comment created.

Elapsed time: 0.23200 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINES.IS_USER_DEFINED_CAST
        IS 'the routine is a function that is a user-defined cast function';

Comment created.

Elapsed time: 0.19100 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINES.IS_IMPLICITLY_INVOCABLE
        IS 'the user-defined cast function is implicitly invocable';

Comment created.

Elapsed time: 0.19200 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINES.SECURITY_TYPE
        IS 'security type of the routine(DEFINER/INVOKER)';

Comment created.

Elapsed time: 0.24800 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINES.TO_SQL_SPECIFIC_CATALOG
        IS 'catalog name of the to-sql routine of the result type of routine';

Comment created.

Elapsed time: 0.19500 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINES.TO_SQL_SPECIFIC_SCHEMA
        IS 'schema name of the to-sql routine of the result type of routine';

Comment created.

Elapsed time: 0.19400 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINES.TO_SQL_SPECIFIC_NAME
        IS 'name of the to-sql routine of the result type of routine';

Comment created.

Elapsed time: 0.20300 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINES.AS_LOCATOR
        IS 'return value of the routine is passed as locator';

Comment created.

Elapsed time: 0.22100 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINES.CREATED
        IS 'creation time of the routine';

Comment created.

Elapsed time: 0.19600 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINES.LAST_ALTERED
        IS 'most lately altered time of the routine';

Comment created.

Elapsed time: 0.22000 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINES.NEW_SAVEPOINT_LEVEL
        IS 'specifiy new savepoint level or not';

Comment created.

Elapsed time: 0.20300 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINES.IS_UDT_DEPENDENT
        IS 'routine is dependent';

Comment created.

Elapsed time: 0.19400 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINES.RESULT_CAST_FROM_DATA_TYPE
        IS 'data type which is specificed in result cast clause of the routine definition';

Comment created.

Elapsed time: 0.19300 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINES.RESULT_CAST_AS_LOCATOR
        IS 'locator indication which is specificed in result cast clause of the routine definition';

Comment created.

Elapsed time: 0.20000 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINES.RESULT_CAST_CHAR_MAX_LENGTH
        IS 'maximum character length of data type which is specificed in result cast clause of the routine definition';

Comment created.

Elapsed time: 0.20800 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINES.RESULT_CAST_CHAR_OCTET_LENGTH
        IS 'maximum character length in octets of data type which is specificed in result cast clause of the routine definition';

Comment created.

Elapsed time: 0.19300 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINES.RESULT_CAST_CHAR_SET_CATALOG
        IS 'character set catalog name of data type which is specificed in result cast clause of the routine definition';

Comment created.

Elapsed time: 0.19200 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINES.RESULT_CAST_CHAR_SET_SCHEMA
        IS 'character set schema name of data type which is specificed in result cast clause of the routine definition';

Comment created.

Elapsed time: 0.19200 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINES.RESULT_CAST_CHARACTER_SET_NAME
        IS 'character set name of data type which is specificed in result cast clause of the routine definition';

Comment created.

Elapsed time: 0.20100 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINES.RESULT_CAST_COLLATION_CATALOG
        IS 'collation catalog name of data type which is specificed in result cast clause of the routine definition';

Comment created.

Elapsed time: 0.19600 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINES.RESULT_CAST_COLLATION_SCHEMA
        IS 'collation schema name of data type which is specificed in result cast clause of the routine definition';

Comment created.

Elapsed time: 0.19800 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINES.RESULT_CAST_COLLATION_NAME
        IS 'collation name of data type which is specificed in result cast clause of the routine definition';

Comment created.

Elapsed time: 0.20300 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINES.RESULT_CAST_NUMERIC_PRECISION
        IS 'precision of data type which is specificed in result cast clause of the routine definition';

Comment created.

Elapsed time: 0.19700 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINES.RESULT_CAST_NUMERIC_RADIX
        IS 'precision radix of data type which is specificed in result cast clause of the routine definition';

Comment created.

Elapsed time: 0.23200 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINES.RESULT_CAST_NUMERIC_SCALE
        IS 'scale of data type which is specificed in result cast clause of the routine definition';

Comment created.

Elapsed time: 0.20200 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINES.RESULT_CAST_DATETIME_PRECISION
        IS 'fractional seconds precision of data type which is specificed in result cast clause of the routine definition';

Comment created.

Elapsed time: 0.19800 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINES.RESULT_CAST_INTERVAL_TYPE
        IS 'interval qualifier of data type which is specificed in result cast clause of the routine definition';

Comment created.

Elapsed time: 0.19800 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINES.RESULT_CAST_INTERVAL_PRECISION
        IS 'interval precision of data type which is specificed in result cast clause of the routine definition';

Comment created.

Elapsed time: 0.19200 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINES.RESULT_CAST_TYPE_UDT_CATALOG
        IS 'UDT catalog name of data type which is specificed in result cast clause of the routine definition';

Comment created.

Elapsed time: 0.19700 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINES.RESULT_CAST_TYPE_UDT_SCHEMA
        IS 'UDT schema name of data type which is specificed in result cast clause of the routine definition';

Comment created.

Elapsed time: 0.21600 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINES.RESULT_CAST_TYPE_UDT_NAME
        IS 'UDT name of data type which is specificed in result cast clause of the routine definition';

Comment created.

Elapsed time: 0.19200 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINES.RESULT_CAST_SCOPE_CATALOG
        IS 'catalog name of referenceable table described in result cast clause of the routine definition';

Comment created.

Elapsed time: 0.19100 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINES.RESULT_CAST_SCOPE_SCHEMA
        IS 'schema name of referenceable table described in result cast clause of the routine definition';

Comment created.

Elapsed time: 0.20600 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINES.RESULT_CAST_SCOPE_NAME
        IS 'name of referenceable table described in result cast clause of the routine definition';

Comment created.

Elapsed time: 0.19000 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINES.RESULT_CAST_MAX_CARDINALITY
        IS 'maximum cardinality of data type which is specificed in result cast clause of the routine definition';

Comment created.

Elapsed time: 0.19000 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINES.RESULT_CAST_DTD_IDENTIFIER
        IS 'dtd identifier of data type which is specificed in result cast clause of the routine definition';

Comment created.

Elapsed time: 0.19200 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINES.DECLARED_DATA_TYPE
        IS 'declared data type of the routine returns';

Comment created.

Elapsed time: 0.19200 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINES.DECLARED_NUMERIC_PRECISION
        IS 'declared data type precision of the routine returns';

Comment created.

Elapsed time: 0.19100 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINES.DECLARED_NUMERIC_SCALE
        IS 'declared data type scale of the routine returns';

Comment created.

Elapsed time: 0.19600 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINES.RESULT_CAST_FROM_DECLARED_DATA_TYPE
        IS 'declared data type which is specificed in result cast clause of the routine definition';

Comment created.

Elapsed time: 0.23900 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINES.RESULT_CAST_DECLARED_NUMERIC_PRECISION
        IS 'declared data type precision which is specificed in result cast clause of the routine definition';

Comment created.

Elapsed time: 0.19900 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINES.RESULT_CAST_DECLARED_NUMERIC_SCALE
        IS 'declared data type scale which is specificed in result cast clause of the routine definition';

Comment created.

Elapsed time: 0.19200 ms 



--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE INFORMATION_SCHEMA.ROUTINES TO PUBLIC;

Grant succeeded.

Elapsed time: 0.16800 ms 


COMMIT;

Commit complete.

Elapsed time: 0.97400 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS ROUTINES;

Synonym dropped.

Elapsed time: 0.10400 ms 

CREATE PUBLIC SYNONYM ROUTINES FOR INFORMATION_SCHEMA.ROUTINES;

Synonym created.

Elapsed time: 0.11500 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05000 ms 


--##############################################################
--# INFORMATION_SCHEMA.PARAMETERS
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS INFORMATION_SCHEMA.PARAMETERS;

View dropped.

Elapsed time: 4.87300 ms 


--#####################
--# create view
--#####################

CREATE VIEW INFORMATION_SCHEMA.PARAMETERS
(
       SPECIFIC_CATALOG
     , SPECIFIC_OWNER
     , SPECIFIC_SCHEMA
     , SPECIFIC_NAME
     , ORDINAL_POSITION
     , PARAMETER_MODE
     , IS_RESULT
     , AS_LOCATOR
     , PARAMETER_NAME
     , FROM_SQL_SPECIFIC_CATALOG 
     , FROM_SQL_SPECIFIC_SCHEMA 
     , FROM_SQL_SPECIFIC_NAME 
     , TO_SQL_SPECIFIC_CATALOG 
     , TO_SQL_SPECIFIC_SCHEMA 
     , TO_SQL_SPECIFIC_NAME 
     , DATA_TYPE
     , CHARACTER_MAXIMUM_LENGTH
     , CHARACTER_OCTET_LENGTH
     , CHARACTER_SET_CATALOG
     , CHARACTER_SET_SCHEMA
     , CHARACTER_SET_NAME
     , COLLATION_CATALOG 
     , COLLATION_SCHEMA 
     , COLLATION_NAME 
     , NUMERIC_PRECISION
     , NUMERIC_PRECISION_RADIX
     , NUMERIC_SCALE
     , DATETIME_PRECISION
     , INTERVAL_TYPE
     , INTERVAL_PRECISION
     , UDT_CATALOG 
     , UDT_SCHEMA 
     , UDT_NAME 
     , SCOPE_CATALOG 
     , SCOPE_SCHEMA 
     , SCOPE_NAME 
     , MAXIMUM_CARDINALITY
     , DTD_IDENTIFIER
     , DECLARED_DATA_TYPE
     , DECLARED_NUMERIC_PRECISION
     , DECLARED_NUMERIC_SCALE
     , PARAMETER_DEFAULT
)
AS
SELECT 
       CAST( CURRENT_CATALOG AS VARCHAR(128 OCTETS) ) 
     , auth.AUTHORIZATION_NAME
     , sch.SCHEMA_NAME
     , R.SPECIFIC_NAME
     , CAST( P.ORDINAL_POSITION AS NUMBER ) 
     , P.PARAMETER_MODE
     , P.IS_RESULT
     , P.AS_LOCATOR
     , P.PARAMETER_NAME
     , CAST( NULL AS VARCHAR(128 OCTETS) ) -- FROM_SQL_SPECIFIC_CATALOG 
     , CAST( NULL AS VARCHAR(128 OCTETS) ) -- FROM_SQL_SPECIFIC_SCHEMA 
     , CAST( NULL AS VARCHAR(128 OCTETS) ) -- FROM_SQL_SPECIFIC_NAME 
     , CAST( NULL AS VARCHAR(128 OCTETS) ) -- TO_SQL_SPECIFIC_CATALOG 
     , CAST( NULL AS VARCHAR(128 OCTETS) ) -- TO_SQL_SPECIFIC_SCHEMA 
     , CAST( NULL AS VARCHAR(128 OCTETS) ) -- TO_SQL_SPECIFIC_NAME 
     , CAST( DTD.DATA_TYPE AS VARCHAR(128 OCTETS) )
     , CAST( DTD.CHARACTER_MAXIMUM_LENGTH AS NUMBER ) 
     , CAST( DTD.CHARACTER_OCTET_LENGTH AS NUMBER ) 
     , CAST( NULL AS VARCHAR(128 OCTETS) ) -- CHARACTER_SET_CATALOG
     , CAST( NULL AS VARCHAR(128 OCTETS) ) -- CHARACTER_SET_SCHEMA 
     , CAST( NULL AS VARCHAR(128 OCTETS) ) -- CHARACTER_SET_NAME 
     , CAST( NULL AS VARCHAR(128 OCTETS) ) -- COLLATION_CATALOG 
     , CAST( NULL AS VARCHAR(128 OCTETS) ) -- COLLATION_SCHEMA 
     , CAST( NULL AS VARCHAR(128 OCTETS) ) -- COLLATION_NAME 
     , CAST( DTD.NUMERIC_PRECISION AS NUMBER ) 
     , CAST( DTD.NUMERIC_PRECISION_RADIX AS NUMBER ) 
     , CAST( DTD.NUMERIC_SCALE AS NUMBER ) 
     , CAST( DTD.DATETIME_PRECISION AS NUMBER ) 
     , DTD.INTERVAL_TYPE
     , CAST( DTD.INTERVAL_PRECISION AS NUMBER ) 
     , CAST( NULL AS VARCHAR(128 OCTETS) ) -- UDT_CATALOG 
     , CAST( NULL AS VARCHAR(128 OCTETS) ) -- UDT_SCHEMA 
     , CAST( NULL AS VARCHAR(128 OCTETS) ) -- UDT_NAME 
     , CAST( NULL AS VARCHAR(128 OCTETS) ) -- SCOPE_CATALOG 
     , CAST( NULL AS VARCHAR(128 OCTETS) ) -- SCOPE_SCHEMA 
     , CAST( NULL AS VARCHAR(128 OCTETS) ) -- SCOPE_NAME 
     , CAST( DTD.MAXIMUM_CARDINALITY AS NUMBER ) 
     , CAST( DTD.DTD_IDENTIFIER AS NUMBER ) 
     , DTD.DECLARED_DATA_TYPE
     , CAST( DTD.DECLARED_NUMERIC_PRECISION AS NUMBER ) 
     , CAST( DTD.DECLARED_NUMERIC_SCALE AS NUMBER ) 
     , CASE WHEN ( CURRENT_USER IN ( auth.AUTHORIZATION_NAME ) ) THEN P.PARAMETER_DEFAULT ELSE CAST( 'not owner' AS LONG VARCHAR ) END
  FROM
       ( DEFINITION_SCHEMA.PARAMETERS AS P
       LEFT JOIN
         INFORMATION_SCHEMA.WHOLE_DTDS AS DTD
         ON ( P.SPECIFIC_SCHEMA_ID, P.SPECIFIC_ID,
              'ROUTINE', P.DTD_IDENTIFIER )
          = ( DTD.OBJECT_SCHEMA_ID, DTD.OBJECT_ID,
              DTD.OBJECT_TYPE, DTD.DTD_IDENTIFIER ) )
     , DEFINITION_SCHEMA.ROUTINES AS R
     , DEFINITION_SCHEMA.SCHEMATA         AS sch 
     , DEFINITION_SCHEMA.AUTHORIZATIONS   AS auth 
 WHERE 
       R.MODULE_SCHEMA_ID IS NULL
   AND R.MODULE_ID IS NULL
   AND R.SPECIFIC_SCHEMA_ID = P.SPECIFIC_SCHEMA_ID
   AND R.SPECIFIC_ID = P.SPECIFIC_ID
   AND R.SPECIFIC_SCHEMA_ID = sch.SCHEMA_ID
   AND R.SPECIFIC_OWNER_ID  = auth.AUTH_ID
   AND ( R.SPECIFIC_ID IN ( SELECT pvproc.SPECIFIC_ID 
                              FROM DEFINITION_SCHEMA.ROUTINE_PRIVILEGES AS pvproc 
                             WHERE ( pvproc.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                              FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS autab 
                                                             WHERE autab.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                          ) 
                                   -- OR  
                                   -- pvtab.GRANTEE_ID IN ( SELECT AUTH_ID 
                                   --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                   )
                          ) 
         OR 
         R.SPECIFIC_SCHEMA_ID IN ( SELECT pvsch.SCHEMA_ID 
                                     FROM DEFINITION_SCHEMA.SCHEMA_PRIVILEGES AS pvsch 
                                    WHERE pvsch.PRIVILEGE_TYPE IN ( 'CONTROL SCHEMA',
                                                                    'ALTER PROCEDURE', 'DROP PROCEDURE', 'EXECUTE PROCEDURE' ) 
                                      AND ( pvsch.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                                    FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS ausch 
                                                                   WHERE ausch.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                                ) 
                                          -- OR  
                                          -- pvsch.GRANTEE_ID IN ( SELECT AUTH_ID 
                                          --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                                          )
                                 ) 
         OR 
         EXISTS ( SELECT GRANTEE_ID  
                    FROM DEFINITION_SCHEMA.DATABASE_PRIVILEGES pvdba 
                   WHERE pvdba.PRIVILEGE_TYPE IN ( 'ALTER ANY PROCEDURE', 'DROP ANY PROCEDURE', 'EXECUTE ANY PROCEDURE' )
                     AND ( pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                                                   FROM DEFINITION_SCHEMA.AUTHORIZATIONS AS audba 
                                                  WHERE audba.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )  
                                                ) 
                        -- OR  
                        -- pvdba.GRANTEE_ID IN ( SELECT AUTH_ID 
                        --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
                          )  
                ) 
       ) 
ORDER BY 
       sch.SCHEMA_NAME
     , R.SPECIFIC_NAME
     , P.ORDINAL_POSITION
;

View created.

Elapsed time: 6.93100 ms 




--#####################
--# comment view
--#####################

COMMENT ON TABLE INFORMATION_SCHEMA.PARAMETERS
        IS 'Identify the SQL parameters of SQL-invoked routines defined in this catalog that are accessible to a given user or role.';

Comment created.

Elapsed time: 0.18400 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN INFORMATION_SCHEMA.PARAMETERS.SPECIFIC_CATALOG
        IS 'catalog name of the specific name of the SQL- invoked routine that contains the SQL parameter being described';

Comment created.

Elapsed time: 0.21100 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.PARAMETERS.SPECIFIC_OWNER
        IS 'owner name of the specific name of the SQL- invoked routine that contains the SQL parameter being described';

Comment created.

Elapsed time: 0.19300 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.PARAMETERS.SPECIFIC_SCHEMA
        IS 'schema name of the specific name of the SQL- invoked routine that contains the SQL parameter being described';

Comment created.

Elapsed time: 0.19100 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.PARAMETERS.SPECIFIC_NAME
        IS 'specific name of the SQL- invoked routine that contains the SQL parameter being described';

Comment created.

Elapsed time: 0.19100 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.PARAMETERS.ORDINAL_POSITION
        IS 'ordinal position of the SQL- invoked routine that contains the SQL parameter being described';

Comment created.

Elapsed time: 0.18800 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.PARAMETERS.PARAMETER_MODE
        IS 'parameter mode of the SQL parameter being described';

Comment created.

Elapsed time: 0.18700 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.PARAMETERS.IS_RESULT
        IS 'the parameter is RESULT parameter of type-preserving function';

Comment created.

Elapsed time: 0.19800 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.PARAMETERS.AS_LOCATOR
        IS 'the parameter is passed as locator';

Comment created.

Elapsed time: 0.20700 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.PARAMETERS.PARAMETER_NAME
        IS 'name of the SQL parameter being descaibed';

Comment created.

Elapsed time: 0.18700 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.PARAMETERS.FROM_SQL_SPECIFIC_CATALOG 
        IS 'specific catalog name of the from-sql routine for the input parameter being described';

Comment created.

Elapsed time: 0.18700 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.PARAMETERS.FROM_SQL_SPECIFIC_SCHEMA 
        IS 'specific schema name of the from-sql routine for the input parameter being described';

Comment created.

Elapsed time: 0.20200 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.PARAMETERS.FROM_SQL_SPECIFIC_NAME 
        IS 'specific name of the from-sql routine for the input parameter being described';

Comment created.

Elapsed time: 0.18800 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.PARAMETERS.TO_SQL_SPECIFIC_CATALOG 
        IS 'specific catalog name of the to-sql routine for the input parameter being described';

Comment created.

Elapsed time: 0.18800 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.PARAMETERS.TO_SQL_SPECIFIC_SCHEMA 
        IS 'specific schema name of the to-sql routine for the input parameter being described';

Comment created.

Elapsed time: 0.18700 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.PARAMETERS.TO_SQL_SPECIFIC_NAME 
        IS 'specific name of the to-sql routine for the input parameter being described';

Comment created.

Elapsed time: 0.19300 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.PARAMETERS.DATA_TYPE
        IS 'data type of the SQL parameter being described';

Comment created.

Elapsed time: 0.18300 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.PARAMETERS.CHARACTER_MAXIMUM_LENGTH
        IS 'maximum length of the SQL parameter being described';

Comment created.

Elapsed time: 0.18600 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.PARAMETERS.CHARACTER_OCTET_LENGTH
        IS 'maximum length in octets of the SQL parameter being described';

Comment created.

Elapsed time: 0.18400 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.PARAMETERS.CHARACTER_SET_CATALOG
        IS 'character set catalog name of the data type of the SQL parameter being described';

Comment created.

Elapsed time: 0.18700 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.PARAMETERS.CHARACTER_SET_SCHEMA
        IS 'character set schema name of the data type of the SQL parameter being described';

Comment created.

Elapsed time: 0.18600 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.PARAMETERS.CHARACTER_SET_NAME
        IS 'character set name of the data type of the SQL parameter being described';

Comment created.

Elapsed time: 0.18800 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.PARAMETERS.COLLATION_CATALOG 
        IS 'collation catalog name of the data type of the SQL parameter being described';

Comment created.

Elapsed time: 0.18600 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.PARAMETERS.COLLATION_SCHEMA 
        IS 'collation schema name of the data type of the SQL parameter being described';

Comment created.

Elapsed time: 0.19000 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.PARAMETERS.COLLATION_NAME 
        IS 'collation name of the data type of the SQL parameter being described';

Comment created.

Elapsed time: 0.19700 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.PARAMETERS.NUMERIC_PRECISION
        IS 'precision of the data type of the SQL parameter being described';

Comment created.

Elapsed time: 0.18700 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.PARAMETERS.NUMERIC_PRECISION_RADIX
        IS 'precision radix of the data type of the SQL parameter being described';

Comment created.

Elapsed time: 0.20300 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.PARAMETERS.NUMERIC_SCALE
        IS 'scale of the data type of the SQL parameter being described';

Comment created.

Elapsed time: 0.18700 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.PARAMETERS.DATETIME_PRECISION
        IS 'fractional second precisions of the data type of the SQL parameter being described';

Comment created.

Elapsed time: 0.18500 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.PARAMETERS.INTERVAL_TYPE
        IS 'interval qualifier of the data type of the SQL parameter being described';

Comment created.

Elapsed time: 0.18400 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.PARAMETERS.INTERVAL_PRECISION
        IS 'interval precision of the data type of the SQL parameter being described';

Comment created.

Elapsed time: 0.25500 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.PARAMETERS.UDT_CATALOG 
        IS 'catalog name of UDT of the data type of the SQL parameter being described';

Comment created.

Elapsed time: 0.18700 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.PARAMETERS.UDT_SCHEMA 
        IS 'schema name of UDT of the data type of the SQL parameter being described';

Comment created.

Elapsed time: 0.18400 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.PARAMETERS.UDT_NAME 
        IS 'name of UDT of the data type of the SQL parameter being described';

Comment created.

Elapsed time: 0.18800 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.PARAMETERS.SCOPE_CATALOG 
        IS 'catalog name of referenceable tables of the data type of the SQL parameter being described';

Comment created.

Elapsed time: 0.21500 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.PARAMETERS.SCOPE_SCHEMA 
        IS 'schema name of referenceable tables of the data type of the SQL parameter being described';

Comment created.

Elapsed time: 0.18800 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.PARAMETERS.SCOPE_NAME 
        IS 'name of referenceable tables of the data type of the SQL parameter being described';

Comment created.

Elapsed time: 0.18600 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.PARAMETERS.MAXIMUM_CARDINALITY
        IS 'maximum cardinality of the data type of the SQL parameter being described';

Comment created.

Elapsed time: 0.19500 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.PARAMETERS.DTD_IDENTIFIER
        IS 'dtd identifier of the data type of the SQL parameter being described';

Comment created.

Elapsed time: 0.18800 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.PARAMETERS.DECLARED_DATA_TYPE
        IS 'declared data type of the SQL parameter being described';

Comment created.

Elapsed time: 0.20700 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.PARAMETERS.DECLARED_NUMERIC_PRECISION
        IS 'precision of declared data type of the SQL parameter being described';

Comment created.

Elapsed time: 0.18400 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.PARAMETERS.DECLARED_NUMERIC_SCALE
        IS 'scale of declared data type of the SQL parameter being described';

Comment created.

Elapsed time: 0.20300 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.PARAMETERS.PARAMETER_DEFAULT
        IS 'default value of the SQL parameter being described';

Comment created.

Elapsed time: 0.18500 ms 



--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE INFORMATION_SCHEMA.PARAMETERS TO PUBLIC;

Grant succeeded.

Elapsed time: 0.15600 ms 


COMMIT;

Commit complete.

Elapsed time: 0.50200 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS PARAMETERS;

Synonym dropped.

Elapsed time: 0.09400 ms 

CREATE PUBLIC SYNONYM PARAMETERS FOR INFORMATION_SCHEMA.PARAMETERS;

Synonym created.

Elapsed time: 0.11800 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05000 ms 



--##############################################################
--# INFORMATION_SCHEMA.ROUTINE_PRIVILEGES
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS INFORMATION_SCHEMA.ROUTINE_PRIVILEGES;

View dropped.

Elapsed time: 1.76000 ms 


--#####################
--# create view
--#####################

CREATE VIEW INFORMATION_SCHEMA.ROUTINE_PRIVILEGES
(
       GRANTOR
     , GRANTEE
     , SPECIFIC_CATALOG
     , SPECIFIC_OWNER
     , SPECIFIC_SCHEMA
     , SPECIFIC_NAME
     , ROUTINE_CATALOG
     , ROUTINE_OWNER
     , ROUTINE_SCHEMA
     , ROUTINE_NAME
     , PRIVILEGE_TYPE
     , IS_GRANTABLE
)
AS
SELECT 
       grantor.AUTHORIZATION_NAME                     -- GRANTOR
     , grantee.AUTHORIZATION_NAME                     -- GRANTEE
     , CAST( CURRENT_CATALOG AS VARCHAR(128 OCTETS) ) -- SPECIFIC_CATALOG
     , auth.AUTHORIZATION_NAME                        -- SPECIFIC_OWNER
     , sch.SCHEMA_NAME                                -- SPECIFIC_SCHEMA
     , R.SPECIFIC_NAME                                -- SPECIFIC_NAME
     , CAST( CURRENT_CATALOG AS VARCHAR(128 OCTETS) ) -- ROUTINE_CATALOG
     , auth.AUTHORIZATION_NAME                        -- ROUTINE_OWNER
     , sch.SCHEMA_NAME                                -- ROUTINE_SCHEMA
     , R.ROUTINE_NAME                                 -- ROUTINE_NAME
     , RP.PRIVILEGE_TYPE                              -- PRIVILEGE_TYPE
     , RP.IS_GRANTABLE                                -- IS_GRANTABLE
  FROM
       DEFINITION_SCHEMA.ROUTINE_PRIVILEGES AS RP
     , DEFINITION_SCHEMA.ROUTINES           AS R
     , DEFINITION_SCHEMA.SCHEMATA           AS sch 
     , DEFINITION_SCHEMA.AUTHORIZATIONS     AS grantor
     , DEFINITION_SCHEMA.AUTHORIZATIONS     AS grantee
     , DEFINITION_SCHEMA.AUTHORIZATIONS     AS auth
 WHERE 
       RP.SPECIFIC_ID = R.SPECIFIC_ID
   AND RP.GRANTOR_ID  = grantor.AUTH_ID
   AND RP.GRANTEE_ID  = grantee.AUTH_ID
   AND RP.SPECIFIC_SCHEMA_ID = sch.SCHEMA_ID
   AND RP.SPECIFIC_OWNER_ID  = auth.AUTH_ID
   AND ( grantee.AUTHORIZATION_NAME IN ( 'PUBLIC', CURRENT_USER )
      -- OR  
      -- pvcol.GRANTEE_ID IN ( SELECT AUTH_ID 
      --                         FROM INORMATION_SCHEMA.ENABLED_ROLES )  
         OR
         grantor.AUTHORIZATION_NAME = CURRENT_USER
       )
ORDER BY 
       RP.SPECIFIC_SCHEMA_ID
     , RP.SPECIFIC_ID
     , RP.GRANTOR_ID
     , RP.GRANTEE_ID
;

View created.

Elapsed time: 2.70700 ms 




--#####################
--# comment view
--#####################

COMMENT ON TABLE INFORMATION_SCHEMA.ROUTINE_PRIVILEGES
        IS 'Identify the privileges on SQL-invoked routines defined in this catalog that are available to or granted by a given user or role.';

Comment created.

Elapsed time: 0.16900 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINE_PRIVILEGES.GRANTOR
        IS 'authorization name of the user who granted routine privileges';

Comment created.

Elapsed time: 0.19600 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINE_PRIVILEGES.GRANTEE
        IS 'authorization name of some user or role, or PUBLIC to indicate all users, to whom the routine privilege being described is granted';

Comment created.

Elapsed time: 0.19700 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINE_PRIVILEGES.SPECIFIC_CATALOG
        IS 'specific catalog name of the SQL-invoked routine on which the privilege being described was granted';

Comment created.

Elapsed time: 0.19800 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINE_PRIVILEGES.SPECIFIC_OWNER
        IS 'specific owner name of the the SQL-invoked routine on which the privilege being described was granted';

Comment created.

Elapsed time: 0.18500 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINE_PRIVILEGES.SPECIFIC_SCHEMA
        IS 'specific schema name of the the SQL-invoked routine on which the privilege being described was granted';

Comment created.

Elapsed time: 0.18300 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINE_PRIVILEGES.SPECIFIC_NAME
        IS 'specific name of the the SQL-invoked routine on which the privilege being described was granted';

Comment created.

Elapsed time: 0.18900 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINE_PRIVILEGES.ROUTINE_CATALOG
        IS 'routine catalog name of the SQL-invoked routine on which the privilege being described was granted';

Comment created.

Elapsed time: 0.18600 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINE_PRIVILEGES.ROUTINE_SCHEMA
        IS 'routine schema name of the the SQL-invoked routine on which the privilege being described was granted';

Comment created.

Elapsed time: 0.18700 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINE_PRIVILEGES.ROUTINE_NAME
        IS 'routine name of the the SQL-invoked routine on which the privilege being described was granted';

Comment created.

Elapsed time: 0.19000 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINE_PRIVILEGES.PRIVILEGE_TYPE
        IS 'the value is in ( EXECUTE )';

Comment created.

Elapsed time: 0.20300 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINE_PRIVILEGES.IS_GRANTABLE
        IS 'is grantable';

Comment created.

Elapsed time: 0.18200 ms 



--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE INFORMATION_SCHEMA.ROUTINE_PRIVILEGES TO PUBLIC;

Grant succeeded.

Elapsed time: 0.16700 ms 


COMMIT;

Commit complete.

Elapsed time: 0.28400 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS ROUTINE_PRIVILEGES;

Synonym dropped.

Elapsed time: 0.11200 ms 

CREATE PUBLIC SYNONYM ROUTINE_PRIVILEGES FOR INFORMATION_SCHEMA.ROUTINE_PRIVILEGES;

Synonym created.

Elapsed time: 0.14200 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05900 ms 



--##############################################################
--# INFORMATION_SCHEMA.ROUTINE_ROUTINE_USAGE
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS INFORMATION_SCHEMA.ROUTINE_ROUTINE_USAGE;

View dropped.

Elapsed time: 1.38400 ms 


--#####################
--# create view
--#####################

CREATE VIEW INFORMATION_SCHEMA.ROUTINE_ROUTINE_USAGE
(
       SPECIFIC_CATALOG
     , SPECIFIC_OWNER
     , SPECIFIC_SCHEMA
     , SPECIFIC_NAME
     , ROUTINE_CATALOG
     , ROUTINE_OWNER
     , ROUTINE_SCHEMA
     , ROUTINE_NAME
)
AS
SELECT 
       CAST( CURRENT_CATALOG AS VARCHAR(128 OCTETS) ) -- SPECIFIC_CATALOG
     , auth1.AUTHORIZATION_NAME                       -- SPECIFIC_OWNER
     , sch1.SCHEMA_NAME                               -- SPECIFIC_SCHEMA
     , rtn1.SPECIFIC_NAME                             -- SPECIFIC_NAME
     , CAST( CURRENT_CATALOG AS VARCHAR(128 OCTETS) ) -- ROUTINE_CATALOG
     , auth2.AUTHORIZATION_NAME                       -- ROUTINE_OWNER
     , sch2.SCHEMA_NAME                               -- ROUTINE_SCHEMA
     , rtn2.ROUTINE_NAME                              -- ROUTINE_NAME
  FROM 
       DEFINITION_SCHEMA.ROUTINE_ROUTINE_USAGE AS rru
     , DEFINITION_SCHEMA.ROUTINES         AS rtn1
     , DEFINITION_SCHEMA.SCHEMATA         AS sch1 
     , DEFINITION_SCHEMA.AUTHORIZATIONS   AS auth1
     , DEFINITION_SCHEMA.ROUTINES         AS rtn2
     , DEFINITION_SCHEMA.SCHEMATA         AS sch2 
     , DEFINITION_SCHEMA.AUTHORIZATIONS   AS auth2
 WHERE 
       rru.SPECIFIC_ID        = rtn1.SPECIFIC_ID
   AND rru.SPECIFIC_SCHEMA_ID = sch1.SCHEMA_ID 
   AND rru.SPECIFIC_OWNER_ID  = auth1.AUTH_ID 
   AND rru.ROUTINE_ID         = rtn2.ROUTINE_ID 
   AND rru.ROUTINE_SCHEMA_ID  = sch2.SCHEMA_ID
   AND rru.ROUTINE_OWNER_ID   = auth2.AUTH_ID 
   AND ( 
         auth1.AUTHORIZATION_NAME = CURRENT_USER
         OR 
         auth2.AUTHORIZATION_NAME = CURRENT_USER
       ) 
ORDER BY 
      rru.SPECIFIC_SCHEMA_ID 
    , rru.SPECIFIC_ID 
    , rru.ROUTINE_SCHEMA_ID
    , rru.ROUTINE_ID
;

View created.

Elapsed time: 1.99800 ms 




--#####################
--# comment view
--#####################

COMMENT ON TABLE INFORMATION_SCHEMA.ROUTINE_ROUTINE_USAGE
        IS 'Identify each SQL-invoked routine owned by a given user or role on which an SQL routine defined in this catalog is dependent.';

Comment created.

Elapsed time: 0.18500 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINE_ROUTINE_USAGE.SPECIFIC_CATALOG
        IS 'specific catalog name of the routine';

Comment created.

Elapsed time: 0.21200 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINE_ROUTINE_USAGE.SPECIFIC_OWNER
        IS 'specific owner name of the routine';

Comment created.

Elapsed time: 0.18600 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINE_ROUTINE_USAGE.SPECIFIC_SCHEMA
        IS 'specific schema name of the routine';

Comment created.

Elapsed time: 0.18200 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINE_ROUTINE_USAGE.SPECIFIC_NAME
        IS 'specific name of the routine';

Comment created.

Elapsed time: 0.18300 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINE_ROUTINE_USAGE.ROUTINE_CATALOG
        IS 'routine catalog name of a routine contained in routine body of the SQL-invoked routine';

Comment created.

Elapsed time: 0.19600 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINE_ROUTINE_USAGE.ROUTINE_OWNER
        IS 'routine owner name of a routine contained in routine body of the SQL-invoked routine';

Comment created.

Elapsed time: 0.18500 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINE_ROUTINE_USAGE.ROUTINE_SCHEMA
        IS 'routine schema name of a routine contained in routine body of the SQL-invoked routine';

Comment created.

Elapsed time: 0.19400 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINE_ROUTINE_USAGE.ROUTINE_NAME
        IS 'routine name of a routine contained in routine body of the SQL-invoked routine';

Comment created.

Elapsed time: 0.19700 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE INFORMATION_SCHEMA.ROUTINE_ROUTINE_USAGE TO PUBLIC;

Grant succeeded.

Elapsed time: 0.15600 ms 


COMMIT;

Commit complete.

Elapsed time: 0.15900 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS ROUTINE_ROUTINE_USAGE;

Synonym dropped.

Elapsed time: 0.09800 ms 

CREATE PUBLIC SYNONYM ROUTINE_ROUTINE_USAGE FOR INFORMATION_SCHEMA.ROUTINE_ROUTINE_USAGE;

Synonym created.

Elapsed time: 0.11200 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05000 ms 




--##############################################################
--# INFORMATION_SCHEMA.ROUTINE_SEQUENCE_USAGE
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS INFORMATION_SCHEMA.ROUTINE_SEQUENCE_USAGE;

View dropped.

Elapsed time: 1.36500 ms 


--#####################
--# create view
--#####################

CREATE VIEW INFORMATION_SCHEMA.ROUTINE_SEQUENCE_USAGE
(
       SPECIFIC_CATALOG
     , SPECIFIC_OWNER
     , SPECIFIC_SCHEMA
     , SPECIFIC_NAME
     , SEQUENCE_CATALOG
     , SEQUENCE_OWNER
     , SEQUENCE_SCHEMA
     , SEQUENCE_NAME
)
AS
SELECT 
       CAST( CURRENT_CATALOG AS VARCHAR(128 OCTETS) ) -- SPECIFIC_CATALOG
     , auth1.AUTHORIZATION_NAME                       -- SPECIFIC_OWNER
     , sch1.SCHEMA_NAME                               -- SPECIFIC_SCHEMA
     , rtn1.SPECIFIC_NAME                             -- SPECIFIC_NAME
     , CAST( CURRENT_CATALOG AS VARCHAR(128 OCTETS) ) -- SEQUENCE_CATALOG
     , auth2.AUTHORIZATION_NAME                       -- SEQUENCE_OWNER
     , sch2.SCHEMA_NAME                               -- SEQUENCE_SCHEMA
     , seq2.SEQUENCE_NAME                             -- SEQUENCE_NAME
  FROM 
       DEFINITION_SCHEMA.ROUTINE_SEQUENCE_USAGE AS rsu
     , DEFINITION_SCHEMA.ROUTINES         AS rtn1
     , DEFINITION_SCHEMA.SCHEMATA         AS sch1 
     , DEFINITION_SCHEMA.AUTHORIZATIONS   AS auth1
     , DEFINITION_SCHEMA.SEQUENCES        AS seq2
     , DEFINITION_SCHEMA.SCHEMATA         AS sch2 
     , DEFINITION_SCHEMA.AUTHORIZATIONS   AS auth2
 WHERE 
       rsu.SPECIFIC_ID        = rtn1.SPECIFIC_ID
   AND rsu.SPECIFIC_SCHEMA_ID = sch1.SCHEMA_ID 
   AND rsu.SPECIFIC_OWNER_ID  = auth1.AUTH_ID 
   AND rsu.SEQUENCE_ID        = seq2.SEQUENCE_ID 
   AND rsu.SEQUENCE_SCHEMA_ID = sch2.SCHEMA_ID
   AND rsu.SEQUENCE_OWNER_ID  = auth2.AUTH_ID 
   AND ( 
         auth1.AUTHORIZATION_NAME = CURRENT_USER
         OR 
         auth2.AUTHORIZATION_NAME = CURRENT_USER
       ) 
ORDER BY 
      rsu.SPECIFIC_SCHEMA_ID 
    , rsu.SPECIFIC_ID 
    , rsu.SEQUENCE_SCHEMA_ID
    , rsu.SEQUENCE_ID
;

View created.

Elapsed time: 1.84900 ms 




--#####################
--# comment view
--#####################

COMMENT ON TABLE INFORMATION_SCHEMA.ROUTINE_SEQUENCE_USAGE
        IS 'Identify each external sequence generator owned by a given user or role on which some SQL routine defined in this catalog is dependent.';

Comment created.

Elapsed time: 0.18700 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINE_SEQUENCE_USAGE.SPECIFIC_CATALOG
        IS 'specific catalog name of the routine';

Comment created.

Elapsed time: 0.19900 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINE_SEQUENCE_USAGE.SPECIFIC_OWNER
        IS 'specific owner name of the routine';

Comment created.

Elapsed time: 0.19400 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINE_SEQUENCE_USAGE.SPECIFIC_SCHEMA
        IS 'specific schema name of the routine';

Comment created.

Elapsed time: 0.20700 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINE_SEQUENCE_USAGE.SPECIFIC_NAME
        IS 'specific name of the routine';

Comment created.

Elapsed time: 0.20100 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINE_SEQUENCE_USAGE.SEQUENCE_CATALOG
        IS 'catalog name of the sequence of contained in routine body of the SQL-invoked routine';

Comment created.

Elapsed time: 0.19200 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINE_SEQUENCE_USAGE.SEQUENCE_OWNER
        IS 'owner name of the sequence of contained in routine body of the SQL-invoked routine';

Comment created.

Elapsed time: 0.18800 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINE_SEQUENCE_USAGE.SEQUENCE_SCHEMA
        IS 'schema name of the sequence of contained in routine body of the SQL-invoked routine';

Comment created.

Elapsed time: 0.19300 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINE_SEQUENCE_USAGE.SEQUENCE_NAME
        IS 'sequence name of contained in routine body of the SQL-invoked routine';

Comment created.

Elapsed time: 0.18400 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE INFORMATION_SCHEMA.ROUTINE_SEQUENCE_USAGE TO PUBLIC;

Grant succeeded.

Elapsed time: 0.15500 ms 


COMMIT;

Commit complete.

Elapsed time: 0.16200 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS ROUTINE_SEQUENCE_USAGE;

Synonym dropped.

Elapsed time: 0.10000 ms 

CREATE PUBLIC SYNONYM ROUTINE_SEQUENCE_USAGE FOR INFORMATION_SCHEMA.ROUTINE_SEQUENCE_USAGE;

Synonym created.

Elapsed time: 0.11200 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05000 ms 



--##############################################################
--# INFORMATION_SCHEMA.ROUTINE_TABLE_USAGE
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS INFORMATION_SCHEMA.ROUTINE_TABLE_USAGE;

View dropped.

Elapsed time: 1.39300 ms 


--#####################
--# create view
--#####################

CREATE VIEW INFORMATION_SCHEMA.ROUTINE_TABLE_USAGE
(
       SPECIFIC_CATALOG
     , SPECIFIC_OWNER
     , SPECIFIC_SCHEMA
     , SPECIFIC_NAME
     , TABLE_CATALOG
     , TABLE_OWNER
     , TABLE_SCHEMA
     , TABLE_NAME
)
AS
SELECT 
       CAST( CURRENT_CATALOG AS VARCHAR(128 OCTETS) ) -- SPECIFIC_CATALOG
     , auth1.AUTHORIZATION_NAME                       -- SPECIFIC_OWNER
     , sch1.SCHEMA_NAME                               -- SPECIFIC_SCHEMA
     , rtn1.SPECIFIC_NAME                             -- SPECIFIC_NAME
     , CAST( CURRENT_CATALOG AS VARCHAR(128 OCTETS) ) -- TABLE_CATALOG
     , auth2.AUTHORIZATION_NAME                       -- TABLE_OWNER
     , sch2.SCHEMA_NAME                               -- TABLE_SCHEMA
     , tab2.TABLE_NAME                                -- TABLE_NAME
  FROM 
       DEFINITION_SCHEMA.ROUTINE_TABLE_USAGE AS rtu
     , DEFINITION_SCHEMA.ROUTINES         AS rtn1
     , DEFINITION_SCHEMA.SCHEMATA         AS sch1 
     , DEFINITION_SCHEMA.AUTHORIZATIONS   AS auth1
     , DEFINITION_SCHEMA.TABLES           AS tab2
     , DEFINITION_SCHEMA.SCHEMATA         AS sch2 
     , DEFINITION_SCHEMA.AUTHORIZATIONS   AS auth2
 WHERE 
       rtu.SPECIFIC_ID        = rtn1.SPECIFIC_ID
   AND rtu.SPECIFIC_SCHEMA_ID = sch1.SCHEMA_ID 
   AND rtu.SPECIFIC_OWNER_ID  = auth1.AUTH_ID 
   AND rtu.TABLE_ID           = tab2.TABLE_ID 
   AND rtu.TABLE_SCHEMA_ID    = sch2.SCHEMA_ID
   AND rtu.TABLE_OWNER_ID     = auth2.AUTH_ID 
   AND ( 
         auth1.AUTHORIZATION_NAME = CURRENT_USER
         OR 
         auth2.AUTHORIZATION_NAME = CURRENT_USER
       ) 
ORDER BY 
      rtu.SPECIFIC_SCHEMA_ID 
    , rtu.SPECIFIC_ID 
    , rtu.TABLE_SCHEMA_ID
    , rtu.TABLE_ID
;

View created.

Elapsed time: 1.82600 ms 




--#####################
--# comment view
--#####################

COMMENT ON TABLE INFORMATION_SCHEMA.ROUTINE_TABLE_USAGE
        IS 'Identify the tables owned by a given user or role on which SQL routines defined in this catalog are dependent.';

Comment created.

Elapsed time: 0.16500 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINE_TABLE_USAGE.SPECIFIC_CATALOG
        IS 'specific catalog name of the routine';

Comment created.

Elapsed time: 0.20100 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINE_TABLE_USAGE.SPECIFIC_OWNER
        IS 'specific owner name of the routine';

Comment created.

Elapsed time: 0.19700 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINE_TABLE_USAGE.SPECIFIC_SCHEMA
        IS 'specific schema name of the routine';

Comment created.

Elapsed time: 0.18100 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINE_TABLE_USAGE.SPECIFIC_NAME
        IS 'specific name of the routine';

Comment created.

Elapsed time: 0.18100 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINE_TABLE_USAGE.TABLE_CATALOG
        IS 'catalog name of the table of contained in routine body of the SQL-invoked routine';

Comment created.

Elapsed time: 0.18300 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINE_TABLE_USAGE.TABLE_OWNER
        IS 'owner name of the table of contained in routine body of the SQL-invoked routine';

Comment created.

Elapsed time: 0.18400 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINE_TABLE_USAGE.TABLE_SCHEMA
        IS 'schema name of the table of contained in routine body of the SQL-invoked routine';

Comment created.

Elapsed time: 0.18100 ms 

COMMENT ON COLUMN INFORMATION_SCHEMA.ROUTINE_TABLE_USAGE.TABLE_NAME
        IS 'table name of contained in routine body of the SQL-invoked routine';

Comment created.

Elapsed time: 0.18300 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE INFORMATION_SCHEMA.ROUTINE_TABLE_USAGE TO PUBLIC;

Grant succeeded.

Elapsed time: 0.15500 ms 


COMMIT;

Commit complete.

Elapsed time: 0.16400 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS ROUTINE_TABLE_USAGE;

Synonym dropped.

Elapsed time: 0.09400 ms 

CREATE PUBLIC SYNONYM ROUTINE_TABLE_USAGE FOR INFORMATION_SCHEMA.ROUTINE_TABLE_USAGE;

Synonym created.

Elapsed time: 0.11100 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05100 ms 


--###################################################################################
--# build performance views of PERFORMANCE_VIEW_SCHEMA
--###################################################################################

--##############################################################
--# SYS AUTHORIZATION
--##############################################################

SET SESSION AUTHORIZATION SYS;

Session set.

Elapsed time: 0.14400 ms 



--##############################################################
--# V$ARCHIVELOG
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS PERFORMANCE_VIEW_SCHEMA.V$ARCHIVELOG;

View dropped.

Elapsed time: 3.55800 ms 


--#####################
--# create view
--#####################

CREATE VIEW PERFORMANCE_VIEW_SCHEMA.V$ARCHIVELOG
(  
       ARCHIVELOG_MODE
     , LAST_ARCHIVED_LOG
     , ARCHIVELOG_DIR
     , ARCHIVELOG_FILE_PREFIX
)
AS 
SELECT 
       CAST( arclog.ARCHIVELOG_MODE AS VARCHAR(32 OCTETS) )        -- ARCHIVELOG_MODE
     , CAST( arclog.LAST_INACTIVATED_LOGFILE_SEQ_NO AS NUMBER )    -- LAST_ARCHIVED_LOG
     , CAST( arclog.ARCHIVELOG_DIR_1 AS VARCHAR(1024 OCTETS) )     -- ARCHIVELOG_DIR
     , CAST( arclog.ARCHIVELOG_FILE AS VARCHAR(128 OCTETS) )       -- ARCHIVELOG_FILE_PREFIX
  FROM 
       FIXED_TABLE_SCHEMA.X$ARCHIVELOG AS arclog
;

View created.

Elapsed time: 2.90600 ms 

             
--#####################
--# comment view
--#####################

COMMENT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$ARCHIVELOG
        IS 'The V$ARCHIVELOG displays information of log archiving';

Comment created.

Elapsed time: 0.32700 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$ARCHIVELOG.ARCHIVELOG_MODE
        IS 'database log mode: the value in ( NOARCHIVELOG, ARCHIVELOG )';

Comment created.

Elapsed time: 0.34600 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$ARCHIVELOG.LAST_ARCHIVED_LOG
        IS 'sequence number of last archived log file';

Comment created.

Elapsed time: 0.35000 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$ARCHIVELOG.ARCHIVELOG_DIR
        IS 'archive destination path';

Comment created.

Elapsed time: 0.32800 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$ARCHIVELOG.ARCHIVELOG_FILE_PREFIX
        IS 'file prefix name of the archived log';

Comment created.

Elapsed time: 0.34900 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$ARCHIVELOG TO PUBLIC;

Grant succeeded.

Elapsed time: 0.32500 ms 


COMMIT;

Commit complete.

Elapsed time: 0.23900 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS V$ARCHIVELOG;

Synonym dropped.

Elapsed time: 0.23200 ms 

CREATE PUBLIC SYNONYM V$ARCHIVELOG FOR PERFORMANCE_VIEW_SCHEMA.V$ARCHIVELOG;

Synonym created.

Elapsed time: 0.24700 ms 

COMMIT;

Commit complete.

Elapsed time: 0.09000 ms 


--##############################################################
--# V$BACKUP
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS PERFORMANCE_VIEW_SCHEMA.V$BACKUP;

View dropped.

Elapsed time: 1.57300 ms 


--#####################
--# create view
--#####################

CREATE VIEW PERFORMANCE_VIEW_SCHEMA.V$BACKUP
(  
       TBS_NAME
     , BACKUP_STATUS
     , BACKUP_LSN
)
AS 
SELECT 
       CAST( backup.NAME AS VARCHAR(128 OCTETS) ) AS TBS_NAME         -- TBS_NAME
     , CAST( backup.STATUS AS VARCHAR(16 OCTETS) ) AS BACKUP_STATUS   -- BACKUP_STATUS
     , CAST( datafile.BACKUP_LSN AS NUMBER )                          -- BACKUP_LSN
  FROM 
       FIXED_TABLE_SCHEMA.X$BACKUP AS backup
       LEFT OUTER JOIN
       ( SELECT TABLESPACE_ID, MIN(CHECKPOINT_LSN) AS BACKUP_LSN
           FROM FIXED_TABLE_SCHEMA.X$DATAFILE
         GROUP BY TABLESPACE_ID ) AS datafile
       ON backup.ID = datafile.TABLESPACE_ID
;

View created.

Elapsed time: 2.07900 ms 

             
--#####################
--# comment view
--#####################

COMMENT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$BACKUP
        IS 'The V$BACKUP displays information of backup';

Comment created.

Elapsed time: 0.27600 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$BACKUP.TBS_NAME
        IS 'tablespace name';

Comment created.

Elapsed time: 0.30300 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$BACKUP.BACKUP_STATUS
        IS 'indicates whether the tablespace begin backup ( ACTIVE ) or not ( INACTIVE )';

Comment created.

Elapsed time: 0.31000 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$BACKUP.BACKUP_LSN
        IS 'the last checkpoint lsn of tablespace when backup started';

Comment created.

Elapsed time: 0.29800 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$BACKUP TO PUBLIC;

Grant succeeded.

Elapsed time: 0.25700 ms 


COMMIT;

Commit complete.

Elapsed time: 0.18700 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS V$BACKUP;

Synonym dropped.

Elapsed time: 0.16700 ms 

CREATE PUBLIC SYNONYM V$BACKUP FOR PERFORMANCE_VIEW_SCHEMA.V$BACKUP;

Synonym created.

Elapsed time: 0.18600 ms 

COMMIT;

Commit complete.

Elapsed time: 0.08300 ms 


--##############################################################
--# V$COLUMNS
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS PERFORMANCE_VIEW_SCHEMA.V$COLUMNS;

View dropped.

Elapsed time: 2.77200 ms 


--#####################
--# create view
--#####################

CREATE VIEW PERFORMANCE_VIEW_SCHEMA.V$COLUMNS 
( 
       TABLE_OWNER
     , TABLE_SCHEMA
     , TABLE_NAME
     , COLUMN_NAME
     , ORDINAL_POSITION
     , DATA_TYPE
     , DATA_PRECISION
     , DATA_SCALE
     , COMMENTS
)
AS 
SELECT 
       auth.AUTHORIZATION_NAME                          -- TABLE_OWNER
     , sch.SCHEMA_NAME                                  -- TABLE_SCHEMA
     , tab.TABLE_NAME                                   -- TABLE_NAME
     , col.COLUMN_NAME                                  -- COLUMN_NAME
     , CAST( col.LOGICAL_ORDINAL_POSITION AS NUMBER )   -- ORDINAL_POSITION
     , dtd.DECLARED_DATA_TYPE                           -- DATA_TYPE
     , CAST( dtd.DECLARED_NUMERIC_PRECISION AS NUMBER ) -- DATA_PRECISION
     , CAST( dtd.DECLARED_NUMERIC_SCALE AS NUMBER )     -- DATA_SCALE
     , col.COMMENTS                                     -- COMMENTS
  FROM 
       DEFINITION_SCHEMA.COLUMNS               AS col 
     , DEFINITION_SCHEMA.DATA_TYPE_DESCRIPTOR  AS dtd 
     , DEFINITION_SCHEMA.TABLES                AS tab 
     , DEFINITION_SCHEMA.SCHEMATA              AS sch 
     , DEFINITION_SCHEMA.AUTHORIZATIONS        AS auth 
 WHERE  
       sch.SCHEMA_NAME = 'PERFORMANCE_VIEW_SCHEMA'
   AND col.DTD_IDENTIFIER = dtd.DTD_IDENTIFIER 
   AND col.TABLE_ID       = tab.TABLE_ID 
   AND col.SCHEMA_ID      = sch.SCHEMA_ID 
   AND col.OWNER_ID       = auth.AUTH_ID 
ORDER BY 
      col.SCHEMA_ID 
    , col.TABLE_ID 
    , col.PHYSICAL_ORDINAL_POSITION
;

View created.

Elapsed time: 3.56800 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$COLUMNS 
        IS 'The V$COLUMNS has one row for each column of all the performance views (views beginning with V$).';

Comment created.

Elapsed time: 0.24500 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$COLUMNS.TABLE_OWNER
        IS 'owner name who owns the performance view';

Comment created.

Elapsed time: 0.30000 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$COLUMNS.TABLE_SCHEMA
        IS 'schema name of the performance view';

Comment created.

Elapsed time: 0.27900 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$COLUMNS.TABLE_NAME
        IS 'name of the performance view';

Comment created.

Elapsed time: 0.26800 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$COLUMNS.COLUMN_NAME
        IS 'column name';

Comment created.

Elapsed time: 0.27100 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$COLUMNS.ORDINAL_POSITION
        IS 'the ordinal position (> 0) of the column in the performance view';

Comment created.

Elapsed time: 0.30300 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$COLUMNS.DATA_TYPE
        IS 'the data type name that a user declared';

Comment created.

Elapsed time: 0.28200 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$COLUMNS.DATA_PRECISION
        IS 'the precision value that a user declared';

Comment created.

Elapsed time: 0.26900 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$COLUMNS.DATA_SCALE
        IS 'the scale value that a user declared';

Comment created.

Elapsed time: 0.27100 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$COLUMNS.COMMENTS
        IS 'comments of the column';

Comment created.

Elapsed time: 0.27900 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$COLUMNS TO PUBLIC;

Grant succeeded.

Elapsed time: 0.27500 ms 


COMMIT;

Commit complete.

Elapsed time: 0.26900 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS V$COLUMNS;

Synonym dropped.

Elapsed time: 0.16600 ms 

CREATE PUBLIC SYNONYM V$COLUMNS FOR PERFORMANCE_VIEW_SCHEMA.V$COLUMNS;

Synonym created.

Elapsed time: 0.17200 ms 

COMMIT;

Commit complete.

Elapsed time: 0.07600 ms 


--##############################################################
--# V$DATAFILE
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS PERFORMANCE_VIEW_SCHEMA.V$DATAFILE;

View dropped.

Elapsed time: 1.96500 ms 


--#####################
--# create view
--#####################

CREATE VIEW PERFORMANCE_VIEW_SCHEMA.V$DATAFILE
(  
       TBS_NAME
     , DATAFILE_NAME
     , CHECKPOINT_LSN
     , CREATION_TIME
     , FILE_SIZE
     , LOADED_CHECKPOINT_LSN
     , CORRUPT_PAGE_COUNT
)
AS 
SELECT 
       ( SELECT CAST( NAME AS VARCHAR(128 OCTETS) )
           FROM FIXED_TABLE_SCHEMA.X$TABLESPACE
           WHERE ID = datafile.TABLESPACE_ID )            -- TBS_NAME
     , CAST( datafile.PATH AS VARCHAR(1024 OCTETS) )      -- DATAFILE_NAME
     , CAST( datafile.CHECKPOINT_LSN AS NUMBER )          -- CHECKPOINT_LSN
     , datafile.CREATION_TIME                             -- CREATION_TIME
     , CAST( datafile.SIZE AS NUMBER )                    -- FILE_SIZE
     , CAST( datafile.LOADED_CHECKPOINT_LSN AS NUMBER )   -- LOADED_CHECKPOINT_LSN
     , CAST( datafile.CORRUPT_PAGE_COUNT AS NUMBER )      -- CORRUPT_PAGE_COUNT
  FROM 
       FIXED_TABLE_SCHEMA.X$DATAFILE AS datafile
  WHERE datafile.STATE = 'CREATED'
;

View created.

Elapsed time: 2.52900 ms 

             
--#####################
--# comment view
--#####################

COMMENT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$DATAFILE
        IS 'The V$DATAFILE displays information of all datafiles.';

Comment created.

Elapsed time: 0.24300 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$DATAFILE.TBS_NAME
        IS 'tablepsace name';

Comment created.

Elapsed time: 0.27900 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$DATAFILE.DATAFILE_NAME
        IS 'datafile name ( absolute path )';

Comment created.

Elapsed time: 0.26400 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$DATAFILE.CHECKPOINT_LSN
        IS 'LSN at last checkpoint ( null if temporary tablespace )';

Comment created.

Elapsed time: 0.26400 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$DATAFILE.CREATION_TIME
        IS 'timestamp of the datafile creation';

Comment created.

Elapsed time: 0.26600 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$DATAFILE.FILE_SIZE
        IS 'datafile size ( in bytes )';

Comment created.

Elapsed time: 0.27200 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$DATAFILE.LOADED_CHECKPOINT_LSN
        IS 'checkpoint LSN of the datafile loaded in memory ( null if temporary tablespace )';

Comment created.

Elapsed time: 0.27800 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$DATAFILE.CORRUPT_PAGE_COUNT
        IS 'number of corrupt pages in the datafile';

Comment created.

Elapsed time: 0.25900 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$DATAFILE TO PUBLIC;

Grant succeeded.

Elapsed time: 0.23800 ms 


COMMIT;

Commit complete.

Elapsed time: 0.21000 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS V$DATAFILE;

Synonym dropped.

Elapsed time: 0.14300 ms 

CREATE PUBLIC SYNONYM V$DATAFILE FOR PERFORMANCE_VIEW_SCHEMA.V$DATAFILE;

Synonym created.

Elapsed time: 0.16400 ms 

COMMIT;

Commit complete.

Elapsed time: 0.07200 ms 


--##############################################################
--# V$ERROR_CODE
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS PERFORMANCE_VIEW_SCHEMA.V$ERROR_CODE;

View dropped.

Elapsed time: 1.22100 ms 


--#####################
--# create view
--#####################

CREATE VIEW PERFORMANCE_VIEW_SCHEMA.V$ERROR_CODE 
(  
       ERROR_CODE
     , SQL_STATE
     , ERROR_MESSAGE
)
AS 
SELECT 
       CAST( xerr.ERROR_CODE AS NUMBER )             -- ERROR_CODE
     , CAST( xerr.SQL_STATE AS VARCHAR(32 OCTETS) )  -- SQL_STATE
     , CAST( xerr.MESSAGE AS VARCHAR(1024 OCTETS) )  -- ERROR_MESSAGE
  FROM 
       FIXED_TABLE_SCHEMA.X$ERROR_CODE AS xerr
;

View created.

Elapsed time: 1.41900 ms 

             
--#####################
--# comment view
--#####################

COMMENT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$ERROR_CODE 
        IS 'The V$ERROR_CODE displays a list of all DB error codes';

Comment created.

Elapsed time: 0.22800 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$ERROR_CODE.ERROR_CODE
        IS 'DB internal error code';

Comment created.

Elapsed time: 0.26900 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$ERROR_CODE.SQL_STATE
        IS 'standard SQLSTATE code';

Comment created.

Elapsed time: 0.30300 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$ERROR_CODE.ERROR_MESSAGE
        IS 'error message';

Comment created.

Elapsed time: 0.24000 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$ERROR_CODE TO PUBLIC;

Grant succeeded.

Elapsed time: 0.20500 ms 


COMMIT;

Commit complete.

Elapsed time: 0.15500 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS V$ERROR_CODE;

Synonym dropped.

Elapsed time: 0.13500 ms 

CREATE PUBLIC SYNONYM V$ERROR_CODE FOR PERFORMANCE_VIEW_SCHEMA.V$ERROR_CODE;

Synonym created.

Elapsed time: 0.15500 ms 

COMMIT;

Commit complete.

Elapsed time: 0.06900 ms 


--##############################################################
--# V$XA_TRANSACTION
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS PERFORMANCE_VIEW_SCHEMA.V$XA_TRANSACTION;

View dropped.

Elapsed time: 1.65200 ms 


--#####################
--# create view
--#####################

CREATE VIEW PERFORMANCE_VIEW_SCHEMA.V$XA_TRANSACTION
(  
       XA_TRANS_ID
     , LOCAL_TRANS_ID
     , XA_TRANS_STATE
     , ASSO_STATE
     , START_TIME
     , IS_REPREPARABLE
)
AS 
SELECT 
       CAST( gltrans.XA_TRANS_ID AS VARCHAR(1024 OCTETS) )         -- XA_TRANS_ID
     , CAST( gltrans.LOCAL_TRANS_ID AS NUMBER )                    -- LOCAL_TRANS_ID
     , CAST( gltrans.STATE AS VARCHAR(32 OCTETS) )                 -- XA_TRANS_STATE
     , CAST( gltrans.ASSO_STATE AS VARCHAR(32 OCTETS) )            -- ASSO_STATE
     , gltrans.START_TIME                                          -- START_TIME
     , gltrans.REPREPARABLE                                        -- IS_REPREPARABLE
  FROM 
       FIXED_TABLE_SCHEMA.X$XA_TRANSACTION AS gltrans   
;

View created.

Elapsed time: 1.82800 ms 

             
--#####################
--# comment view
--#####################

COMMENT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$XA_TRANSACTION
        IS 'The V$XA_TRANSACTION displays information on the currently active XA transactions.';

Comment created.

Elapsed time: 0.23300 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$XA_TRANSACTION.XA_TRANS_ID
        IS 'XA transaction identifier';

Comment created.

Elapsed time: 0.25900 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$XA_TRANSACTION.LOCAL_TRANS_ID
        IS 'local transaction identifier';

Comment created.

Elapsed time: 0.24600 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$XA_TRANSACTION.XA_TRANS_STATE
        IS 'state of the XA transaction: the value in ( NOTR, ACTIVE, IDLE, PREPARED, ROLLBACK_ONLY, HEURISTIC_COMPLETED )';

Comment created.

Elapsed time: 0.25700 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$XA_TRANSACTION.ASSO_STATE
        IS 'associate state of the XA transaction: the value in ( NOT_ASSOCIATED, ASSOCIATED, ASSOCIATION_SUSPENDED )';

Comment created.

Elapsed time: 0.28800 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$XA_TRANSACTION.START_TIME
        IS 'XA transaction start time';

Comment created.

Elapsed time: 0.26100 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$XA_TRANSACTION.IS_REPREPARABLE
        IS 'indicates whether the XA transaction is repreparable';

Comment created.

Elapsed time: 0.26000 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$XA_TRANSACTION TO PUBLIC;

Grant succeeded.

Elapsed time: 0.20300 ms 


COMMIT;

Commit complete.

Elapsed time: 0.18400 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS V$XA_TRANSACTION;

Synonym dropped.

Elapsed time: 0.14000 ms 

CREATE PUBLIC SYNONYM V$XA_TRANSACTION FOR PERFORMANCE_VIEW_SCHEMA.V$XA_TRANSACTION;

Synonym created.

Elapsed time: 0.15100 ms 

COMMIT;

Commit complete.

Elapsed time: 0.06800 ms 


--##############################################################
--# V$INCREMENTAL_BACKUP
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS PERFORMANCE_VIEW_SCHEMA.V$INCREMENTAL_BACKUP;

View dropped.

Elapsed time: 1.70300 ms 


--#####################
--# create view
--#####################

CREATE VIEW PERFORMANCE_VIEW_SCHEMA.V$INCREMENTAL_BACKUP
(  
       BACKUP_NAME
     , BACKUP_SCOPE
     , INCREMENTAL_LEVEL
     , INCREMENTAL_TYPE
     , LSN
     , BEGIN_TIME
     , COMPLETION_TIME
)
AS 
SELECT 
       CAST( backup.BACKUP_FILE AS VARCHAR(1024 OCTETS) )     -- BACKUP_NAME
     , CAST( backup.BACKUP_OBJECT AS VARCHAR(128 OCTETS) )    -- BACKUP_SCOPE
     , CAST( backup.BACKUP_LEVEL AS NUMBER )                  -- INCREMENTAL_LEVEL
     , CAST( backup.BACKUP_OPTION AS VARCHAR(32 OCTETS) )     -- INCREMENTAL_TYPE
     , CAST( backup.BACKUP_LSN AS NUMBER )                    -- LSN
     , BEGIN_TIME                                             -- BEGIN_TIME
     , COMPLETION_TIME                                        -- COMPLETION_TIME
  FROM 
       FIXED_TABLE_SCHEMA.X$CONTROLFILE_BACKUP_SECTION AS backup
       LEFT OUTER JOIN
       FIXED_TABLE_SCHEMA.X$CONTROLFILE AS ctrlfile
       ON backup.CONTROLFILE_NAME = ctrlfile.CONTROLFILE_NAME
  WHERE
       ctrlfile.IS_PRIMARY = TRUE
;

View created.

Elapsed time: 2.16700 ms 

             
--#####################
--# comment view
--#####################

COMMENT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$INCREMENTAL_BACKUP
        IS 'The V$INCREMENTAL_BACKUP displays information about control files and datafiles in backup sets from the control file.';

Comment created.

Elapsed time: 0.21200 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$INCREMENTAL_BACKUP.BACKUP_NAME
        IS 'backup file name ( absolute path )';

Comment created.

Elapsed time: 0.24600 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$INCREMENTAL_BACKUP.BACKUP_SCOPE
        IS 'incremental backup scope: the value in ( database, tablespace, control )';

Comment created.

Elapsed time: 0.27700 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$INCREMENTAL_BACKUP.INCREMENTAL_LEVEL
        IS 'incremental backup level: the value in ( 0, 1, 2, 3, 4 )';

Comment created.

Elapsed time: 0.24000 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$INCREMENTAL_BACKUP.INCREMENTAL_TYPE
        IS 'incremental backup type: the value in ( DIFFERENTIAL, CUMULATIVE )';

Comment created.

Elapsed time: 0.23500 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$INCREMENTAL_BACKUP.LSN
        IS 'all changes up to checkpoint LSN are included in this backup';

Comment created.

Elapsed time: 0.26000 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$INCREMENTAL_BACKUP.BEGIN_TIME
        IS 'backup beginning time';

Comment created.

Elapsed time: 0.23300 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$INCREMENTAL_BACKUP.COMPLETION_TIME
        IS 'backup completion time';

Comment created.

Elapsed time: 0.23200 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$INCREMENTAL_BACKUP TO PUBLIC;

Grant succeeded.

Elapsed time: 0.21000 ms 


COMMIT;

Commit complete.

Elapsed time: 0.19100 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS V$INCREMENTAL_BACKUP;

Synonym dropped.

Elapsed time: 0.12900 ms 

CREATE PUBLIC SYNONYM V$INCREMENTAL_BACKUP FOR PERFORMANCE_VIEW_SCHEMA.V$INCREMENTAL_BACKUP;

Synonym created.

Elapsed time: 0.15000 ms 

COMMIT;

Commit complete.

Elapsed time: 0.06500 ms 


--##############################################################
--# V$KEYWORDS
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS PERFORMANCE_VIEW_SCHEMA.V$KEYWORDS;

View dropped.

Elapsed time: 1.17400 ms 


--#####################
--# create view
--#####################

CREATE VIEW PERFORMANCE_VIEW_SCHEMA.V$KEYWORDS 
(  
       KEYWORD_NAME
     , KEYWORD_LENGTH
     , IS_RESERVED
)
AS 
SELECT 
       CAST( key.NAME AS VARCHAR(128 OCTETS) )   -- KEYWORD_NAME
     , CAST( LENGTH(key.NAME) AS NUMBER )        -- KEYWORD_LENGTH
     , CASE key.CATEGORY 
            WHEN 0 THEN TRUE
                   ELSE FALSE
       END                                       -- IS_RESERVED
  FROM 
       FIXED_TABLE_SCHEMA.X$SQL_KEYWORDS key
;

View created.

Elapsed time: 1.49100 ms 

             
--#####################
--# comment view
--#####################

COMMENT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$KEYWORDS 
        IS 'The V$KEYWORDS displays a list of all SQL keywords';

Comment created.

Elapsed time: 0.19700 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$KEYWORDS.KEYWORD_NAME
        IS 'name of keyword';

Comment created.

Elapsed time: 0.24400 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$KEYWORDS.KEYWORD_LENGTH
        IS 'length of the keyword';

Comment created.

Elapsed time: 0.22300 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$KEYWORDS.IS_RESERVED
        IS 'indicates whether the keyword cannot be used as an identifier (TRUE) or whether the keyword is not reserved (FALSE)';

Comment created.

Elapsed time: 0.22600 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$KEYWORDS TO PUBLIC;

Grant succeeded.

Elapsed time: 0.18600 ms 


COMMIT;

Commit complete.

Elapsed time: 0.13100 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS V$KEYWORDS;

Synonym dropped.

Elapsed time: 0.11600 ms 

CREATE PUBLIC SYNONYM V$KEYWORDS FOR PERFORMANCE_VIEW_SCHEMA.V$KEYWORDS;

Synonym created.

Elapsed time: 0.13900 ms 

COMMIT;

Commit complete.

Elapsed time: 0.06200 ms 


--##############################################################
--# V$LATCH
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS PERFORMANCE_VIEW_SCHEMA.V$LATCH;

View dropped.

Elapsed time: 1.27700 ms 


--#####################
--# create view
--#####################

CREATE VIEW PERFORMANCE_VIEW_SCHEMA.V$LATCH
(  
       LATCH_DESCRIPTION
     , REF_COUNT
     , SPIN_LOCK
     , WAIT_COUNT
     , CURRENT_MODE
)
AS 
SELECT 
       CAST( latch.DESCRIPTION AS VARCHAR(64 OCTETS) )     -- LATCH_DESCRIPTION
     , CAST( latch.REF_COUNT AS NUMBER )                   -- REF_COUNT
     , CAST( CASE WHEN latch.SPIN_LOCK = 1
                       THEN 'YES'
                       ELSE 'NO'
                       END AS VARCHAR(3 OCTETS) )          -- SPIN_LOCK
     , CAST( latch.WAIT_COUNT AS NUMBER )                  -- WAIT_COUNT
     , CAST( latch.CURRENT_MODE AS VARCHAR(32 OCTETS) )    -- CURRENT_MODE
  FROM 
       FIXED_TABLE_SCHEMA.X$LATCH AS latch
;

View created.

Elapsed time: 1.66100 ms 

             
--#####################
--# comment view
--#####################

COMMENT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$LATCH
        IS 'The V$LATCH shows latch information.';

Comment created.

Elapsed time: 0.22900 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$LATCH.LATCH_DESCRIPTION
        IS 'latch description';

Comment created.

Elapsed time: 0.23000 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$LATCH.REF_COUNT
        IS 'reference count';

Comment created.

Elapsed time: 0.22900 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$LATCH.SPIN_LOCK
        IS 'indicates whether the spin lock is locked ( YES ) or not ( NO )';

Comment created.

Elapsed time: 0.23600 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$LATCH.WAIT_COUNT
        IS 'wait count';

Comment created.

Elapsed time: 0.22100 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$LATCH.CURRENT_MODE
        IS 'current latch mode: the value in ( INITIAL, SHARED, EXCLUSIVE )';

Comment created.

Elapsed time: 0.21600 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$LATCH TO PUBLIC;

Grant succeeded.

Elapsed time: 0.18300 ms 


COMMIT;

Commit complete.

Elapsed time: 0.16100 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS V$LATCH;

Synonym dropped.

Elapsed time: 0.11600 ms 

CREATE PUBLIC SYNONYM V$LATCH FOR PERFORMANCE_VIEW_SCHEMA.V$LATCH;

Synonym created.

Elapsed time: 0.13800 ms 

COMMIT;

Commit complete.

Elapsed time: 0.06200 ms 


--##############################################################
--# V$LOGFILE
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS PERFORMANCE_VIEW_SCHEMA.V$LOGFILE;

View dropped.

Elapsed time: 1.32300 ms 


--#####################
--# create view
--#####################

CREATE VIEW PERFORMANCE_VIEW_SCHEMA.V$LOGFILE
(  
       GROUP_ID
     , FILE_NAME
     , GROUP_STATE
     , FILE_SEQ
     , FILE_SIZE
)
AS 
SELECT 
       CAST( loggrp.GROUP_ID AS NUMBER )              -- GROUP_ID
     , CAST( logmem.NAME AS VARCHAR(1024 OCTETS) )    -- FILE_NAME
     , CAST( loggrp.STATE AS VARCHAR(32 OCTETS) )     -- GROUP_STATE
     , CAST( loggrp.FILE_SEQ_NO AS NUMBER )           -- FILE_SEQ
     , CAST( loggrp.FILE_SIZE AS NUMBER )             -- FILE_SIZE
  FROM 
       FIXED_TABLE_SCHEMA.X$LOG_GROUP AS loggrp
       LEFT OUTER JOIN   
       FIXED_TABLE_SCHEMA.X$LOG_MEMBER AS logmem
       ON loggrp.GROUP_ID = logmem.GROUP_ID
;

View created.

Elapsed time: 1.50200 ms 

             
--#####################
--# comment view
--#####################

COMMENT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$LOGFILE
        IS 'The V$LOGFILE displays information of all redo log members.';

Comment created.

Elapsed time: 0.19000 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$LOGFILE.GROUP_ID
        IS 'redo log group identifier';

Comment created.

Elapsed time: 0.22100 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$LOGFILE.FILE_NAME
        IS 'name of the log member';

Comment created.

Elapsed time: 0.21100 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$LOGFILE.GROUP_STATE
        IS 'state of the log group: the value in ( UNUSED, ACTIVE, CURRENT, INACTIVE )';

Comment created.

Elapsed time: 0.22400 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$LOGFILE.FILE_SEQ
        IS 'file sequence number of the log member';

Comment created.

Elapsed time: 0.20800 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$LOGFILE.FILE_SIZE
        IS 'file size of the log member ( in bytes )';

Comment created.

Elapsed time: 0.20400 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$LOGFILE TO PUBLIC;

Grant succeeded.

Elapsed time: 0.21700 ms 


COMMIT;

Commit complete.

Elapsed time: 0.16600 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS V$LOGFILE;

Synonym dropped.

Elapsed time: 0.11700 ms 

CREATE PUBLIC SYNONYM V$LOGFILE FOR PERFORMANCE_VIEW_SCHEMA.V$LOGFILE;

Synonym created.

Elapsed time: 0.13000 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05800 ms 


--##############################################################
--# V$LOCK_WAIT
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS PERFORMANCE_VIEW_SCHEMA.V$LOCK_WAIT;

View dropped.

Elapsed time: 0.88800 ms 


--#####################
--# create view
--#####################

CREATE VIEW PERFORMANCE_VIEW_SCHEMA.V$LOCK_WAIT
(  
       GRANT_TRANS_ID
     , REQUEST_TRANS_ID
)
AS 
SELECT 
       ( SELECT CAST( LOGICAL_TRANS_ID AS NUMBER )
           FROM FIXED_TABLE_SCHEMA.X$TRANSACTION
           WHERE SLOT_ID = lckwait.GRANTED_TRANSACTION_SLOT_ID )   -- GRANT_TRANS_ID
     , ( SELECT CAST( LOGICAL_TRANS_ID AS NUMBER )
           FROM FIXED_TABLE_SCHEMA.X$TRANSACTION
           WHERE SLOT_ID = lckwait.REQUEST_TRANSACTION_SLOT_ID )   -- REQUEST_TRANS_ID
  FROM 
       FIXED_TABLE_SCHEMA.X$LOCK_WAIT AS lckwait
;

View created.

Elapsed time: 1.10100 ms 

             
--#####################
--# comment view
--#####################

COMMENT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$LOCK_WAIT
        IS 'This view lists the locks currently held and outstanding requests for a lock.';

Comment created.

Elapsed time: 0.18700 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$LOCK_WAIT.GRANT_TRANS_ID
        IS 'transaction identifier that holds the lock';

Comment created.

Elapsed time: 0.21800 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$LOCK_WAIT.REQUEST_TRANS_ID
        IS 'transaction identifier that requests the lock';

Comment created.

Elapsed time: 0.22300 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$LOCK_WAIT TO PUBLIC;

Grant succeeded.

Elapsed time: 0.17500 ms 


COMMIT;

Commit complete.

Elapsed time: 0.11200 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS V$LOCK_WAIT;

Synonym dropped.

Elapsed time: 0.11300 ms 

CREATE PUBLIC SYNONYM V$LOCK_WAIT FOR PERFORMANCE_VIEW_SCHEMA.V$LOCK_WAIT;

Synonym created.

Elapsed time: 0.12600 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05900 ms 


--##############################################################
--# V$PROPERTY
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS PERFORMANCE_VIEW_SCHEMA.V$PROPERTY;

View dropped.

Elapsed time: 2.90200 ms 


--#####################
--# create view
--#####################

CREATE VIEW PERFORMANCE_VIEW_SCHEMA.V$PROPERTY 
( 
       PROPERTY_NAME
     , DESCRIPTION
     , DATA_TYPE
     , STARTUP_PHASE
     , VALUE_UNIT
     , PROPERTY_VALUE
     , PROPERTY_SOURCE
     , INIT_VALUE
     , INIT_SOURCE
     , MIN_VALUE
     , MAX_VALUE
     , SES_MODIFIABLE
     , SYS_MODIFIABLE
     , IS_MODIFIABLE
     , IS_GLOBAL
)
AS 
SELECT 
       CAST( PROPERTY_NAME AS VARCHAR(128 OCTETS) )  -- PROPERTY_NAME
     , CAST( DESCRIPTION AS VARCHAR(2048 OCTETS) )   -- DESCRIPTION
     , CAST( DATA_TYPE AS VARCHAR(32 OCTETS) )       -- DATA_TYPE
     , CAST( STARTUP_PHASE AS VARCHAR(32 OCTETS) )   -- STARTUP_PHASE
     , CAST( UNIT AS VARCHAR(32 OCTETS) )            -- VALUE_UNIT
     , CAST( VALUE AS VARCHAR(2048 OCTETS) )         -- PROPERTY_VALUE
     , CAST( SOURCE AS VARCHAR(32 OCTETS) )          -- PROPERTY_SOURCE
     , CAST( INIT_VALUE AS VARCHAR(2048 OCTETS) )    -- INIT_VALUE
     , CAST( INIT_SOURCE AS VARCHAR(32 OCTETS) )     -- INIT_SOURCE
     , CAST( CASE WHEN DATA_TYPE = 'VARCHAR' THEN NULL
                                             ELSE MIN 
             END
             AS NUMBER )                             -- MIN_VALUE
     , CAST( CASE WHEN DATA_TYPE = 'VARCHAR' THEN NULL
                                             ELSE MAX 
             END
             AS NUMBER )                             -- MAX_VALUE
     , CAST( SES_MODIFIABLE AS VARCHAR(32 OCTETS) )  -- SES_MODIFIABLE
     , CAST( SYS_MODIFIABLE AS VARCHAR(32 OCTETS) )  -- SYS_MODIFIABLE
     , CAST( MODIFIABLE AS VARCHAR(32 OCTETS) )      -- IS_MODIFIABLE
     , CAST( NULL AS VARCHAR(32 OCTETS) )            -- IS_GLOBAL
  FROM 
       FIXED_TABLE_SCHEMA.X$PROPERTY
 WHERE 
       DOMAIN = 'EXTERNAL'
ORDER BY 
      PROPERTY_ID
;

View created.

Elapsed time: 2.85700 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$PROPERTY  
        IS 'The V$PROPERTY displays a list of all Properties at current session. otherwise, the instance-wide value';

Comment created.

Elapsed time: 0.18100 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$PROPERTY.PROPERTY_NAME
        IS 'name of the property';

Comment created.

Elapsed time: 0.21500 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$PROPERTY.DESCRIPTION
        IS 'description of the property';        

Comment created.

Elapsed time: 0.20100 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$PROPERTY.DATA_TYPE
        IS 'data type of the property';

Comment created.

Elapsed time: 0.20100 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$PROPERTY.STARTUP_PHASE
        IS 'modifiable startup-phase: the value IN ( NO MOUNT / MOUNT / OPEN & [BELOW|ABOVE] )';

Comment created.

Elapsed time: 0.21200 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$PROPERTY.VALUE_UNIT
        IS 'unit of the property value: the value in ( NONE, BYTE, MS(milisec) )';

Comment created.

Elapsed time: 0.20100 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$PROPERTY.PROPERTY_VALUE
        IS 'property value for the session. otherwise, the instance-wide value';

Comment created.

Elapsed time: 0.20200 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$PROPERTY.PROPERTY_SOURCE
        IS 'source of the current property value: the value IN ( USER, DEFAULT, ENV_VAR, BINARY_FILE, FILE, SYSTEM )';

Comment created.

Elapsed time: 0.20400 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$PROPERTY.INIT_VALUE
        IS 'property init value for the session';

Comment created.

Elapsed time: 0.20000 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$PROPERTY.INIT_SOURCE
        IS 'source of the current property INIT_VALUE: the value IN ( USER, DEFAULT, ENV_VAR, BINARY_FILE, FILE, SYSTEM )';

Comment created.

Elapsed time: 0.22800 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$PROPERTY.MIN_VALUE
        IS 'minimum value for property. null if type is varchar.';

Comment created.

Elapsed time: 0.19800 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$PROPERTY.MAX_VALUE
        IS 'maximum value for property. null if type is varchar.';

Comment created.

Elapsed time: 0.21000 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$PROPERTY.SES_MODIFIABLE
        IS 'property can be changed with ALTER SESSION or not: the value in ( TRUE, FALSE )';

Comment created.

Elapsed time: 0.22100 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$PROPERTY.SYS_MODIFIABLE
        IS 'property can be changed with ALTER SYSTEM and when the change takes effect: the value in ( NONE, FALSE, IMMEDIATE, DEFERRED )';

Comment created.

Elapsed time: 0.20700 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$PROPERTY.IS_MODIFIABLE
        IS 'property can be changed or not: the value in ( TRUE, FALSE )';

Comment created.

Elapsed time: 0.19400 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$PROPERTY.IS_GLOBAL
        IS 'available only in the cluster system ';

Comment created.

Elapsed time: 0.20700 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$PROPERTY TO PUBLIC;

Grant succeeded.

Elapsed time: 0.16700 ms 


COMMIT;

Commit complete.

Elapsed time: 0.23500 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS V$PROPERTY;

Synonym dropped.

Elapsed time: 0.10300 ms 

CREATE PUBLIC SYNONYM V$PROPERTY FOR PERFORMANCE_VIEW_SCHEMA.V$PROPERTY;

Synonym created.

Elapsed time: 0.12400 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05300 ms 


--##############################################################
--# V$PROCESS_STAT
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS PERFORMANCE_VIEW_SCHEMA.V$PROCESS_STAT;

View dropped.

Elapsed time: 1.01200 ms 


--#####################
--# create view
--#####################

CREATE VIEW PERFORMANCE_VIEW_SCHEMA.V$PROCESS_STAT
(  
       STAT_NAME
     , PROC_ID
     , STAT_VALUE
)
AS 
SELECT 
       CAST( knstat.NAME AS VARCHAR(128 OCTETS) )       -- STAT_NAME
     , CAST( knstat.ID AS NUMBER )                      -- PROC_ID
     , CAST( knstat.VALUE AS NUMBER )                   -- STAT_VALUE
  FROM 
       FIXED_TABLE_SCHEMA.X$KN_PROC_STAT AS knstat   
  WHERE knstat.CATEGORY = 0
UNION ALL
SELECT 
       CAST( smenv.NAME AS VARCHAR(128 OCTETS) )        -- STAT_NAME
     , CAST( smenv.ID AS NUMBER )                       -- PROC_ID
     , CAST( smenv.VALUE AS NUMBER )                    -- STAT_VALUE
  FROM 
       FIXED_TABLE_SCHEMA.X$SM_PROC_ENV AS smenv   
  WHERE smenv.CATEGORY = 0
UNION ALL
SELECT 
       CAST( exeenv.NAME AS VARCHAR(128 OCTETS) )       -- STAT_NAME
     , CAST( exeenv.ID AS NUMBER )                      -- PROC_ID
     , CAST( exeenv.VALUE AS NUMBER )                   -- STAT_VALUE
  FROM 
       FIXED_TABLE_SCHEMA.X$EXE_PROC_ENV AS exeenv   
  WHERE exeenv.CATEGORY = 0
UNION ALL
SELECT 
       CAST( sqlenv.NAME AS VARCHAR(128 OCTETS) )       -- STAT_NAME
     , CAST( sqlenv.ID AS NUMBER )                      -- PROC_ID
     , CAST( sqlenv.VALUE AS NUMBER )                   -- STAT_VALUE
  FROM 
       FIXED_TABLE_SCHEMA.X$SQL_PROC_ENV AS sqlenv   
  WHERE sqlenv.CATEGORY = 0
UNION ALL
SELECT 
       CAST( ssenv.NAME AS VARCHAR(128 OCTETS) )        -- STAT_NAME
     , CAST( ssenv.ID AS NUMBER )                       -- PROC_ID
     , CAST( ssenv.VALUE AS NUMBER )                    -- STAT_VALUE
  FROM 
       FIXED_TABLE_SCHEMA.X$SS_PROC_ENV AS ssenv   
  WHERE ssenv.CATEGORY = 0
UNION ALL
SELECT 
       CAST( slenv.NAME AS VARCHAR(128 OCTETS) )        -- STAT_NAME
     , CAST( slenv.ID AS NUMBER )                       -- PROC_ID
     , CAST( slenv.VALUE AS NUMBER )                    -- STAT_VALUE
  FROM 
       FIXED_TABLE_SCHEMA.X$SL_PROC_ENV AS slenv   
  WHERE slenv.CATEGORY = 0
ORDER BY 2, 1
;

View created.

Elapsed time: 1.51500 ms 

             
--#####################
--# comment view
--#####################

COMMENT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$PROCESS_STAT
        IS 'The V$PROCESS_STAT displays process statistics.';

Comment created.

Elapsed time: 0.18400 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$PROCESS_STAT.STAT_NAME
        IS 'statistic name';

Comment created.

Elapsed time: 0.21600 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$PROCESS_STAT.PROC_ID
        IS 'process identifier';

Comment created.

Elapsed time: 0.19100 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$PROCESS_STAT.STAT_VALUE
        IS 'statistic value';

Comment created.

Elapsed time: 0.19100 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$PROCESS_STAT TO PUBLIC;

Grant succeeded.

Elapsed time: 0.16800 ms 


COMMIT;

Commit complete.

Elapsed time: 0.11300 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS V$PROCESS_STAT;

Synonym dropped.

Elapsed time: 0.09700 ms 

CREATE PUBLIC SYNONYM V$PROCESS_STAT FOR PERFORMANCE_VIEW_SCHEMA.V$PROCESS_STAT;

Synonym created.

Elapsed time: 0.11500 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05500 ms 


--##############################################################
--# V$PROCESS_MEM_STAT
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS PERFORMANCE_VIEW_SCHEMA.V$PROCESS_MEM_STAT;

View dropped.

Elapsed time: 1.03500 ms 


--#####################
--# create view
--#####################

CREATE VIEW PERFORMANCE_VIEW_SCHEMA.V$PROCESS_MEM_STAT
(  
       STAT_NAME
     , PROC_ID
     , STAT_VALUE
)
AS 
SELECT 
       CAST( knstat.NAME AS VARCHAR(128 OCTETS) )       -- STAT_NAME
     , CAST( knstat.ID AS NUMBER )                      -- PROC_ID
     , CAST( knstat.VALUE AS NUMBER )                   -- STAT_VALUE
  FROM 
       FIXED_TABLE_SCHEMA.X$KN_PROC_STAT AS knstat   
  WHERE knstat.CATEGORY = 11
UNION ALL
SELECT 
       CAST( scenv.NAME AS VARCHAR(128 OCTETS) )        -- STAT_NAME
     , CAST( scenv.ID AS NUMBER )                       -- PROC_ID
     , CAST( scenv.VALUE AS NUMBER )                    -- STAT_VALUE
  FROM 
       FIXED_TABLE_SCHEMA.X$SC_PROC_ENV AS scenv   
  WHERE scenv.CATEGORY = 11
UNION ALL
SELECT 
       CAST( smenv.NAME AS VARCHAR(128 OCTETS) )        -- STAT_NAME
     , CAST( smenv.ID AS NUMBER )                       -- PROC_ID
     , CAST( smenv.VALUE AS NUMBER )                    -- STAT_VALUE
  FROM 
       FIXED_TABLE_SCHEMA.X$SM_PROC_ENV AS smenv   
  WHERE smenv.CATEGORY = 11
UNION ALL
SELECT 
       CAST( exeenv.NAME AS VARCHAR(128 OCTETS) )       -- STAT_NAME
     , CAST( exeenv.ID AS NUMBER )                      -- PROC_ID
     , CAST( exeenv.VALUE AS NUMBER )                   -- STAT_VALUE
  FROM 
       FIXED_TABLE_SCHEMA.X$EXE_PROC_ENV AS exeenv   
  WHERE exeenv.CATEGORY = 11
UNION ALL
SELECT 
       CAST( sqlenv.NAME AS VARCHAR(128 OCTETS) )       -- STAT_NAME
     , CAST( sqlenv.ID AS NUMBER )                      -- PROC_ID
     , CAST( sqlenv.VALUE AS NUMBER )                   -- STAT_VALUE
  FROM 
       FIXED_TABLE_SCHEMA.X$SQL_PROC_ENV AS sqlenv   
  WHERE sqlenv.CATEGORY = 11
UNION ALL
SELECT 
       CAST( ssenv.NAME AS VARCHAR(128 OCTETS) )        -- STAT_NAME
     , CAST( ssenv.ID AS NUMBER )                       -- PROC_ID
     , CAST( ssenv.VALUE AS NUMBER )                    -- STAT_VALUE
  FROM 
       FIXED_TABLE_SCHEMA.X$SS_PROC_ENV AS ssenv   
  WHERE ssenv.CATEGORY = 11
UNION ALL
SELECT 
       CAST( slenv.NAME AS VARCHAR(128 OCTETS) )        -- STAT_NAME
     , CAST( slenv.ID AS NUMBER )                       -- PROC_ID
     , CAST( slenv.VALUE AS NUMBER )                    -- STAT_VALUE
  FROM 
       FIXED_TABLE_SCHEMA.X$SL_PROC_ENV AS slenv   
  WHERE slenv.CATEGORY = 11
ORDER BY 2, 1
;

View created.

Elapsed time: 1.63500 ms 

             
--#####################
--# comment view
--#####################

COMMENT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$PROCESS_MEM_STAT
        IS 'The V$PROCESS_MEM_STAT displays process memory statistics.';

Comment created.

Elapsed time: 0.19700 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$PROCESS_MEM_STAT.STAT_NAME
        IS 'statistic name';

Comment created.

Elapsed time: 0.20300 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$PROCESS_MEM_STAT.PROC_ID
        IS 'process identifier';

Comment created.

Elapsed time: 0.20600 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$PROCESS_MEM_STAT.STAT_VALUE
        IS 'statistic value';

Comment created.

Elapsed time: 0.18000 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$PROCESS_MEM_STAT TO PUBLIC;

Grant succeeded.

Elapsed time: 0.16100 ms 


COMMIT;

Commit complete.

Elapsed time: 0.11800 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS V$PROCESS_MEM_STAT;

Synonym dropped.

Elapsed time: 0.10400 ms 

CREATE PUBLIC SYNONYM V$PROCESS_MEM_STAT FOR PERFORMANCE_VIEW_SCHEMA.V$PROCESS_MEM_STAT;

Synonym created.

Elapsed time: 0.11300 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05100 ms 


--##############################################################
--# V$PROCESS_SQL_STAT
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS PERFORMANCE_VIEW_SCHEMA.V$PROCESS_SQL_STAT;

View dropped.

Elapsed time: 0.94500 ms 


--#####################
--# create view
--#####################

CREATE VIEW PERFORMANCE_VIEW_SCHEMA.V$PROCESS_SQL_STAT
(  
       STAT_NAME
     , PROC_ID
     , STAT_VALUE
)
AS 
SELECT 
       CAST( sqlprocenv.NAME AS VARCHAR(128 OCTETS) )                        -- STAT_NAME
     , CAST( sqlprocenv.ID AS NUMBER )                                       -- PROC_ID
     , CAST( sqlprocenv.VALUE AS NUMBER )                                    -- STAT_VALUE
  FROM 
       FIXED_TABLE_SCHEMA.X$SQL_PROC_ENV AS sqlprocenv
  WHERE sqlprocenv.CATEGORY = 20
UNION ALL
SELECT 
       CAST( 'COMMAND: ' || sqlprocexec.STMT_TYPE AS VARCHAR(128 OCTETS) )   -- STAT_NAME
     , CAST( sqlprocexec.ID AS NUMBER )                                      -- PROC_ID
     , CAST( sqlprocexec.EXECUTE_COUNT AS NUMBER )                           -- STAT_VALUE
  FROM 
       FIXED_TABLE_SCHEMA.X$SQL_PROC_STAT_EXEC_STMT AS sqlprocexec
 WHERE sqlprocexec.STATE = 'USED'
ORDER BY 2, 1
;

View created.

Elapsed time: 1.17500 ms 

             
--#####################
--# comment view
--#####################

COMMENT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$PROCESS_SQL_STAT
        IS 'The V$PROCESS_SQL_STAT displays process SQL statistics.';

Comment created.

Elapsed time: 0.16400 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$PROCESS_SQL_STAT.STAT_NAME
        IS 'statistic name';

Comment created.

Elapsed time: 0.18900 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$PROCESS_SQL_STAT.PROC_ID
        IS 'process identifier';

Comment created.

Elapsed time: 0.18400 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$PROCESS_SQL_STAT.STAT_VALUE
        IS 'statistic value';

Comment created.

Elapsed time: 0.19400 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$PROCESS_SQL_STAT TO PUBLIC;

Grant succeeded.

Elapsed time: 0.15500 ms 


COMMIT;

Commit complete.

Elapsed time: 0.12000 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS V$PROCESS_SQL_STAT;

Synonym dropped.

Elapsed time: 0.09400 ms 

CREATE PUBLIC SYNONYM V$PROCESS_SQL_STAT FOR PERFORMANCE_VIEW_SCHEMA.V$PROCESS_SQL_STAT;

Synonym created.

Elapsed time: 0.11100 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05100 ms 


--##############################################################
--# V$PSM_RESERVED_WORDS
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS PERFORMANCE_VIEW_SCHEMA.V$PSM_RESERVED_WORDS;

View dropped.

Elapsed time: 0.75100 ms 


--#####################
--# create view
--#####################

CREATE VIEW PERFORMANCE_VIEW_SCHEMA.V$PSM_RESERVED_WORDS 
(  
       KEYWORD_NAME
     , KEYWORD_LENGTH
)
AS 
SELECT 
       CAST( key.NAME AS VARCHAR(128 OCTETS) )   -- KEYWORD_NAME
     , CAST( LENGTH(key.NAME) AS NUMBER )        -- KEYWORD_LENGTH
  FROM 
       FIXED_TABLE_SCHEMA.X$SQL_KEYWORDS key
 WHERE key.CATEGORY IN (0, 1);

View created.

Elapsed time: 0.93200 ms 

;
             
--#####################
--# comment view
--#####################

COMMENT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$PSM_RESERVED_WORDS 
        IS 'The V$PSM_RESERVED_WORDS displays a list of all PSM reserved keywords.  Reserved words cannot be used in variable name or procedure name.';

Comment created.

Elapsed time: 0.17400 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$PSM_RESERVED_WORDS.KEYWORD_NAME
        IS 'name of keyword';

Comment created.

Elapsed time: 0.19100 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$PSM_RESERVED_WORDS.KEYWORD_LENGTH
        IS 'length of the keyword';

Comment created.

Elapsed time: 0.18500 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$PSM_RESERVED_WORDS TO PUBLIC;

Grant succeeded.

Elapsed time: 0.15400 ms 


COMMIT;

Commit complete.

Elapsed time: 0.10500 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS V$PSM_RESERVED_WORDS;

Synonym dropped.

Elapsed time: 0.09500 ms 

CREATE PUBLIC SYNONYM V$PSM_RESERVED_WORDS FOR PERFORMANCE_VIEW_SCHEMA.V$PSM_RESERVED_WORDS;

Synonym created.

Elapsed time: 0.13200 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05100 ms 


--##############################################################
--# V$RESERVED_WORDS
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS PERFORMANCE_VIEW_SCHEMA.V$RESERVED_WORDS;

View dropped.

Elapsed time: 0.74500 ms 


--#####################
--# create view
--#####################

CREATE VIEW PERFORMANCE_VIEW_SCHEMA.V$RESERVED_WORDS 
(  
       KEYWORD_NAME
     , KEYWORD_LENGTH
)
AS 
SELECT 
       CAST( key.NAME AS VARCHAR(128 OCTETS) )   -- KEYWORD_NAME
     , CAST( LENGTH(key.NAME) AS NUMBER )        -- KEYWORD_LENGTH
  FROM 
       FIXED_TABLE_SCHEMA.X$SQL_KEYWORDS key
 WHERE key.CATEGORY = 0;

View created.

Elapsed time: 0.86100 ms 

;
             
--#####################
--# comment view
--#####################

COMMENT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$RESERVED_WORDS 
        IS 'The V$RESERVED_WORDS displays a list of all SQL reserved keywords.  Reserved words cannot be used in table name or column name.';

Comment created.

Elapsed time: 0.16300 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$RESERVED_WORDS.KEYWORD_NAME
        IS 'name of keyword';

Comment created.

Elapsed time: 0.22600 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$RESERVED_WORDS.KEYWORD_LENGTH
        IS 'length of the keyword';

Comment created.

Elapsed time: 0.19300 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$RESERVED_WORDS TO PUBLIC;

Grant succeeded.

Elapsed time: 0.15500 ms 


COMMIT;

Commit complete.

Elapsed time: 0.09700 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS V$RESERVED_WORDS;

Synonym dropped.

Elapsed time: 0.09100 ms 

CREATE PUBLIC SYNONYM V$RESERVED_WORDS FOR PERFORMANCE_VIEW_SCHEMA.V$RESERVED_WORDS;

Synonym created.

Elapsed time: 0.10900 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05900 ms 


--##############################################################
--# V$SESSION
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS PERFORMANCE_VIEW_SCHEMA.V$SESSION;

View dropped.

Elapsed time: 1.99100 ms 


--#####################
--# create view
--#####################

CREATE VIEW PERFORMANCE_VIEW_SCHEMA.V$SESSION
(  
       SESSION_ID
     , SERIAL_NO
     , TRANS_ID
     , CONNECTION_TYPE
     , USER_NAME
     , SESSION_STATUS
     , SERVER_TYPE
     , PROCESS_ID
     , LOGON_TIME
     , PROGRAM_NAME
     , CLIENT_ADDRESS
     , CLIENT_PORT
     , FAILOVER_TYPE
     , FAILED_OVER
)
AS 
SELECT 
       CAST( xsess.ID AS NUMBER )                         -- SESSION_ID
     , CAST( xsess.SERIAL AS NUMBER )                     -- SERIAL_NO
     , CAST( xsess.TRANS_ID AS NUMBER )                   -- TRANS_ID
     , CAST( xsess.CONNECTION AS VARCHAR(32 OCTETS) )     -- CONNECTION_TYPE
     , auth.AUTHORIZATION_NAME                            -- USER_NAME
     , CAST( xsess.STATUS AS VARCHAR(32 OCTETS) )         -- SESSION_STATUS
     , CAST( xsess.SERVER AS VARCHAR(32 OCTETS) )         -- SERVER_TYPE
     , CAST( xsess.CLIENT_PROCESS AS NUMBER )             -- PROCESS_ID
     , xsess.LOGON_TIME                                   -- LOGON_TIME
     , CAST( xsess.PROGRAM AS VARCHAR(128 OCTETS) )       -- PROGRAM_NAME
     , CAST( xsess.ADDRESS AS VARCHAR(1024 OCTETS) )      -- CLIENT_ADDRESS
     , CAST( xsess.PORT AS NUMBER )                       -- CLIENT_PORT
     , CAST( xsess.FAILOVER_TYPE AS VARCHAR(13 OCTETS) )  -- FAILOVER_TYPE
     , CAST( xsess.FAILED_OVER AS VARCHAR(3 OCTETS) )     -- FAILED_OVER
  FROM 
       FIXED_TABLE_SCHEMA.X$SESSION AS xsess   
       LEFT OUTER JOIN   
       DEFINITION_SCHEMA.AUTHORIZATIONS AS auth
       ON xsess.USER_ID = auth.AUTH_ID
 WHERE 
       xsess.STATUS IN ( 'CONNECTED', 'SIGNALED', 'SNIPED', 'DEAD' ) 
;

View created.

Elapsed time: 2.55600 ms 

             
--#####################
--# comment view
--#####################

COMMENT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$SESSION
        IS 'The V$SESSION displays session information for each current session.';

Comment created.

Elapsed time: 0.16300 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SESSION.SESSION_ID
        IS 'session identifier';

Comment created.

Elapsed time: 0.19000 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SESSION.SERIAL_NO
        IS 'session serial number';

Comment created.

Elapsed time: 0.19100 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SESSION.TRANS_ID
        IS 'transaction identifier ( -1 if inactive transaction )';

Comment created.

Elapsed time: 0.18200 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SESSION.CONNECTION_TYPE
        IS 'connection type: the value in ( DA, TCP ) ';

Comment created.

Elapsed time: 0.18100 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SESSION.USER_NAME
        IS 'user name';

Comment created.

Elapsed time: 0.18400 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SESSION.SESSION_STATUS
        IS 'status of the session: the value in ( CONNECTED, SIGNALED, SNIPED, DEAD )';

Comment created.

Elapsed time: 0.19300 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SESSION.SERVER_TYPE
        IS 'server type: the value in ( DEDICATED, SHARED )';

Comment created.

Elapsed time: 0.20300 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SESSION.PROCESS_ID
        IS 'client process identifier';

Comment created.

Elapsed time: 0.17700 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SESSION.LOGON_TIME
        IS 'logon time';

Comment created.

Elapsed time: 0.17700 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SESSION.PROGRAM_NAME
        IS 'program name';

Comment created.

Elapsed time: 0.18600 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SESSION.CLIENT_ADDRESS
        IS 'client address ( null if DA )';

Comment created.

Elapsed time: 0.18000 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SESSION.CLIENT_PORT
        IS 'client port ( 0 if DA )';

Comment created.

Elapsed time: 0.17700 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SESSION.FAILOVER_TYPE
        IS 'indicates whether and to what extent transparent application failover (TAF) is enabled for the session ( NONE, SESSION )';

Comment created.

Elapsed time: 0.18100 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SESSION.FAILED_OVER
        IS 'indicates whether the session is running in failover mode and failover has occurred (YES) or not (NO)';

Comment created.

Elapsed time: 0.18700 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$SESSION TO PUBLIC;

Grant succeeded.

Elapsed time: 0.15400 ms 


COMMIT;

Commit complete.

Elapsed time: 0.21600 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS V$SESSION;

Synonym dropped.

Elapsed time: 0.09300 ms 

CREATE PUBLIC SYNONYM V$SESSION FOR PERFORMANCE_VIEW_SCHEMA.V$SESSION;

Synonym created.

Elapsed time: 0.11100 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05900 ms 


--##############################################################
--# V$SESSION_CONNECT_INFO
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS PERFORMANCE_VIEW_SCHEMA.V$SESSION_CONNECT_INFO;

View dropped.

Elapsed time: 0.84200 ms 


--#####################
--# create view
--#####################

CREATE VIEW PERFORMANCE_VIEW_SCHEMA.V$SESSION_CONNECT_INFO
(  
       SESSION_ID
     , SERIAL_NO
     , CLIENT_CHARSET
)
AS 
SELECT 
       CAST( xsess.ID AS NUMBER )                         -- SESSION_ID
     , CAST( xsess.SERIAL AS NUMBER )                     -- SERIAL_NO
     , CAST( xsess.CLIENT_CHARSET AS VARCHAR(40 OCTETS) ) -- CLIENT_CHARSET
  FROM 
       FIXED_TABLE_SCHEMA.X$SESSION AS xsess   
       LEFT OUTER JOIN   
       DEFINITION_SCHEMA.AUTHORIZATIONS AS auth
       ON xsess.USER_ID = auth.AUTH_ID
 WHERE 
       xsess.STATUS IN ( 'CONNECTED', 'SIGNALED', 'SNIPED', 'DEAD' ) 
;

View created.

Elapsed time: 1.04900 ms 

             
--#####################
--# comment view
--#####################

COMMENT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$SESSION_CONNECT_INFO
        IS 'The V$SESSION_CONNECT_INFO displays information about network connections for the current session.';

Comment created.

Elapsed time: 0.19900 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SESSION_CONNECT_INFO.SESSION_ID
        IS 'session identifier';

Comment created.

Elapsed time: 0.18900 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SESSION_CONNECT_INFO.SERIAL_NO
        IS 'session serial number';

Comment created.

Elapsed time: 0.18500 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SESSION_CONNECT_INFO.CLIENT_CHARSET
        IS 'client character set';

Comment created.

Elapsed time: 0.18000 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$SESSION_CONNECT_INFO TO PUBLIC;

Grant succeeded.

Elapsed time: 0.15200 ms 


COMMIT;

Commit complete.

Elapsed time: 0.10700 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS V$SESSION_CONNECT_INFO;

Synonym dropped.

Elapsed time: 0.10000 ms 

CREATE PUBLIC SYNONYM V$SESSION_CONNECT_INFO FOR PERFORMANCE_VIEW_SCHEMA.V$SESSION_CONNECT_INFO;

Synonym created.

Elapsed time: 0.11300 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05100 ms 


--##############################################################
--# V$SESSION_STAT
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS PERFORMANCE_VIEW_SCHEMA.V$SESSION_STAT;

View dropped.

Elapsed time: 0.95700 ms 


--#####################
--# create view
--#####################

CREATE VIEW PERFORMANCE_VIEW_SCHEMA.V$SESSION_STAT
(  
       STAT_NAME
     , SESS_ID
     , STAT_VALUE
)
AS 
SELECT 
       CAST( knstat.NAME AS VARCHAR(128 OCTETS) )       -- STAT_NAME
     , CAST( knstat.ID AS NUMBER )                      -- SESS_ID
     , CAST( knstat.VALUE AS NUMBER )                   -- STAT_VALUE
  FROM 
       FIXED_TABLE_SCHEMA.X$KN_SESS_STAT AS knstat   
  WHERE knstat.CATEGORY = 0
UNION ALL
SELECT 
       CAST( smenv.NAME AS VARCHAR(128 OCTETS) )        -- STAT_NAME
     , CAST( smenv.ID AS NUMBER )                       -- SESS_ID
     , CAST( smenv.VALUE AS NUMBER )                    -- STAT_VALUE
  FROM 
       FIXED_TABLE_SCHEMA.X$SM_SESS_ENV AS smenv   
  WHERE smenv.CATEGORY = 0
UNION ALL
SELECT 
       CAST( smstat.NAME AS VARCHAR(128 OCTETS) )       -- STAT_NAME
     , CAST( smstat.ID AS NUMBER )                      -- SESS_ID
     , CAST( smstat.VALUE AS NUMBER )                   -- STAT_VALUE
  FROM 
       FIXED_TABLE_SCHEMA.X$SM_SESS_STAT AS smstat   
  WHERE smstat.CATEGORY = 0
UNION ALL
SELECT 
       CAST( exeenv.NAME AS VARCHAR(128 OCTETS) )       -- STAT_NAME
     , CAST( exeenv.ID AS NUMBER )                      -- SESS_ID
     , CAST( exeenv.VALUE AS NUMBER )                   -- STAT_VALUE
  FROM 
       FIXED_TABLE_SCHEMA.X$EXE_SESS_ENV AS exeenv   
  WHERE exeenv.CATEGORY = 0
UNION ALL
SELECT 
       CAST( sqlenv.NAME AS VARCHAR(128 OCTETS) )       -- STAT_NAME
     , CAST( sqlenv.ID AS NUMBER )                      -- SESS_ID
     , CAST( sqlenv.VALUE AS NUMBER )                   -- STAT_VALUE
  FROM 
       FIXED_TABLE_SCHEMA.X$SQL_SESS_ENV AS sqlenv   
  WHERE sqlenv.CATEGORY = 0
UNION ALL
SELECT 
       CAST( ssstat.NAME AS VARCHAR(128 OCTETS) )       -- STAT_NAME
     , CAST( ssstat.ID AS NUMBER )                      -- SESS_ID
     , CAST( ssstat.VALUE AS NUMBER )                   -- STAT_VALUE
  FROM 
       FIXED_TABLE_SCHEMA.X$SS_SESS_STAT AS ssstat   
  WHERE ssstat.CATEGORY = 0
ORDER BY 2, 1
;

View created.

Elapsed time: 1.36800 ms 

             
--#####################
--# comment view
--#####################

COMMENT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$SESSION_STAT
        IS 'The V$SESSION_STAT displays session statistics.';

Comment created.

Elapsed time: 0.16100 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SESSION_STAT.STAT_NAME
        IS 'statistic name';

Comment created.

Elapsed time: 0.19900 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SESSION_STAT.SESS_ID
        IS 'session identifier';

Comment created.

Elapsed time: 0.17900 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SESSION_STAT.STAT_VALUE
        IS 'statistic value';

Comment created.

Elapsed time: 0.17900 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$SESSION_STAT TO PUBLIC;

Grant succeeded.

Elapsed time: 0.15400 ms 


COMMIT;

Commit complete.

Elapsed time: 0.10500 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS V$SESSION_STAT;

Synonym dropped.

Elapsed time: 0.10000 ms 

CREATE PUBLIC SYNONYM V$SESSION_STAT FOR PERFORMANCE_VIEW_SCHEMA.V$SESSION_STAT;

Synonym created.

Elapsed time: 0.10800 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05000 ms 


--##############################################################
--# V$SESSION_MEM_STAT
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS PERFORMANCE_VIEW_SCHEMA.V$SESSION_MEM_STAT;

View dropped.

Elapsed time: 0.99200 ms 


--#####################
--# create view
--#####################

CREATE VIEW PERFORMANCE_VIEW_SCHEMA.V$SESSION_MEM_STAT
(  
       STAT_NAME
     , SESS_ID
     , STAT_VALUE
)
AS 
SELECT 
       CAST( knstat.NAME AS VARCHAR(128 OCTETS) )       -- STAT_NAME
     , CAST( knstat.ID AS NUMBER )                      -- SESS_ID
     , CAST( knstat.VALUE AS NUMBER )                   -- STAT_VALUE
  FROM 
       FIXED_TABLE_SCHEMA.X$KN_SESS_STAT AS knstat   
  WHERE knstat.CATEGORY = 11
UNION ALL
SELECT 
       CAST( smenv.NAME AS VARCHAR(128 OCTETS) )        -- STAT_NAME
     , CAST( smenv.ID AS NUMBER )                       -- SESS_ID
     , CAST( smenv.VALUE AS NUMBER )                    -- STAT_VALUE
  FROM 
       FIXED_TABLE_SCHEMA.X$SM_SESS_ENV AS smenv   
  WHERE smenv.CATEGORY = 11
UNION ALL
SELECT 
       CAST( smstat.NAME AS VARCHAR(128 OCTETS) )       -- STAT_NAME
     , CAST( smstat.ID AS NUMBER )                      -- SESS_ID
     , CAST( smstat.VALUE AS NUMBER )                   -- STAT_VALUE
  FROM 
       FIXED_TABLE_SCHEMA.X$SM_SESS_STAT AS smstat   
  WHERE smstat.CATEGORY = 11
UNION ALL
SELECT 
       CAST( exeenv.NAME AS VARCHAR(128 OCTETS) )       -- STAT_NAME
     , CAST( exeenv.ID AS NUMBER )                      -- SESS_ID
     , CAST( exeenv.VALUE AS NUMBER )                   -- STAT_VALUE
  FROM 
       FIXED_TABLE_SCHEMA.X$EXE_SESS_ENV AS exeenv   
  WHERE exeenv.CATEGORY = 11
UNION ALL
SELECT 
       CAST( sqlenv.NAME AS VARCHAR(128 OCTETS) )       -- STAT_NAME
     , CAST( sqlenv.ID AS NUMBER )                      -- SESS_ID
     , CAST( sqlenv.VALUE AS NUMBER )                   -- STAT_VALUE
  FROM 
       FIXED_TABLE_SCHEMA.X$SQL_SESS_ENV AS sqlenv   
  WHERE sqlenv.CATEGORY = 11
UNION ALL
SELECT 
       CAST( ssstat.NAME AS VARCHAR(128 OCTETS) )       -- STAT_NAME
     , CAST( ssstat.ID AS NUMBER )                      -- SESS_ID
     , CAST( ssstat.VALUE AS NUMBER )                   -- STAT_VALUE
  FROM 
       FIXED_TABLE_SCHEMA.X$SS_SESS_STAT AS ssstat   
  WHERE ssstat.CATEGORY = 11
UNION ALL
SELECT 
       CAST( ssstmtstat.NAME AS VARCHAR(128 OCTETS) )   -- STAT_NAME
     , CAST( ssstmtstat.SESSION_ID AS NUMBER )          -- SESS_ID
     , CAST( SUM( ssstmtstat.VALUE ) AS NUMBER )        -- STAT_VALUE
  FROM 
       FIXED_TABLE_SCHEMA.X$SS_STMT_STAT AS ssstmtstat   
  WHERE ssstmtstat.CATEGORY = 11
  GROUP BY NAME, SESSION_ID
ORDER BY 2, 1
;

View created.

Elapsed time: 1.60400 ms 

             
--#####################
--# comment view
--#####################

COMMENT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$SESSION_MEM_STAT
        IS 'The V$SESSION_MEM_STAT displays session memory statistics.';

Comment created.

Elapsed time: 0.16400 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SESSION_MEM_STAT.STAT_NAME
        IS 'statistic name';

Comment created.

Elapsed time: 0.19100 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SESSION_MEM_STAT.SESS_ID
        IS 'session identifier';

Comment created.

Elapsed time: 0.18800 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SESSION_MEM_STAT.STAT_VALUE
        IS 'statistic value';

Comment created.

Elapsed time: 0.19000 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$SESSION_MEM_STAT TO PUBLIC;

Grant succeeded.

Elapsed time: 0.15500 ms 


COMMIT;

Commit complete.

Elapsed time: 0.10700 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS V$SESSION_MEM_STAT;

Synonym dropped.

Elapsed time: 0.09900 ms 

CREATE PUBLIC SYNONYM V$SESSION_MEM_STAT FOR PERFORMANCE_VIEW_SCHEMA.V$SESSION_MEM_STAT;

Synonym created.

Elapsed time: 0.11300 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05000 ms 


--##############################################################
--# V$SESSION_SQL_STAT
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS PERFORMANCE_VIEW_SCHEMA.V$SESSION_SQL_STAT;

View dropped.

Elapsed time: 0.88200 ms 


--#####################
--# create view
--#####################

CREATE VIEW PERFORMANCE_VIEW_SCHEMA.V$SESSION_SQL_STAT
(  
       STAT_NAME
     , SESS_ID
     , STAT_VALUE
)
AS 
SELECT 
       CAST( sqlsessenv.NAME AS VARCHAR(128 OCTETS) )                        -- STAT_NAME
     , CAST( sqlsessenv.ID AS NUMBER )                                       -- SESS_ID
     , CAST( sqlsessenv.VALUE AS NUMBER )                                    -- STAT_VALUE
  FROM 
       FIXED_TABLE_SCHEMA.X$SQL_SESS_ENV AS sqlsessenv
  WHERE sqlsessenv.CATEGORY = 20
UNION ALL
SELECT 
       CAST( 'COMMAND: ' || sqlprocexec.STMT_TYPE AS VARCHAR(128 OCTETS) )   -- STAT_NAME
     , CAST( sqlprocexec.ID AS NUMBER )                                      -- SESS_ID
     , CAST( sqlprocexec.EXECUTE_COUNT AS NUMBER )                           -- STAT_VALUE
  FROM 
       FIXED_TABLE_SCHEMA.X$SQL_SESS_STAT_EXEC_STMT AS sqlprocexec
 WHERE sqlprocexec.STATE = 'USED | ALIVE'
ORDER BY 2, 1
;

View created.

Elapsed time: 1.10000 ms 

             
--#####################
--# comment view
--#####################

COMMENT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$SESSION_SQL_STAT
        IS 'The V$SESSION_SQL_STAT displays session SQL statistics.';

Comment created.

Elapsed time: 0.16300 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SESSION_SQL_STAT.STAT_NAME
        IS 'statistic name';

Comment created.

Elapsed time: 0.19100 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SESSION_SQL_STAT.SESS_ID
        IS 'session identifier';

Comment created.

Elapsed time: 0.19300 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SESSION_SQL_STAT.STAT_VALUE
        IS 'statistic value';

Comment created.

Elapsed time: 0.20200 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$SESSION_SQL_STAT TO PUBLIC;

Grant succeeded.

Elapsed time: 0.15700 ms 


COMMIT;

Commit complete.

Elapsed time: 0.10900 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS V$SESSION_SQL_STAT;

Synonym dropped.

Elapsed time: 0.09500 ms 

CREATE PUBLIC SYNONYM V$SESSION_SQL_STAT FOR PERFORMANCE_VIEW_SCHEMA.V$SESSION_SQL_STAT;

Synonym created.

Elapsed time: 0.12200 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05000 ms 


--##############################################################
--# V$SHM_SEGMENT
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS PERFORMANCE_VIEW_SCHEMA.V$SHM_SEGMENT;

View dropped.

Elapsed time: 1.24000 ms 


--#####################
--# create view
--#####################

CREATE VIEW PERFORMANCE_VIEW_SCHEMA.V$SHM_SEGMENT
(  
       SHM_NAME
     , SHM_ID
     , SHM_SIZE
     , SHM_KEY
     , SHM_SEQ
     , SHM_ADDR
)
AS 
SELECT 
       CAST( shmseg.NAME AS VARCHAR(32 OCTETS) )    -- SHM_NAME
     , CAST( shmseg.ID AS NUMBER )                  -- SHM_ID
     , CAST( shmseg.SIZE AS NUMBER )                -- SHM_SIZE
     , CAST( shmseg.KEY AS NUMBER )                 -- SHM_KEY
     , CAST( shmseg.SEQ AS NUMBER )                 -- SHM_SEQ
     , CAST( shmseg.ADDR AS VARCHAR(32 OCTETS) )    -- SHM_ADDR
  FROM 
       FIXED_TABLE_SCHEMA.X$SHM_SEGMENT AS shmseg
;

View created.

Elapsed time: 1.40800 ms 

             
--#####################
--# comment view
--#####################

COMMENT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$SHM_SEGMENT
        IS 'The V$SHM_SEGMENT displays a list of all shared memory segments.';

Comment created.

Elapsed time: 0.18600 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SHM_SEGMENT.SHM_NAME
        IS 'shared memory segment name';

Comment created.

Elapsed time: 0.19100 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SHM_SEGMENT.SHM_ID
        IS 'shared memory segment identifier';

Comment created.

Elapsed time: 0.19400 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SHM_SEGMENT.SHM_SIZE
        IS 'shared memory segment size ( in bytes )';

Comment created.

Elapsed time: 0.18200 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SHM_SEGMENT.SHM_KEY
        IS 'shared memory segment key';

Comment created.

Elapsed time: 0.18200 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SHM_SEGMENT.SHM_SEQ
        IS 'shared memory segment sequence';

Comment created.

Elapsed time: 0.19500 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SHM_SEGMENT.SHM_ADDR
        IS 'start address of the shared memory segment';

Comment created.

Elapsed time: 0.18700 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$SHM_SEGMENT TO PUBLIC;

Grant succeeded.

Elapsed time: 0.15000 ms 


COMMIT;

Commit complete.

Elapsed time: 0.16300 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS V$SHM_SEGMENT;

Synonym dropped.

Elapsed time: 0.09600 ms 

CREATE PUBLIC SYNONYM V$SHM_SEGMENT FOR PERFORMANCE_VIEW_SCHEMA.V$SHM_SEGMENT;

Synonym created.

Elapsed time: 0.11200 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05800 ms 


--##############################################################
--# V$SQLFN_METADATA
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS PERFORMANCE_VIEW_SCHEMA.V$SQLFN_METADATA;

View dropped.

Elapsed time: 0.97900 ms 


--#####################
--# create view
--#####################

CREATE VIEW PERFORMANCE_VIEW_SCHEMA.V$SQLFN_METADATA
(  
       FUNC_NAME
     , MINARGS
     , MAXARGS
     , IS_AGGREGATE
)
AS 
SELECT 
       CAST( func.FUNC_NAME AS VARCHAR(128 OCTETS) )   -- FUNC_NAME
     , CAST( func.MIN_ARG_COUNT AS NUMBER )            -- MINARGS
     , CAST( func.MAX_ARG_COUNT AS NUMBER )            -- MAXARGS
     , CAST( FALSE AS BOOLEAN )                        -- IS_AGGREGATE
  FROM 
       FIXED_TABLE_SCHEMA.X$BUILTIN_FUNCTION func
UNION ALL
SELECT 
       CAST( aggr.FUNC_NAME AS VARCHAR(128 OCTETS) )
     , CAST( aggr.MIN_ARG_COUNT AS NUMBER )
     , CAST( aggr.MAX_ARG_COUNT AS NUMBER )
     , TRUE
  FROM 
       FIXED_TABLE_SCHEMA.X$BUILTIN_AGGREGATION aggr
;

View created.

Elapsed time: 1.25100 ms 

             
--#####################
--# comment view
--#####################

COMMENT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$SQLFN_METADATA
        IS 'The V$SQLFN_METADATA contains metadata about operators and built-in functions';

Comment created.

Elapsed time: 0.15900 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SQLFN_METADATA.FUNC_NAME
        IS 'name of the built-in function';

Comment created.

Elapsed time: 0.19900 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SQLFN_METADATA.MINARGS
        IS 'minimum number of arguments for the function';

Comment created.

Elapsed time: 0.18600 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SQLFN_METADATA.MAXARGS
        IS 'maximum number of arguments for the function';

Comment created.

Elapsed time: 0.18000 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SQLFN_METADATA.IS_AGGREGATE
        IS 'indicates whether the function is an aggregate function (TRUE) or not (FALSE)';

Comment created.

Elapsed time: 0.19500 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$SQLFN_METADATA TO PUBLIC;

Grant succeeded.

Elapsed time: 0.15500 ms 


COMMIT;

Commit complete.

Elapsed time: 0.11700 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS V$SQLFN_METADATA;

Synonym dropped.

Elapsed time: 0.09200 ms 

CREATE PUBLIC SYNONYM V$SQLFN_METADATA FOR PERFORMANCE_VIEW_SCHEMA.V$SQLFN_METADATA;

Synonym created.

Elapsed time: 0.11300 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05000 ms 


--##############################################################
--# V$SQL_CACHE
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS PERFORMANCE_VIEW_SCHEMA.V$SQL_CACHE;

View dropped.

Elapsed time: 1.90700 ms 


--#####################
--# create view
--#####################

CREATE VIEW PERFORMANCE_VIEW_SCHEMA.V$SQL_CACHE
(  
       SQL_HANDLE
     , HASH_VALUE
     , REF_COUNT
     , CLOCK_ID
     , PLAN_AGE
     , USER_NAME
     , BIND_PARAM_COUNT
     , SQL_TEXT
     , PLAN_COUNT
     , PLAN_ID
     , PLAN_SIZE
     , PLAN_IS_ATOMIC
     , PLAN_TEXT
)
AS 
SELECT 
       /*+ USE_HASH( sqlplan ) */
       CAST( sqlcache.SQL_HANDLE AS NUMBER )            -- SQL_HANDLE
     , CAST( sqlcache.HASH_VALUE AS NUMBER )            -- HASH_VALUE
     , CAST( sqlplan.REF_COUNT AS NUMBER )              -- REF_COUNT
     , CAST( sqlcache.CLOCK_ID AS NUMBER )              -- CLOCK_ID
     , CAST( sqlcache.AGE AS NUMBER )                   -- PLAN_AGE
     , auth.AUTHORIZATION_NAME                          -- USER_NAME
     , CAST( sqlcache.BIND_COUNT AS NUMBER )            -- BIND_PARAM_COUNT
     , CAST( sqlcache.SQL_STRING AS LONG VARCHAR )      -- SQL_TEXT
     , CAST( sqlcache.PLAN_COUNT AS NUMBER )            -- PLAN_COUNT
     , CAST( sqlplan.PLAN_IDX AS NUMBER )               -- PLAN_ID
     , CAST( sqlplan.PLAN_SIZE AS NUMBER )              -- PLAN_SIZE
     , CAST( sqlplan.IS_ATOMIC AS BOOLEAN )             -- PLAN_IS_ATOMIC
     , CAST( sqlplan.PLAN_STRING AS LONG VARCHAR )      -- PLAN_TEXT
  FROM 
       FIXED_TABLE_SCHEMA.X$SQL_CACHE AS sqlcache
       INNER JOIN
       FIXED_TABLE_SCHEMA.X$SQL_CACHE_PLAN AS sqlplan
       ON sqlcache.sql_handle = sqlplan.sql_handle
       LEFT OUTER JOIN   
       DEFINITION_SCHEMA.AUTHORIZATIONS AS auth
       ON sqlcache.USER_ID = auth.AUTH_ID
  WHERE sqlcache.DROPPED = FALSE
;

View created.

Elapsed time: 2.56400 ms 

             
--#####################
--# comment view
--#####################

COMMENT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$SQL_CACHE
        IS 'The V$SQL_CACHE lists statistics of shared SQL plan.';

Comment created.

Elapsed time: 0.18300 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SQL_CACHE.SQL_HANDLE
        IS 'SQL handle';

Comment created.

Elapsed time: 0.19800 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SQL_CACHE.HASH_VALUE
        IS 'hash value of the SQL statement';

Comment created.

Elapsed time: 0.20800 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SQL_CACHE.REF_COUNT
        IS 'count of prepared statements referencing the statement';

Comment created.

Elapsed time: 0.19100 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SQL_CACHE.CLOCK_ID
        IS 'clock identifier';

Comment created.

Elapsed time: 0.18100 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SQL_CACHE.PLAN_AGE
        IS 'plan age';

Comment created.

Elapsed time: 0.18100 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SQL_CACHE.USER_NAME
        IS 'user name';

Comment created.

Elapsed time: 0.21900 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SQL_CACHE.BIND_PARAM_COUNT
        IS 'count of bind parameters';

Comment created.

Elapsed time: 0.20600 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SQL_CACHE.SQL_TEXT
        IS 'SQL full text';

Comment created.

Elapsed time: 0.17900 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SQL_CACHE.PLAN_COUNT
        IS 'physical plan count of the SQL statement';

Comment created.

Elapsed time: 0.17800 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SQL_CACHE.PLAN_ID
        IS 'plan identifier';

Comment created.

Elapsed time: 0.17800 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SQL_CACHE.PLAN_SIZE
        IS 'the total plan size of the SQL statement ( in bytes )';

Comment created.

Elapsed time: 0.23300 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SQL_CACHE.PLAN_IS_ATOMIC
        IS 'plan is atomic array insert or not';

Comment created.

Elapsed time: 0.25000 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SQL_CACHE.PLAN_TEXT
        IS 'plan text for SQL statement';

Comment created.

Elapsed time: 0.19000 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$SQL_CACHE TO PUBLIC;

Grant succeeded.

Elapsed time: 0.15600 ms 


COMMIT;

Commit complete.

Elapsed time: 0.21400 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS V$SQL_CACHE;

Synonym dropped.

Elapsed time: 0.09600 ms 

CREATE PUBLIC SYNONYM V$SQL_CACHE FOR PERFORMANCE_VIEW_SCHEMA.V$SQL_CACHE;

Synonym created.

Elapsed time: 0.11200 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05000 ms 



--##############################################################
--# V$SQL_COMMAND
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS PERFORMANCE_VIEW_SCHEMA.V$SQL_COMMAND;

View dropped.

Elapsed time: 1.30500 ms 


--#####################
--# create view
--#####################

CREATE VIEW PERFORMANCE_VIEW_SCHEMA.V$SQL_COMMAND
(  
       COMMAND
     , FROM_PHASE
     , UNTIL_PHASE
     , ACCESS_MODE
     , NEED_FETCH
     , IS_DDL
     , AUTO_COMMIT
     , IS_CACHEABLE
)
AS 
SELECT 
       CAST( cmd.SQL_COMMAND AS VARCHAR(128 OCTETS) )   -- COMMAND
     , CAST( cmd.FROM_PHASE AS VARCHAR(32 OCTETS) )     -- FROM_PHASE
     , CAST( cmd.UNTIL_PHASE AS VARCHAR(32 OCTETS) )    -- UNTIL_PHASE
     , CAST( cmd.ACCESS_MODE AS VARCHAR(32 OCTETS) )    -- ACCESS_MODE
     , CAST( CASE WHEN cmd.NEED_FETCH = TRUE 
                  THEN 'YES' ELSE 'NO' 
              END AS VARCHAR(3 OCTETS) )                -- NEED_FETCH
     , CAST( CASE WHEN cmd.IS_DDL = TRUE 
                  THEN 'YES' ELSE 'NO' 
              END AS VARCHAR(3 OCTETS) )                -- IS_DDL
     , CAST( CASE WHEN cmd.AUTO_COMMIT = TRUE 
                  THEN 'YES' ELSE 'NO' 
              END AS VARCHAR(3 OCTETS) )                -- AUTO_COMMIT
     , CAST( CASE WHEN cmd.PLAN_CACHE = 'NONE'
                  THEN 'NO' ELSE 'YES' 
              END AS VARCHAR(3 OCTETS) )                -- IS_CACHEABLE
  FROM 
       FIXED_TABLE_SCHEMA.X$SQL_COMMANDS AS cmd
  WHERE cmd.IS_EXTERNAL = TRUE
;

View created.

Elapsed time: 1.60700 ms 

             
--#####################
--# comment view
--#####################

COMMENT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$SQL_COMMAND
        IS 'The V$SQL_COMMAND lists attribute information of each SQL command.';

Comment created.

Elapsed time: 0.16200 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SQL_COMMAND.COMMAND
        IS 'SQL command';

Comment created.

Elapsed time: 0.19100 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SQL_COMMAND.FROM_PHASE
        IS 'executable from start-up phase';

Comment created.

Elapsed time: 0.18200 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SQL_COMMAND.UNTIL_PHASE
        IS 'executable until start-up phase';

Comment created.

Elapsed time: 0.18900 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SQL_COMMAND.ACCESS_MODE
        IS 'database access mode: values in (NONE, READ & WRITE, READ, READ & LOCK)';

Comment created.

Elapsed time: 0.17900 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SQL_COMMAND.NEED_FETCH
        IS 'the command is a query which has result set and need fetch';

Comment created.

Elapsed time: 0.17800 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SQL_COMMAND.IS_DDL
        IS 'the command is a DDL(Data Defintion Language) or not';

Comment created.

Elapsed time: 0.17900 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SQL_COMMAND.AUTO_COMMIT
        IS 'the command is auto-commit or not';

Comment created.

Elapsed time: 0.19800 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SQL_COMMAND.IS_CACHEABLE
        IS 'the command is plan-cacheable or not';

Comment created.

Elapsed time: 0.17900 ms 



--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$SQL_COMMAND TO PUBLIC;

Grant succeeded.

Elapsed time: 0.15700 ms 


COMMIT;

Commit complete.

Elapsed time: 0.17500 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS V$SQL_COMMAND;

Synonym dropped.

Elapsed time: 0.10700 ms 

CREATE PUBLIC SYNONYM V$SQL_COMMAND FOR PERFORMANCE_VIEW_SCHEMA.V$SQL_COMMAND;

Synonym created.

Elapsed time: 0.11600 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05100 ms 


--##############################################################
--# V$STATEMENT
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS PERFORMANCE_VIEW_SCHEMA.V$STATEMENT;

View dropped.

Elapsed time: 1.31000 ms 


--#####################
--# create view
--#####################

CREATE VIEW PERFORMANCE_VIEW_SCHEMA.V$STATEMENT 
( 
       SESSION_ID
     , STMT_ID
     , STMT_VIEW_SCN
     , SQL_TEXT
     , START_TIME
     , TOTAL_EXEC_TIME
     , LAST_EXEC_TIME
     , EXECUTIONS
)
AS 
SELECT 
       CAST( xstmt.SESSION_ID AS NUMBER )                -- SESSION_ID
     , CAST( xstmt.ID AS NUMBER )                        -- STMT_ID
     , CAST( xstmt.VIEW_SCN AS VARCHAR(32 OCTETS) )      -- STMT_VIEW_SCN
     , CAST( xstmt.SQL_TEXT AS VARCHAR(1024 OCTETS) )    -- SQL_TEXT
     , CASE WHEN xstmt.START_EXEC = TRUE THEN xstmt.START_TIME   
                                         ELSE NULL
       END                                               -- START_TIME
     , xstmt.TOTAL_EXEC_TIME                             -- TOTAL_EXEC_TIME
     , xstmt.LAST_EXEC_TIME                              -- LAST_EXEC_TIME
     , xstmt.EXECUTIONS                                  -- EXECUTIONS
  FROM  
       FIXED_TABLE_SCHEMA.X$STATEMENT    AS xstmt
 UNION ALL
SELECT
       CAST( xcur.SESSION_ID AS NUMBER )                 -- SESSION_ID
     , CAST( NULL AS NUMBER )                            -- STMT_ID
     , CAST( xcur.VIEW_SCN AS VARCHAR(32 OCTETS) )       -- STMT_VIEW_SCN
     , CAST( xcur.CURSOR_QUERY AS VARCHAR(1024 OCTETS) ) -- SQL_TEXT
     , CASE WHEN xcur.IS_OPEN = TRUE THEN xcur.OPEN_TIME   
                                     ELSE NULL
       END                                               -- START_TIME
     , xcur.TOTAL_EXEC_TIME                              -- TOTAL_EXEC_TIME
     , xcur.LAST_EXEC_TIME                               -- LAST_EXEC_TIME
     , xcur.EXECUTIONS                                   -- EXECUTIONS
  FROM  
       FIXED_TABLE_SCHEMA.X$NAMED_CURSOR AS xcur
ORDER BY 1, 2
;

View created.

Elapsed time: 1.83200 ms 

             
--#####################
--# comment view
--#####################

COMMENT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$STATEMENT 
        IS 'The V$STATEMENT lists all statements.';

Comment created.

Elapsed time: 0.16100 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$STATEMENT.SESSION_ID
        IS 'session identifier';

Comment created.

Elapsed time: 0.20300 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$STATEMENT.STMT_ID
        IS 'statement identifier in a session, null if named cursor query';

Comment created.

Elapsed time: 0.19300 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$STATEMENT.STMT_VIEW_SCN
        IS 'statement view scn';

Comment created.

Elapsed time: 0.18500 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$STATEMENT.SQL_TEXT
        IS 'first 1024 bytes of the SQL text for the statement';

Comment created.

Elapsed time: 0.18300 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$STATEMENT.START_TIME
        IS 'statement start time';

Comment created.

Elapsed time: 0.18500 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$STATEMENT.TOTAL_EXEC_TIME
        IS 'total execution time(us)';

Comment created.

Elapsed time: 0.18700 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$STATEMENT.LAST_EXEC_TIME
        IS 'last execution time(us)';

Comment created.

Elapsed time: 0.18000 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$STATEMENT.EXECUTIONS
        IS 'number of executions';

Comment created.

Elapsed time: 0.17900 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$STATEMENT TO PUBLIC;

Grant succeeded.

Elapsed time: 0.15200 ms 


COMMIT;

Commit complete.

Elapsed time: 0.15600 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS V$STATEMENT;

Synonym dropped.

Elapsed time: 0.10400 ms 

CREATE PUBLIC SYNONYM V$STATEMENT FOR PERFORMANCE_VIEW_SCHEMA.V$STATEMENT;

Synonym created.

Elapsed time: 0.10800 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05000 ms 


--##############################################################
--# V$SPROPERTY
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS PERFORMANCE_VIEW_SCHEMA.V$SPROPERTY;

View dropped.

Elapsed time: 1.96600 ms 


--#####################
--# create view
--#####################

CREATE VIEW PERFORMANCE_VIEW_SCHEMA.V$SPROPERTY 
( 
       PROPERTY_NAME
     , DESCRIPTION
     , DATA_TYPE
     , STARTUP_PHASE
     , VALUE_UNIT
     , PROPERTY_VALUE
     , PROPERTY_SOURCE
     , INIT_VALUE
     , INIT_SOURCE
     , MIN_VALUE
     , MAX_VALUE
     , SES_MODIFIABLE
     , SYS_MODIFIABLE
     , IS_MODIFIABLE
     , IS_GLOBAL
)
AS 
SELECT 
       CAST( PROPERTY_NAME AS VARCHAR(128 OCTETS) )  -- PROPERTY_NAME
     , CAST( DESCRIPTION AS VARCHAR(2048 OCTETS) )   -- DESCRIPTION
     , CAST( DATA_TYPE AS VARCHAR(32 OCTETS) )       -- DATA_TYPE
     , CAST( STARTUP_PHASE AS VARCHAR(32 OCTETS) )   -- STARTUP_PHASE
     , CAST( UNIT AS VARCHAR(32 OCTETS) )            -- VALUE_UNIT
     , CAST( VALUE AS VARCHAR(2048 OCTETS) )         -- PROPERTY_VALUE
     , CAST( SOURCE AS VARCHAR(32 OCTETS) )          -- PROPERTY_SOURCE
     , CAST( INIT_VALUE AS VARCHAR(2048 OCTETS) )    -- INIT_VALUE
     , CAST( INIT_SOURCE AS VARCHAR(32 OCTETS) )     -- INIT_SOURCE
     , CAST( CASE WHEN DATA_TYPE = 'VARCHAR' THEN NULL
                                             ELSE MIN 
             END
             AS NUMBER )                             -- MIN_VALUE
     , CAST( CASE WHEN DATA_TYPE = 'VARCHAR' THEN NULL
                                             ELSE MAX 
             END
             AS NUMBER )                             -- MAX_VALUE
     , CAST( SES_MODIFIABLE AS VARCHAR(32 OCTETS) )  -- SES_MODIFIABLE
     , CAST( SYS_MODIFIABLE AS VARCHAR(32 OCTETS) )  -- SYS_MODIFIABLE
     , CAST( MODIFIABLE AS VARCHAR(32 OCTETS) )      -- IS_MODIFIABLE
     , CAST( NULL AS VARCHAR(32 OCTETS) )            -- IS_GLOBAL
  FROM 
       FIXED_TABLE_SCHEMA.X$SPROPERTY
 WHERE 
       DOMAIN = 'EXTERNAL'
ORDER BY 
      PROPERTY_ID
;

View created.

Elapsed time: 2.55700 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$SPROPERTY  
        IS 'The V$SPROPERTY displays a list of Properties. This is store a binary property file';

Comment created.

Elapsed time: 0.19000 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SPROPERTY.PROPERTY_NAME
        IS 'name of the property';

Comment created.

Elapsed time: 0.19600 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SPROPERTY.DESCRIPTION
        IS 'description of the property';        

Comment created.

Elapsed time: 0.19000 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SPROPERTY.DATA_TYPE
        IS 'data type of the property';

Comment created.

Elapsed time: 0.41700 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SPROPERTY.STARTUP_PHASE
        IS 'modifiable startup-phase: the value IN ( NO MOUNT / MOUNT / OPEN & [BELOW|ABOVE] )';

Comment created.

Elapsed time: 0.18800 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SPROPERTY.VALUE_UNIT
        IS 'unit of the property value: the value in ( NONE, BYTE, MS(milisec) )';

Comment created.

Elapsed time: 0.18400 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SPROPERTY.PROPERTY_VALUE
        IS 'property value stored in the binary property file';

Comment created.

Elapsed time: 0.18100 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SPROPERTY.PROPERTY_SOURCE
        IS 'source of the current property value: the value is BINARY_FILE';

Comment created.

Elapsed time: 0.18900 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SPROPERTY.INIT_VALUE
        IS 'property init value for the system';

Comment created.

Elapsed time: 0.18200 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SPROPERTY.INIT_SOURCE
        IS 'source of the current property INIT_VALUE: the value IN ( USER, DEFAULT, ENV_VAR, BINARY_FILE, FILE, SYSTEM )';

Comment created.

Elapsed time: 0.18300 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SPROPERTY.MIN_VALUE
        IS 'minimum value for property. null if type is varchar.';

Comment created.

Elapsed time: 0.21500 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SPROPERTY.MAX_VALUE
        IS 'maximum value for property. null if type is varchar.';

Comment created.

Elapsed time: 0.18900 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SPROPERTY.SES_MODIFIABLE
        IS 'property can be changed with ALTER SESSION or not: the value in ( TRUE, FALSE )';

Comment created.

Elapsed time: 0.18000 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SPROPERTY.SYS_MODIFIABLE
        IS 'property can be changed with ALTER SYSTEM and when the change takes effect: the value in ( NONE, FALSE, IMMEDIATE, DEFERRED )';

Comment created.

Elapsed time: 0.19300 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SPROPERTY.IS_MODIFIABLE
        IS 'property can be changed or not: the value in ( TRUE, FALSE )';

Comment created.

Elapsed time: 0.18100 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SPROPERTY.IS_GLOBAL
        IS 'available only in the cluster system ';

Comment created.

Elapsed time: 0.19500 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$SPROPERTY TO PUBLIC;

Grant succeeded.

Elapsed time: 0.15700 ms 


COMMIT;

Commit complete.

Elapsed time: 0.22600 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS V$SPROPERTY;

Synonym dropped.

Elapsed time: 0.09100 ms 

CREATE PUBLIC SYNONYM V$SPROPERTY FOR PERFORMANCE_VIEW_SCHEMA.V$SPROPERTY;

Synonym created.

Elapsed time: 0.11000 ms 

COMMIT;

Commit complete.

Elapsed time: 0.06000 ms 


--##############################################################
--# V$SYSTEM_STAT
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS PERFORMANCE_VIEW_SCHEMA.V$SYSTEM_STAT;

View dropped.

Elapsed time: 0.97000 ms 


--#####################
--# create view
--#####################

CREATE VIEW PERFORMANCE_VIEW_SCHEMA.V$SYSTEM_STAT
(  
       STAT_NAME
     , STAT_VALUE
     , COMMENTS
)
AS 
SELECT 
       CAST( kninfo.NAME AS VARCHAR(128 OCTETS) )       -- STAT_NAME
     , CAST( kninfo.VALUE AS NUMBER )                   -- STAT_VALUE
     , CAST( kninfo.COMMENTS AS VARCHAR(1024 OCTETS) )  -- COMMENTS
  FROM 
       FIXED_TABLE_SCHEMA.X$KN_SYSTEM_INFO AS kninfo   
  WHERE kninfo.CATEGORY = 0
UNION ALL
SELECT 
       CAST( sminfo.NAME AS VARCHAR(128 OCTETS) )       -- STAT_NAME
     , CAST( sminfo.VALUE AS NUMBER )                   -- STAT_VALUE
     , CAST( sminfo.COMMENTS AS VARCHAR(1024 OCTETS) )  -- COMMENTS
  FROM 
       FIXED_TABLE_SCHEMA.X$SM_SYSTEM_INFO AS sminfo   
  WHERE sminfo.CATEGORY = 0
UNION ALL
SELECT 
       CAST( exeinfo.NAME AS VARCHAR(128 OCTETS) )      -- STAT_NAME
     , CAST( exeinfo.VALUE AS NUMBER )                  -- STAT_VALUE
     , CAST( exeinfo.COMMENTS AS VARCHAR(1024 OCTETS) ) -- COMMENTS
  FROM 
       FIXED_TABLE_SCHEMA.X$EXE_SYSTEM_INFO AS exeinfo
  WHERE exeinfo.CATEGORY = 0
UNION ALL
SELECT 
       CAST( sqlinfo.NAME AS VARCHAR(128 OCTETS) )      -- STAT_NAME
     , CAST( sqlinfo.VALUE AS NUMBER )                  -- STAT_VALUE
     , CAST( sqlinfo.COMMENTS AS VARCHAR(1024 OCTETS) ) -- COMMENTS
  FROM 
       FIXED_TABLE_SCHEMA.X$SQL_SYSTEM_INFO AS sqlinfo   
  WHERE sqlinfo.CATEGORY = 0
UNION ALL
SELECT 
       CAST( slinfo.NAME AS VARCHAR(128 OCTETS) )       -- STAT_NAME
     , CAST( slinfo.VALUE AS NUMBER )                   -- STAT_VALUE
     , CAST( slinfo.COMMENTS AS VARCHAR(1024 OCTETS) )  -- COMMENTS
  FROM 
       FIXED_TABLE_SCHEMA.X$SL_SYSTEM_INFO AS slinfo   
  WHERE slinfo.CATEGORY = 0
;

View created.

Elapsed time: 1.39800 ms 

             
--#####################
--# comment view
--#####################

COMMENT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$SYSTEM_STAT
        IS 'The V$SYSTEM_STAT displays system statistics.';

Comment created.

Elapsed time: 0.16000 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SYSTEM_STAT.STAT_NAME
        IS 'statistic name';

Comment created.

Elapsed time: 0.19000 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SYSTEM_STAT.STAT_VALUE
        IS 'statistic value';

Comment created.

Elapsed time: 0.21100 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SYSTEM_STAT.COMMENTS
        IS 'comments';

Comment created.

Elapsed time: 0.19700 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$SYSTEM_STAT TO PUBLIC;

Grant succeeded.

Elapsed time: 0.16500 ms 


COMMIT;

Commit complete.

Elapsed time: 0.10700 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS V$SYSTEM_STAT;

Synonym dropped.

Elapsed time: 0.09700 ms 

CREATE PUBLIC SYNONYM V$SYSTEM_STAT FOR PERFORMANCE_VIEW_SCHEMA.V$SYSTEM_STAT;

Synonym created.

Elapsed time: 0.11700 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05100 ms 


--##############################################################
--# V$SYSTEM_MEM_STAT
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS PERFORMANCE_VIEW_SCHEMA.V$SYSTEM_MEM_STAT;

View dropped.

Elapsed time: 0.96600 ms 


--#####################
--# create view
--#####################

CREATE VIEW PERFORMANCE_VIEW_SCHEMA.V$SYSTEM_MEM_STAT
(  
       STAT_NAME
     , STAT_VALUE
     , COMMENTS
)
AS 
SELECT 
       CAST( kninfo.NAME AS VARCHAR(128 OCTETS) )       -- STAT_NAME
     , CAST( kninfo.VALUE AS NUMBER )                   -- STAT_VALUE
     , CAST( kninfo.COMMENTS AS VARCHAR(1024 OCTETS) )  -- COMMENTS
  FROM 
       FIXED_TABLE_SCHEMA.X$KN_SYSTEM_INFO AS kninfo   
  WHERE kninfo.CATEGORY = 11
UNION ALL
SELECT 
       CAST( sminfo.NAME AS VARCHAR(128 OCTETS) )       -- STAT_NAME
     , CAST( sminfo.VALUE AS NUMBER )                   -- STAT_VALUE
     , CAST( sminfo.COMMENTS AS VARCHAR(1024 OCTETS) )  -- COMMENTS
  FROM 
       FIXED_TABLE_SCHEMA.X$SM_SYSTEM_INFO AS sminfo   
  WHERE sminfo.CATEGORY = 11
UNION ALL
SELECT 
       CAST( exeinfo.NAME AS VARCHAR(128 OCTETS) )      -- STAT_NAME
     , CAST( exeinfo.VALUE AS NUMBER )                  -- STAT_VALUE
     , CAST( exeinfo.COMMENTS AS VARCHAR(1024 OCTETS) ) -- COMMENTS
  FROM 
       FIXED_TABLE_SCHEMA.X$EXE_SYSTEM_INFO AS exeinfo
  WHERE exeinfo.CATEGORY = 11
UNION ALL
SELECT 
       CAST( sqlinfo.NAME AS VARCHAR(128 OCTETS) )      -- STAT_NAME
     , CAST( sqlinfo.VALUE AS NUMBER )                  -- STAT_VALUE
     , CAST( sqlinfo.COMMENTS AS VARCHAR(1024 OCTETS) ) -- COMMENTS
  FROM 
       FIXED_TABLE_SCHEMA.X$SQL_SYSTEM_INFO AS sqlinfo   
  WHERE sqlinfo.CATEGORY = 11
UNION ALL
SELECT 
       CAST( slinfo.NAME AS VARCHAR(128 OCTETS) )       -- STAT_NAME
     , CAST( slinfo.VALUE AS NUMBER )                   -- STAT_VALUE
     , CAST( slinfo.COMMENTS AS VARCHAR(1024 OCTETS) )  -- COMMENTS
  FROM 
       FIXED_TABLE_SCHEMA.X$SL_SYSTEM_INFO AS slinfo   
  WHERE slinfo.CATEGORY = 11
;

View created.

Elapsed time: 1.23600 ms 

             
--#####################
--# comment view
--#####################

COMMENT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$SYSTEM_MEM_STAT
        IS 'The V$SYSTEM_MEM_STAT displays system memory statistics.';

Comment created.

Elapsed time: 0.15900 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SYSTEM_MEM_STAT.STAT_NAME
        IS 'statistic name';

Comment created.

Elapsed time: 0.18600 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SYSTEM_MEM_STAT.STAT_VALUE
        IS 'statistic value';

Comment created.

Elapsed time: 0.19600 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SYSTEM_MEM_STAT.COMMENTS
        IS 'comments';

Comment created.

Elapsed time: 0.18200 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$SYSTEM_MEM_STAT TO PUBLIC;

Grant succeeded.

Elapsed time: 0.15500 ms 


COMMIT;

Commit complete.

Elapsed time: 0.10600 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS V$SYSTEM_MEM_STAT;

Synonym dropped.

Elapsed time: 0.09100 ms 

CREATE PUBLIC SYNONYM V$SYSTEM_MEM_STAT FOR PERFORMANCE_VIEW_SCHEMA.V$SYSTEM_MEM_STAT;

Synonym created.

Elapsed time: 0.10800 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05000 ms 


--##############################################################
--# V$SYSTEM_SQL_STAT
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS PERFORMANCE_VIEW_SCHEMA.V$SYSTEM_SQL_STAT;

View dropped.

Elapsed time: 0.85300 ms 


--#####################
--# create view
--#####################

CREATE VIEW PERFORMANCE_VIEW_SCHEMA.V$SYSTEM_SQL_STAT
(  
       STAT_NAME
     , STAT_VALUE
     , COMMENTS
)
AS 
SELECT 
       CAST( sysinfo.NAME AS VARCHAR(128 OCTETS) )       -- STAT_NAME
     , CAST( sysinfo.VALUE AS NUMBER )                   -- STAT_VALUE
     , CAST( sysinfo.COMMENTS AS VARCHAR(1024 OCTETS) )  -- COMMENTS
  FROM 
       FIXED_TABLE_SCHEMA.X$SQL_SYSTEM_INFO AS sysinfo
  WHERE sysinfo.CATEGORY = 20
UNION ALL
SELECT 
       CAST( 'COMMAND: ' || sysexec.STMT_TYPE AS VARCHAR(128 OCTETS) )   -- STAT_NAME
     , CAST( sysexec.EXECUTE_COUNT AS NUMBER )                           -- STAT_VALUE
     , CAST( 'execution count of the command' AS VARCHAR(1024 OCTETS) )  -- COMMENTS
  FROM 
       FIXED_TABLE_SCHEMA.X$SQL_SYSTEM_STAT_EXEC_STMT AS sysexec
;

View created.

Elapsed time: 1.08200 ms 

             
--#####################
--# comment view
--#####################

COMMENT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$SYSTEM_SQL_STAT
        IS 'The V$SYSTEM_SQL_STAT displays system SQL statistics.';

Comment created.

Elapsed time: 0.16200 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SYSTEM_SQL_STAT.STAT_NAME
        IS 'statistic name';

Comment created.

Elapsed time: 0.18400 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SYSTEM_SQL_STAT.STAT_VALUE
        IS 'statistic value';

Comment created.

Elapsed time: 0.18900 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SYSTEM_SQL_STAT.COMMENTS
        IS 'comments';

Comment created.

Elapsed time: 0.17700 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$SYSTEM_SQL_STAT TO PUBLIC;

Grant succeeded.

Elapsed time: 0.15600 ms 


COMMIT;

Commit complete.

Elapsed time: 0.10700 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS V$SYSTEM_SQL_STAT;

Synonym dropped.

Elapsed time: 0.09400 ms 

CREATE PUBLIC SYNONYM V$SYSTEM_SQL_STAT FOR PERFORMANCE_VIEW_SCHEMA.V$SYSTEM_SQL_STAT;

Synonym created.

Elapsed time: 0.12500 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05100 ms 


--##############################################################
--# V$TABLES
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS PERFORMANCE_VIEW_SCHEMA.V$TABLES;

View dropped.

Elapsed time: 1.37300 ms 


--#####################
--# create view
--#####################

CREATE VIEW PERFORMANCE_VIEW_SCHEMA.V$TABLES 
( 
       TABLE_OWNER
     , TABLE_SCHEMA
     , TABLE_NAME
     , STARTUP_PHASE
     , CREATED_TIME
     , MODIFIED_TIME
     , COMMENTS
)
AS 
SELECT 
       auth.AUTHORIZATION_NAME -- TABLE_OWNER
     , sch.SCHEMA_NAME         -- TABLE_SCHEMA
     , tab.TABLE_NAME          -- TABLE_NAME
     , CAST( CASE WHEN ( SELECT COUNT(*) 
                           FROM FIXED_TABLE_SCHEMA.X$FIXED_VIEW xfv
                          WHERE xfv.VIEW_NAME = tab.TABLE_NAME
                            AND xfv.STARTUP_PHASE = 'NO_MOUNT' ) > 0
                       THEN 'NO_MOUNT'
                  WHEN ( SELECT COUNT(*) 
                           FROM FIXED_TABLE_SCHEMA.X$FIXED_VIEW xfv
                          WHERE xfv.VIEW_NAME = tab.TABLE_NAME
                            AND xfv.STARTUP_PHASE = 'MOUNT' ) > 0
                       THEN 'MOUNT'
                  ELSE 'OPEN'
             END AS VARCHAR(32 OCTETS) )
     , tab.CREATED_TIME        -- CREATED_TIME
     , tab.MODIFIED_TIME       -- MODIFIED_TIME
     , tab.COMMENTS            -- COMMENTS
  FROM  
       DEFINITION_SCHEMA.TABLES          AS tab 
     , DEFINITION_SCHEMA.SCHEMATA        AS sch 
     , DEFINITION_SCHEMA.AUTHORIZATIONS  AS auth 
 WHERE 
       sch.SCHEMA_NAME = 'PERFORMANCE_VIEW_SCHEMA'
   AND tab.SCHEMA_ID   = sch.SCHEMA_ID 
   AND tab.OWNER_ID    = auth.AUTH_ID 
 ORDER BY
       tab.SCHEMA_ID
     , tab.TABLE_ID
;

View created.

Elapsed time: 1.84100 ms 

             
--#####################
--# comment view
--#####################

COMMENT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$TABLES 
        IS 'The V$TABLES contains the definitions of all the performance views (views beginning with V$).';

Comment created.

Elapsed time: 0.16800 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$TABLES.TABLE_OWNER
        IS 'owner name who owns the performance view';

Comment created.

Elapsed time: 0.19200 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$TABLES.TABLE_SCHEMA
        IS 'schema name of the performance view';

Comment created.

Elapsed time: 0.21900 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$TABLES.TABLE_NAME
        IS 'name of the performance view';

Comment created.

Elapsed time: 0.18700 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$TABLES.STARTUP_PHASE
        IS 'visible startup phase of the performance view';

Comment created.

Elapsed time: 0.18000 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$TABLES.CREATED_TIME
        IS 'created time of the performance view';

Comment created.

Elapsed time: 0.18100 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$TABLES.MODIFIED_TIME
        IS 'modified time of the performance view';

Comment created.

Elapsed time: 0.17800 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$TABLES.COMMENTS
        IS 'comments of the performance view';

Comment created.

Elapsed time: 0.17800 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$TABLES TO PUBLIC;

Grant succeeded.

Elapsed time: 0.16300 ms 


COMMIT;

Commit complete.

Elapsed time: 0.14700 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS V$TABLES;

Synonym dropped.

Elapsed time: 0.09900 ms 

CREATE PUBLIC SYNONYM V$TABLES FOR PERFORMANCE_VIEW_SCHEMA.V$TABLES;

Synonym created.

Elapsed time: 0.10800 ms 

COMMIT;

Commit complete.

Elapsed time: 0.06100 ms 


--##############################################################
--# V$TABLESPACE
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS PERFORMANCE_VIEW_SCHEMA.V$TABLESPACE;

View dropped.

Elapsed time: 1.32200 ms 


--#####################
--# create view
--#####################

CREATE VIEW PERFORMANCE_VIEW_SCHEMA.V$TABLESPACE
(  
       TBS_NAME
     , TBS_ID
     , TBS_ATTR
     , IS_LOGGING
     , IS_ONLINE
     , OFFLINE_STATE
     , EXTENT_SIZE
     , PAGE_SIZE
)
AS 
SELECT 
       CAST( tbs.NAME AS VARCHAR(128 OCTETS) )            -- TBS_NAME
     , CAST( tbs.ID AS NUMBER )                           -- TBS_ID
     , CAST( tbs.ATTR AS VARCHAR(128 OCTETS) )            -- TBS_ATTR
     , tbs.LOGGING                                        -- IS_LOGGING
     , tbs.ONLINE                                         -- IS_ONLINE
     , CAST( tbs.OFFLINE_STATE AS VARCHAR(32 OCTETS) )    -- OFFLINE_STATE
     , CAST( tbs.EXTSIZE AS NUMBER )                      -- EXTENT_SIZE
     , CAST( tbs.PAGE_SIZE AS NUMBER )                    -- PAGE_SIZE
  FROM 
       FIXED_TABLE_SCHEMA.X$TABLESPACE AS tbs
  WHERE tbs.STATE = 'CREATED'
;

View created.

Elapsed time: 1.66200 ms 

             
--#####################
--# comment view
--#####################

COMMENT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$TABLESPACE
        IS 'This view displays tablespace information.';

Comment created.

Elapsed time: 0.15900 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$TABLESPACE.TBS_NAME
        IS 'tablespace name';

Comment created.

Elapsed time: 0.19900 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$TABLESPACE.TBS_ID
        IS 'tablespace identifier';

Comment created.

Elapsed time: 0.18700 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$TABLESPACE.TBS_ATTR
        IS 'tablespace attribute: the value in ( device attribute (MEMORY) | temporary attribute (TEMPORARY, PERSISTENT) | usage attribute(DICT, UNDO, DATA, TEMPORARY) )';

Comment created.

Elapsed time: 0.18400 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$TABLESPACE.IS_LOGGING
        IS 'indicates whether the tablespace is a logging tablespace ( YES ) or not ( NO )';

Comment created.

Elapsed time: 0.18000 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$TABLESPACE.IS_ONLINE
        IS 'indicates whether the tablespace is ONLINE ( YES ) or OFFLINE ( NO )';

Comment created.

Elapsed time: 0.18700 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$TABLESPACE.OFFLINE_STATE
        IS 'indicates whether the tablespace can be taken online normally ( CONSISTENT ) or not ( INCONSISTENT ). null if the tablespace is ONLINE';

Comment created.

Elapsed time: 0.20500 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$TABLESPACE.EXTENT_SIZE
        IS 'extent size of the tablespace ( in bytes )';

Comment created.

Elapsed time: 0.17900 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$TABLESPACE.PAGE_SIZE
        IS 'page size of the tablespace ( in bytes )';

Comment created.

Elapsed time: 0.17700 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$TABLESPACE TO PUBLIC;

Grant succeeded.

Elapsed time: 0.16000 ms 


COMMIT;

Commit complete.

Elapsed time: 0.15500 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS V$TABLESPACE;

Synonym dropped.

Elapsed time: 0.09000 ms 

CREATE PUBLIC SYNONYM V$TABLESPACE FOR PERFORMANCE_VIEW_SCHEMA.V$TABLESPACE;

Synonym created.

Elapsed time: 0.11000 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05100 ms 


--##############################################################
--# V$TRANSACTION
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS PERFORMANCE_VIEW_SCHEMA.V$TRANSACTION;

View dropped.

Elapsed time: 1.75800 ms 


--#####################
--# create view
--#####################

CREATE VIEW PERFORMANCE_VIEW_SCHEMA.V$TRANSACTION
(  
       TRANS_ID
     , SESSION_ID
     , TRANS_SLOT_ID
     , PHYSICAL_TRANS_ID
     , TRANS_STATE
     , IS_XA
     , TRANS_ATTRIBUTE
     , ISOLATION_LEVEL
     , TRANS_VIEW_SCN
     , TCN
     , TRANS_SEQ
     , START_TIME
)
AS 
SELECT 
       CAST( xtrans.LOGICAL_TRANS_ID AS NUMBER )       -- TRANS_ID
     , CAST( xsess.ID AS NUMBER )                      -- SESSION_ID
     , CAST( xtrans.SLOT_ID AS NUMBER )                -- TRANS_SLOT_ID
     , CAST( xtrans.PHYSICAL_TRANS_ID AS NUMBER )      -- PHYSICAL_TRANS_ID
     , CAST( xtrans.STATE AS VARCHAR(32 OCTETS) )      -- TRANS_STATE
     , xtrans.IS_XA                                    -- IS_XA
     , CAST( xtrans.ATTRIBUTE AS VARCHAR(32 OCTETS) )  -- TRANS_ATTRIBUTE
     , CAST( xtrans.ISOLATION_LEVEL AS VARCHAR(32 OCTETS) ) -- ISOLATION_LEVEL
     , CAST( xtrans.VIEW_SCN AS VARCHAR(32 OCTETS) )   -- TRANS_VIEW_SCN
     , CAST( xtrans.TCN AS NUMBER )                    -- TCN
     , CAST( xtrans.SEQ AS NUMBER )                    -- TRANS_SEQ
     , xtrans.BEGIN_TIME                               -- START_TIME
  FROM 
       FIXED_TABLE_SCHEMA.X$TRANSACTION AS xtrans   
       LEFT OUTER JOIN   
       FIXED_TABLE_SCHEMA.X$SESSION AS xsess   
       ON xtrans.LOGICAL_TRANS_ID = xsess.TRANS_ID
;

View created.

Elapsed time: 2.24700 ms 

             
--#####################
--# comment view
--#####################

COMMENT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$TRANSACTION
        IS 'The V$TRANSACTION lists the active transactions in the system.';

Comment created.

Elapsed time: 0.18300 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$TRANSACTION.TRANS_ID
        IS 'transaction identifier';

Comment created.

Elapsed time: 0.18900 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$TRANSACTION.SESSION_ID
        IS 'session identifier ( null if the global transaction is unassociated )';

Comment created.

Elapsed time: 0.18500 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$TRANSACTION.TRANS_SLOT_ID
        IS 'transaction slot identifier';

Comment created.

Elapsed time: 0.18500 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$TRANSACTION.PHYSICAL_TRANS_ID
        IS 'physical transaction identifier';

Comment created.

Elapsed time: 0.18100 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$TRANSACTION.TRANS_STATE
        IS 'transaction state: the value in ( ACTIVE, BLOCK, PREPARE, COMMIT, ROLLBACK, IDLE, PRECOMMIT )';

Comment created.

Elapsed time: 0.18700 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$TRANSACTION.IS_XA
        IS 'indicates whether the transaction is xa transaction or not';

Comment created.

Elapsed time: 0.18700 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$TRANSACTION.TRANS_ATTRIBUTE
        IS 'transaction attribute: the value in ( READ_ONLY, UPDATABLE, LOCKABLE, UPDATABLE | LOCKABLE )';

Comment created.

Elapsed time: 0.18100 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$TRANSACTION.ISOLATION_LEVEL
        IS 'transaction isolation level: the value in ( READ COMMITTED, SERIALIZABLE )';

Comment created.

Elapsed time: 0.17700 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$TRANSACTION.TRANS_VIEW_SCN
        IS 'transaction view scn';

Comment created.

Elapsed time: 0.18500 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$TRANSACTION.TCN
        IS 'transaction change number';

Comment created.

Elapsed time: 0.17800 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$TRANSACTION.TRANS_SEQ
        IS 'transaction sequence number';

Comment created.

Elapsed time: 0.17600 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$TRANSACTION.START_TIME
        IS 'transaction start time';

Comment created.

Elapsed time: 0.18500 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$TRANSACTION TO PUBLIC;

Grant succeeded.

Elapsed time: 0.15600 ms 


COMMIT;

Commit complete.

Elapsed time: 0.19900 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS V$TRANSACTION;

Synonym dropped.

Elapsed time: 0.09200 ms 

CREATE PUBLIC SYNONYM V$TRANSACTION FOR PERFORMANCE_VIEW_SCHEMA.V$TRANSACTION;

Synonym created.

Elapsed time: 0.11000 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05000 ms 


--##############################################################
--# V$INSTANCE
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS PERFORMANCE_VIEW_SCHEMA.V$INSTANCE;

View dropped.

Elapsed time: 0.95100 ms 


--#####################
--# create view
--#####################

CREATE VIEW PERFORMANCE_VIEW_SCHEMA.V$INSTANCE
(  
       RELEASE_VERSION
     , STARTUP_TIME
     , INSTANCE_STATUS
     , DATA_ACCESS_MODE
)
AS 
SELECT 
       inst.VERSION            -- RELEASE_VERSION
     , inst.STARTUP_TIME       -- STARTUP_TIME
     , inst.STATUS             -- INSTANCE_STATUS
     , CAST( CASE WHEN ( inst.STATUS = 'OPEN' ) = FALSE
                       THEN 'NONE'
                  ELSE ( CASE WHEN ( SELECT VALUE
                                       FROM FIXED_TABLE_SCHEMA.X$SM_SYSTEM_INFO
                                      WHERE NAME = 'DATA_ACCESS_MODE' ) = 1
                                   THEN 'READ_ONLY'
                              ELSE 'READ_WRITE'
                         END )
             END AS VARCHAR(16 OCTETS) )  -- DATA_ACCESS_MODE
  FROM 
       FIXED_TABLE_SCHEMA.X$INSTANCE AS inst
;

View created.

Elapsed time: 1.21800 ms 

             
--#####################
--# comment view
--#####################

COMMENT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$INSTANCE
        IS 'This view displays the state of the current instance.';

Comment created.

Elapsed time: 0.16100 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$INSTANCE.RELEASE_VERSION
        IS 'release version';

Comment created.

Elapsed time: 0.18900 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$INSTANCE.STARTUP_TIME
        IS 'time when the instance was started';

Comment created.

Elapsed time: 0.19200 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$INSTANCE.INSTANCE_STATUS
        IS 'status of the instance: the value in ( STARTED, MOUNTED, OPEN )';

Comment created.

Elapsed time: 0.20100 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$INSTANCE.DATA_ACCESS_MODE
        IS 'data access mode of the instance: the value in ( NONE, READ_ONLY, READ_WRITE )';

Comment created.

Elapsed time: 0.19600 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$INSTANCE TO PUBLIC;

Grant succeeded.

Elapsed time: 0.15500 ms 


COMMIT;

Commit complete.

Elapsed time: 0.12400 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS V$INSTANCE;

Synonym dropped.

Elapsed time: 0.09400 ms 

CREATE PUBLIC SYNONYM V$INSTANCE FOR PERFORMANCE_VIEW_SCHEMA.V$INSTANCE;

Synonym created.

Elapsed time: 0.10900 ms 

COMMIT;

Commit complete.

Elapsed time: 0.04900 ms 


--##############################################################
--# V$CONTROLFILE
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS PERFORMANCE_VIEW_SCHEMA.V$CONTROLFILE;

View dropped.

Elapsed time: 1.01800 ms 


--#####################
--# create view
--#####################

CREATE VIEW PERFORMANCE_VIEW_SCHEMA.V$CONTROLFILE
(  
       STATUS
     , CONTROLFILE_NAME
     , LAST_CHECKPOINT_LSN
     , IS_PRIMARY
     , CREATION_TIME
)
AS 
SELECT 
       ctrl.CONTROLFILE_STATE                 -- STATUS
     , ctrl.CONTROLFILE_NAME                  -- CONTROLFILE_NAME
     , CAST( ctrl.CHECKPOINT_LSN AS NUMBER )  -- LAST_CHECKPOINT_LSN
     , ctrl.IS_PRIMARY                        -- IS_PRIMARY
     , ctrl.CREATION_TIME                     -- CREATION_TIME
  FROM 
       FIXED_TABLE_SCHEMA.X$CONTROLFILE AS ctrl
;

View created.

Elapsed time: 1.26700 ms 

             
--#####################
--# comment view
--#####################

COMMENT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$CONTROLFILE
        IS 'This view displays information about controlfiles.';

Comment created.

Elapsed time: 0.15900 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$CONTROLFILE.STATUS
        IS 'controlfile status ( valid, invalid )';

Comment created.

Elapsed time: 0.19300 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$CONTROLFILE.CONTROLFILE_NAME
        IS 'controlfile name ( absolute path )';

Comment created.

Elapsed time: 0.19600 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$CONTROLFILE.LAST_CHECKPOINT_LSN
        IS 'the last checkpoint lsn';

Comment created.

Elapsed time: 0.19000 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$CONTROLFILE.IS_PRIMARY
        IS 'indicates whether the controlfile is primary';

Comment created.

Elapsed time: 0.18000 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$CONTROLFILE.CREATION_TIME
        IS 'timestamp of the database creation';

Comment created.

Elapsed time: 0.17900 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$CONTROLFILE TO PUBLIC;

Grant succeeded.

Elapsed time: 0.15000 ms 


COMMIT;

Commit complete.

Elapsed time: 0.15000 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS V$CONTROLFILE;

Synonym dropped.

Elapsed time: 0.09800 ms 

CREATE PUBLIC SYNONYM V$CONTROLFILE FOR PERFORMANCE_VIEW_SCHEMA.V$CONTROLFILE;

Synonym created.

Elapsed time: 0.11600 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05100 ms 


--##############################################################
--# V$DB_FILE
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS PERFORMANCE_VIEW_SCHEMA.V$DB_FILE;

View dropped.

Elapsed time: 0.71300 ms 


--#####################
--# create view
--#####################

CREATE VIEW PERFORMANCE_VIEW_SCHEMA.V$DB_FILE
(  
       FILE_NAME
     , FILE_TYPE
)
AS 
SELECT 
       CAST( dbf.PATH AS VARCHAR(1024 OCTETS) )        -- FILE_NAME
     , CAST( dbf.TYPE AS VARCHAR(16 OCTETS) )          -- FILE_TYPE
  FROM 
       FIXED_TABLE_SCHEMA.X$DB_FILE AS dbf
;

View created.

Elapsed time: 0.87600 ms 

             
--#####################
--# comment view
--#####################

COMMENT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$DB_FILE
        IS 'The V$DB_FILE displays a list of all files using in database';

Comment created.

Elapsed time: 0.15900 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$DB_FILE.FILE_NAME
        IS 'file name';

Comment created.

Elapsed time: 0.19800 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$DB_FILE.FILE_TYPE
        IS 'file type';

Comment created.

Elapsed time: 0.19600 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$DB_FILE TO PUBLIC;

Grant succeeded.

Elapsed time: 0.15100 ms 


COMMIT;

Commit complete.

Elapsed time: 0.09900 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS V$DB_FILE;

Synonym dropped.

Elapsed time: 0.09200 ms 

CREATE PUBLIC SYNONYM V$DB_FILE FOR PERFORMANCE_VIEW_SCHEMA.V$DB_FILE;

Synonym created.

Elapsed time: 0.11100 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05000 ms 


--##############################################################
--# V$SHARED_MODE
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS PERFORMANCE_VIEW_SCHEMA.V$SHARED_MODE;

View dropped.

Elapsed time: 0.75400 ms 


--#####################
--# create view
--#####################

CREATE VIEW PERFORMANCE_VIEW_SCHEMA.V$SHARED_MODE
(  
       NAME
     , VALUE
)
AS 
SELECT 
       CAST( shm.NAME AS VARCHAR(128 OCTETS) )    -- NAME
     , CAST( 'NO' AS VARCHAR(128 OCTETS) )        -- VALUE
  FROM 
       FIXED_TABLE_SCHEMA.X$SL_SYSTEM_INFO AS shm
  WHERE shm.NAME = 'SHARED_SERVER_ACTIVITY' AND shm.VALUE = 0
UNION ALL
SELECT 
       CAST( shm.NAME AS VARCHAR(128 OCTETS) )    -- NAME
     , CAST( 'YES' AS VARCHAR(128 OCTETS) )       -- VALUE
  FROM 
       FIXED_TABLE_SCHEMA.X$SL_SYSTEM_INFO AS shm
  WHERE shm.NAME = 'SHARED_SERVER_ACTIVITY' AND shm.VALUE = 1
UNION ALL
SELECT 
       CAST( shm.NAME AS VARCHAR(128 OCTETS) )    -- NAME
     , CAST( shm.VALUE AS VARCHAR(128 OCTETS) )   -- VALUE
  FROM 
       FIXED_TABLE_SCHEMA.X$SL_SYSTEM_INFO AS shm
  WHERE shm.NAME != 'SHARED_SERVER_ACTIVITY'
;

View created.

Elapsed time: 0.93100 ms 

             
--#####################
--# comment view
--#####################

COMMENT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$SHARED_MODE
        IS 'The V$SHARED_MODE displays information of shared mode.';

Comment created.

Elapsed time: 0.18100 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SHARED_MODE.NAME
        IS 'name';

Comment created.

Elapsed time: 0.18800 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SHARED_MODE.VALUE
        IS 'value';

Comment created.

Elapsed time: 0.18000 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$SHARED_MODE TO PUBLIC;

Grant succeeded.

Elapsed time: 0.16200 ms 


COMMIT;

Commit complete.

Elapsed time: 0.09800 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS V$SHARED_MODE;

Synonym dropped.

Elapsed time: 0.09500 ms 

CREATE PUBLIC SYNONYM V$SHARED_MODE FOR PERFORMANCE_VIEW_SCHEMA.V$SHARED_MODE;

Synonym created.

Elapsed time: 0.10800 ms 

COMMIT;

Commit complete.

Elapsed time: 0.04900 ms 


--##############################################################
--# V$DISPATCHER
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS PERFORMANCE_VIEW_SCHEMA.V$DISPATCHER;

View dropped.

Elapsed time: 2.54700 ms 


--#####################
--# create view
--#####################

CREATE VIEW PERFORMANCE_VIEW_SCHEMA.V$DISPATCHER
(  
     PROCESS_ID
    ,RESPONSE_JOB_COUNT
    ,ACCEPT
    ,START_TIME
    ,CUR_CONNECTIONS
    ,CONNECTIONS
    ,CONNECTIONS_HIGHWATER
    ,MAX_CONNECTIONS
    ,RECV_STATUS
    ,RECV_BYTES
    ,RECV_UNITS
    ,RECV_IDLE
    ,RECV_BUSY
    ,SEND_STATUS
    ,SEND_BYTES
    ,SEND_UNITS
    ,SEND_IDLE
    ,SEND_BUSY
    ,SEND_ACK_FAIL_COUNT
    ,TCP_SEND_BUFFER_FULL_COUNT
    ,DISPATCHER_ID
    )
AS 
SELECT 
       CAST( dsptr.PROCESS_ID AS NUMBER )               -- PROCESS_ID
     , CAST( dsptr.RESPONSE_JOB_COUNT AS NUMBER )       -- RESPONSE_JOB_COUNT
     , CAST( dsptr.ACCEPT AS BOOLEAN )                  -- ACCEPT
     , CAST( dsptr.START_TIME AS TIMESTAMP )            -- START_TIME
     , CAST( dsptr.CUR_CONNECTIONS AS NUMBER )          -- CUR_CONNECTIONS
     , CAST( dsptr.CONNECTIONS AS NUMBER )              -- CONNECTIONS
     , CAST( dsptr.CONNECTIONS_HIGHWATER AS NUMBER )    -- CONNECTIONS_HIGHWATER
     , CAST( dsptr.MAX_CONNECTIONS AS NUMBER )          -- MAX_CONNECTIONS
     , CAST( dsptr.RECV_STATUS AS VARCHAR(16 OCTETS) )  -- RECV_STATUS
     , CAST( dsptr.RECV_BYTES AS NUMBER )               -- RECV_BYTES
     , CAST( dsptr.RECV_UNITS AS NUMBER )               -- RECV_UNITS
     , CAST( dsptr.RECV_IDLE AS NUMBER )                -- RECV_IDLE
     , CAST( dsptr.RECV_BUSY AS NUMBER )                -- RECV_BUSY
     , CAST( dsptr.SEND_STATUS AS VARCHAR(16 OCTETS) )  -- SEND_STATUS
     , CAST( dsptr.SEND_BYTES AS NUMBER )               -- SEND_BYTES
     , CAST( dsptr.SEND_UNITS AS NUMBER )               -- SEND_UNITS
     , CAST( dsptr.SEND_IDLE AS NUMBER )                -- SEND_IDLE
     , CAST( dsptr.SEND_BUSY AS NUMBER )                -- SEND_BUSY
     , CAST( dsptr.SEND_ACK_FAIL_COUNT AS NUMBER )      -- SEND_ACK_FAIL_COUNT
     , CAST( dsptr.TCP_SEND_BUFFER_FULL_COUNT AS NUMBER )  -- TCP_SEND_BUFFER_FULL_COUNT
     , CAST( dsptr.DISPATCHER_ID AS NUMBER )            -- DISPATCHER_ID
  FROM 
       FIXED_TABLE_SCHEMA.X$DISPATCHER AS dsptr
;

View created.

Elapsed time: 3.26400 ms 

             
--#####################
--# comment view
--#####################

COMMENT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$DISPATCHER
        IS 'The V$DISPATCHER displays information of dispatchers.';

Comment created.

Elapsed time: 0.16300 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$DISPATCHER.PROCESS_ID
        IS 'dispatcher process identifier';

Comment created.

Elapsed time: 0.23400 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$DISPATCHER.RESPONSE_JOB_COUNT
        IS 'response job count';

Comment created.

Elapsed time: 0.18800 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$DISPATCHER.ACCEPT
        IS 'indicates whether this dispatcher is accepting new connections';

Comment created.

Elapsed time: 0.18400 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$DISPATCHER.START_TIME
        IS 'process start time';

Comment created.

Elapsed time: 0.18200 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$DISPATCHER.CUR_CONNECTIONS
        IS 'current number of connections';

Comment created.

Elapsed time: 0.18200 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$DISPATCHER.CONNECTIONS
        IS 'total number of connections';

Comment created.

Elapsed time: 0.18400 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$DISPATCHER.CONNECTIONS_HIGHWATER
        IS 'highest number of connections';

Comment created.

Elapsed time: 0.18400 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$DISPATCHER.MAX_CONNECTIONS
        IS 'maximum connections';

Comment created.

Elapsed time: 0.18300 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$DISPATCHER.RECV_STATUS
        IS 'receive status';

Comment created.

Elapsed time: 0.17900 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$DISPATCHER.RECV_BYTES
        IS 'total bytes of received';

Comment created.

Elapsed time: 0.19100 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$DISPATCHER.RECV_UNITS
        IS 'total units of received';

Comment created.

Elapsed time: 0.18100 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$DISPATCHER.RECV_IDLE
        IS 'total idle time of receive (1/100 second)';

Comment created.

Elapsed time: 0.18000 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$DISPATCHER.RECV_BUSY
        IS 'total busy time of receive (1/100 second)';

Comment created.

Elapsed time: 0.18200 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$DISPATCHER.SEND_STATUS
        IS 'send status';

Comment created.

Elapsed time: 0.20300 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$DISPATCHER.SEND_BYTES
        IS 'total bytes of sent';

Comment created.

Elapsed time: 0.17900 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$DISPATCHER.SEND_UNITS
        IS 'total units of sent';

Comment created.

Elapsed time: 0.26800 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$DISPATCHER.SEND_IDLE
        IS 'total idle time of send (1/100 second)';

Comment created.

Elapsed time: 0.18500 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$DISPATCHER.SEND_BUSY
        IS 'total busy time of send (1/100 second)';

Comment created.

Elapsed time: 0.18000 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$DISPATCHER.SEND_ACK_FAIL_COUNT
        IS 'send ack failure count';

Comment created.

Elapsed time: 0.18400 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$DISPATCHER.TCP_SEND_BUFFER_FULL_COUNT
        IS 'tcp socket send buffer full count';

Comment created.

Elapsed time: 0.23500 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$DISPATCHER.DISPATCHER_ID
        IS 'dispatcher group id';

Comment created.

Elapsed time: 0.18800 ms 



--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$DISPATCHER TO PUBLIC;

Grant succeeded.

Elapsed time: 0.17900 ms 


COMMIT;

Commit complete.

Elapsed time: 0.32900 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS V$DISPATCHER;

Synonym dropped.

Elapsed time: 0.09900 ms 

CREATE PUBLIC SYNONYM V$DISPATCHER FOR PERFORMANCE_VIEW_SCHEMA.V$DISPATCHER;

Synonym created.

Elapsed time: 0.11300 ms 

COMMIT;

Commit complete.

Elapsed time: 0.06200 ms 


--##############################################################
--# V$SHARED_SERVER
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS PERFORMANCE_VIEW_SCHEMA.V$SHARED_SERVER;

View dropped.

Elapsed time: 1.25900 ms 


--#####################
--# create view
--#####################

CREATE VIEW PERFORMANCE_VIEW_SCHEMA.V$SHARED_SERVER
(  
       PROCESS_ID
     , PROCESSED_JOB_COUNT
     , STATUS
     , IDLE
     , BUSY
     , DISPATCHER_ID
)
AS 
SELECT 
       CAST( shsvr.PROCESS_ID AS NUMBER )           -- PROCESS_ID
     , CAST( shsvr.PROCESSED_JOB_COUNT AS NUMBER )  -- PROCESSED_JOB_COUNT
     , CAST( shsvr.STATUS AS VARCHAR(16 OCTETS) )   -- STATUS
     , CAST( shsvr.IDLE AS NUMBER )                 -- IDLE
     , CAST( shsvr.BUSY AS NUMBER )                 -- BUSY
     , CAST( shsvr.DISPATCHER_ID AS NUMBER )                 -- DISPATCHER_ID
     
  FROM 
       FIXED_TABLE_SCHEMA.X$SHARED_SERVER AS shsvr
;

View created.

Elapsed time: 1.42000 ms 

             
--#####################
--# comment view
--#####################

COMMENT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$SHARED_SERVER
        IS 'The V$SHARED_SERVER displays information of shared servers.';

Comment created.

Elapsed time: 0.16500 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SHARED_SERVER.PROCESS_ID
        IS 'shared server process identifier';

Comment created.

Elapsed time: 0.18900 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SHARED_SERVER.PROCESSED_JOB_COUNT
        IS 'processed job count';

Comment created.

Elapsed time: 0.18300 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SHARED_SERVER.STATUS
        IS 'status';

Comment created.

Elapsed time: 0.18000 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SHARED_SERVER.IDLE
        IS 'total idle time (1/100 second)';

Comment created.

Elapsed time: 0.17800 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SHARED_SERVER.BUSY
        IS 'total busy time (1/100 second)';

Comment created.

Elapsed time: 0.19400 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SHARED_SERVER.DISPATCHER_ID
        IS 'dispatcher group id';

Comment created.

Elapsed time: 0.17600 ms 



--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$SHARED_SERVER TO PUBLIC;

Grant succeeded.

Elapsed time: 0.15100 ms 


COMMIT;

Commit complete.

Elapsed time: 0.13600 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS V$SHARED_SERVER;

Synonym dropped.

Elapsed time: 0.09500 ms 

CREATE PUBLIC SYNONYM V$SHARED_SERVER FOR PERFORMANCE_VIEW_SCHEMA.V$SHARED_SERVER;

Synonym created.

Elapsed time: 0.11200 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05000 ms 


--##############################################################
--# V$BALANCER
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS PERFORMANCE_VIEW_SCHEMA.V$BALANCER;

View dropped.

Elapsed time: 1.34300 ms 


--#####################
--# create view
--#####################

CREATE VIEW PERFORMANCE_VIEW_SCHEMA.V$BALANCER
(  
       PROCESS_ID
     , CUR_CONNECTIONS
     , CONNECTIONS
     , CONNECTIONS_HIGHWATER
     , MAX_CONNECTIONS
     , STATUS
     , FORWARD_FD_FAIL_COUNT
     , SEND_ACK_FAIL_COUNT
)
AS 
SELECT 
       CAST( blcr.PROCESS_ID AS NUMBER )            -- PROCESS_ID
     , CAST( blcr.CUR_CONNECTIONS AS NUMBER )       -- CUR_CONNECTIONS
     , CAST( blcr.CONNECTIONS AS NUMBER )           -- CONNECTIONS
     , CAST( blcr.CONNECTIONS_HIGHWATER AS NUMBER ) -- CONNECTIONS_HIGHWATER
     , CAST( blcr.MAX_CONNECTIONS AS NUMBER )       -- MAX_CONNECTIONS
     , CAST( blcr.STATUS AS VARCHAR(16 OCTETS) )    -- STATUS
     , CAST( blcr.FORWARD_FD_FAIL_COUNT AS NUMBER ) -- FORWARD_FD_FAIL_COUNT
     , CAST( blcr.SEND_ACK_FAIL_COUNT AS NUMBER )   -- SEND_ACK_FAIL_COUNT
  FROM 
       FIXED_TABLE_SCHEMA.X$BALANCER AS blcr
;

View created.

Elapsed time: 1.64500 ms 

             
--#####################
--# comment view
--#####################

COMMENT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$BALANCER
        IS 'The V$BALANCER displays information of balancer.';

Comment created.

Elapsed time: 0.16700 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$BALANCER.PROCESS_ID
        IS 'balancer process identifier';

Comment created.

Elapsed time: 0.19100 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$BALANCER.CUR_CONNECTIONS
        IS 'current number of connections';

Comment created.

Elapsed time: 0.19100 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$BALANCER.CONNECTIONS
        IS 'total number of connections';

Comment created.

Elapsed time: 0.18100 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$BALANCER.CONNECTIONS_HIGHWATER
        IS 'highest number of connections';

Comment created.

Elapsed time: 0.17800 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$BALANCER.MAX_CONNECTIONS
        IS 'maximum connections';

Comment created.

Elapsed time: 0.18000 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$BALANCER.STATUS
        IS 'status';

Comment created.

Elapsed time: 0.17700 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$BALANCER.FORWARD_FD_FAIL_COUNT
        IS 'forward fd failure count';

Comment created.

Elapsed time: 0.18200 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$BALANCER.SEND_ACK_FAIL_COUNT
        IS 'send ack failure count';

Comment created.

Elapsed time: 0.18100 ms 



--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$BALANCER TO PUBLIC;

Grant succeeded.

Elapsed time: 0.15300 ms 


COMMIT;

Commit complete.

Elapsed time: 0.17800 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS V$BALANCER;

Synonym dropped.

Elapsed time: 0.10100 ms 

CREATE PUBLIC SYNONYM V$BALANCER FOR PERFORMANCE_VIEW_SCHEMA.V$BALANCER;

Synonym created.

Elapsed time: 0.11100 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05000 ms 


--##############################################################
--# V$QUEUE
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS PERFORMANCE_VIEW_SCHEMA.V$QUEUE;

View dropped.

Elapsed time: 1.26300 ms 


--#####################
--# create view
--#####################

CREATE VIEW PERFORMANCE_VIEW_SCHEMA.V$QUEUE
(  
       TYPE
     , INDEX
     , QUEUED
     , WAIT
     , FULL_COUNT
     , TOTALQ
     , ENQUEUE_CONTENTION_COUNT
     , DEQUEUE_CONTENTION_COUNT
)
AS 
SELECT 
       CAST( queue.TYPE AS VARCHAR(16 OCTETS) ) -- TYPE
     , CAST( queue.INDEX AS NUMBER )            -- INDEX
     , CAST( SUM(queue.QUEUED) AS NUMBER )      -- QUEUED
     , CAST( SUM(queue.WAIT) AS NUMBER )        -- WAIT
     , CAST( SUM(queue.FULL_COUNT) AS NUMBER )  -- FULL_COUNT
     , CAST( SUM(queue.TOTALQ) AS NUMBER )      -- TOTALQ
     , CAST( SUM(queue.ENQUEUE_CONTENTION_COUNT) AS NUMBER )  -- ENQUEUE_CONTENTION_COUNT
     , CAST( SUM(queue.DEQUEUE_CONTENTION_COUNT) AS NUMBER )  -- DEQUEUE_CONTENTION_COUNT
  FROM 
       FIXED_TABLE_SCHEMA.X$QUEUE AS queue
       GROUP BY queue.TYPE, queue.INDEX
;

View created.

Elapsed time: 1.65700 ms 

             
--#####################
--# comment view
--#####################

COMMENT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$QUEUE
        IS 'The V$QUEUE displays information of queue.';

Comment created.

Elapsed time: 0.17000 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$QUEUE.TYPE
        IS 'queue type ( COMMON or DISPATCHER )';

Comment created.

Elapsed time: 0.19700 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$QUEUE.INDEX
        IS 'index';

Comment created.

Elapsed time: 0.18700 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$QUEUE.QUEUED
        IS 'number of items in the queue';

Comment created.

Elapsed time: 0.18000 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$QUEUE.WAIT
        IS 'total time that all items in this queue have waited (1/100 second)';

Comment created.

Elapsed time: 0.19000 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$QUEUE.FULL_COUNT
        IS 'total full count in the queue';

Comment created.

Elapsed time: 0.18000 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$QUEUE.TOTALQ
        IS 'total number of items that have ever been in the queue';

Comment created.

Elapsed time: 0.18000 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$QUEUE.ENQUEUE_CONTENTION_COUNT
        IS 'number of enqueue contentions';

Comment created.

Elapsed time: 0.17900 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$QUEUE.DEQUEUE_CONTENTION_COUNT
        IS 'number of dequeue contentions';

Comment created.

Elapsed time: 0.18700 ms 



--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$QUEUE TO PUBLIC;

Grant succeeded.

Elapsed time: 0.15200 ms 


COMMIT;

Commit complete.

Elapsed time: 0.16100 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS V$QUEUE;

Synonym dropped.

Elapsed time: 0.09400 ms 

CREATE PUBLIC SYNONYM V$QUEUE FOR PERFORMANCE_VIEW_SCHEMA.V$QUEUE;

Synonym created.

Elapsed time: 0.10900 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05000 ms 


--##############################################################
--# V$WAIT_EVENT_NAME
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS PERFORMANCE_VIEW_SCHEMA.V$WAIT_EVENT_NAME;

View dropped.

Elapsed time: 1.37200 ms 


--#####################
--# create view
--#####################

CREATE VIEW PERFORMANCE_VIEW_SCHEMA.V$WAIT_EVENT_NAME
(  
     WAIT_EVENT_ID
    ,NAME
    ,DESCRIPTION
    ,PARAMETER1
    ,PARAMETER2
    ,PARAMETER3
    ,CLASS_ID
    ,CLASS_NAME
    )
AS 
SELECT 
       CAST( we.WAIT_EVENT_ID AS NUMBER )               -- WAIT_EVENT_ID
     , CAST( we.NAME AS VARCHAR(64 OCTETS) )            -- NAME
     , CAST( we.DESCRIPTION AS VARCHAR(128 OCTETS) )    -- DESCRIPTION
     , CAST( we.PARAMETER1 AS VARCHAR(64 OCTETS) )      -- PARAMETER1
     , CAST( we.PARAMETER2 AS VARCHAR(64 OCTETS) )      -- PARAMETER2
     , CAST( we.PARAMETER3 AS VARCHAR(64 OCTETS) )      -- PARAMETER3
     , CAST( we.CLASS_ID AS NUMBER )                    -- CLASS_ID
     , ( SELECT CAST( NAME AS VARCHAR(64 OCTETS) )
           FROM FIXED_TABLE_SCHEMA.X$WAIT_EVENT_CLASS_NAME wec
           WHERE wec.CLASS_ID = we.CLASS_ID )           -- CLASS_NAME
  FROM 
       FIXED_TABLE_SCHEMA.X$WAIT_EVENT_NAME AS we
;

View created.

Elapsed time: 1.66300 ms 

             
--#####################
--# comment view
--#####################

COMMENT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$WAIT_EVENT_NAME
        IS 'The V$WAIT_EVENT_NAME displays information about wait events.';

Comment created.

Elapsed time: 0.15900 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$WAIT_EVENT_NAME.WAIT_EVENT_ID
        IS 'Identifier of the wait event';

Comment created.

Elapsed time: 0.19500 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$WAIT_EVENT_NAME.NAME
        IS 'Name of the wait event';

Comment created.

Elapsed time: 0.18600 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$WAIT_EVENT_NAME.DESCRIPTION
        IS 'Description of the wait event';

Comment created.

Elapsed time: 0.18600 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$WAIT_EVENT_NAME.PARAMETER1
        IS 'Description of the first parameter for the wait event';

Comment created.

Elapsed time: 0.19600 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$WAIT_EVENT_NAME.PARAMETER2
        IS 'Description of the second parameter for the wait event';

Comment created.

Elapsed time: 0.19100 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$WAIT_EVENT_NAME.PARAMETER3
        IS 'Description of the third parameter for the wait event';

Comment created.

Elapsed time: 0.18000 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$WAIT_EVENT_NAME.CLASS_ID
        IS 'Identifier of the class of the wait event';

Comment created.

Elapsed time: 0.25500 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$WAIT_EVENT_NAME.CLASS_NAME
        IS 'Name of the class of the wait event';

Comment created.

Elapsed time: 0.18200 ms 



--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$WAIT_EVENT_NAME TO PUBLIC;

Grant succeeded.

Elapsed time: 0.16500 ms 


COMMIT;

Commit complete.

Elapsed time: 0.15600 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS V$WAIT_EVENT_NAME;

Synonym dropped.

Elapsed time: 0.09100 ms 

CREATE PUBLIC SYNONYM V$WAIT_EVENT_NAME FOR PERFORMANCE_VIEW_SCHEMA.V$WAIT_EVENT_NAME;

Synonym created.

Elapsed time: 0.11000 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05000 ms 


--##############################################################
--# V$WAIT_EVENT_CLASS_NAME
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS PERFORMANCE_VIEW_SCHEMA.V$WAIT_EVENT_CLASS_NAME;

View dropped.

Elapsed time: 0.82800 ms 


--#####################
--# create view
--#####################

CREATE VIEW PERFORMANCE_VIEW_SCHEMA.V$WAIT_EVENT_CLASS_NAME
(  
     CLASS_ID
    ,NAME
    ,DESCRIPTION
    )
AS 
SELECT 
       CAST( wec.CLASS_ID AS NUMBER )                   -- WAIT_EVENT_CLASS_ID
     , CAST( wec.NAME AS VARCHAR(64 OCTETS) )           -- NAME
     , CAST( wec.DESCRIPTION AS VARCHAR(128 OCTETS) )   -- DESCRIPTION
  FROM 
       FIXED_TABLE_SCHEMA.X$WAIT_EVENT_CLASS_NAME AS wec
;

View created.

Elapsed time: 0.99100 ms 

             
--#####################
--# comment view
--#####################

COMMENT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$WAIT_EVENT_CLASS_NAME
        IS 'The V$WAIT_EVENT_CLASS_NAME displays information about Class of wait event.';

Comment created.

Elapsed time: 0.17200 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$WAIT_EVENT_CLASS_NAME.CLASS_ID
        IS 'Identifier of the class of the wait event';

Comment created.

Elapsed time: 0.23000 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$WAIT_EVENT_CLASS_NAME.NAME
        IS 'Name of the class of the wait event';

Comment created.

Elapsed time: 0.18900 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$WAIT_EVENT_CLASS_NAME.DESCRIPTION
        IS 'Description of the class of the wait event';

Comment created.

Elapsed time: 0.18500 ms 



--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$WAIT_EVENT_CLASS_NAME TO PUBLIC;

Grant succeeded.

Elapsed time: 0.15300 ms 


COMMIT;

Commit complete.

Elapsed time: 0.10700 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS V$WAIT_EVENT_CLASS_NAME;

Synonym dropped.

Elapsed time: 0.09200 ms 

CREATE PUBLIC SYNONYM V$WAIT_EVENT_CLASS_NAME FOR PERFORMANCE_VIEW_SCHEMA.V$WAIT_EVENT_CLASS_NAME;

Synonym created.

Elapsed time: 0.10900 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05300 ms 


--##############################################################
--# V$SYSTEM_EVENT
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS PERFORMANCE_VIEW_SCHEMA.V$SYSTEM_EVENT;

View dropped.

Elapsed time: 1.25900 ms 


--#####################
--# create view
--#####################

CREATE VIEW PERFORMANCE_VIEW_SCHEMA.V$SYSTEM_EVENT
(  
     WAIT_EVENT_ID
    ,WAIT_EVENT_NAME
    ,TOTAL_WAITS
    ,TOTAL_TIMEOUTS
    ,TIME_WAITED
    ,AVERAGE_WAIT
    ,CLASS_NAME
    )
AS 
SELECT 
       CAST( syse.WAIT_EVENT_ID AS NUMBER )                 -- WAIT_EVENT_ID
     , ( SELECT CAST( NAME AS VARCHAR(64 OCTETS) )
           FROM FIXED_TABLE_SCHEMA.X$WAIT_EVENT_NAME wen
           WHERE syse.WAIT_EVENT_ID = wen.WAIT_EVENT_ID )   -- WAIT_EVENT_NAME
     , CAST( syse.TOTAL_WAITS AS NUMBER )                   -- TOTAL_WAITS
     , CAST( syse.TOTAL_TIMEOUTS AS NUMBER )                -- TOTAL_TIMEOUTS
     , CAST( syse.TIME_WAITED AS NUMBER )                   -- TIME_WAITED
     , CAST( syse.AVERAGE_WAIT AS NUMBER )                  -- AVERAGE_WAIT
     , ( SELECT CAST( CLASS_NAME AS VARCHAR(64 OCTETS) )
           FROM PERFORMANCE_VIEW_SCHEMA.V$WAIT_EVENT_NAME wen
           WHERE syse.WAIT_EVENT_ID = wen.WAIT_EVENT_ID )   -- CLASS_NAME
  FROM 
       FIXED_TABLE_SCHEMA.X$SYSTEM_EVENT AS syse
;

View created.

Elapsed time: 1.74900 ms 

             
--#####################
--# comment view
--#####################

COMMENT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$SYSTEM_EVENT
        IS 'The V$SYSTEM_EVENT displays information on total waits for an event.';

Comment created.

Elapsed time: 0.17700 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SYSTEM_EVENT.WAIT_EVENT_ID
        IS 'Identifier of the wait event';

Comment created.

Elapsed time: 0.19200 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SYSTEM_EVENT.WAIT_EVENT_NAME
        IS 'Name of the wait event';

Comment created.

Elapsed time: 0.19300 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SYSTEM_EVENT.TOTAL_WAITS
        IS 'Total number of waits for the event';

Comment created.

Elapsed time: 0.19900 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SYSTEM_EVENT.TOTAL_TIMEOUTS
        IS 'Total number of timeouts for the event';

Comment created.

Elapsed time: 0.19800 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SYSTEM_EVENT.TIME_WAITED
        IS 'Total amount of time waited for the event (in microseconds)';

Comment created.

Elapsed time: 0.18100 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SYSTEM_EVENT.AVERAGE_WAIT
        IS 'Average amount of time waited for the event (in microseconds)';

Comment created.

Elapsed time: 0.19400 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SYSTEM_EVENT.CLASS_NAME
        IS 'Name of the class of the wait event';

Comment created.

Elapsed time: 0.18000 ms 



--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$SYSTEM_EVENT TO PUBLIC;

Grant succeeded.

Elapsed time: 0.15200 ms 


COMMIT;

Commit complete.

Elapsed time: 0.14700 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS V$SYSTEM_EVENT;

Synonym dropped.

Elapsed time: 0.09100 ms 

CREATE PUBLIC SYNONYM V$SYSTEM_EVENT FOR PERFORMANCE_VIEW_SCHEMA.V$SYSTEM_EVENT;

Synonym created.

Elapsed time: 0.11100 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05100 ms 


--##############################################################
--# V$SESSION_EVENT
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS PERFORMANCE_VIEW_SCHEMA.V$SESSION_EVENT;

View dropped.

Elapsed time: 1.44200 ms 


--#####################
--# create view
--#####################

CREATE VIEW PERFORMANCE_VIEW_SCHEMA.V$SESSION_EVENT
(  
     SESSION_ID
    ,WAIT_EVENT_ID
    ,WAIT_EVENT_NAME
    ,TOTAL_WAITS
    ,TOTAL_TIMEOUTS
    ,TIME_WAITED
    ,AVERAGE_WAIT
    ,MAX_WAIT
    ,CLASS_NAME
    )
AS 
SELECT 
       CAST( sese.SESSION_ID AS NUMBER )                    -- SESSION_ID
     , CAST( sese.WAIT_EVENT_ID AS NUMBER )                 -- WAIT_EVENT_ID
     , ( SELECT CAST( NAME AS VARCHAR(64 OCTETS) )
           FROM FIXED_TABLE_SCHEMA.X$WAIT_EVENT_NAME wen
           WHERE sese.WAIT_EVENT_ID = wen.WAIT_EVENT_ID )   -- WAIT_EVENT_NAME
     , CAST( sese.TOTAL_WAITS AS NUMBER )                   -- TOTAL_WAITS
     , CAST( sese.TOTAL_TIMEOUTS AS NUMBER )                -- TOTAL_TIMEOUTS
     , CAST( sese.TIME_WAITED AS NUMBER )                   -- TIME_WAITED
     , CAST( sese.AVERAGE_WAIT AS NUMBER )                  -- AVERAGE_WAIT
     , CAST( sese.MAX_WAIT AS NUMBER )                      -- MAX_WAIT
     , ( SELECT CAST( CLASS_NAME AS VARCHAR(64 OCTETS) )
           FROM PERFORMANCE_VIEW_SCHEMA.V$WAIT_EVENT_NAME wen
           WHERE sese.WAIT_EVENT_ID = wen.WAIT_EVENT_ID )   -- CLASS_NAME
  FROM 
       FIXED_TABLE_SCHEMA.X$SESSION_EVENT AS sese
;

View created.

Elapsed time: 1.95300 ms 

             
--#####################
--# comment view
--#####################

COMMENT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$SESSION_EVENT
        IS 'The V$SESSION_EVENT lists information on waits for an event by a session.';

Comment created.

Elapsed time: 0.16500 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SESSION_EVENT.SESSION_ID
        IS 'ID of the session';

Comment created.

Elapsed time: 0.29300 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SESSION_EVENT.WAIT_EVENT_ID
        IS 'Identifier of the wait event';

Comment created.

Elapsed time: 0.21200 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SESSION_EVENT.WAIT_EVENT_NAME
        IS 'Name of the wait event';

Comment created.

Elapsed time: 0.18200 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SESSION_EVENT.TOTAL_WAITS
        IS 'Total number of waits for the event';

Comment created.

Elapsed time: 0.18200 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SESSION_EVENT.TOTAL_TIMEOUTS
        IS 'Total number of timeouts for the event';

Comment created.

Elapsed time: 0.18000 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SESSION_EVENT.TIME_WAITED
        IS 'Total amount of time waited for the event (in microseconds)';

Comment created.

Elapsed time: 0.19600 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SESSION_EVENT.AVERAGE_WAIT
        IS 'Average amount of time waited for the event (in microseconds)';

Comment created.

Elapsed time: 0.18100 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SESSION_EVENT.MAX_WAIT
        IS 'Maximum time waited for the event by the session (in microseconds)';

Comment created.

Elapsed time: 0.17800 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SESSION_EVENT.CLASS_NAME
        IS 'Name of the class of the wait event';

Comment created.

Elapsed time: 0.17800 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$SESSION_EVENT TO PUBLIC;

Grant succeeded.

Elapsed time: 0.15200 ms 


COMMIT;

Commit complete.

Elapsed time: 0.16900 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS V$SESSION_EVENT;

Synonym dropped.

Elapsed time: 0.09300 ms 

CREATE PUBLIC SYNONYM V$SESSION_EVENT FOR PERFORMANCE_VIEW_SCHEMA.V$SESSION_EVENT;

Synonym created.

Elapsed time: 0.10900 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05000 ms 


--##############################################################
--# V$SESSION_WAIT
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS PERFORMANCE_VIEW_SCHEMA.V$SESSION_WAIT;

View dropped.

Elapsed time: 2.42400 ms 


--#####################
--# create view
--#####################

CREATE VIEW PERFORMANCE_VIEW_SCHEMA.V$SESSION_WAIT
(  
     SESSION_ID
    ,SEQ_NO
    ,WAIT_EVENT_ID
    ,WAIT_EVENT_NAME
    ,P1TEXT
    ,P1
    ,P1HEX
    ,P2TEXT
    ,P2
    ,P2HEX
    ,P3TEXT
    ,P3
    ,P3HEX
    ,STATE
    ,WAIT_TIME
    ,TIME_SINCE_LAST_WAIT
    ,CLASS_NAME
    )
AS 
SELECT 
       CAST( sesw.SESSION_ID AS NUMBER )                    -- SESSION_ID
     , CAST( sesw.SEQ_NO AS NUMBER )                        -- SEQ_NO
     , CAST( sesw.WAIT_EVENT_ID AS NUMBER )                 -- WAIT_EVENT_ID
     , ( SELECT CAST( NAME AS VARCHAR(64 OCTETS) )
           FROM FIXED_TABLE_SCHEMA.X$WAIT_EVENT_NAME wen
           WHERE sesw.WAIT_EVENT_ID = wen.WAIT_EVENT_ID )   -- WAIT_EVENT_NAME
     , ( SELECT CAST( PARAMETER1 AS VARCHAR(64 OCTETS) )
           FROM FIXED_TABLE_SCHEMA.X$WAIT_EVENT_NAME wen
           WHERE sesw.WAIT_EVENT_ID = wen.WAIT_EVENT_ID )   -- PARAMETER1
     , CAST( sesw.P1 AS NUMBER )                            -- P1
     , CAST( TO_CHAR(sesw.P1,'XXXXXXXXXXXXXXXX') AS VARCHAR(32 OCTETS) ) -- P1HEX
     , ( SELECT CAST( PARAMETER2 AS VARCHAR(64 OCTETS) )
           FROM FIXED_TABLE_SCHEMA.X$WAIT_EVENT_NAME wen
           WHERE sesw.WAIT_EVENT_ID = wen.WAIT_EVENT_ID )   -- PARAMETER2
     , CAST( sesw.P2 AS NUMBER )                            -- P2
     , CAST( TO_CHAR(sesw.P2,'XXXXXXXXXXXXXXXX') AS VARCHAR(32 OCTETS) ) -- P2HEX
     , ( SELECT CAST( PARAMETER3 AS VARCHAR(64 OCTETS) )
           FROM FIXED_TABLE_SCHEMA.X$WAIT_EVENT_NAME wen
           WHERE sesw.WAIT_EVENT_ID = wen.WAIT_EVENT_ID )   -- PARAMETER3
     , CAST( sesw.P3 AS NUMBER )                            -- P3
     , CAST( TO_CHAR(sesw.P3,'XXXXXXXXXXXXXXXX') AS VARCHAR(32 OCTETS) ) -- P3HEX
     , CAST( sesw.STATE AS VARCHAR(64 OCTETS) )             -- STATE
     , CAST( sesw.WAIT_TIME AS NUMBER )                     -- WAIT_TIME
     , CAST( sesw.TIME_SINCE_LAST_WAIT AS NUMBER )          -- TIME_SINCE_LAST_WAIT
     , ( SELECT CAST( CLASS_NAME AS VARCHAR(64 OCTETS) )
           FROM PERFORMANCE_VIEW_SCHEMA.V$WAIT_EVENT_NAME wen
           WHERE sesw.WAIT_EVENT_ID = wen.WAIT_EVENT_ID )   -- CLASS_NAME
  FROM 
       FIXED_TABLE_SCHEMA.X$SESSION_WAIT AS sesw
;

View created.

Elapsed time: 3.27800 ms 

             
--#####################
--# comment view
--#####################

COMMENT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$SESSION_WAIT
        IS 'The V$SESSION_WAIT displays the current or last wait for each session.';

Comment created.

Elapsed time: 0.18800 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SESSION_WAIT.SESSION_ID
        IS 'ID of the session';

Comment created.

Elapsed time: 0.20200 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SESSION_WAIT.WAIT_EVENT_ID
        IS 'Identifier of the wait event';

Comment created.

Elapsed time: 0.18600 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SESSION_WAIT.WAIT_EVENT_NAME
        IS 'Name of the wait event';

Comment created.

Elapsed time: 0.18300 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SESSION_WAIT.SEQ_NO
        IS 'A number that uniquely identifies the current or last wait (incremented for each wait)';

Comment created.

Elapsed time: 0.18400 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SESSION_WAIT.P1TEXT
        IS 'Description of the first parameter for the wait event';

Comment created.

Elapsed time: 0.19000 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SESSION_WAIT.P1
        IS 'First wait event parameter (in decimal)';

Comment created.

Elapsed time: 0.18200 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SESSION_WAIT.P1HEX
        IS 'First wait event parameter (in hex)';

Comment created.

Elapsed time: 0.18300 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SESSION_WAIT.P2TEXT
        IS 'Description of the second parameter for the wait event';

Comment created.

Elapsed time: 0.17900 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SESSION_WAIT.P2
        IS 'Second wait event parameter (in decimal)';

Comment created.

Elapsed time: 0.18700 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SESSION_WAIT.P2HEX
        IS 'Second wait event parameter (in hex)';

Comment created.

Elapsed time: 0.24400 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SESSION_WAIT.P3TEXT
        IS 'Description of the third parameter for the wait event';

Comment created.

Elapsed time: 0.18000 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SESSION_WAIT.P3
        IS 'Third wait event parameter (in decimal)';

Comment created.

Elapsed time: 0.17800 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SESSION_WAIT.P3HEX
        IS 'Third wait event parameter (in hex)';

Comment created.

Elapsed time: 0.18700 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SESSION_WAIT.STATE
        IS 'Wait state';

Comment created.

Elapsed time: 0.34800 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SESSION_EVENT.TIME_WAITED
        IS 'Total amount of time waited for the event (in microseconds)';

Comment created.

Elapsed time: 0.20300 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SESSION_WAIT.TIME_SINCE_LAST_WAIT
        IS 'Time elapsed since the end of the last wait (in microseconds). If the session is currently in a wait, then the value is 0.';

Comment created.

Elapsed time: 0.20400 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SESSION_EVENT.CLASS_NAME
        IS 'Name of the class of the wait event';

Comment created.

Elapsed time: 0.18600 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$SESSION_WAIT TO PUBLIC;

Grant succeeded.

Elapsed time: 0.15700 ms 


COMMIT;

Commit complete.

Elapsed time: 0.28800 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS V$SESSION_WAIT;

Synonym dropped.

Elapsed time: 0.11200 ms 

CREATE PUBLIC SYNONYM V$SESSION_WAIT FOR PERFORMANCE_VIEW_SCHEMA.V$SESSION_WAIT;

Synonym created.

Elapsed time: 0.11400 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05100 ms 


--##############################################################
--# V$AGABLE_INFO
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS PERFORMANCE_VIEW_SCHEMA.V$AGABLE_INFO;

View dropped.

Elapsed time: 1.26900 ms 


--#####################
--# create view
--#####################

CREATE VIEW PERFORMANCE_VIEW_SCHEMA.V$AGABLE_INFO
(  
       SCN
     , AGABLE_SCN
     , AGABLE_SCN_GAP
     , OLDEST_SESSION_ID
)
AS 
SELECT 
       CAST( agableInfo.LOCAL_SCN AS VARCHAR(32 OCTETS) )               -- SCN
     , CAST( agableInfo.AGABLE_SCN AS VARCHAR(32 OCTETS) )              -- AGABLE_SCN
     , CAST( agableInfo.AGABLE_SCN_GAP AS VARCHAR(32 OCTETS) )          -- AGABLE_SCN_GAP
     , CAST( agableInfo.SESSION_ID_BLOCKING_AGABLE_SCN AS NUMBER )      -- OLDEST_SESSION_ID
  FROM 
       FIXED_TABLE_SCHEMA.X$AGABLE_INFO AS agableInfo
;

View created.

Elapsed time: 1.18600 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$AGABLE_INFO
        IS 'The V$AGABLE_INFO displays the system agable information.';

Comment created.

Elapsed time: 0.15900 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$AGABLE_INFO.SCN
        IS 'scn';

Comment created.

Elapsed time: 0.19000 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$AGABLE_INFO.AGABLE_SCN
        IS 'agable scn';

Comment created.

Elapsed time: 0.18800 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$AGABLE_INFO.AGABLE_SCN_GAP
        IS 'agable scn gap';

Comment created.

Elapsed time: 0.21100 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$AGABLE_INFO.OLDEST_SESSION_ID
        IS 'id of session blocking agable scn';

Comment created.

Elapsed time: 0.18000 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$AGABLE_INFO TO PUBLIC;

Grant succeeded.

Elapsed time: 0.15000 ms 


COMMIT;

Commit complete.

Elapsed time: 0.12700 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS V$AGABLE_INFO;

Synonym dropped.

Elapsed time: 0.09700 ms 

CREATE PUBLIC SYNONYM V$AGABLE_INFO FOR PERFORMANCE_VIEW_SCHEMA.V$AGABLE_INFO;

Synonym created.

Elapsed time: 0.11300 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05000 ms 


--##############################################################
--# V$SQL_HISTORY
--##############################################################

--#####################
--# drop view
--#####################

DROP VIEW IF EXISTS PERFORMANCE_VIEW_SCHEMA.V$SQL_HISTORY;

View dropped.

Elapsed time: 1.18000 ms 


--#####################
--# create view
--#####################

CREATE VIEW PERFORMANCE_VIEW_SCHEMA.V$SQL_HISTORY
(  
       SESSION_ID
     , START_TIME
     , EXEC_TIME
     , SUCCESS
     , STATUS
     , SQL_TEXT
)
AS 
SELECT 
       CAST( sqlHistory.SESSION_ID AS NUMBER )              -- SESSION_ID
     , sqlHistory.START_TIME                                -- START_TIME
     , CAST( sqlHistory.EXEC_TIME AS NUMBER )               -- EXEC_TIME
     , CAST( sqlHistory.SUCCESS AS BOOLEAN )                -- SUCCESS
     , CAST( sqlHistory.STATUS AS VARCHAR(16 OCTETS) )      -- STATUS
     , CAST( sqlHistory.SQL_TEXT AS VARCHAR(1024 OCTETS) )  -- SQL_TEXT
  FROM 
       FIXED_TABLE_SCHEMA.X$SQL_HISTORY AS sqlHistory
;

View created.

Elapsed time: 1.46500 ms 


--#####################
--# comment view
--#####################

COMMENT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$SQL_HISTORY
        IS 'The V$SQL_HISTORY displays information of direct-execute statements.';

Comment created.

Elapsed time: 0.16100 ms 


--#####################
--# comment column
--#####################

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SQL_HISTORY.SESSION_ID
        IS 'session identifier';

Comment created.

Elapsed time: 0.19800 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SQL_HISTORY.START_TIME
        IS 'statement start time';

Comment created.

Elapsed time: 0.18500 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SQL_HISTORY.EXEC_TIME
        IS 'execution time(us)';

Comment created.

Elapsed time: 0.18200 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SQL_HISTORY.SUCCESS
        IS 'indicates whether the statement is success ( YES ) or not ( NO )';

Comment created.

Elapsed time: 0.17900 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SQL_HISTORY.STATUS
        IS 'status of the statement: the value in ( RUNNING, DONE )';

Comment created.

Elapsed time: 0.18100 ms 

COMMENT ON COLUMN PERFORMANCE_VIEW_SCHEMA.V$SQL_HISTORY.SQL_TEXT
        IS 'first 1024 bytes of the SQL text for the statement';

Comment created.

Elapsed time: 0.17900 ms 


--#####################
--# grant view
--#####################

GRANT SELECT ON TABLE PERFORMANCE_VIEW_SCHEMA.V$SQL_HISTORY TO PUBLIC;

Grant succeeded.

Elapsed time: 0.17000 ms 


COMMIT;

Commit complete.

Elapsed time: 0.13600 ms 


--#####################
--# public synonym 
--#####################

DROP PUBLIC SYNONYM IF EXISTS V$SQL_HISTORY;

Synonym dropped.

Elapsed time: 0.09300 ms 

CREATE PUBLIC SYNONYM V$SQL_HISTORY FOR PERFORMANCE_VIEW_SCHEMA.V$SQL_HISTORY;

Synonym created.

Elapsed time: 0.11000 ms 

COMMIT;

Commit complete.

Elapsed time: 0.05300 ms 


